'use strict';
var g8 = Object.create;
var Ld = Object.defineProperty;
var D8 = Object.getOwnPropertyDescriptor;
var U8 = Object.getOwnPropertyNames;
var v8 = Object.getPrototypeOf,
	w8 = Object.prototype.hasOwnProperty;
var K = (u, e) => () => (u && (e = u((u = 0))), e);
var Z = (u, e) => () => (e || u((e = { exports: {} }).exports, e), e.exports),
	M8 = (u, e) => {
		for (var i in e) Ld(u, i, { get: e[i], enumerable: !0 });
	},
	m5 = (u, e, i, n) => {
		if ((e && typeof e == 'object') || typeof e == 'function')
			for (let a of U8(e))
				!w8.call(u, a) && a !== i && Ld(u, a, { get: () => e[a], enumerable: !(n = D8(e, a)) || n.enumerable });
		return u;
	};
var y5 = (u, e, i) => (
		(i = u != null ? g8(v8(u)) : {}),
		m5(e || !u || !u.__esModule ? Ld(i, 'default', { value: u, enumerable: !0 }) : i, u)
	),
	ra = u => m5(Ld({}, '__esModule', { value: !0 }), u);
var C5 = Z((lR, H8) => {
	H8.exports = {
		name: 'DeltaLake',
		version: '0.1.53',
		versionDate: '2022-05-11',
		author: 'hackolade',
		engines: { hackolade: '4.3.20', hackoladePlugin: '1.2.0' },
		contributes: {
			target: {
				applicationTarget: 'DeltaLake',
				title: 'Delta Lake on Databricks',
				versions: ['Runtime 6', 'Runtime 7', 'Runtime 8', 'Runtime 9', 'Runtime 10'],
			},
			features: {
				views: { enabled: !0, viewLevel: 'model', disablePipelines: !0 },
				nestedCollections: !1,
				disablePatternField: !1,
				enableForwardEngineering: !0,
				disableMultipleTypes: !1,
				enableReverseEngineering: !0,
				disableChoices: !0,
				enableJsonType: !0,
				relationships: { compositeRelationships: !0 },
				FEScriptCommentsSupported: ['2.x', '3.x'],
			},
		},
		description: 'Hackolade plugin for Delta Lake on Databricks, including Azure Databricks, and Databricks on AWS',
		scripts: { lint: 'eslint .', prepare: 'husky install', build: 'node ./esbuild-config.js' },
		workspaces: ['forward_engineering', 'reverse_engineering'],
		devDependencies: {
			esbuild: '^0.14.48',
			eslint: '^8.19.0',
			'eslint-config-prettier': '^8.5.0',
			'eslint-plugin-prettier': '^4.2.1',
			'fs-extra': '^10.1.0',
			husky: '^8.0.1',
			'lint-staged': '^13.0.3',
			prettier: '^2.7.1',
		},
		'lint-staged': { '*.{js,json}': 'prettier --write' },
	};
});
var A5 = Z((dR, b5) => {
	var L1 = require('os'),
		F8 = require('net'),
		k8 = C5(),
		V8 = (u, e, i = 5e3) =>
			new Promise((n, a) => {
				let o = setTimeout(() => {
						c.end(), a(new Error('Connection takes more than ' + 5e3 + ' ms'));
					}, i),
					c = F8.createConnection(e, u, () => {
						c.end(), clearTimeout(o), n();
					});
				c.on('error', h => {
					clearTimeout(o), a(h);
				});
			}),
		B8 = () => k8.version,
		Y8 = u => `Date: ${new Date()}
Application version: ${u.appVersion}
Plugin version: ${B8()}

Connection information:
 Connection name:  ${u.name}
 Host:  ${u.host}
 Cluster id:  ${u.clusterId}
 Provider:  ${u.provider}

System information:
 Hostname:  ${L1.hostname()}
 Platform:  ${L1.platform()} ${L1.arch()}
 Release:   ${L1.release()}
 Uptime:    ${X8(L1.uptime())}
 Total RAM: ${(L1.totalmem() / 1073741824).toFixed(2)} GB
 CPU Model: ${L1.cpus()[0].model}
 CPU Clock: ${G8(L1.cpus())} MHZ
 CPU Cores: ${L1.cpus().length} cores

`,
		G8 = u => u.reduce((e, i) => Math.max(e, i.speed), 0),
		j8 = u => (u < 10 ? '0' + u : u),
		X8 = u => Math.floor(u / 3600) + ':' + j8(parseInt((u / 3600 - Math.floor(u / 3600)) * 60)),
		Q8 = { getSystemInfo: Y8, checkConnection: V8 };
	b5.exports = Q8;
});
var x5 = Z((fR, K5) => {
	'use strict';
	var N0 = {};
	K5.exports = N0;
	function W5(u) {
		return u < 0 ? -1 : 1;
	}
	function q8(u) {
		return u % 1 === 0.5 && (u & 1) === 0 ? Math.floor(u) : Math.round(u);
	}
	function vp(u, e) {
		e.unsigned || --u;
		let i = e.unsigned ? 0 : -Math.pow(2, u),
			n = Math.pow(2, u) - 1,
			a = e.moduloBitLength ? Math.pow(2, e.moduloBitLength) : Math.pow(2, u),
			o = e.moduloBitLength ? Math.pow(2, e.moduloBitLength - 1) : Math.pow(2, u - 1);
		return function (c, h) {
			h || (h = {});
			let _ = +c;
			if (h.enforceRange) {
				if (!Number.isFinite(_)) throw new TypeError('Argument is not a finite number');
				if (((_ = W5(_) * Math.floor(Math.abs(_))), _ < i || _ > n))
					throw new TypeError('Argument is not in byte range');
				return _;
			}
			if (!isNaN(_) && h.clamp) return (_ = q8(_)), _ < i && (_ = i), _ > n && (_ = n), _;
			if (!Number.isFinite(_) || _ === 0) return 0;
			if (((_ = W5(_) * Math.floor(Math.abs(_))), (_ = _ % a), !e.unsigned && _ >= o)) return _ - a;
			if (e.unsigned) {
				if (_ < 0) _ += a;
				else if (_ === -0) return 0;
			}
			return _;
		};
	}
	N0.void = function () {};
	N0.boolean = function (u) {
		return !!u;
	};
	N0.byte = vp(8, { unsigned: !1 });
	N0.octet = vp(8, { unsigned: !0 });
	N0.short = vp(16, { unsigned: !1 });
	N0['unsigned short'] = vp(16, { unsigned: !0 });
	N0.long = vp(32, { unsigned: !1 });
	N0['unsigned long'] = vp(32, { unsigned: !0 });
	N0['long long'] = vp(32, { unsigned: !1, moduloBitLength: 64 });
	N0['unsigned long long'] = vp(32, { unsigned: !0, moduloBitLength: 64 });
	N0.double = function (u) {
		let e = +u;
		if (!Number.isFinite(e)) throw new TypeError('Argument is not a finite floating-point value');
		return e;
	};
	N0['unrestricted double'] = function (u) {
		let e = +u;
		if (isNaN(e)) throw new TypeError('Argument is NaN');
		return e;
	};
	N0.float = N0.double;
	N0['unrestricted float'] = N0['unrestricted double'];
	N0.DOMString = function (u, e) {
		return e || (e = {}), e.treatNullAsEmptyString && u === null ? '' : String(u);
	};
	N0.ByteString = function (u, e) {
		let i = String(u),
			n;
		for (let a = 0; (n = i.codePointAt(a)) !== void 0; ++a)
			if (n > 255) throw new TypeError('Argument is not a valid bytestring');
		return i;
	};
	N0.USVString = function (u) {
		let e = String(u),
			i = e.length,
			n = [];
		for (let a = 0; a < i; ++a) {
			let o = e.charCodeAt(a);
			if (o < 55296 || o > 57343) n.push(String.fromCodePoint(o));
			else if (56320 <= o && o <= 57343) n.push(String.fromCodePoint(65533));
			else if (a === i - 1) n.push(String.fromCodePoint(65533));
			else {
				let c = e.charCodeAt(a + 1);
				if (56320 <= c && c <= 57343) {
					let h = o & 1023,
						_ = c & 1023;
					n.push(String.fromCodePoint((2 << 15) + (2 << 9) * h + _)), ++a;
				} else n.push(String.fromCodePoint(65533));
			}
		}
		return n.join('');
	};
	N0.Date = function (u, e) {
		if (!(u instanceof Date)) throw new TypeError('Argument is not a Date object');
		if (!isNaN(u)) return u;
	};
	N0.RegExp = function (u, e) {
		return u instanceof RegExp || (u = new RegExp(u)), u;
	};
});
var O5 = Z((_R, wp) => {
	'use strict';
	wp.exports.mixin = function (e, i) {
		let n = Object.getOwnPropertyNames(i);
		for (let a = 0; a < n.length; ++a) Object.defineProperty(e, n[a], Object.getOwnPropertyDescriptor(i, n[a]));
	};
	wp.exports.wrapperSymbol = Symbol('wrapper');
	wp.exports.implSymbol = Symbol('impl');
	wp.exports.wrapperForImpl = function (u) {
		return u[wp.exports.wrapperSymbol];
	};
	wp.exports.implForWrapper = function (u) {
		return u[wp.exports.implSymbol];
	};
});
var L5 = Z((ER, Z8) => {
	Z8.exports = [
		[[0, 44], 'disallowed_STD3_valid'],
		[[45, 46], 'valid'],
		[[47, 47], 'disallowed_STD3_valid'],
		[[48, 57], 'valid'],
		[[58, 64], 'disallowed_STD3_valid'],
		[[65, 65], 'mapped', [97]],
		[[66, 66], 'mapped', [98]],
		[[67, 67], 'mapped', [99]],
		[[68, 68], 'mapped', [100]],
		[[69, 69], 'mapped', [101]],
		[[70, 70], 'mapped', [102]],
		[[71, 71], 'mapped', [103]],
		[[72, 72], 'mapped', [104]],
		[[73, 73], 'mapped', [105]],
		[[74, 74], 'mapped', [106]],
		[[75, 75], 'mapped', [107]],
		[[76, 76], 'mapped', [108]],
		[[77, 77], 'mapped', [109]],
		[[78, 78], 'mapped', [110]],
		[[79, 79], 'mapped', [111]],
		[[80, 80], 'mapped', [112]],
		[[81, 81], 'mapped', [113]],
		[[82, 82], 'mapped', [114]],
		[[83, 83], 'mapped', [115]],
		[[84, 84], 'mapped', [116]],
		[[85, 85], 'mapped', [117]],
		[[86, 86], 'mapped', [118]],
		[[87, 87], 'mapped', [119]],
		[[88, 88], 'mapped', [120]],
		[[89, 89], 'mapped', [121]],
		[[90, 90], 'mapped', [122]],
		[[91, 96], 'disallowed_STD3_valid'],
		[[97, 122], 'valid'],
		[[123, 127], 'disallowed_STD3_valid'],
		[[128, 159], 'disallowed'],
		[[160, 160], 'disallowed_STD3_mapped', [32]],
		[[161, 167], 'valid', [], 'NV8'],
		[[168, 168], 'disallowed_STD3_mapped', [32, 776]],
		[[169, 169], 'valid', [], 'NV8'],
		[[170, 170], 'mapped', [97]],
		[[171, 172], 'valid', [], 'NV8'],
		[[173, 173], 'ignored'],
		[[174, 174], 'valid', [], 'NV8'],
		[[175, 175], 'disallowed_STD3_mapped', [32, 772]],
		[[176, 177], 'valid', [], 'NV8'],
		[[178, 178], 'mapped', [50]],
		[[179, 179], 'mapped', [51]],
		[[180, 180], 'disallowed_STD3_mapped', [32, 769]],
		[[181, 181], 'mapped', [956]],
		[[182, 182], 'valid', [], 'NV8'],
		[[183, 183], 'valid'],
		[[184, 184], 'disallowed_STD3_mapped', [32, 807]],
		[[185, 185], 'mapped', [49]],
		[[186, 186], 'mapped', [111]],
		[[187, 187], 'valid', [], 'NV8'],
		[[188, 188], 'mapped', [49, 8260, 52]],
		[[189, 189], 'mapped', [49, 8260, 50]],
		[[190, 190], 'mapped', [51, 8260, 52]],
		[[191, 191], 'valid', [], 'NV8'],
		[[192, 192], 'mapped', [224]],
		[[193, 193], 'mapped', [225]],
		[[194, 194], 'mapped', [226]],
		[[195, 195], 'mapped', [227]],
		[[196, 196], 'mapped', [228]],
		[[197, 197], 'mapped', [229]],
		[[198, 198], 'mapped', [230]],
		[[199, 199], 'mapped', [231]],
		[[200, 200], 'mapped', [232]],
		[[201, 201], 'mapped', [233]],
		[[202, 202], 'mapped', [234]],
		[[203, 203], 'mapped', [235]],
		[[204, 204], 'mapped', [236]],
		[[205, 205], 'mapped', [237]],
		[[206, 206], 'mapped', [238]],
		[[207, 207], 'mapped', [239]],
		[[208, 208], 'mapped', [240]],
		[[209, 209], 'mapped', [241]],
		[[210, 210], 'mapped', [242]],
		[[211, 211], 'mapped', [243]],
		[[212, 212], 'mapped', [244]],
		[[213, 213], 'mapped', [245]],
		[[214, 214], 'mapped', [246]],
		[[215, 215], 'valid', [], 'NV8'],
		[[216, 216], 'mapped', [248]],
		[[217, 217], 'mapped', [249]],
		[[218, 218], 'mapped', [250]],
		[[219, 219], 'mapped', [251]],
		[[220, 220], 'mapped', [252]],
		[[221, 221], 'mapped', [253]],
		[[222, 222], 'mapped', [254]],
		[[223, 223], 'deviation', [115, 115]],
		[[224, 246], 'valid'],
		[[247, 247], 'valid', [], 'NV8'],
		[[248, 255], 'valid'],
		[[256, 256], 'mapped', [257]],
		[[257, 257], 'valid'],
		[[258, 258], 'mapped', [259]],
		[[259, 259], 'valid'],
		[[260, 260], 'mapped', [261]],
		[[261, 261], 'valid'],
		[[262, 262], 'mapped', [263]],
		[[263, 263], 'valid'],
		[[264, 264], 'mapped', [265]],
		[[265, 265], 'valid'],
		[[266, 266], 'mapped', [267]],
		[[267, 267], 'valid'],
		[[268, 268], 'mapped', [269]],
		[[269, 269], 'valid'],
		[[270, 270], 'mapped', [271]],
		[[271, 271], 'valid'],
		[[272, 272], 'mapped', [273]],
		[[273, 273], 'valid'],
		[[274, 274], 'mapped', [275]],
		[[275, 275], 'valid'],
		[[276, 276], 'mapped', [277]],
		[[277, 277], 'valid'],
		[[278, 278], 'mapped', [279]],
		[[279, 279], 'valid'],
		[[280, 280], 'mapped', [281]],
		[[281, 281], 'valid'],
		[[282, 282], 'mapped', [283]],
		[[283, 283], 'valid'],
		[[284, 284], 'mapped', [285]],
		[[285, 285], 'valid'],
		[[286, 286], 'mapped', [287]],
		[[287, 287], 'valid'],
		[[288, 288], 'mapped', [289]],
		[[289, 289], 'valid'],
		[[290, 290], 'mapped', [291]],
		[[291, 291], 'valid'],
		[[292, 292], 'mapped', [293]],
		[[293, 293], 'valid'],
		[[294, 294], 'mapped', [295]],
		[[295, 295], 'valid'],
		[[296, 296], 'mapped', [297]],
		[[297, 297], 'valid'],
		[[298, 298], 'mapped', [299]],
		[[299, 299], 'valid'],
		[[300, 300], 'mapped', [301]],
		[[301, 301], 'valid'],
		[[302, 302], 'mapped', [303]],
		[[303, 303], 'valid'],
		[[304, 304], 'mapped', [105, 775]],
		[[305, 305], 'valid'],
		[[306, 307], 'mapped', [105, 106]],
		[[308, 308], 'mapped', [309]],
		[[309, 309], 'valid'],
		[[310, 310], 'mapped', [311]],
		[[311, 312], 'valid'],
		[[313, 313], 'mapped', [314]],
		[[314, 314], 'valid'],
		[[315, 315], 'mapped', [316]],
		[[316, 316], 'valid'],
		[[317, 317], 'mapped', [318]],
		[[318, 318], 'valid'],
		[[319, 320], 'mapped', [108, 183]],
		[[321, 321], 'mapped', [322]],
		[[322, 322], 'valid'],
		[[323, 323], 'mapped', [324]],
		[[324, 324], 'valid'],
		[[325, 325], 'mapped', [326]],
		[[326, 326], 'valid'],
		[[327, 327], 'mapped', [328]],
		[[328, 328], 'valid'],
		[[329, 329], 'mapped', [700, 110]],
		[[330, 330], 'mapped', [331]],
		[[331, 331], 'valid'],
		[[332, 332], 'mapped', [333]],
		[[333, 333], 'valid'],
		[[334, 334], 'mapped', [335]],
		[[335, 335], 'valid'],
		[[336, 336], 'mapped', [337]],
		[[337, 337], 'valid'],
		[[338, 338], 'mapped', [339]],
		[[339, 339], 'valid'],
		[[340, 340], 'mapped', [341]],
		[[341, 341], 'valid'],
		[[342, 342], 'mapped', [343]],
		[[343, 343], 'valid'],
		[[344, 344], 'mapped', [345]],
		[[345, 345], 'valid'],
		[[346, 346], 'mapped', [347]],
		[[347, 347], 'valid'],
		[[348, 348], 'mapped', [349]],
		[[349, 349], 'valid'],
		[[350, 350], 'mapped', [351]],
		[[351, 351], 'valid'],
		[[352, 352], 'mapped', [353]],
		[[353, 353], 'valid'],
		[[354, 354], 'mapped', [355]],
		[[355, 355], 'valid'],
		[[356, 356], 'mapped', [357]],
		[[357, 357], 'valid'],
		[[358, 358], 'mapped', [359]],
		[[359, 359], 'valid'],
		[[360, 360], 'mapped', [361]],
		[[361, 361], 'valid'],
		[[362, 362], 'mapped', [363]],
		[[363, 363], 'valid'],
		[[364, 364], 'mapped', [365]],
		[[365, 365], 'valid'],
		[[366, 366], 'mapped', [367]],
		[[367, 367], 'valid'],
		[[368, 368], 'mapped', [369]],
		[[369, 369], 'valid'],
		[[370, 370], 'mapped', [371]],
		[[371, 371], 'valid'],
		[[372, 372], 'mapped', [373]],
		[[373, 373], 'valid'],
		[[374, 374], 'mapped', [375]],
		[[375, 375], 'valid'],
		[[376, 376], 'mapped', [255]],
		[[377, 377], 'mapped', [378]],
		[[378, 378], 'valid'],
		[[379, 379], 'mapped', [380]],
		[[380, 380], 'valid'],
		[[381, 381], 'mapped', [382]],
		[[382, 382], 'valid'],
		[[383, 383], 'mapped', [115]],
		[[384, 384], 'valid'],
		[[385, 385], 'mapped', [595]],
		[[386, 386], 'mapped', [387]],
		[[387, 387], 'valid'],
		[[388, 388], 'mapped', [389]],
		[[389, 389], 'valid'],
		[[390, 390], 'mapped', [596]],
		[[391, 391], 'mapped', [392]],
		[[392, 392], 'valid'],
		[[393, 393], 'mapped', [598]],
		[[394, 394], 'mapped', [599]],
		[[395, 395], 'mapped', [396]],
		[[396, 397], 'valid'],
		[[398, 398], 'mapped', [477]],
		[[399, 399], 'mapped', [601]],
		[[400, 400], 'mapped', [603]],
		[[401, 401], 'mapped', [402]],
		[[402, 402], 'valid'],
		[[403, 403], 'mapped', [608]],
		[[404, 404], 'mapped', [611]],
		[[405, 405], 'valid'],
		[[406, 406], 'mapped', [617]],
		[[407, 407], 'mapped', [616]],
		[[408, 408], 'mapped', [409]],
		[[409, 411], 'valid'],
		[[412, 412], 'mapped', [623]],
		[[413, 413], 'mapped', [626]],
		[[414, 414], 'valid'],
		[[415, 415], 'mapped', [629]],
		[[416, 416], 'mapped', [417]],
		[[417, 417], 'valid'],
		[[418, 418], 'mapped', [419]],
		[[419, 419], 'valid'],
		[[420, 420], 'mapped', [421]],
		[[421, 421], 'valid'],
		[[422, 422], 'mapped', [640]],
		[[423, 423], 'mapped', [424]],
		[[424, 424], 'valid'],
		[[425, 425], 'mapped', [643]],
		[[426, 427], 'valid'],
		[[428, 428], 'mapped', [429]],
		[[429, 429], 'valid'],
		[[430, 430], 'mapped', [648]],
		[[431, 431], 'mapped', [432]],
		[[432, 432], 'valid'],
		[[433, 433], 'mapped', [650]],
		[[434, 434], 'mapped', [651]],
		[[435, 435], 'mapped', [436]],
		[[436, 436], 'valid'],
		[[437, 437], 'mapped', [438]],
		[[438, 438], 'valid'],
		[[439, 439], 'mapped', [658]],
		[[440, 440], 'mapped', [441]],
		[[441, 443], 'valid'],
		[[444, 444], 'mapped', [445]],
		[[445, 451], 'valid'],
		[[452, 454], 'mapped', [100, 382]],
		[[455, 457], 'mapped', [108, 106]],
		[[458, 460], 'mapped', [110, 106]],
		[[461, 461], 'mapped', [462]],
		[[462, 462], 'valid'],
		[[463, 463], 'mapped', [464]],
		[[464, 464], 'valid'],
		[[465, 465], 'mapped', [466]],
		[[466, 466], 'valid'],
		[[467, 467], 'mapped', [468]],
		[[468, 468], 'valid'],
		[[469, 469], 'mapped', [470]],
		[[470, 470], 'valid'],
		[[471, 471], 'mapped', [472]],
		[[472, 472], 'valid'],
		[[473, 473], 'mapped', [474]],
		[[474, 474], 'valid'],
		[[475, 475], 'mapped', [476]],
		[[476, 477], 'valid'],
		[[478, 478], 'mapped', [479]],
		[[479, 479], 'valid'],
		[[480, 480], 'mapped', [481]],
		[[481, 481], 'valid'],
		[[482, 482], 'mapped', [483]],
		[[483, 483], 'valid'],
		[[484, 484], 'mapped', [485]],
		[[485, 485], 'valid'],
		[[486, 486], 'mapped', [487]],
		[[487, 487], 'valid'],
		[[488, 488], 'mapped', [489]],
		[[489, 489], 'valid'],
		[[490, 490], 'mapped', [491]],
		[[491, 491], 'valid'],
		[[492, 492], 'mapped', [493]],
		[[493, 493], 'valid'],
		[[494, 494], 'mapped', [495]],
		[[495, 496], 'valid'],
		[[497, 499], 'mapped', [100, 122]],
		[[500, 500], 'mapped', [501]],
		[[501, 501], 'valid'],
		[[502, 502], 'mapped', [405]],
		[[503, 503], 'mapped', [447]],
		[[504, 504], 'mapped', [505]],
		[[505, 505], 'valid'],
		[[506, 506], 'mapped', [507]],
		[[507, 507], 'valid'],
		[[508, 508], 'mapped', [509]],
		[[509, 509], 'valid'],
		[[510, 510], 'mapped', [511]],
		[[511, 511], 'valid'],
		[[512, 512], 'mapped', [513]],
		[[513, 513], 'valid'],
		[[514, 514], 'mapped', [515]],
		[[515, 515], 'valid'],
		[[516, 516], 'mapped', [517]],
		[[517, 517], 'valid'],
		[[518, 518], 'mapped', [519]],
		[[519, 519], 'valid'],
		[[520, 520], 'mapped', [521]],
		[[521, 521], 'valid'],
		[[522, 522], 'mapped', [523]],
		[[523, 523], 'valid'],
		[[524, 524], 'mapped', [525]],
		[[525, 525], 'valid'],
		[[526, 526], 'mapped', [527]],
		[[527, 527], 'valid'],
		[[528, 528], 'mapped', [529]],
		[[529, 529], 'valid'],
		[[530, 530], 'mapped', [531]],
		[[531, 531], 'valid'],
		[[532, 532], 'mapped', [533]],
		[[533, 533], 'valid'],
		[[534, 534], 'mapped', [535]],
		[[535, 535], 'valid'],
		[[536, 536], 'mapped', [537]],
		[[537, 537], 'valid'],
		[[538, 538], 'mapped', [539]],
		[[539, 539], 'valid'],
		[[540, 540], 'mapped', [541]],
		[[541, 541], 'valid'],
		[[542, 542], 'mapped', [543]],
		[[543, 543], 'valid'],
		[[544, 544], 'mapped', [414]],
		[[545, 545], 'valid'],
		[[546, 546], 'mapped', [547]],
		[[547, 547], 'valid'],
		[[548, 548], 'mapped', [549]],
		[[549, 549], 'valid'],
		[[550, 550], 'mapped', [551]],
		[[551, 551], 'valid'],
		[[552, 552], 'mapped', [553]],
		[[553, 553], 'valid'],
		[[554, 554], 'mapped', [555]],
		[[555, 555], 'valid'],
		[[556, 556], 'mapped', [557]],
		[[557, 557], 'valid'],
		[[558, 558], 'mapped', [559]],
		[[559, 559], 'valid'],
		[[560, 560], 'mapped', [561]],
		[[561, 561], 'valid'],
		[[562, 562], 'mapped', [563]],
		[[563, 563], 'valid'],
		[[564, 566], 'valid'],
		[[567, 569], 'valid'],
		[[570, 570], 'mapped', [11365]],
		[[571, 571], 'mapped', [572]],
		[[572, 572], 'valid'],
		[[573, 573], 'mapped', [410]],
		[[574, 574], 'mapped', [11366]],
		[[575, 576], 'valid'],
		[[577, 577], 'mapped', [578]],
		[[578, 578], 'valid'],
		[[579, 579], 'mapped', [384]],
		[[580, 580], 'mapped', [649]],
		[[581, 581], 'mapped', [652]],
		[[582, 582], 'mapped', [583]],
		[[583, 583], 'valid'],
		[[584, 584], 'mapped', [585]],
		[[585, 585], 'valid'],
		[[586, 586], 'mapped', [587]],
		[[587, 587], 'valid'],
		[[588, 588], 'mapped', [589]],
		[[589, 589], 'valid'],
		[[590, 590], 'mapped', [591]],
		[[591, 591], 'valid'],
		[[592, 680], 'valid'],
		[[681, 685], 'valid'],
		[[686, 687], 'valid'],
		[[688, 688], 'mapped', [104]],
		[[689, 689], 'mapped', [614]],
		[[690, 690], 'mapped', [106]],
		[[691, 691], 'mapped', [114]],
		[[692, 692], 'mapped', [633]],
		[[693, 693], 'mapped', [635]],
		[[694, 694], 'mapped', [641]],
		[[695, 695], 'mapped', [119]],
		[[696, 696], 'mapped', [121]],
		[[697, 705], 'valid'],
		[[706, 709], 'valid', [], 'NV8'],
		[[710, 721], 'valid'],
		[[722, 727], 'valid', [], 'NV8'],
		[[728, 728], 'disallowed_STD3_mapped', [32, 774]],
		[[729, 729], 'disallowed_STD3_mapped', [32, 775]],
		[[730, 730], 'disallowed_STD3_mapped', [32, 778]],
		[[731, 731], 'disallowed_STD3_mapped', [32, 808]],
		[[732, 732], 'disallowed_STD3_mapped', [32, 771]],
		[[733, 733], 'disallowed_STD3_mapped', [32, 779]],
		[[734, 734], 'valid', [], 'NV8'],
		[[735, 735], 'valid', [], 'NV8'],
		[[736, 736], 'mapped', [611]],
		[[737, 737], 'mapped', [108]],
		[[738, 738], 'mapped', [115]],
		[[739, 739], 'mapped', [120]],
		[[740, 740], 'mapped', [661]],
		[[741, 745], 'valid', [], 'NV8'],
		[[746, 747], 'valid', [], 'NV8'],
		[[748, 748], 'valid'],
		[[749, 749], 'valid', [], 'NV8'],
		[[750, 750], 'valid'],
		[[751, 767], 'valid', [], 'NV8'],
		[[768, 831], 'valid'],
		[[832, 832], 'mapped', [768]],
		[[833, 833], 'mapped', [769]],
		[[834, 834], 'valid'],
		[[835, 835], 'mapped', [787]],
		[[836, 836], 'mapped', [776, 769]],
		[[837, 837], 'mapped', [953]],
		[[838, 846], 'valid'],
		[[847, 847], 'ignored'],
		[[848, 855], 'valid'],
		[[856, 860], 'valid'],
		[[861, 863], 'valid'],
		[[864, 865], 'valid'],
		[[866, 866], 'valid'],
		[[867, 879], 'valid'],
		[[880, 880], 'mapped', [881]],
		[[881, 881], 'valid'],
		[[882, 882], 'mapped', [883]],
		[[883, 883], 'valid'],
		[[884, 884], 'mapped', [697]],
		[[885, 885], 'valid'],
		[[886, 886], 'mapped', [887]],
		[[887, 887], 'valid'],
		[[888, 889], 'disallowed'],
		[[890, 890], 'disallowed_STD3_mapped', [32, 953]],
		[[891, 893], 'valid'],
		[[894, 894], 'disallowed_STD3_mapped', [59]],
		[[895, 895], 'mapped', [1011]],
		[[896, 899], 'disallowed'],
		[[900, 900], 'disallowed_STD3_mapped', [32, 769]],
		[[901, 901], 'disallowed_STD3_mapped', [32, 776, 769]],
		[[902, 902], 'mapped', [940]],
		[[903, 903], 'mapped', [183]],
		[[904, 904], 'mapped', [941]],
		[[905, 905], 'mapped', [942]],
		[[906, 906], 'mapped', [943]],
		[[907, 907], 'disallowed'],
		[[908, 908], 'mapped', [972]],
		[[909, 909], 'disallowed'],
		[[910, 910], 'mapped', [973]],
		[[911, 911], 'mapped', [974]],
		[[912, 912], 'valid'],
		[[913, 913], 'mapped', [945]],
		[[914, 914], 'mapped', [946]],
		[[915, 915], 'mapped', [947]],
		[[916, 916], 'mapped', [948]],
		[[917, 917], 'mapped', [949]],
		[[918, 918], 'mapped', [950]],
		[[919, 919], 'mapped', [951]],
		[[920, 920], 'mapped', [952]],
		[[921, 921], 'mapped', [953]],
		[[922, 922], 'mapped', [954]],
		[[923, 923], 'mapped', [955]],
		[[924, 924], 'mapped', [956]],
		[[925, 925], 'mapped', [957]],
		[[926, 926], 'mapped', [958]],
		[[927, 927], 'mapped', [959]],
		[[928, 928], 'mapped', [960]],
		[[929, 929], 'mapped', [961]],
		[[930, 930], 'disallowed'],
		[[931, 931], 'mapped', [963]],
		[[932, 932], 'mapped', [964]],
		[[933, 933], 'mapped', [965]],
		[[934, 934], 'mapped', [966]],
		[[935, 935], 'mapped', [967]],
		[[936, 936], 'mapped', [968]],
		[[937, 937], 'mapped', [969]],
		[[938, 938], 'mapped', [970]],
		[[939, 939], 'mapped', [971]],
		[[940, 961], 'valid'],
		[[962, 962], 'deviation', [963]],
		[[963, 974], 'valid'],
		[[975, 975], 'mapped', [983]],
		[[976, 976], 'mapped', [946]],
		[[977, 977], 'mapped', [952]],
		[[978, 978], 'mapped', [965]],
		[[979, 979], 'mapped', [973]],
		[[980, 980], 'mapped', [971]],
		[[981, 981], 'mapped', [966]],
		[[982, 982], 'mapped', [960]],
		[[983, 983], 'valid'],
		[[984, 984], 'mapped', [985]],
		[[985, 985], 'valid'],
		[[986, 986], 'mapped', [987]],
		[[987, 987], 'valid'],
		[[988, 988], 'mapped', [989]],
		[[989, 989], 'valid'],
		[[990, 990], 'mapped', [991]],
		[[991, 991], 'valid'],
		[[992, 992], 'mapped', [993]],
		[[993, 993], 'valid'],
		[[994, 994], 'mapped', [995]],
		[[995, 995], 'valid'],
		[[996, 996], 'mapped', [997]],
		[[997, 997], 'valid'],
		[[998, 998], 'mapped', [999]],
		[[999, 999], 'valid'],
		[[1e3, 1e3], 'mapped', [1001]],
		[[1001, 1001], 'valid'],
		[[1002, 1002], 'mapped', [1003]],
		[[1003, 1003], 'valid'],
		[[1004, 1004], 'mapped', [1005]],
		[[1005, 1005], 'valid'],
		[[1006, 1006], 'mapped', [1007]],
		[[1007, 1007], 'valid'],
		[[1008, 1008], 'mapped', [954]],
		[[1009, 1009], 'mapped', [961]],
		[[1010, 1010], 'mapped', [963]],
		[[1011, 1011], 'valid'],
		[[1012, 1012], 'mapped', [952]],
		[[1013, 1013], 'mapped', [949]],
		[[1014, 1014], 'valid', [], 'NV8'],
		[[1015, 1015], 'mapped', [1016]],
		[[1016, 1016], 'valid'],
		[[1017, 1017], 'mapped', [963]],
		[[1018, 1018], 'mapped', [1019]],
		[[1019, 1019], 'valid'],
		[[1020, 1020], 'valid'],
		[[1021, 1021], 'mapped', [891]],
		[[1022, 1022], 'mapped', [892]],
		[[1023, 1023], 'mapped', [893]],
		[[1024, 1024], 'mapped', [1104]],
		[[1025, 1025], 'mapped', [1105]],
		[[1026, 1026], 'mapped', [1106]],
		[[1027, 1027], 'mapped', [1107]],
		[[1028, 1028], 'mapped', [1108]],
		[[1029, 1029], 'mapped', [1109]],
		[[1030, 1030], 'mapped', [1110]],
		[[1031, 1031], 'mapped', [1111]],
		[[1032, 1032], 'mapped', [1112]],
		[[1033, 1033], 'mapped', [1113]],
		[[1034, 1034], 'mapped', [1114]],
		[[1035, 1035], 'mapped', [1115]],
		[[1036, 1036], 'mapped', [1116]],
		[[1037, 1037], 'mapped', [1117]],
		[[1038, 1038], 'mapped', [1118]],
		[[1039, 1039], 'mapped', [1119]],
		[[1040, 1040], 'mapped', [1072]],
		[[1041, 1041], 'mapped', [1073]],
		[[1042, 1042], 'mapped', [1074]],
		[[1043, 1043], 'mapped', [1075]],
		[[1044, 1044], 'mapped', [1076]],
		[[1045, 1045], 'mapped', [1077]],
		[[1046, 1046], 'mapped', [1078]],
		[[1047, 1047], 'mapped', [1079]],
		[[1048, 1048], 'mapped', [1080]],
		[[1049, 1049], 'mapped', [1081]],
		[[1050, 1050], 'mapped', [1082]],
		[[1051, 1051], 'mapped', [1083]],
		[[1052, 1052], 'mapped', [1084]],
		[[1053, 1053], 'mapped', [1085]],
		[[1054, 1054], 'mapped', [1086]],
		[[1055, 1055], 'mapped', [1087]],
		[[1056, 1056], 'mapped', [1088]],
		[[1057, 1057], 'mapped', [1089]],
		[[1058, 1058], 'mapped', [1090]],
		[[1059, 1059], 'mapped', [1091]],
		[[1060, 1060], 'mapped', [1092]],
		[[1061, 1061], 'mapped', [1093]],
		[[1062, 1062], 'mapped', [1094]],
		[[1063, 1063], 'mapped', [1095]],
		[[1064, 1064], 'mapped', [1096]],
		[[1065, 1065], 'mapped', [1097]],
		[[1066, 1066], 'mapped', [1098]],
		[[1067, 1067], 'mapped', [1099]],
		[[1068, 1068], 'mapped', [1100]],
		[[1069, 1069], 'mapped', [1101]],
		[[1070, 1070], 'mapped', [1102]],
		[[1071, 1071], 'mapped', [1103]],
		[[1072, 1103], 'valid'],
		[[1104, 1104], 'valid'],
		[[1105, 1116], 'valid'],
		[[1117, 1117], 'valid'],
		[[1118, 1119], 'valid'],
		[[1120, 1120], 'mapped', [1121]],
		[[1121, 1121], 'valid'],
		[[1122, 1122], 'mapped', [1123]],
		[[1123, 1123], 'valid'],
		[[1124, 1124], 'mapped', [1125]],
		[[1125, 1125], 'valid'],
		[[1126, 1126], 'mapped', [1127]],
		[[1127, 1127], 'valid'],
		[[1128, 1128], 'mapped', [1129]],
		[[1129, 1129], 'valid'],
		[[1130, 1130], 'mapped', [1131]],
		[[1131, 1131], 'valid'],
		[[1132, 1132], 'mapped', [1133]],
		[[1133, 1133], 'valid'],
		[[1134, 1134], 'mapped', [1135]],
		[[1135, 1135], 'valid'],
		[[1136, 1136], 'mapped', [1137]],
		[[1137, 1137], 'valid'],
		[[1138, 1138], 'mapped', [1139]],
		[[1139, 1139], 'valid'],
		[[1140, 1140], 'mapped', [1141]],
		[[1141, 1141], 'valid'],
		[[1142, 1142], 'mapped', [1143]],
		[[1143, 1143], 'valid'],
		[[1144, 1144], 'mapped', [1145]],
		[[1145, 1145], 'valid'],
		[[1146, 1146], 'mapped', [1147]],
		[[1147, 1147], 'valid'],
		[[1148, 1148], 'mapped', [1149]],
		[[1149, 1149], 'valid'],
		[[1150, 1150], 'mapped', [1151]],
		[[1151, 1151], 'valid'],
		[[1152, 1152], 'mapped', [1153]],
		[[1153, 1153], 'valid'],
		[[1154, 1154], 'valid', [], 'NV8'],
		[[1155, 1158], 'valid'],
		[[1159, 1159], 'valid'],
		[[1160, 1161], 'valid', [], 'NV8'],
		[[1162, 1162], 'mapped', [1163]],
		[[1163, 1163], 'valid'],
		[[1164, 1164], 'mapped', [1165]],
		[[1165, 1165], 'valid'],
		[[1166, 1166], 'mapped', [1167]],
		[[1167, 1167], 'valid'],
		[[1168, 1168], 'mapped', [1169]],
		[[1169, 1169], 'valid'],
		[[1170, 1170], 'mapped', [1171]],
		[[1171, 1171], 'valid'],
		[[1172, 1172], 'mapped', [1173]],
		[[1173, 1173], 'valid'],
		[[1174, 1174], 'mapped', [1175]],
		[[1175, 1175], 'valid'],
		[[1176, 1176], 'mapped', [1177]],
		[[1177, 1177], 'valid'],
		[[1178, 1178], 'mapped', [1179]],
		[[1179, 1179], 'valid'],
		[[1180, 1180], 'mapped', [1181]],
		[[1181, 1181], 'valid'],
		[[1182, 1182], 'mapped', [1183]],
		[[1183, 1183], 'valid'],
		[[1184, 1184], 'mapped', [1185]],
		[[1185, 1185], 'valid'],
		[[1186, 1186], 'mapped', [1187]],
		[[1187, 1187], 'valid'],
		[[1188, 1188], 'mapped', [1189]],
		[[1189, 1189], 'valid'],
		[[1190, 1190], 'mapped', [1191]],
		[[1191, 1191], 'valid'],
		[[1192, 1192], 'mapped', [1193]],
		[[1193, 1193], 'valid'],
		[[1194, 1194], 'mapped', [1195]],
		[[1195, 1195], 'valid'],
		[[1196, 1196], 'mapped', [1197]],
		[[1197, 1197], 'valid'],
		[[1198, 1198], 'mapped', [1199]],
		[[1199, 1199], 'valid'],
		[[1200, 1200], 'mapped', [1201]],
		[[1201, 1201], 'valid'],
		[[1202, 1202], 'mapped', [1203]],
		[[1203, 1203], 'valid'],
		[[1204, 1204], 'mapped', [1205]],
		[[1205, 1205], 'valid'],
		[[1206, 1206], 'mapped', [1207]],
		[[1207, 1207], 'valid'],
		[[1208, 1208], 'mapped', [1209]],
		[[1209, 1209], 'valid'],
		[[1210, 1210], 'mapped', [1211]],
		[[1211, 1211], 'valid'],
		[[1212, 1212], 'mapped', [1213]],
		[[1213, 1213], 'valid'],
		[[1214, 1214], 'mapped', [1215]],
		[[1215, 1215], 'valid'],
		[[1216, 1216], 'disallowed'],
		[[1217, 1217], 'mapped', [1218]],
		[[1218, 1218], 'valid'],
		[[1219, 1219], 'mapped', [1220]],
		[[1220, 1220], 'valid'],
		[[1221, 1221], 'mapped', [1222]],
		[[1222, 1222], 'valid'],
		[[1223, 1223], 'mapped', [1224]],
		[[1224, 1224], 'valid'],
		[[1225, 1225], 'mapped', [1226]],
		[[1226, 1226], 'valid'],
		[[1227, 1227], 'mapped', [1228]],
		[[1228, 1228], 'valid'],
		[[1229, 1229], 'mapped', [1230]],
		[[1230, 1230], 'valid'],
		[[1231, 1231], 'valid'],
		[[1232, 1232], 'mapped', [1233]],
		[[1233, 1233], 'valid'],
		[[1234, 1234], 'mapped', [1235]],
		[[1235, 1235], 'valid'],
		[[1236, 1236], 'mapped', [1237]],
		[[1237, 1237], 'valid'],
		[[1238, 1238], 'mapped', [1239]],
		[[1239, 1239], 'valid'],
		[[1240, 1240], 'mapped', [1241]],
		[[1241, 1241], 'valid'],
		[[1242, 1242], 'mapped', [1243]],
		[[1243, 1243], 'valid'],
		[[1244, 1244], 'mapped', [1245]],
		[[1245, 1245], 'valid'],
		[[1246, 1246], 'mapped', [1247]],
		[[1247, 1247], 'valid'],
		[[1248, 1248], 'mapped', [1249]],
		[[1249, 1249], 'valid'],
		[[1250, 1250], 'mapped', [1251]],
		[[1251, 1251], 'valid'],
		[[1252, 1252], 'mapped', [1253]],
		[[1253, 1253], 'valid'],
		[[1254, 1254], 'mapped', [1255]],
		[[1255, 1255], 'valid'],
		[[1256, 1256], 'mapped', [1257]],
		[[1257, 1257], 'valid'],
		[[1258, 1258], 'mapped', [1259]],
		[[1259, 1259], 'valid'],
		[[1260, 1260], 'mapped', [1261]],
		[[1261, 1261], 'valid'],
		[[1262, 1262], 'mapped', [1263]],
		[[1263, 1263], 'valid'],
		[[1264, 1264], 'mapped', [1265]],
		[[1265, 1265], 'valid'],
		[[1266, 1266], 'mapped', [1267]],
		[[1267, 1267], 'valid'],
		[[1268, 1268], 'mapped', [1269]],
		[[1269, 1269], 'valid'],
		[[1270, 1270], 'mapped', [1271]],
		[[1271, 1271], 'valid'],
		[[1272, 1272], 'mapped', [1273]],
		[[1273, 1273], 'valid'],
		[[1274, 1274], 'mapped', [1275]],
		[[1275, 1275], 'valid'],
		[[1276, 1276], 'mapped', [1277]],
		[[1277, 1277], 'valid'],
		[[1278, 1278], 'mapped', [1279]],
		[[1279, 1279], 'valid'],
		[[1280, 1280], 'mapped', [1281]],
		[[1281, 1281], 'valid'],
		[[1282, 1282], 'mapped', [1283]],
		[[1283, 1283], 'valid'],
		[[1284, 1284], 'mapped', [1285]],
		[[1285, 1285], 'valid'],
		[[1286, 1286], 'mapped', [1287]],
		[[1287, 1287], 'valid'],
		[[1288, 1288], 'mapped', [1289]],
		[[1289, 1289], 'valid'],
		[[1290, 1290], 'mapped', [1291]],
		[[1291, 1291], 'valid'],
		[[1292, 1292], 'mapped', [1293]],
		[[1293, 1293], 'valid'],
		[[1294, 1294], 'mapped', [1295]],
		[[1295, 1295], 'valid'],
		[[1296, 1296], 'mapped', [1297]],
		[[1297, 1297], 'valid'],
		[[1298, 1298], 'mapped', [1299]],
		[[1299, 1299], 'valid'],
		[[1300, 1300], 'mapped', [1301]],
		[[1301, 1301], 'valid'],
		[[1302, 1302], 'mapped', [1303]],
		[[1303, 1303], 'valid'],
		[[1304, 1304], 'mapped', [1305]],
		[[1305, 1305], 'valid'],
		[[1306, 1306], 'mapped', [1307]],
		[[1307, 1307], 'valid'],
		[[1308, 1308], 'mapped', [1309]],
		[[1309, 1309], 'valid'],
		[[1310, 1310], 'mapped', [1311]],
		[[1311, 1311], 'valid'],
		[[1312, 1312], 'mapped', [1313]],
		[[1313, 1313], 'valid'],
		[[1314, 1314], 'mapped', [1315]],
		[[1315, 1315], 'valid'],
		[[1316, 1316], 'mapped', [1317]],
		[[1317, 1317], 'valid'],
		[[1318, 1318], 'mapped', [1319]],
		[[1319, 1319], 'valid'],
		[[1320, 1320], 'mapped', [1321]],
		[[1321, 1321], 'valid'],
		[[1322, 1322], 'mapped', [1323]],
		[[1323, 1323], 'valid'],
		[[1324, 1324], 'mapped', [1325]],
		[[1325, 1325], 'valid'],
		[[1326, 1326], 'mapped', [1327]],
		[[1327, 1327], 'valid'],
		[[1328, 1328], 'disallowed'],
		[[1329, 1329], 'mapped', [1377]],
		[[1330, 1330], 'mapped', [1378]],
		[[1331, 1331], 'mapped', [1379]],
		[[1332, 1332], 'mapped', [1380]],
		[[1333, 1333], 'mapped', [1381]],
		[[1334, 1334], 'mapped', [1382]],
		[[1335, 1335], 'mapped', [1383]],
		[[1336, 1336], 'mapped', [1384]],
		[[1337, 1337], 'mapped', [1385]],
		[[1338, 1338], 'mapped', [1386]],
		[[1339, 1339], 'mapped', [1387]],
		[[1340, 1340], 'mapped', [1388]],
		[[1341, 1341], 'mapped', [1389]],
		[[1342, 1342], 'mapped', [1390]],
		[[1343, 1343], 'mapped', [1391]],
		[[1344, 1344], 'mapped', [1392]],
		[[1345, 1345], 'mapped', [1393]],
		[[1346, 1346], 'mapped', [1394]],
		[[1347, 1347], 'mapped', [1395]],
		[[1348, 1348], 'mapped', [1396]],
		[[1349, 1349], 'mapped', [1397]],
		[[1350, 1350], 'mapped', [1398]],
		[[1351, 1351], 'mapped', [1399]],
		[[1352, 1352], 'mapped', [1400]],
		[[1353, 1353], 'mapped', [1401]],
		[[1354, 1354], 'mapped', [1402]],
		[[1355, 1355], 'mapped', [1403]],
		[[1356, 1356], 'mapped', [1404]],
		[[1357, 1357], 'mapped', [1405]],
		[[1358, 1358], 'mapped', [1406]],
		[[1359, 1359], 'mapped', [1407]],
		[[1360, 1360], 'mapped', [1408]],
		[[1361, 1361], 'mapped', [1409]],
		[[1362, 1362], 'mapped', [1410]],
		[[1363, 1363], 'mapped', [1411]],
		[[1364, 1364], 'mapped', [1412]],
		[[1365, 1365], 'mapped', [1413]],
		[[1366, 1366], 'mapped', [1414]],
		[[1367, 1368], 'disallowed'],
		[[1369, 1369], 'valid'],
		[[1370, 1375], 'valid', [], 'NV8'],
		[[1376, 1376], 'disallowed'],
		[[1377, 1414], 'valid'],
		[[1415, 1415], 'mapped', [1381, 1410]],
		[[1416, 1416], 'disallowed'],
		[[1417, 1417], 'valid', [], 'NV8'],
		[[1418, 1418], 'valid', [], 'NV8'],
		[[1419, 1420], 'disallowed'],
		[[1421, 1422], 'valid', [], 'NV8'],
		[[1423, 1423], 'valid', [], 'NV8'],
		[[1424, 1424], 'disallowed'],
		[[1425, 1441], 'valid'],
		[[1442, 1442], 'valid'],
		[[1443, 1455], 'valid'],
		[[1456, 1465], 'valid'],
		[[1466, 1466], 'valid'],
		[[1467, 1469], 'valid'],
		[[1470, 1470], 'valid', [], 'NV8'],
		[[1471, 1471], 'valid'],
		[[1472, 1472], 'valid', [], 'NV8'],
		[[1473, 1474], 'valid'],
		[[1475, 1475], 'valid', [], 'NV8'],
		[[1476, 1476], 'valid'],
		[[1477, 1477], 'valid'],
		[[1478, 1478], 'valid', [], 'NV8'],
		[[1479, 1479], 'valid'],
		[[1480, 1487], 'disallowed'],
		[[1488, 1514], 'valid'],
		[[1515, 1519], 'disallowed'],
		[[1520, 1524], 'valid'],
		[[1525, 1535], 'disallowed'],
		[[1536, 1539], 'disallowed'],
		[[1540, 1540], 'disallowed'],
		[[1541, 1541], 'disallowed'],
		[[1542, 1546], 'valid', [], 'NV8'],
		[[1547, 1547], 'valid', [], 'NV8'],
		[[1548, 1548], 'valid', [], 'NV8'],
		[[1549, 1551], 'valid', [], 'NV8'],
		[[1552, 1557], 'valid'],
		[[1558, 1562], 'valid'],
		[[1563, 1563], 'valid', [], 'NV8'],
		[[1564, 1564], 'disallowed'],
		[[1565, 1565], 'disallowed'],
		[[1566, 1566], 'valid', [], 'NV8'],
		[[1567, 1567], 'valid', [], 'NV8'],
		[[1568, 1568], 'valid'],
		[[1569, 1594], 'valid'],
		[[1595, 1599], 'valid'],
		[[1600, 1600], 'valid', [], 'NV8'],
		[[1601, 1618], 'valid'],
		[[1619, 1621], 'valid'],
		[[1622, 1624], 'valid'],
		[[1625, 1630], 'valid'],
		[[1631, 1631], 'valid'],
		[[1632, 1641], 'valid'],
		[[1642, 1645], 'valid', [], 'NV8'],
		[[1646, 1647], 'valid'],
		[[1648, 1652], 'valid'],
		[[1653, 1653], 'mapped', [1575, 1652]],
		[[1654, 1654], 'mapped', [1608, 1652]],
		[[1655, 1655], 'mapped', [1735, 1652]],
		[[1656, 1656], 'mapped', [1610, 1652]],
		[[1657, 1719], 'valid'],
		[[1720, 1721], 'valid'],
		[[1722, 1726], 'valid'],
		[[1727, 1727], 'valid'],
		[[1728, 1742], 'valid'],
		[[1743, 1743], 'valid'],
		[[1744, 1747], 'valid'],
		[[1748, 1748], 'valid', [], 'NV8'],
		[[1749, 1756], 'valid'],
		[[1757, 1757], 'disallowed'],
		[[1758, 1758], 'valid', [], 'NV8'],
		[[1759, 1768], 'valid'],
		[[1769, 1769], 'valid', [], 'NV8'],
		[[1770, 1773], 'valid'],
		[[1774, 1775], 'valid'],
		[[1776, 1785], 'valid'],
		[[1786, 1790], 'valid'],
		[[1791, 1791], 'valid'],
		[[1792, 1805], 'valid', [], 'NV8'],
		[[1806, 1806], 'disallowed'],
		[[1807, 1807], 'disallowed'],
		[[1808, 1836], 'valid'],
		[[1837, 1839], 'valid'],
		[[1840, 1866], 'valid'],
		[[1867, 1868], 'disallowed'],
		[[1869, 1871], 'valid'],
		[[1872, 1901], 'valid'],
		[[1902, 1919], 'valid'],
		[[1920, 1968], 'valid'],
		[[1969, 1969], 'valid'],
		[[1970, 1983], 'disallowed'],
		[[1984, 2037], 'valid'],
		[[2038, 2042], 'valid', [], 'NV8'],
		[[2043, 2047], 'disallowed'],
		[[2048, 2093], 'valid'],
		[[2094, 2095], 'disallowed'],
		[[2096, 2110], 'valid', [], 'NV8'],
		[[2111, 2111], 'disallowed'],
		[[2112, 2139], 'valid'],
		[[2140, 2141], 'disallowed'],
		[[2142, 2142], 'valid', [], 'NV8'],
		[[2143, 2207], 'disallowed'],
		[[2208, 2208], 'valid'],
		[[2209, 2209], 'valid'],
		[[2210, 2220], 'valid'],
		[[2221, 2226], 'valid'],
		[[2227, 2228], 'valid'],
		[[2229, 2274], 'disallowed'],
		[[2275, 2275], 'valid'],
		[[2276, 2302], 'valid'],
		[[2303, 2303], 'valid'],
		[[2304, 2304], 'valid'],
		[[2305, 2307], 'valid'],
		[[2308, 2308], 'valid'],
		[[2309, 2361], 'valid'],
		[[2362, 2363], 'valid'],
		[[2364, 2381], 'valid'],
		[[2382, 2382], 'valid'],
		[[2383, 2383], 'valid'],
		[[2384, 2388], 'valid'],
		[[2389, 2389], 'valid'],
		[[2390, 2391], 'valid'],
		[[2392, 2392], 'mapped', [2325, 2364]],
		[[2393, 2393], 'mapped', [2326, 2364]],
		[[2394, 2394], 'mapped', [2327, 2364]],
		[[2395, 2395], 'mapped', [2332, 2364]],
		[[2396, 2396], 'mapped', [2337, 2364]],
		[[2397, 2397], 'mapped', [2338, 2364]],
		[[2398, 2398], 'mapped', [2347, 2364]],
		[[2399, 2399], 'mapped', [2351, 2364]],
		[[2400, 2403], 'valid'],
		[[2404, 2405], 'valid', [], 'NV8'],
		[[2406, 2415], 'valid'],
		[[2416, 2416], 'valid', [], 'NV8'],
		[[2417, 2418], 'valid'],
		[[2419, 2423], 'valid'],
		[[2424, 2424], 'valid'],
		[[2425, 2426], 'valid'],
		[[2427, 2428], 'valid'],
		[[2429, 2429], 'valid'],
		[[2430, 2431], 'valid'],
		[[2432, 2432], 'valid'],
		[[2433, 2435], 'valid'],
		[[2436, 2436], 'disallowed'],
		[[2437, 2444], 'valid'],
		[[2445, 2446], 'disallowed'],
		[[2447, 2448], 'valid'],
		[[2449, 2450], 'disallowed'],
		[[2451, 2472], 'valid'],
		[[2473, 2473], 'disallowed'],
		[[2474, 2480], 'valid'],
		[[2481, 2481], 'disallowed'],
		[[2482, 2482], 'valid'],
		[[2483, 2485], 'disallowed'],
		[[2486, 2489], 'valid'],
		[[2490, 2491], 'disallowed'],
		[[2492, 2492], 'valid'],
		[[2493, 2493], 'valid'],
		[[2494, 2500], 'valid'],
		[[2501, 2502], 'disallowed'],
		[[2503, 2504], 'valid'],
		[[2505, 2506], 'disallowed'],
		[[2507, 2509], 'valid'],
		[[2510, 2510], 'valid'],
		[[2511, 2518], 'disallowed'],
		[[2519, 2519], 'valid'],
		[[2520, 2523], 'disallowed'],
		[[2524, 2524], 'mapped', [2465, 2492]],
		[[2525, 2525], 'mapped', [2466, 2492]],
		[[2526, 2526], 'disallowed'],
		[[2527, 2527], 'mapped', [2479, 2492]],
		[[2528, 2531], 'valid'],
		[[2532, 2533], 'disallowed'],
		[[2534, 2545], 'valid'],
		[[2546, 2554], 'valid', [], 'NV8'],
		[[2555, 2555], 'valid', [], 'NV8'],
		[[2556, 2560], 'disallowed'],
		[[2561, 2561], 'valid'],
		[[2562, 2562], 'valid'],
		[[2563, 2563], 'valid'],
		[[2564, 2564], 'disallowed'],
		[[2565, 2570], 'valid'],
		[[2571, 2574], 'disallowed'],
		[[2575, 2576], 'valid'],
		[[2577, 2578], 'disallowed'],
		[[2579, 2600], 'valid'],
		[[2601, 2601], 'disallowed'],
		[[2602, 2608], 'valid'],
		[[2609, 2609], 'disallowed'],
		[[2610, 2610], 'valid'],
		[[2611, 2611], 'mapped', [2610, 2620]],
		[[2612, 2612], 'disallowed'],
		[[2613, 2613], 'valid'],
		[[2614, 2614], 'mapped', [2616, 2620]],
		[[2615, 2615], 'disallowed'],
		[[2616, 2617], 'valid'],
		[[2618, 2619], 'disallowed'],
		[[2620, 2620], 'valid'],
		[[2621, 2621], 'disallowed'],
		[[2622, 2626], 'valid'],
		[[2627, 2630], 'disallowed'],
		[[2631, 2632], 'valid'],
		[[2633, 2634], 'disallowed'],
		[[2635, 2637], 'valid'],
		[[2638, 2640], 'disallowed'],
		[[2641, 2641], 'valid'],
		[[2642, 2648], 'disallowed'],
		[[2649, 2649], 'mapped', [2582, 2620]],
		[[2650, 2650], 'mapped', [2583, 2620]],
		[[2651, 2651], 'mapped', [2588, 2620]],
		[[2652, 2652], 'valid'],
		[[2653, 2653], 'disallowed'],
		[[2654, 2654], 'mapped', [2603, 2620]],
		[[2655, 2661], 'disallowed'],
		[[2662, 2676], 'valid'],
		[[2677, 2677], 'valid'],
		[[2678, 2688], 'disallowed'],
		[[2689, 2691], 'valid'],
		[[2692, 2692], 'disallowed'],
		[[2693, 2699], 'valid'],
		[[2700, 2700], 'valid'],
		[[2701, 2701], 'valid'],
		[[2702, 2702], 'disallowed'],
		[[2703, 2705], 'valid'],
		[[2706, 2706], 'disallowed'],
		[[2707, 2728], 'valid'],
		[[2729, 2729], 'disallowed'],
		[[2730, 2736], 'valid'],
		[[2737, 2737], 'disallowed'],
		[[2738, 2739], 'valid'],
		[[2740, 2740], 'disallowed'],
		[[2741, 2745], 'valid'],
		[[2746, 2747], 'disallowed'],
		[[2748, 2757], 'valid'],
		[[2758, 2758], 'disallowed'],
		[[2759, 2761], 'valid'],
		[[2762, 2762], 'disallowed'],
		[[2763, 2765], 'valid'],
		[[2766, 2767], 'disallowed'],
		[[2768, 2768], 'valid'],
		[[2769, 2783], 'disallowed'],
		[[2784, 2784], 'valid'],
		[[2785, 2787], 'valid'],
		[[2788, 2789], 'disallowed'],
		[[2790, 2799], 'valid'],
		[[2800, 2800], 'valid', [], 'NV8'],
		[[2801, 2801], 'valid', [], 'NV8'],
		[[2802, 2808], 'disallowed'],
		[[2809, 2809], 'valid'],
		[[2810, 2816], 'disallowed'],
		[[2817, 2819], 'valid'],
		[[2820, 2820], 'disallowed'],
		[[2821, 2828], 'valid'],
		[[2829, 2830], 'disallowed'],
		[[2831, 2832], 'valid'],
		[[2833, 2834], 'disallowed'],
		[[2835, 2856], 'valid'],
		[[2857, 2857], 'disallowed'],
		[[2858, 2864], 'valid'],
		[[2865, 2865], 'disallowed'],
		[[2866, 2867], 'valid'],
		[[2868, 2868], 'disallowed'],
		[[2869, 2869], 'valid'],
		[[2870, 2873], 'valid'],
		[[2874, 2875], 'disallowed'],
		[[2876, 2883], 'valid'],
		[[2884, 2884], 'valid'],
		[[2885, 2886], 'disallowed'],
		[[2887, 2888], 'valid'],
		[[2889, 2890], 'disallowed'],
		[[2891, 2893], 'valid'],
		[[2894, 2901], 'disallowed'],
		[[2902, 2903], 'valid'],
		[[2904, 2907], 'disallowed'],
		[[2908, 2908], 'mapped', [2849, 2876]],
		[[2909, 2909], 'mapped', [2850, 2876]],
		[[2910, 2910], 'disallowed'],
		[[2911, 2913], 'valid'],
		[[2914, 2915], 'valid'],
		[[2916, 2917], 'disallowed'],
		[[2918, 2927], 'valid'],
		[[2928, 2928], 'valid', [], 'NV8'],
		[[2929, 2929], 'valid'],
		[[2930, 2935], 'valid', [], 'NV8'],
		[[2936, 2945], 'disallowed'],
		[[2946, 2947], 'valid'],
		[[2948, 2948], 'disallowed'],
		[[2949, 2954], 'valid'],
		[[2955, 2957], 'disallowed'],
		[[2958, 2960], 'valid'],
		[[2961, 2961], 'disallowed'],
		[[2962, 2965], 'valid'],
		[[2966, 2968], 'disallowed'],
		[[2969, 2970], 'valid'],
		[[2971, 2971], 'disallowed'],
		[[2972, 2972], 'valid'],
		[[2973, 2973], 'disallowed'],
		[[2974, 2975], 'valid'],
		[[2976, 2978], 'disallowed'],
		[[2979, 2980], 'valid'],
		[[2981, 2983], 'disallowed'],
		[[2984, 2986], 'valid'],
		[[2987, 2989], 'disallowed'],
		[[2990, 2997], 'valid'],
		[[2998, 2998], 'valid'],
		[[2999, 3001], 'valid'],
		[[3002, 3005], 'disallowed'],
		[[3006, 3010], 'valid'],
		[[3011, 3013], 'disallowed'],
		[[3014, 3016], 'valid'],
		[[3017, 3017], 'disallowed'],
		[[3018, 3021], 'valid'],
		[[3022, 3023], 'disallowed'],
		[[3024, 3024], 'valid'],
		[[3025, 3030], 'disallowed'],
		[[3031, 3031], 'valid'],
		[[3032, 3045], 'disallowed'],
		[[3046, 3046], 'valid'],
		[[3047, 3055], 'valid'],
		[[3056, 3058], 'valid', [], 'NV8'],
		[[3059, 3066], 'valid', [], 'NV8'],
		[[3067, 3071], 'disallowed'],
		[[3072, 3072], 'valid'],
		[[3073, 3075], 'valid'],
		[[3076, 3076], 'disallowed'],
		[[3077, 3084], 'valid'],
		[[3085, 3085], 'disallowed'],
		[[3086, 3088], 'valid'],
		[[3089, 3089], 'disallowed'],
		[[3090, 3112], 'valid'],
		[[3113, 3113], 'disallowed'],
		[[3114, 3123], 'valid'],
		[[3124, 3124], 'valid'],
		[[3125, 3129], 'valid'],
		[[3130, 3132], 'disallowed'],
		[[3133, 3133], 'valid'],
		[[3134, 3140], 'valid'],
		[[3141, 3141], 'disallowed'],
		[[3142, 3144], 'valid'],
		[[3145, 3145], 'disallowed'],
		[[3146, 3149], 'valid'],
		[[3150, 3156], 'disallowed'],
		[[3157, 3158], 'valid'],
		[[3159, 3159], 'disallowed'],
		[[3160, 3161], 'valid'],
		[[3162, 3162], 'valid'],
		[[3163, 3167], 'disallowed'],
		[[3168, 3169], 'valid'],
		[[3170, 3171], 'valid'],
		[[3172, 3173], 'disallowed'],
		[[3174, 3183], 'valid'],
		[[3184, 3191], 'disallowed'],
		[[3192, 3199], 'valid', [], 'NV8'],
		[[3200, 3200], 'disallowed'],
		[[3201, 3201], 'valid'],
		[[3202, 3203], 'valid'],
		[[3204, 3204], 'disallowed'],
		[[3205, 3212], 'valid'],
		[[3213, 3213], 'disallowed'],
		[[3214, 3216], 'valid'],
		[[3217, 3217], 'disallowed'],
		[[3218, 3240], 'valid'],
		[[3241, 3241], 'disallowed'],
		[[3242, 3251], 'valid'],
		[[3252, 3252], 'disallowed'],
		[[3253, 3257], 'valid'],
		[[3258, 3259], 'disallowed'],
		[[3260, 3261], 'valid'],
		[[3262, 3268], 'valid'],
		[[3269, 3269], 'disallowed'],
		[[3270, 3272], 'valid'],
		[[3273, 3273], 'disallowed'],
		[[3274, 3277], 'valid'],
		[[3278, 3284], 'disallowed'],
		[[3285, 3286], 'valid'],
		[[3287, 3293], 'disallowed'],
		[[3294, 3294], 'valid'],
		[[3295, 3295], 'disallowed'],
		[[3296, 3297], 'valid'],
		[[3298, 3299], 'valid'],
		[[3300, 3301], 'disallowed'],
		[[3302, 3311], 'valid'],
		[[3312, 3312], 'disallowed'],
		[[3313, 3314], 'valid'],
		[[3315, 3328], 'disallowed'],
		[[3329, 3329], 'valid'],
		[[3330, 3331], 'valid'],
		[[3332, 3332], 'disallowed'],
		[[3333, 3340], 'valid'],
		[[3341, 3341], 'disallowed'],
		[[3342, 3344], 'valid'],
		[[3345, 3345], 'disallowed'],
		[[3346, 3368], 'valid'],
		[[3369, 3369], 'valid'],
		[[3370, 3385], 'valid'],
		[[3386, 3386], 'valid'],
		[[3387, 3388], 'disallowed'],
		[[3389, 3389], 'valid'],
		[[3390, 3395], 'valid'],
		[[3396, 3396], 'valid'],
		[[3397, 3397], 'disallowed'],
		[[3398, 3400], 'valid'],
		[[3401, 3401], 'disallowed'],
		[[3402, 3405], 'valid'],
		[[3406, 3406], 'valid'],
		[[3407, 3414], 'disallowed'],
		[[3415, 3415], 'valid'],
		[[3416, 3422], 'disallowed'],
		[[3423, 3423], 'valid'],
		[[3424, 3425], 'valid'],
		[[3426, 3427], 'valid'],
		[[3428, 3429], 'disallowed'],
		[[3430, 3439], 'valid'],
		[[3440, 3445], 'valid', [], 'NV8'],
		[[3446, 3448], 'disallowed'],
		[[3449, 3449], 'valid', [], 'NV8'],
		[[3450, 3455], 'valid'],
		[[3456, 3457], 'disallowed'],
		[[3458, 3459], 'valid'],
		[[3460, 3460], 'disallowed'],
		[[3461, 3478], 'valid'],
		[[3479, 3481], 'disallowed'],
		[[3482, 3505], 'valid'],
		[[3506, 3506], 'disallowed'],
		[[3507, 3515], 'valid'],
		[[3516, 3516], 'disallowed'],
		[[3517, 3517], 'valid'],
		[[3518, 3519], 'disallowed'],
		[[3520, 3526], 'valid'],
		[[3527, 3529], 'disallowed'],
		[[3530, 3530], 'valid'],
		[[3531, 3534], 'disallowed'],
		[[3535, 3540], 'valid'],
		[[3541, 3541], 'disallowed'],
		[[3542, 3542], 'valid'],
		[[3543, 3543], 'disallowed'],
		[[3544, 3551], 'valid'],
		[[3552, 3557], 'disallowed'],
		[[3558, 3567], 'valid'],
		[[3568, 3569], 'disallowed'],
		[[3570, 3571], 'valid'],
		[[3572, 3572], 'valid', [], 'NV8'],
		[[3573, 3584], 'disallowed'],
		[[3585, 3634], 'valid'],
		[[3635, 3635], 'mapped', [3661, 3634]],
		[[3636, 3642], 'valid'],
		[[3643, 3646], 'disallowed'],
		[[3647, 3647], 'valid', [], 'NV8'],
		[[3648, 3662], 'valid'],
		[[3663, 3663], 'valid', [], 'NV8'],
		[[3664, 3673], 'valid'],
		[[3674, 3675], 'valid', [], 'NV8'],
		[[3676, 3712], 'disallowed'],
		[[3713, 3714], 'valid'],
		[[3715, 3715], 'disallowed'],
		[[3716, 3716], 'valid'],
		[[3717, 3718], 'disallowed'],
		[[3719, 3720], 'valid'],
		[[3721, 3721], 'disallowed'],
		[[3722, 3722], 'valid'],
		[[3723, 3724], 'disallowed'],
		[[3725, 3725], 'valid'],
		[[3726, 3731], 'disallowed'],
		[[3732, 3735], 'valid'],
		[[3736, 3736], 'disallowed'],
		[[3737, 3743], 'valid'],
		[[3744, 3744], 'disallowed'],
		[[3745, 3747], 'valid'],
		[[3748, 3748], 'disallowed'],
		[[3749, 3749], 'valid'],
		[[3750, 3750], 'disallowed'],
		[[3751, 3751], 'valid'],
		[[3752, 3753], 'disallowed'],
		[[3754, 3755], 'valid'],
		[[3756, 3756], 'disallowed'],
		[[3757, 3762], 'valid'],
		[[3763, 3763], 'mapped', [3789, 3762]],
		[[3764, 3769], 'valid'],
		[[3770, 3770], 'disallowed'],
		[[3771, 3773], 'valid'],
		[[3774, 3775], 'disallowed'],
		[[3776, 3780], 'valid'],
		[[3781, 3781], 'disallowed'],
		[[3782, 3782], 'valid'],
		[[3783, 3783], 'disallowed'],
		[[3784, 3789], 'valid'],
		[[3790, 3791], 'disallowed'],
		[[3792, 3801], 'valid'],
		[[3802, 3803], 'disallowed'],
		[[3804, 3804], 'mapped', [3755, 3737]],
		[[3805, 3805], 'mapped', [3755, 3745]],
		[[3806, 3807], 'valid'],
		[[3808, 3839], 'disallowed'],
		[[3840, 3840], 'valid'],
		[[3841, 3850], 'valid', [], 'NV8'],
		[[3851, 3851], 'valid'],
		[[3852, 3852], 'mapped', [3851]],
		[[3853, 3863], 'valid', [], 'NV8'],
		[[3864, 3865], 'valid'],
		[[3866, 3871], 'valid', [], 'NV8'],
		[[3872, 3881], 'valid'],
		[[3882, 3892], 'valid', [], 'NV8'],
		[[3893, 3893], 'valid'],
		[[3894, 3894], 'valid', [], 'NV8'],
		[[3895, 3895], 'valid'],
		[[3896, 3896], 'valid', [], 'NV8'],
		[[3897, 3897], 'valid'],
		[[3898, 3901], 'valid', [], 'NV8'],
		[[3902, 3906], 'valid'],
		[[3907, 3907], 'mapped', [3906, 4023]],
		[[3908, 3911], 'valid'],
		[[3912, 3912], 'disallowed'],
		[[3913, 3916], 'valid'],
		[[3917, 3917], 'mapped', [3916, 4023]],
		[[3918, 3921], 'valid'],
		[[3922, 3922], 'mapped', [3921, 4023]],
		[[3923, 3926], 'valid'],
		[[3927, 3927], 'mapped', [3926, 4023]],
		[[3928, 3931], 'valid'],
		[[3932, 3932], 'mapped', [3931, 4023]],
		[[3933, 3944], 'valid'],
		[[3945, 3945], 'mapped', [3904, 4021]],
		[[3946, 3946], 'valid'],
		[[3947, 3948], 'valid'],
		[[3949, 3952], 'disallowed'],
		[[3953, 3954], 'valid'],
		[[3955, 3955], 'mapped', [3953, 3954]],
		[[3956, 3956], 'valid'],
		[[3957, 3957], 'mapped', [3953, 3956]],
		[[3958, 3958], 'mapped', [4018, 3968]],
		[[3959, 3959], 'mapped', [4018, 3953, 3968]],
		[[3960, 3960], 'mapped', [4019, 3968]],
		[[3961, 3961], 'mapped', [4019, 3953, 3968]],
		[[3962, 3968], 'valid'],
		[[3969, 3969], 'mapped', [3953, 3968]],
		[[3970, 3972], 'valid'],
		[[3973, 3973], 'valid', [], 'NV8'],
		[[3974, 3979], 'valid'],
		[[3980, 3983], 'valid'],
		[[3984, 3986], 'valid'],
		[[3987, 3987], 'mapped', [3986, 4023]],
		[[3988, 3989], 'valid'],
		[[3990, 3990], 'valid'],
		[[3991, 3991], 'valid'],
		[[3992, 3992], 'disallowed'],
		[[3993, 3996], 'valid'],
		[[3997, 3997], 'mapped', [3996, 4023]],
		[[3998, 4001], 'valid'],
		[[4002, 4002], 'mapped', [4001, 4023]],
		[[4003, 4006], 'valid'],
		[[4007, 4007], 'mapped', [4006, 4023]],
		[[4008, 4011], 'valid'],
		[[4012, 4012], 'mapped', [4011, 4023]],
		[[4013, 4013], 'valid'],
		[[4014, 4016], 'valid'],
		[[4017, 4023], 'valid'],
		[[4024, 4024], 'valid'],
		[[4025, 4025], 'mapped', [3984, 4021]],
		[[4026, 4028], 'valid'],
		[[4029, 4029], 'disallowed'],
		[[4030, 4037], 'valid', [], 'NV8'],
		[[4038, 4038], 'valid'],
		[[4039, 4044], 'valid', [], 'NV8'],
		[[4045, 4045], 'disallowed'],
		[[4046, 4046], 'valid', [], 'NV8'],
		[[4047, 4047], 'valid', [], 'NV8'],
		[[4048, 4049], 'valid', [], 'NV8'],
		[[4050, 4052], 'valid', [], 'NV8'],
		[[4053, 4056], 'valid', [], 'NV8'],
		[[4057, 4058], 'valid', [], 'NV8'],
		[[4059, 4095], 'disallowed'],
		[[4096, 4129], 'valid'],
		[[4130, 4130], 'valid'],
		[[4131, 4135], 'valid'],
		[[4136, 4136], 'valid'],
		[[4137, 4138], 'valid'],
		[[4139, 4139], 'valid'],
		[[4140, 4146], 'valid'],
		[[4147, 4149], 'valid'],
		[[4150, 4153], 'valid'],
		[[4154, 4159], 'valid'],
		[[4160, 4169], 'valid'],
		[[4170, 4175], 'valid', [], 'NV8'],
		[[4176, 4185], 'valid'],
		[[4186, 4249], 'valid'],
		[[4250, 4253], 'valid'],
		[[4254, 4255], 'valid', [], 'NV8'],
		[[4256, 4293], 'disallowed'],
		[[4294, 4294], 'disallowed'],
		[[4295, 4295], 'mapped', [11559]],
		[[4296, 4300], 'disallowed'],
		[[4301, 4301], 'mapped', [11565]],
		[[4302, 4303], 'disallowed'],
		[[4304, 4342], 'valid'],
		[[4343, 4344], 'valid'],
		[[4345, 4346], 'valid'],
		[[4347, 4347], 'valid', [], 'NV8'],
		[[4348, 4348], 'mapped', [4316]],
		[[4349, 4351], 'valid'],
		[[4352, 4441], 'valid', [], 'NV8'],
		[[4442, 4446], 'valid', [], 'NV8'],
		[[4447, 4448], 'disallowed'],
		[[4449, 4514], 'valid', [], 'NV8'],
		[[4515, 4519], 'valid', [], 'NV8'],
		[[4520, 4601], 'valid', [], 'NV8'],
		[[4602, 4607], 'valid', [], 'NV8'],
		[[4608, 4614], 'valid'],
		[[4615, 4615], 'valid'],
		[[4616, 4678], 'valid'],
		[[4679, 4679], 'valid'],
		[[4680, 4680], 'valid'],
		[[4681, 4681], 'disallowed'],
		[[4682, 4685], 'valid'],
		[[4686, 4687], 'disallowed'],
		[[4688, 4694], 'valid'],
		[[4695, 4695], 'disallowed'],
		[[4696, 4696], 'valid'],
		[[4697, 4697], 'disallowed'],
		[[4698, 4701], 'valid'],
		[[4702, 4703], 'disallowed'],
		[[4704, 4742], 'valid'],
		[[4743, 4743], 'valid'],
		[[4744, 4744], 'valid'],
		[[4745, 4745], 'disallowed'],
		[[4746, 4749], 'valid'],
		[[4750, 4751], 'disallowed'],
		[[4752, 4782], 'valid'],
		[[4783, 4783], 'valid'],
		[[4784, 4784], 'valid'],
		[[4785, 4785], 'disallowed'],
		[[4786, 4789], 'valid'],
		[[4790, 4791], 'disallowed'],
		[[4792, 4798], 'valid'],
		[[4799, 4799], 'disallowed'],
		[[4800, 4800], 'valid'],
		[[4801, 4801], 'disallowed'],
		[[4802, 4805], 'valid'],
		[[4806, 4807], 'disallowed'],
		[[4808, 4814], 'valid'],
		[[4815, 4815], 'valid'],
		[[4816, 4822], 'valid'],
		[[4823, 4823], 'disallowed'],
		[[4824, 4846], 'valid'],
		[[4847, 4847], 'valid'],
		[[4848, 4878], 'valid'],
		[[4879, 4879], 'valid'],
		[[4880, 4880], 'valid'],
		[[4881, 4881], 'disallowed'],
		[[4882, 4885], 'valid'],
		[[4886, 4887], 'disallowed'],
		[[4888, 4894], 'valid'],
		[[4895, 4895], 'valid'],
		[[4896, 4934], 'valid'],
		[[4935, 4935], 'valid'],
		[[4936, 4954], 'valid'],
		[[4955, 4956], 'disallowed'],
		[[4957, 4958], 'valid'],
		[[4959, 4959], 'valid'],
		[[4960, 4960], 'valid', [], 'NV8'],
		[[4961, 4988], 'valid', [], 'NV8'],
		[[4989, 4991], 'disallowed'],
		[[4992, 5007], 'valid'],
		[[5008, 5017], 'valid', [], 'NV8'],
		[[5018, 5023], 'disallowed'],
		[[5024, 5108], 'valid'],
		[[5109, 5109], 'valid'],
		[[5110, 5111], 'disallowed'],
		[[5112, 5112], 'mapped', [5104]],
		[[5113, 5113], 'mapped', [5105]],
		[[5114, 5114], 'mapped', [5106]],
		[[5115, 5115], 'mapped', [5107]],
		[[5116, 5116], 'mapped', [5108]],
		[[5117, 5117], 'mapped', [5109]],
		[[5118, 5119], 'disallowed'],
		[[5120, 5120], 'valid', [], 'NV8'],
		[[5121, 5740], 'valid'],
		[[5741, 5742], 'valid', [], 'NV8'],
		[[5743, 5750], 'valid'],
		[[5751, 5759], 'valid'],
		[[5760, 5760], 'disallowed'],
		[[5761, 5786], 'valid'],
		[[5787, 5788], 'valid', [], 'NV8'],
		[[5789, 5791], 'disallowed'],
		[[5792, 5866], 'valid'],
		[[5867, 5872], 'valid', [], 'NV8'],
		[[5873, 5880], 'valid'],
		[[5881, 5887], 'disallowed'],
		[[5888, 5900], 'valid'],
		[[5901, 5901], 'disallowed'],
		[[5902, 5908], 'valid'],
		[[5909, 5919], 'disallowed'],
		[[5920, 5940], 'valid'],
		[[5941, 5942], 'valid', [], 'NV8'],
		[[5943, 5951], 'disallowed'],
		[[5952, 5971], 'valid'],
		[[5972, 5983], 'disallowed'],
		[[5984, 5996], 'valid'],
		[[5997, 5997], 'disallowed'],
		[[5998, 6e3], 'valid'],
		[[6001, 6001], 'disallowed'],
		[[6002, 6003], 'valid'],
		[[6004, 6015], 'disallowed'],
		[[6016, 6067], 'valid'],
		[[6068, 6069], 'disallowed'],
		[[6070, 6099], 'valid'],
		[[6100, 6102], 'valid', [], 'NV8'],
		[[6103, 6103], 'valid'],
		[[6104, 6107], 'valid', [], 'NV8'],
		[[6108, 6108], 'valid'],
		[[6109, 6109], 'valid'],
		[[6110, 6111], 'disallowed'],
		[[6112, 6121], 'valid'],
		[[6122, 6127], 'disallowed'],
		[[6128, 6137], 'valid', [], 'NV8'],
		[[6138, 6143], 'disallowed'],
		[[6144, 6149], 'valid', [], 'NV8'],
		[[6150, 6150], 'disallowed'],
		[[6151, 6154], 'valid', [], 'NV8'],
		[[6155, 6157], 'ignored'],
		[[6158, 6158], 'disallowed'],
		[[6159, 6159], 'disallowed'],
		[[6160, 6169], 'valid'],
		[[6170, 6175], 'disallowed'],
		[[6176, 6263], 'valid'],
		[[6264, 6271], 'disallowed'],
		[[6272, 6313], 'valid'],
		[[6314, 6314], 'valid'],
		[[6315, 6319], 'disallowed'],
		[[6320, 6389], 'valid'],
		[[6390, 6399], 'disallowed'],
		[[6400, 6428], 'valid'],
		[[6429, 6430], 'valid'],
		[[6431, 6431], 'disallowed'],
		[[6432, 6443], 'valid'],
		[[6444, 6447], 'disallowed'],
		[[6448, 6459], 'valid'],
		[[6460, 6463], 'disallowed'],
		[[6464, 6464], 'valid', [], 'NV8'],
		[[6465, 6467], 'disallowed'],
		[[6468, 6469], 'valid', [], 'NV8'],
		[[6470, 6509], 'valid'],
		[[6510, 6511], 'disallowed'],
		[[6512, 6516], 'valid'],
		[[6517, 6527], 'disallowed'],
		[[6528, 6569], 'valid'],
		[[6570, 6571], 'valid'],
		[[6572, 6575], 'disallowed'],
		[[6576, 6601], 'valid'],
		[[6602, 6607], 'disallowed'],
		[[6608, 6617], 'valid'],
		[[6618, 6618], 'valid', [], 'XV8'],
		[[6619, 6621], 'disallowed'],
		[[6622, 6623], 'valid', [], 'NV8'],
		[[6624, 6655], 'valid', [], 'NV8'],
		[[6656, 6683], 'valid'],
		[[6684, 6685], 'disallowed'],
		[[6686, 6687], 'valid', [], 'NV8'],
		[[6688, 6750], 'valid'],
		[[6751, 6751], 'disallowed'],
		[[6752, 6780], 'valid'],
		[[6781, 6782], 'disallowed'],
		[[6783, 6793], 'valid'],
		[[6794, 6799], 'disallowed'],
		[[6800, 6809], 'valid'],
		[[6810, 6815], 'disallowed'],
		[[6816, 6822], 'valid', [], 'NV8'],
		[[6823, 6823], 'valid'],
		[[6824, 6829], 'valid', [], 'NV8'],
		[[6830, 6831], 'disallowed'],
		[[6832, 6845], 'valid'],
		[[6846, 6846], 'valid', [], 'NV8'],
		[[6847, 6911], 'disallowed'],
		[[6912, 6987], 'valid'],
		[[6988, 6991], 'disallowed'],
		[[6992, 7001], 'valid'],
		[[7002, 7018], 'valid', [], 'NV8'],
		[[7019, 7027], 'valid'],
		[[7028, 7036], 'valid', [], 'NV8'],
		[[7037, 7039], 'disallowed'],
		[[7040, 7082], 'valid'],
		[[7083, 7085], 'valid'],
		[[7086, 7097], 'valid'],
		[[7098, 7103], 'valid'],
		[[7104, 7155], 'valid'],
		[[7156, 7163], 'disallowed'],
		[[7164, 7167], 'valid', [], 'NV8'],
		[[7168, 7223], 'valid'],
		[[7224, 7226], 'disallowed'],
		[[7227, 7231], 'valid', [], 'NV8'],
		[[7232, 7241], 'valid'],
		[[7242, 7244], 'disallowed'],
		[[7245, 7293], 'valid'],
		[[7294, 7295], 'valid', [], 'NV8'],
		[[7296, 7359], 'disallowed'],
		[[7360, 7367], 'valid', [], 'NV8'],
		[[7368, 7375], 'disallowed'],
		[[7376, 7378], 'valid'],
		[[7379, 7379], 'valid', [], 'NV8'],
		[[7380, 7410], 'valid'],
		[[7411, 7414], 'valid'],
		[[7415, 7415], 'disallowed'],
		[[7416, 7417], 'valid'],
		[[7418, 7423], 'disallowed'],
		[[7424, 7467], 'valid'],
		[[7468, 7468], 'mapped', [97]],
		[[7469, 7469], 'mapped', [230]],
		[[7470, 7470], 'mapped', [98]],
		[[7471, 7471], 'valid'],
		[[7472, 7472], 'mapped', [100]],
		[[7473, 7473], 'mapped', [101]],
		[[7474, 7474], 'mapped', [477]],
		[[7475, 7475], 'mapped', [103]],
		[[7476, 7476], 'mapped', [104]],
		[[7477, 7477], 'mapped', [105]],
		[[7478, 7478], 'mapped', [106]],
		[[7479, 7479], 'mapped', [107]],
		[[7480, 7480], 'mapped', [108]],
		[[7481, 7481], 'mapped', [109]],
		[[7482, 7482], 'mapped', [110]],
		[[7483, 7483], 'valid'],
		[[7484, 7484], 'mapped', [111]],
		[[7485, 7485], 'mapped', [547]],
		[[7486, 7486], 'mapped', [112]],
		[[7487, 7487], 'mapped', [114]],
		[[7488, 7488], 'mapped', [116]],
		[[7489, 7489], 'mapped', [117]],
		[[7490, 7490], 'mapped', [119]],
		[[7491, 7491], 'mapped', [97]],
		[[7492, 7492], 'mapped', [592]],
		[[7493, 7493], 'mapped', [593]],
		[[7494, 7494], 'mapped', [7426]],
		[[7495, 7495], 'mapped', [98]],
		[[7496, 7496], 'mapped', [100]],
		[[7497, 7497], 'mapped', [101]],
		[[7498, 7498], 'mapped', [601]],
		[[7499, 7499], 'mapped', [603]],
		[[7500, 7500], 'mapped', [604]],
		[[7501, 7501], 'mapped', [103]],
		[[7502, 7502], 'valid'],
		[[7503, 7503], 'mapped', [107]],
		[[7504, 7504], 'mapped', [109]],
		[[7505, 7505], 'mapped', [331]],
		[[7506, 7506], 'mapped', [111]],
		[[7507, 7507], 'mapped', [596]],
		[[7508, 7508], 'mapped', [7446]],
		[[7509, 7509], 'mapped', [7447]],
		[[7510, 7510], 'mapped', [112]],
		[[7511, 7511], 'mapped', [116]],
		[[7512, 7512], 'mapped', [117]],
		[[7513, 7513], 'mapped', [7453]],
		[[7514, 7514], 'mapped', [623]],
		[[7515, 7515], 'mapped', [118]],
		[[7516, 7516], 'mapped', [7461]],
		[[7517, 7517], 'mapped', [946]],
		[[7518, 7518], 'mapped', [947]],
		[[7519, 7519], 'mapped', [948]],
		[[7520, 7520], 'mapped', [966]],
		[[7521, 7521], 'mapped', [967]],
		[[7522, 7522], 'mapped', [105]],
		[[7523, 7523], 'mapped', [114]],
		[[7524, 7524], 'mapped', [117]],
		[[7525, 7525], 'mapped', [118]],
		[[7526, 7526], 'mapped', [946]],
		[[7527, 7527], 'mapped', [947]],
		[[7528, 7528], 'mapped', [961]],
		[[7529, 7529], 'mapped', [966]],
		[[7530, 7530], 'mapped', [967]],
		[[7531, 7531], 'valid'],
		[[7532, 7543], 'valid'],
		[[7544, 7544], 'mapped', [1085]],
		[[7545, 7578], 'valid'],
		[[7579, 7579], 'mapped', [594]],
		[[7580, 7580], 'mapped', [99]],
		[[7581, 7581], 'mapped', [597]],
		[[7582, 7582], 'mapped', [240]],
		[[7583, 7583], 'mapped', [604]],
		[[7584, 7584], 'mapped', [102]],
		[[7585, 7585], 'mapped', [607]],
		[[7586, 7586], 'mapped', [609]],
		[[7587, 7587], 'mapped', [613]],
		[[7588, 7588], 'mapped', [616]],
		[[7589, 7589], 'mapped', [617]],
		[[7590, 7590], 'mapped', [618]],
		[[7591, 7591], 'mapped', [7547]],
		[[7592, 7592], 'mapped', [669]],
		[[7593, 7593], 'mapped', [621]],
		[[7594, 7594], 'mapped', [7557]],
		[[7595, 7595], 'mapped', [671]],
		[[7596, 7596], 'mapped', [625]],
		[[7597, 7597], 'mapped', [624]],
		[[7598, 7598], 'mapped', [626]],
		[[7599, 7599], 'mapped', [627]],
		[[7600, 7600], 'mapped', [628]],
		[[7601, 7601], 'mapped', [629]],
		[[7602, 7602], 'mapped', [632]],
		[[7603, 7603], 'mapped', [642]],
		[[7604, 7604], 'mapped', [643]],
		[[7605, 7605], 'mapped', [427]],
		[[7606, 7606], 'mapped', [649]],
		[[7607, 7607], 'mapped', [650]],
		[[7608, 7608], 'mapped', [7452]],
		[[7609, 7609], 'mapped', [651]],
		[[7610, 7610], 'mapped', [652]],
		[[7611, 7611], 'mapped', [122]],
		[[7612, 7612], 'mapped', [656]],
		[[7613, 7613], 'mapped', [657]],
		[[7614, 7614], 'mapped', [658]],
		[[7615, 7615], 'mapped', [952]],
		[[7616, 7619], 'valid'],
		[[7620, 7626], 'valid'],
		[[7627, 7654], 'valid'],
		[[7655, 7669], 'valid'],
		[[7670, 7675], 'disallowed'],
		[[7676, 7676], 'valid'],
		[[7677, 7677], 'valid'],
		[[7678, 7679], 'valid'],
		[[7680, 7680], 'mapped', [7681]],
		[[7681, 7681], 'valid'],
		[[7682, 7682], 'mapped', [7683]],
		[[7683, 7683], 'valid'],
		[[7684, 7684], 'mapped', [7685]],
		[[7685, 7685], 'valid'],
		[[7686, 7686], 'mapped', [7687]],
		[[7687, 7687], 'valid'],
		[[7688, 7688], 'mapped', [7689]],
		[[7689, 7689], 'valid'],
		[[7690, 7690], 'mapped', [7691]],
		[[7691, 7691], 'valid'],
		[[7692, 7692], 'mapped', [7693]],
		[[7693, 7693], 'valid'],
		[[7694, 7694], 'mapped', [7695]],
		[[7695, 7695], 'valid'],
		[[7696, 7696], 'mapped', [7697]],
		[[7697, 7697], 'valid'],
		[[7698, 7698], 'mapped', [7699]],
		[[7699, 7699], 'valid'],
		[[7700, 7700], 'mapped', [7701]],
		[[7701, 7701], 'valid'],
		[[7702, 7702], 'mapped', [7703]],
		[[7703, 7703], 'valid'],
		[[7704, 7704], 'mapped', [7705]],
		[[7705, 7705], 'valid'],
		[[7706, 7706], 'mapped', [7707]],
		[[7707, 7707], 'valid'],
		[[7708, 7708], 'mapped', [7709]],
		[[7709, 7709], 'valid'],
		[[7710, 7710], 'mapped', [7711]],
		[[7711, 7711], 'valid'],
		[[7712, 7712], 'mapped', [7713]],
		[[7713, 7713], 'valid'],
		[[7714, 7714], 'mapped', [7715]],
		[[7715, 7715], 'valid'],
		[[7716, 7716], 'mapped', [7717]],
		[[7717, 7717], 'valid'],
		[[7718, 7718], 'mapped', [7719]],
		[[7719, 7719], 'valid'],
		[[7720, 7720], 'mapped', [7721]],
		[[7721, 7721], 'valid'],
		[[7722, 7722], 'mapped', [7723]],
		[[7723, 7723], 'valid'],
		[[7724, 7724], 'mapped', [7725]],
		[[7725, 7725], 'valid'],
		[[7726, 7726], 'mapped', [7727]],
		[[7727, 7727], 'valid'],
		[[7728, 7728], 'mapped', [7729]],
		[[7729, 7729], 'valid'],
		[[7730, 7730], 'mapped', [7731]],
		[[7731, 7731], 'valid'],
		[[7732, 7732], 'mapped', [7733]],
		[[7733, 7733], 'valid'],
		[[7734, 7734], 'mapped', [7735]],
		[[7735, 7735], 'valid'],
		[[7736, 7736], 'mapped', [7737]],
		[[7737, 7737], 'valid'],
		[[7738, 7738], 'mapped', [7739]],
		[[7739, 7739], 'valid'],
		[[7740, 7740], 'mapped', [7741]],
		[[7741, 7741], 'valid'],
		[[7742, 7742], 'mapped', [7743]],
		[[7743, 7743], 'valid'],
		[[7744, 7744], 'mapped', [7745]],
		[[7745, 7745], 'valid'],
		[[7746, 7746], 'mapped', [7747]],
		[[7747, 7747], 'valid'],
		[[7748, 7748], 'mapped', [7749]],
		[[7749, 7749], 'valid'],
		[[7750, 7750], 'mapped', [7751]],
		[[7751, 7751], 'valid'],
		[[7752, 7752], 'mapped', [7753]],
		[[7753, 7753], 'valid'],
		[[7754, 7754], 'mapped', [7755]],
		[[7755, 7755], 'valid'],
		[[7756, 7756], 'mapped', [7757]],
		[[7757, 7757], 'valid'],
		[[7758, 7758], 'mapped', [7759]],
		[[7759, 7759], 'valid'],
		[[7760, 7760], 'mapped', [7761]],
		[[7761, 7761], 'valid'],
		[[7762, 7762], 'mapped', [7763]],
		[[7763, 7763], 'valid'],
		[[7764, 7764], 'mapped', [7765]],
		[[7765, 7765], 'valid'],
		[[7766, 7766], 'mapped', [7767]],
		[[7767, 7767], 'valid'],
		[[7768, 7768], 'mapped', [7769]],
		[[7769, 7769], 'valid'],
		[[7770, 7770], 'mapped', [7771]],
		[[7771, 7771], 'valid'],
		[[7772, 7772], 'mapped', [7773]],
		[[7773, 7773], 'valid'],
		[[7774, 7774], 'mapped', [7775]],
		[[7775, 7775], 'valid'],
		[[7776, 7776], 'mapped', [7777]],
		[[7777, 7777], 'valid'],
		[[7778, 7778], 'mapped', [7779]],
		[[7779, 7779], 'valid'],
		[[7780, 7780], 'mapped', [7781]],
		[[7781, 7781], 'valid'],
		[[7782, 7782], 'mapped', [7783]],
		[[7783, 7783], 'valid'],
		[[7784, 7784], 'mapped', [7785]],
		[[7785, 7785], 'valid'],
		[[7786, 7786], 'mapped', [7787]],
		[[7787, 7787], 'valid'],
		[[7788, 7788], 'mapped', [7789]],
		[[7789, 7789], 'valid'],
		[[7790, 7790], 'mapped', [7791]],
		[[7791, 7791], 'valid'],
		[[7792, 7792], 'mapped', [7793]],
		[[7793, 7793], 'valid'],
		[[7794, 7794], 'mapped', [7795]],
		[[7795, 7795], 'valid'],
		[[7796, 7796], 'mapped', [7797]],
		[[7797, 7797], 'valid'],
		[[7798, 7798], 'mapped', [7799]],
		[[7799, 7799], 'valid'],
		[[7800, 7800], 'mapped', [7801]],
		[[7801, 7801], 'valid'],
		[[7802, 7802], 'mapped', [7803]],
		[[7803, 7803], 'valid'],
		[[7804, 7804], 'mapped', [7805]],
		[[7805, 7805], 'valid'],
		[[7806, 7806], 'mapped', [7807]],
		[[7807, 7807], 'valid'],
		[[7808, 7808], 'mapped', [7809]],
		[[7809, 7809], 'valid'],
		[[7810, 7810], 'mapped', [7811]],
		[[7811, 7811], 'valid'],
		[[7812, 7812], 'mapped', [7813]],
		[[7813, 7813], 'valid'],
		[[7814, 7814], 'mapped', [7815]],
		[[7815, 7815], 'valid'],
		[[7816, 7816], 'mapped', [7817]],
		[[7817, 7817], 'valid'],
		[[7818, 7818], 'mapped', [7819]],
		[[7819, 7819], 'valid'],
		[[7820, 7820], 'mapped', [7821]],
		[[7821, 7821], 'valid'],
		[[7822, 7822], 'mapped', [7823]],
		[[7823, 7823], 'valid'],
		[[7824, 7824], 'mapped', [7825]],
		[[7825, 7825], 'valid'],
		[[7826, 7826], 'mapped', [7827]],
		[[7827, 7827], 'valid'],
		[[7828, 7828], 'mapped', [7829]],
		[[7829, 7833], 'valid'],
		[[7834, 7834], 'mapped', [97, 702]],
		[[7835, 7835], 'mapped', [7777]],
		[[7836, 7837], 'valid'],
		[[7838, 7838], 'mapped', [115, 115]],
		[[7839, 7839], 'valid'],
		[[7840, 7840], 'mapped', [7841]],
		[[7841, 7841], 'valid'],
		[[7842, 7842], 'mapped', [7843]],
		[[7843, 7843], 'valid'],
		[[7844, 7844], 'mapped', [7845]],
		[[7845, 7845], 'valid'],
		[[7846, 7846], 'mapped', [7847]],
		[[7847, 7847], 'valid'],
		[[7848, 7848], 'mapped', [7849]],
		[[7849, 7849], 'valid'],
		[[7850, 7850], 'mapped', [7851]],
		[[7851, 7851], 'valid'],
		[[7852, 7852], 'mapped', [7853]],
		[[7853, 7853], 'valid'],
		[[7854, 7854], 'mapped', [7855]],
		[[7855, 7855], 'valid'],
		[[7856, 7856], 'mapped', [7857]],
		[[7857, 7857], 'valid'],
		[[7858, 7858], 'mapped', [7859]],
		[[7859, 7859], 'valid'],
		[[7860, 7860], 'mapped', [7861]],
		[[7861, 7861], 'valid'],
		[[7862, 7862], 'mapped', [7863]],
		[[7863, 7863], 'valid'],
		[[7864, 7864], 'mapped', [7865]],
		[[7865, 7865], 'valid'],
		[[7866, 7866], 'mapped', [7867]],
		[[7867, 7867], 'valid'],
		[[7868, 7868], 'mapped', [7869]],
		[[7869, 7869], 'valid'],
		[[7870, 7870], 'mapped', [7871]],
		[[7871, 7871], 'valid'],
		[[7872, 7872], 'mapped', [7873]],
		[[7873, 7873], 'valid'],
		[[7874, 7874], 'mapped', [7875]],
		[[7875, 7875], 'valid'],
		[[7876, 7876], 'mapped', [7877]],
		[[7877, 7877], 'valid'],
		[[7878, 7878], 'mapped', [7879]],
		[[7879, 7879], 'valid'],
		[[7880, 7880], 'mapped', [7881]],
		[[7881, 7881], 'valid'],
		[[7882, 7882], 'mapped', [7883]],
		[[7883, 7883], 'valid'],
		[[7884, 7884], 'mapped', [7885]],
		[[7885, 7885], 'valid'],
		[[7886, 7886], 'mapped', [7887]],
		[[7887, 7887], 'valid'],
		[[7888, 7888], 'mapped', [7889]],
		[[7889, 7889], 'valid'],
		[[7890, 7890], 'mapped', [7891]],
		[[7891, 7891], 'valid'],
		[[7892, 7892], 'mapped', [7893]],
		[[7893, 7893], 'valid'],
		[[7894, 7894], 'mapped', [7895]],
		[[7895, 7895], 'valid'],
		[[7896, 7896], 'mapped', [7897]],
		[[7897, 7897], 'valid'],
		[[7898, 7898], 'mapped', [7899]],
		[[7899, 7899], 'valid'],
		[[7900, 7900], 'mapped', [7901]],
		[[7901, 7901], 'valid'],
		[[7902, 7902], 'mapped', [7903]],
		[[7903, 7903], 'valid'],
		[[7904, 7904], 'mapped', [7905]],
		[[7905, 7905], 'valid'],
		[[7906, 7906], 'mapped', [7907]],
		[[7907, 7907], 'valid'],
		[[7908, 7908], 'mapped', [7909]],
		[[7909, 7909], 'valid'],
		[[7910, 7910], 'mapped', [7911]],
		[[7911, 7911], 'valid'],
		[[7912, 7912], 'mapped', [7913]],
		[[7913, 7913], 'valid'],
		[[7914, 7914], 'mapped', [7915]],
		[[7915, 7915], 'valid'],
		[[7916, 7916], 'mapped', [7917]],
		[[7917, 7917], 'valid'],
		[[7918, 7918], 'mapped', [7919]],
		[[7919, 7919], 'valid'],
		[[7920, 7920], 'mapped', [7921]],
		[[7921, 7921], 'valid'],
		[[7922, 7922], 'mapped', [7923]],
		[[7923, 7923], 'valid'],
		[[7924, 7924], 'mapped', [7925]],
		[[7925, 7925], 'valid'],
		[[7926, 7926], 'mapped', [7927]],
		[[7927, 7927], 'valid'],
		[[7928, 7928], 'mapped', [7929]],
		[[7929, 7929], 'valid'],
		[[7930, 7930], 'mapped', [7931]],
		[[7931, 7931], 'valid'],
		[[7932, 7932], 'mapped', [7933]],
		[[7933, 7933], 'valid'],
		[[7934, 7934], 'mapped', [7935]],
		[[7935, 7935], 'valid'],
		[[7936, 7943], 'valid'],
		[[7944, 7944], 'mapped', [7936]],
		[[7945, 7945], 'mapped', [7937]],
		[[7946, 7946], 'mapped', [7938]],
		[[7947, 7947], 'mapped', [7939]],
		[[7948, 7948], 'mapped', [7940]],
		[[7949, 7949], 'mapped', [7941]],
		[[7950, 7950], 'mapped', [7942]],
		[[7951, 7951], 'mapped', [7943]],
		[[7952, 7957], 'valid'],
		[[7958, 7959], 'disallowed'],
		[[7960, 7960], 'mapped', [7952]],
		[[7961, 7961], 'mapped', [7953]],
		[[7962, 7962], 'mapped', [7954]],
		[[7963, 7963], 'mapped', [7955]],
		[[7964, 7964], 'mapped', [7956]],
		[[7965, 7965], 'mapped', [7957]],
		[[7966, 7967], 'disallowed'],
		[[7968, 7975], 'valid'],
		[[7976, 7976], 'mapped', [7968]],
		[[7977, 7977], 'mapped', [7969]],
		[[7978, 7978], 'mapped', [7970]],
		[[7979, 7979], 'mapped', [7971]],
		[[7980, 7980], 'mapped', [7972]],
		[[7981, 7981], 'mapped', [7973]],
		[[7982, 7982], 'mapped', [7974]],
		[[7983, 7983], 'mapped', [7975]],
		[[7984, 7991], 'valid'],
		[[7992, 7992], 'mapped', [7984]],
		[[7993, 7993], 'mapped', [7985]],
		[[7994, 7994], 'mapped', [7986]],
		[[7995, 7995], 'mapped', [7987]],
		[[7996, 7996], 'mapped', [7988]],
		[[7997, 7997], 'mapped', [7989]],
		[[7998, 7998], 'mapped', [7990]],
		[[7999, 7999], 'mapped', [7991]],
		[[8e3, 8005], 'valid'],
		[[8006, 8007], 'disallowed'],
		[[8008, 8008], 'mapped', [8e3]],
		[[8009, 8009], 'mapped', [8001]],
		[[8010, 8010], 'mapped', [8002]],
		[[8011, 8011], 'mapped', [8003]],
		[[8012, 8012], 'mapped', [8004]],
		[[8013, 8013], 'mapped', [8005]],
		[[8014, 8015], 'disallowed'],
		[[8016, 8023], 'valid'],
		[[8024, 8024], 'disallowed'],
		[[8025, 8025], 'mapped', [8017]],
		[[8026, 8026], 'disallowed'],
		[[8027, 8027], 'mapped', [8019]],
		[[8028, 8028], 'disallowed'],
		[[8029, 8029], 'mapped', [8021]],
		[[8030, 8030], 'disallowed'],
		[[8031, 8031], 'mapped', [8023]],
		[[8032, 8039], 'valid'],
		[[8040, 8040], 'mapped', [8032]],
		[[8041, 8041], 'mapped', [8033]],
		[[8042, 8042], 'mapped', [8034]],
		[[8043, 8043], 'mapped', [8035]],
		[[8044, 8044], 'mapped', [8036]],
		[[8045, 8045], 'mapped', [8037]],
		[[8046, 8046], 'mapped', [8038]],
		[[8047, 8047], 'mapped', [8039]],
		[[8048, 8048], 'valid'],
		[[8049, 8049], 'mapped', [940]],
		[[8050, 8050], 'valid'],
		[[8051, 8051], 'mapped', [941]],
		[[8052, 8052], 'valid'],
		[[8053, 8053], 'mapped', [942]],
		[[8054, 8054], 'valid'],
		[[8055, 8055], 'mapped', [943]],
		[[8056, 8056], 'valid'],
		[[8057, 8057], 'mapped', [972]],
		[[8058, 8058], 'valid'],
		[[8059, 8059], 'mapped', [973]],
		[[8060, 8060], 'valid'],
		[[8061, 8061], 'mapped', [974]],
		[[8062, 8063], 'disallowed'],
		[[8064, 8064], 'mapped', [7936, 953]],
		[[8065, 8065], 'mapped', [7937, 953]],
		[[8066, 8066], 'mapped', [7938, 953]],
		[[8067, 8067], 'mapped', [7939, 953]],
		[[8068, 8068], 'mapped', [7940, 953]],
		[[8069, 8069], 'mapped', [7941, 953]],
		[[8070, 8070], 'mapped', [7942, 953]],
		[[8071, 8071], 'mapped', [7943, 953]],
		[[8072, 8072], 'mapped', [7936, 953]],
		[[8073, 8073], 'mapped', [7937, 953]],
		[[8074, 8074], 'mapped', [7938, 953]],
		[[8075, 8075], 'mapped', [7939, 953]],
		[[8076, 8076], 'mapped', [7940, 953]],
		[[8077, 8077], 'mapped', [7941, 953]],
		[[8078, 8078], 'mapped', [7942, 953]],
		[[8079, 8079], 'mapped', [7943, 953]],
		[[8080, 8080], 'mapped', [7968, 953]],
		[[8081, 8081], 'mapped', [7969, 953]],
		[[8082, 8082], 'mapped', [7970, 953]],
		[[8083, 8083], 'mapped', [7971, 953]],
		[[8084, 8084], 'mapped', [7972, 953]],
		[[8085, 8085], 'mapped', [7973, 953]],
		[[8086, 8086], 'mapped', [7974, 953]],
		[[8087, 8087], 'mapped', [7975, 953]],
		[[8088, 8088], 'mapped', [7968, 953]],
		[[8089, 8089], 'mapped', [7969, 953]],
		[[8090, 8090], 'mapped', [7970, 953]],
		[[8091, 8091], 'mapped', [7971, 953]],
		[[8092, 8092], 'mapped', [7972, 953]],
		[[8093, 8093], 'mapped', [7973, 953]],
		[[8094, 8094], 'mapped', [7974, 953]],
		[[8095, 8095], 'mapped', [7975, 953]],
		[[8096, 8096], 'mapped', [8032, 953]],
		[[8097, 8097], 'mapped', [8033, 953]],
		[[8098, 8098], 'mapped', [8034, 953]],
		[[8099, 8099], 'mapped', [8035, 953]],
		[[8100, 8100], 'mapped', [8036, 953]],
		[[8101, 8101], 'mapped', [8037, 953]],
		[[8102, 8102], 'mapped', [8038, 953]],
		[[8103, 8103], 'mapped', [8039, 953]],
		[[8104, 8104], 'mapped', [8032, 953]],
		[[8105, 8105], 'mapped', [8033, 953]],
		[[8106, 8106], 'mapped', [8034, 953]],
		[[8107, 8107], 'mapped', [8035, 953]],
		[[8108, 8108], 'mapped', [8036, 953]],
		[[8109, 8109], 'mapped', [8037, 953]],
		[[8110, 8110], 'mapped', [8038, 953]],
		[[8111, 8111], 'mapped', [8039, 953]],
		[[8112, 8113], 'valid'],
		[[8114, 8114], 'mapped', [8048, 953]],
		[[8115, 8115], 'mapped', [945, 953]],
		[[8116, 8116], 'mapped', [940, 953]],
		[[8117, 8117], 'disallowed'],
		[[8118, 8118], 'valid'],
		[[8119, 8119], 'mapped', [8118, 953]],
		[[8120, 8120], 'mapped', [8112]],
		[[8121, 8121], 'mapped', [8113]],
		[[8122, 8122], 'mapped', [8048]],
		[[8123, 8123], 'mapped', [940]],
		[[8124, 8124], 'mapped', [945, 953]],
		[[8125, 8125], 'disallowed_STD3_mapped', [32, 787]],
		[[8126, 8126], 'mapped', [953]],
		[[8127, 8127], 'disallowed_STD3_mapped', [32, 787]],
		[[8128, 8128], 'disallowed_STD3_mapped', [32, 834]],
		[[8129, 8129], 'disallowed_STD3_mapped', [32, 776, 834]],
		[[8130, 8130], 'mapped', [8052, 953]],
		[[8131, 8131], 'mapped', [951, 953]],
		[[8132, 8132], 'mapped', [942, 953]],
		[[8133, 8133], 'disallowed'],
		[[8134, 8134], 'valid'],
		[[8135, 8135], 'mapped', [8134, 953]],
		[[8136, 8136], 'mapped', [8050]],
		[[8137, 8137], 'mapped', [941]],
		[[8138, 8138], 'mapped', [8052]],
		[[8139, 8139], 'mapped', [942]],
		[[8140, 8140], 'mapped', [951, 953]],
		[[8141, 8141], 'disallowed_STD3_mapped', [32, 787, 768]],
		[[8142, 8142], 'disallowed_STD3_mapped', [32, 787, 769]],
		[[8143, 8143], 'disallowed_STD3_mapped', [32, 787, 834]],
		[[8144, 8146], 'valid'],
		[[8147, 8147], 'mapped', [912]],
		[[8148, 8149], 'disallowed'],
		[[8150, 8151], 'valid'],
		[[8152, 8152], 'mapped', [8144]],
		[[8153, 8153], 'mapped', [8145]],
		[[8154, 8154], 'mapped', [8054]],
		[[8155, 8155], 'mapped', [943]],
		[[8156, 8156], 'disallowed'],
		[[8157, 8157], 'disallowed_STD3_mapped', [32, 788, 768]],
		[[8158, 8158], 'disallowed_STD3_mapped', [32, 788, 769]],
		[[8159, 8159], 'disallowed_STD3_mapped', [32, 788, 834]],
		[[8160, 8162], 'valid'],
		[[8163, 8163], 'mapped', [944]],
		[[8164, 8167], 'valid'],
		[[8168, 8168], 'mapped', [8160]],
		[[8169, 8169], 'mapped', [8161]],
		[[8170, 8170], 'mapped', [8058]],
		[[8171, 8171], 'mapped', [973]],
		[[8172, 8172], 'mapped', [8165]],
		[[8173, 8173], 'disallowed_STD3_mapped', [32, 776, 768]],
		[[8174, 8174], 'disallowed_STD3_mapped', [32, 776, 769]],
		[[8175, 8175], 'disallowed_STD3_mapped', [96]],
		[[8176, 8177], 'disallowed'],
		[[8178, 8178], 'mapped', [8060, 953]],
		[[8179, 8179], 'mapped', [969, 953]],
		[[8180, 8180], 'mapped', [974, 953]],
		[[8181, 8181], 'disallowed'],
		[[8182, 8182], 'valid'],
		[[8183, 8183], 'mapped', [8182, 953]],
		[[8184, 8184], 'mapped', [8056]],
		[[8185, 8185], 'mapped', [972]],
		[[8186, 8186], 'mapped', [8060]],
		[[8187, 8187], 'mapped', [974]],
		[[8188, 8188], 'mapped', [969, 953]],
		[[8189, 8189], 'disallowed_STD3_mapped', [32, 769]],
		[[8190, 8190], 'disallowed_STD3_mapped', [32, 788]],
		[[8191, 8191], 'disallowed'],
		[[8192, 8202], 'disallowed_STD3_mapped', [32]],
		[[8203, 8203], 'ignored'],
		[[8204, 8205], 'deviation', []],
		[[8206, 8207], 'disallowed'],
		[[8208, 8208], 'valid', [], 'NV8'],
		[[8209, 8209], 'mapped', [8208]],
		[[8210, 8214], 'valid', [], 'NV8'],
		[[8215, 8215], 'disallowed_STD3_mapped', [32, 819]],
		[[8216, 8227], 'valid', [], 'NV8'],
		[[8228, 8230], 'disallowed'],
		[[8231, 8231], 'valid', [], 'NV8'],
		[[8232, 8238], 'disallowed'],
		[[8239, 8239], 'disallowed_STD3_mapped', [32]],
		[[8240, 8242], 'valid', [], 'NV8'],
		[[8243, 8243], 'mapped', [8242, 8242]],
		[[8244, 8244], 'mapped', [8242, 8242, 8242]],
		[[8245, 8245], 'valid', [], 'NV8'],
		[[8246, 8246], 'mapped', [8245, 8245]],
		[[8247, 8247], 'mapped', [8245, 8245, 8245]],
		[[8248, 8251], 'valid', [], 'NV8'],
		[[8252, 8252], 'disallowed_STD3_mapped', [33, 33]],
		[[8253, 8253], 'valid', [], 'NV8'],
		[[8254, 8254], 'disallowed_STD3_mapped', [32, 773]],
		[[8255, 8262], 'valid', [], 'NV8'],
		[[8263, 8263], 'disallowed_STD3_mapped', [63, 63]],
		[[8264, 8264], 'disallowed_STD3_mapped', [63, 33]],
		[[8265, 8265], 'disallowed_STD3_mapped', [33, 63]],
		[[8266, 8269], 'valid', [], 'NV8'],
		[[8270, 8274], 'valid', [], 'NV8'],
		[[8275, 8276], 'valid', [], 'NV8'],
		[[8277, 8278], 'valid', [], 'NV8'],
		[[8279, 8279], 'mapped', [8242, 8242, 8242, 8242]],
		[[8280, 8286], 'valid', [], 'NV8'],
		[[8287, 8287], 'disallowed_STD3_mapped', [32]],
		[[8288, 8288], 'ignored'],
		[[8289, 8291], 'disallowed'],
		[[8292, 8292], 'ignored'],
		[[8293, 8293], 'disallowed'],
		[[8294, 8297], 'disallowed'],
		[[8298, 8303], 'disallowed'],
		[[8304, 8304], 'mapped', [48]],
		[[8305, 8305], 'mapped', [105]],
		[[8306, 8307], 'disallowed'],
		[[8308, 8308], 'mapped', [52]],
		[[8309, 8309], 'mapped', [53]],
		[[8310, 8310], 'mapped', [54]],
		[[8311, 8311], 'mapped', [55]],
		[[8312, 8312], 'mapped', [56]],
		[[8313, 8313], 'mapped', [57]],
		[[8314, 8314], 'disallowed_STD3_mapped', [43]],
		[[8315, 8315], 'mapped', [8722]],
		[[8316, 8316], 'disallowed_STD3_mapped', [61]],
		[[8317, 8317], 'disallowed_STD3_mapped', [40]],
		[[8318, 8318], 'disallowed_STD3_mapped', [41]],
		[[8319, 8319], 'mapped', [110]],
		[[8320, 8320], 'mapped', [48]],
		[[8321, 8321], 'mapped', [49]],
		[[8322, 8322], 'mapped', [50]],
		[[8323, 8323], 'mapped', [51]],
		[[8324, 8324], 'mapped', [52]],
		[[8325, 8325], 'mapped', [53]],
		[[8326, 8326], 'mapped', [54]],
		[[8327, 8327], 'mapped', [55]],
		[[8328, 8328], 'mapped', [56]],
		[[8329, 8329], 'mapped', [57]],
		[[8330, 8330], 'disallowed_STD3_mapped', [43]],
		[[8331, 8331], 'mapped', [8722]],
		[[8332, 8332], 'disallowed_STD3_mapped', [61]],
		[[8333, 8333], 'disallowed_STD3_mapped', [40]],
		[[8334, 8334], 'disallowed_STD3_mapped', [41]],
		[[8335, 8335], 'disallowed'],
		[[8336, 8336], 'mapped', [97]],
		[[8337, 8337], 'mapped', [101]],
		[[8338, 8338], 'mapped', [111]],
		[[8339, 8339], 'mapped', [120]],
		[[8340, 8340], 'mapped', [601]],
		[[8341, 8341], 'mapped', [104]],
		[[8342, 8342], 'mapped', [107]],
		[[8343, 8343], 'mapped', [108]],
		[[8344, 8344], 'mapped', [109]],
		[[8345, 8345], 'mapped', [110]],
		[[8346, 8346], 'mapped', [112]],
		[[8347, 8347], 'mapped', [115]],
		[[8348, 8348], 'mapped', [116]],
		[[8349, 8351], 'disallowed'],
		[[8352, 8359], 'valid', [], 'NV8'],
		[[8360, 8360], 'mapped', [114, 115]],
		[[8361, 8362], 'valid', [], 'NV8'],
		[[8363, 8363], 'valid', [], 'NV8'],
		[[8364, 8364], 'valid', [], 'NV8'],
		[[8365, 8367], 'valid', [], 'NV8'],
		[[8368, 8369], 'valid', [], 'NV8'],
		[[8370, 8373], 'valid', [], 'NV8'],
		[[8374, 8376], 'valid', [], 'NV8'],
		[[8377, 8377], 'valid', [], 'NV8'],
		[[8378, 8378], 'valid', [], 'NV8'],
		[[8379, 8381], 'valid', [], 'NV8'],
		[[8382, 8382], 'valid', [], 'NV8'],
		[[8383, 8399], 'disallowed'],
		[[8400, 8417], 'valid', [], 'NV8'],
		[[8418, 8419], 'valid', [], 'NV8'],
		[[8420, 8426], 'valid', [], 'NV8'],
		[[8427, 8427], 'valid', [], 'NV8'],
		[[8428, 8431], 'valid', [], 'NV8'],
		[[8432, 8432], 'valid', [], 'NV8'],
		[[8433, 8447], 'disallowed'],
		[[8448, 8448], 'disallowed_STD3_mapped', [97, 47, 99]],
		[[8449, 8449], 'disallowed_STD3_mapped', [97, 47, 115]],
		[[8450, 8450], 'mapped', [99]],
		[[8451, 8451], 'mapped', [176, 99]],
		[[8452, 8452], 'valid', [], 'NV8'],
		[[8453, 8453], 'disallowed_STD3_mapped', [99, 47, 111]],
		[[8454, 8454], 'disallowed_STD3_mapped', [99, 47, 117]],
		[[8455, 8455], 'mapped', [603]],
		[[8456, 8456], 'valid', [], 'NV8'],
		[[8457, 8457], 'mapped', [176, 102]],
		[[8458, 8458], 'mapped', [103]],
		[[8459, 8462], 'mapped', [104]],
		[[8463, 8463], 'mapped', [295]],
		[[8464, 8465], 'mapped', [105]],
		[[8466, 8467], 'mapped', [108]],
		[[8468, 8468], 'valid', [], 'NV8'],
		[[8469, 8469], 'mapped', [110]],
		[[8470, 8470], 'mapped', [110, 111]],
		[[8471, 8472], 'valid', [], 'NV8'],
		[[8473, 8473], 'mapped', [112]],
		[[8474, 8474], 'mapped', [113]],
		[[8475, 8477], 'mapped', [114]],
		[[8478, 8479], 'valid', [], 'NV8'],
		[[8480, 8480], 'mapped', [115, 109]],
		[[8481, 8481], 'mapped', [116, 101, 108]],
		[[8482, 8482], 'mapped', [116, 109]],
		[[8483, 8483], 'valid', [], 'NV8'],
		[[8484, 8484], 'mapped', [122]],
		[[8485, 8485], 'valid', [], 'NV8'],
		[[8486, 8486], 'mapped', [969]],
		[[8487, 8487], 'valid', [], 'NV8'],
		[[8488, 8488], 'mapped', [122]],
		[[8489, 8489], 'valid', [], 'NV8'],
		[[8490, 8490], 'mapped', [107]],
		[[8491, 8491], 'mapped', [229]],
		[[8492, 8492], 'mapped', [98]],
		[[8493, 8493], 'mapped', [99]],
		[[8494, 8494], 'valid', [], 'NV8'],
		[[8495, 8496], 'mapped', [101]],
		[[8497, 8497], 'mapped', [102]],
		[[8498, 8498], 'disallowed'],
		[[8499, 8499], 'mapped', [109]],
		[[8500, 8500], 'mapped', [111]],
		[[8501, 8501], 'mapped', [1488]],
		[[8502, 8502], 'mapped', [1489]],
		[[8503, 8503], 'mapped', [1490]],
		[[8504, 8504], 'mapped', [1491]],
		[[8505, 8505], 'mapped', [105]],
		[[8506, 8506], 'valid', [], 'NV8'],
		[[8507, 8507], 'mapped', [102, 97, 120]],
		[[8508, 8508], 'mapped', [960]],
		[[8509, 8510], 'mapped', [947]],
		[[8511, 8511], 'mapped', [960]],
		[[8512, 8512], 'mapped', [8721]],
		[[8513, 8516], 'valid', [], 'NV8'],
		[[8517, 8518], 'mapped', [100]],
		[[8519, 8519], 'mapped', [101]],
		[[8520, 8520], 'mapped', [105]],
		[[8521, 8521], 'mapped', [106]],
		[[8522, 8523], 'valid', [], 'NV8'],
		[[8524, 8524], 'valid', [], 'NV8'],
		[[8525, 8525], 'valid', [], 'NV8'],
		[[8526, 8526], 'valid'],
		[[8527, 8527], 'valid', [], 'NV8'],
		[[8528, 8528], 'mapped', [49, 8260, 55]],
		[[8529, 8529], 'mapped', [49, 8260, 57]],
		[[8530, 8530], 'mapped', [49, 8260, 49, 48]],
		[[8531, 8531], 'mapped', [49, 8260, 51]],
		[[8532, 8532], 'mapped', [50, 8260, 51]],
		[[8533, 8533], 'mapped', [49, 8260, 53]],
		[[8534, 8534], 'mapped', [50, 8260, 53]],
		[[8535, 8535], 'mapped', [51, 8260, 53]],
		[[8536, 8536], 'mapped', [52, 8260, 53]],
		[[8537, 8537], 'mapped', [49, 8260, 54]],
		[[8538, 8538], 'mapped', [53, 8260, 54]],
		[[8539, 8539], 'mapped', [49, 8260, 56]],
		[[8540, 8540], 'mapped', [51, 8260, 56]],
		[[8541, 8541], 'mapped', [53, 8260, 56]],
		[[8542, 8542], 'mapped', [55, 8260, 56]],
		[[8543, 8543], 'mapped', [49, 8260]],
		[[8544, 8544], 'mapped', [105]],
		[[8545, 8545], 'mapped', [105, 105]],
		[[8546, 8546], 'mapped', [105, 105, 105]],
		[[8547, 8547], 'mapped', [105, 118]],
		[[8548, 8548], 'mapped', [118]],
		[[8549, 8549], 'mapped', [118, 105]],
		[[8550, 8550], 'mapped', [118, 105, 105]],
		[[8551, 8551], 'mapped', [118, 105, 105, 105]],
		[[8552, 8552], 'mapped', [105, 120]],
		[[8553, 8553], 'mapped', [120]],
		[[8554, 8554], 'mapped', [120, 105]],
		[[8555, 8555], 'mapped', [120, 105, 105]],
		[[8556, 8556], 'mapped', [108]],
		[[8557, 8557], 'mapped', [99]],
		[[8558, 8558], 'mapped', [100]],
		[[8559, 8559], 'mapped', [109]],
		[[8560, 8560], 'mapped', [105]],
		[[8561, 8561], 'mapped', [105, 105]],
		[[8562, 8562], 'mapped', [105, 105, 105]],
		[[8563, 8563], 'mapped', [105, 118]],
		[[8564, 8564], 'mapped', [118]],
		[[8565, 8565], 'mapped', [118, 105]],
		[[8566, 8566], 'mapped', [118, 105, 105]],
		[[8567, 8567], 'mapped', [118, 105, 105, 105]],
		[[8568, 8568], 'mapped', [105, 120]],
		[[8569, 8569], 'mapped', [120]],
		[[8570, 8570], 'mapped', [120, 105]],
		[[8571, 8571], 'mapped', [120, 105, 105]],
		[[8572, 8572], 'mapped', [108]],
		[[8573, 8573], 'mapped', [99]],
		[[8574, 8574], 'mapped', [100]],
		[[8575, 8575], 'mapped', [109]],
		[[8576, 8578], 'valid', [], 'NV8'],
		[[8579, 8579], 'disallowed'],
		[[8580, 8580], 'valid'],
		[[8581, 8584], 'valid', [], 'NV8'],
		[[8585, 8585], 'mapped', [48, 8260, 51]],
		[[8586, 8587], 'valid', [], 'NV8'],
		[[8588, 8591], 'disallowed'],
		[[8592, 8682], 'valid', [], 'NV8'],
		[[8683, 8691], 'valid', [], 'NV8'],
		[[8692, 8703], 'valid', [], 'NV8'],
		[[8704, 8747], 'valid', [], 'NV8'],
		[[8748, 8748], 'mapped', [8747, 8747]],
		[[8749, 8749], 'mapped', [8747, 8747, 8747]],
		[[8750, 8750], 'valid', [], 'NV8'],
		[[8751, 8751], 'mapped', [8750, 8750]],
		[[8752, 8752], 'mapped', [8750, 8750, 8750]],
		[[8753, 8799], 'valid', [], 'NV8'],
		[[8800, 8800], 'disallowed_STD3_valid'],
		[[8801, 8813], 'valid', [], 'NV8'],
		[[8814, 8815], 'disallowed_STD3_valid'],
		[[8816, 8945], 'valid', [], 'NV8'],
		[[8946, 8959], 'valid', [], 'NV8'],
		[[8960, 8960], 'valid', [], 'NV8'],
		[[8961, 8961], 'valid', [], 'NV8'],
		[[8962, 9e3], 'valid', [], 'NV8'],
		[[9001, 9001], 'mapped', [12296]],
		[[9002, 9002], 'mapped', [12297]],
		[[9003, 9082], 'valid', [], 'NV8'],
		[[9083, 9083], 'valid', [], 'NV8'],
		[[9084, 9084], 'valid', [], 'NV8'],
		[[9085, 9114], 'valid', [], 'NV8'],
		[[9115, 9166], 'valid', [], 'NV8'],
		[[9167, 9168], 'valid', [], 'NV8'],
		[[9169, 9179], 'valid', [], 'NV8'],
		[[9180, 9191], 'valid', [], 'NV8'],
		[[9192, 9192], 'valid', [], 'NV8'],
		[[9193, 9203], 'valid', [], 'NV8'],
		[[9204, 9210], 'valid', [], 'NV8'],
		[[9211, 9215], 'disallowed'],
		[[9216, 9252], 'valid', [], 'NV8'],
		[[9253, 9254], 'valid', [], 'NV8'],
		[[9255, 9279], 'disallowed'],
		[[9280, 9290], 'valid', [], 'NV8'],
		[[9291, 9311], 'disallowed'],
		[[9312, 9312], 'mapped', [49]],
		[[9313, 9313], 'mapped', [50]],
		[[9314, 9314], 'mapped', [51]],
		[[9315, 9315], 'mapped', [52]],
		[[9316, 9316], 'mapped', [53]],
		[[9317, 9317], 'mapped', [54]],
		[[9318, 9318], 'mapped', [55]],
		[[9319, 9319], 'mapped', [56]],
		[[9320, 9320], 'mapped', [57]],
		[[9321, 9321], 'mapped', [49, 48]],
		[[9322, 9322], 'mapped', [49, 49]],
		[[9323, 9323], 'mapped', [49, 50]],
		[[9324, 9324], 'mapped', [49, 51]],
		[[9325, 9325], 'mapped', [49, 52]],
		[[9326, 9326], 'mapped', [49, 53]],
		[[9327, 9327], 'mapped', [49, 54]],
		[[9328, 9328], 'mapped', [49, 55]],
		[[9329, 9329], 'mapped', [49, 56]],
		[[9330, 9330], 'mapped', [49, 57]],
		[[9331, 9331], 'mapped', [50, 48]],
		[[9332, 9332], 'disallowed_STD3_mapped', [40, 49, 41]],
		[[9333, 9333], 'disallowed_STD3_mapped', [40, 50, 41]],
		[[9334, 9334], 'disallowed_STD3_mapped', [40, 51, 41]],
		[[9335, 9335], 'disallowed_STD3_mapped', [40, 52, 41]],
		[[9336, 9336], 'disallowed_STD3_mapped', [40, 53, 41]],
		[[9337, 9337], 'disallowed_STD3_mapped', [40, 54, 41]],
		[[9338, 9338], 'disallowed_STD3_mapped', [40, 55, 41]],
		[[9339, 9339], 'disallowed_STD3_mapped', [40, 56, 41]],
		[[9340, 9340], 'disallowed_STD3_mapped', [40, 57, 41]],
		[[9341, 9341], 'disallowed_STD3_mapped', [40, 49, 48, 41]],
		[[9342, 9342], 'disallowed_STD3_mapped', [40, 49, 49, 41]],
		[[9343, 9343], 'disallowed_STD3_mapped', [40, 49, 50, 41]],
		[[9344, 9344], 'disallowed_STD3_mapped', [40, 49, 51, 41]],
		[[9345, 9345], 'disallowed_STD3_mapped', [40, 49, 52, 41]],
		[[9346, 9346], 'disallowed_STD3_mapped', [40, 49, 53, 41]],
		[[9347, 9347], 'disallowed_STD3_mapped', [40, 49, 54, 41]],
		[[9348, 9348], 'disallowed_STD3_mapped', [40, 49, 55, 41]],
		[[9349, 9349], 'disallowed_STD3_mapped', [40, 49, 56, 41]],
		[[9350, 9350], 'disallowed_STD3_mapped', [40, 49, 57, 41]],
		[[9351, 9351], 'disallowed_STD3_mapped', [40, 50, 48, 41]],
		[[9352, 9371], 'disallowed'],
		[[9372, 9372], 'disallowed_STD3_mapped', [40, 97, 41]],
		[[9373, 9373], 'disallowed_STD3_mapped', [40, 98, 41]],
		[[9374, 9374], 'disallowed_STD3_mapped', [40, 99, 41]],
		[[9375, 9375], 'disallowed_STD3_mapped', [40, 100, 41]],
		[[9376, 9376], 'disallowed_STD3_mapped', [40, 101, 41]],
		[[9377, 9377], 'disallowed_STD3_mapped', [40, 102, 41]],
		[[9378, 9378], 'disallowed_STD3_mapped', [40, 103, 41]],
		[[9379, 9379], 'disallowed_STD3_mapped', [40, 104, 41]],
		[[9380, 9380], 'disallowed_STD3_mapped', [40, 105, 41]],
		[[9381, 9381], 'disallowed_STD3_mapped', [40, 106, 41]],
		[[9382, 9382], 'disallowed_STD3_mapped', [40, 107, 41]],
		[[9383, 9383], 'disallowed_STD3_mapped', [40, 108, 41]],
		[[9384, 9384], 'disallowed_STD3_mapped', [40, 109, 41]],
		[[9385, 9385], 'disallowed_STD3_mapped', [40, 110, 41]],
		[[9386, 9386], 'disallowed_STD3_mapped', [40, 111, 41]],
		[[9387, 9387], 'disallowed_STD3_mapped', [40, 112, 41]],
		[[9388, 9388], 'disallowed_STD3_mapped', [40, 113, 41]],
		[[9389, 9389], 'disallowed_STD3_mapped', [40, 114, 41]],
		[[9390, 9390], 'disallowed_STD3_mapped', [40, 115, 41]],
		[[9391, 9391], 'disallowed_STD3_mapped', [40, 116, 41]],
		[[9392, 9392], 'disallowed_STD3_mapped', [40, 117, 41]],
		[[9393, 9393], 'disallowed_STD3_mapped', [40, 118, 41]],
		[[9394, 9394], 'disallowed_STD3_mapped', [40, 119, 41]],
		[[9395, 9395], 'disallowed_STD3_mapped', [40, 120, 41]],
		[[9396, 9396], 'disallowed_STD3_mapped', [40, 121, 41]],
		[[9397, 9397], 'disallowed_STD3_mapped', [40, 122, 41]],
		[[9398, 9398], 'mapped', [97]],
		[[9399, 9399], 'mapped', [98]],
		[[9400, 9400], 'mapped', [99]],
		[[9401, 9401], 'mapped', [100]],
		[[9402, 9402], 'mapped', [101]],
		[[9403, 9403], 'mapped', [102]],
		[[9404, 9404], 'mapped', [103]],
		[[9405, 9405], 'mapped', [104]],
		[[9406, 9406], 'mapped', [105]],
		[[9407, 9407], 'mapped', [106]],
		[[9408, 9408], 'mapped', [107]],
		[[9409, 9409], 'mapped', [108]],
		[[9410, 9410], 'mapped', [109]],
		[[9411, 9411], 'mapped', [110]],
		[[9412, 9412], 'mapped', [111]],
		[[9413, 9413], 'mapped', [112]],
		[[9414, 9414], 'mapped', [113]],
		[[9415, 9415], 'mapped', [114]],
		[[9416, 9416], 'mapped', [115]],
		[[9417, 9417], 'mapped', [116]],
		[[9418, 9418], 'mapped', [117]],
		[[9419, 9419], 'mapped', [118]],
		[[9420, 9420], 'mapped', [119]],
		[[9421, 9421], 'mapped', [120]],
		[[9422, 9422], 'mapped', [121]],
		[[9423, 9423], 'mapped', [122]],
		[[9424, 9424], 'mapped', [97]],
		[[9425, 9425], 'mapped', [98]],
		[[9426, 9426], 'mapped', [99]],
		[[9427, 9427], 'mapped', [100]],
		[[9428, 9428], 'mapped', [101]],
		[[9429, 9429], 'mapped', [102]],
		[[9430, 9430], 'mapped', [103]],
		[[9431, 9431], 'mapped', [104]],
		[[9432, 9432], 'mapped', [105]],
		[[9433, 9433], 'mapped', [106]],
		[[9434, 9434], 'mapped', [107]],
		[[9435, 9435], 'mapped', [108]],
		[[9436, 9436], 'mapped', [109]],
		[[9437, 9437], 'mapped', [110]],
		[[9438, 9438], 'mapped', [111]],
		[[9439, 9439], 'mapped', [112]],
		[[9440, 9440], 'mapped', [113]],
		[[9441, 9441], 'mapped', [114]],
		[[9442, 9442], 'mapped', [115]],
		[[9443, 9443], 'mapped', [116]],
		[[9444, 9444], 'mapped', [117]],
		[[9445, 9445], 'mapped', [118]],
		[[9446, 9446], 'mapped', [119]],
		[[9447, 9447], 'mapped', [120]],
		[[9448, 9448], 'mapped', [121]],
		[[9449, 9449], 'mapped', [122]],
		[[9450, 9450], 'mapped', [48]],
		[[9451, 9470], 'valid', [], 'NV8'],
		[[9471, 9471], 'valid', [], 'NV8'],
		[[9472, 9621], 'valid', [], 'NV8'],
		[[9622, 9631], 'valid', [], 'NV8'],
		[[9632, 9711], 'valid', [], 'NV8'],
		[[9712, 9719], 'valid', [], 'NV8'],
		[[9720, 9727], 'valid', [], 'NV8'],
		[[9728, 9747], 'valid', [], 'NV8'],
		[[9748, 9749], 'valid', [], 'NV8'],
		[[9750, 9751], 'valid', [], 'NV8'],
		[[9752, 9752], 'valid', [], 'NV8'],
		[[9753, 9753], 'valid', [], 'NV8'],
		[[9754, 9839], 'valid', [], 'NV8'],
		[[9840, 9841], 'valid', [], 'NV8'],
		[[9842, 9853], 'valid', [], 'NV8'],
		[[9854, 9855], 'valid', [], 'NV8'],
		[[9856, 9865], 'valid', [], 'NV8'],
		[[9866, 9873], 'valid', [], 'NV8'],
		[[9874, 9884], 'valid', [], 'NV8'],
		[[9885, 9885], 'valid', [], 'NV8'],
		[[9886, 9887], 'valid', [], 'NV8'],
		[[9888, 9889], 'valid', [], 'NV8'],
		[[9890, 9905], 'valid', [], 'NV8'],
		[[9906, 9906], 'valid', [], 'NV8'],
		[[9907, 9916], 'valid', [], 'NV8'],
		[[9917, 9919], 'valid', [], 'NV8'],
		[[9920, 9923], 'valid', [], 'NV8'],
		[[9924, 9933], 'valid', [], 'NV8'],
		[[9934, 9934], 'valid', [], 'NV8'],
		[[9935, 9953], 'valid', [], 'NV8'],
		[[9954, 9954], 'valid', [], 'NV8'],
		[[9955, 9955], 'valid', [], 'NV8'],
		[[9956, 9959], 'valid', [], 'NV8'],
		[[9960, 9983], 'valid', [], 'NV8'],
		[[9984, 9984], 'valid', [], 'NV8'],
		[[9985, 9988], 'valid', [], 'NV8'],
		[[9989, 9989], 'valid', [], 'NV8'],
		[[9990, 9993], 'valid', [], 'NV8'],
		[[9994, 9995], 'valid', [], 'NV8'],
		[[9996, 10023], 'valid', [], 'NV8'],
		[[10024, 10024], 'valid', [], 'NV8'],
		[[10025, 10059], 'valid', [], 'NV8'],
		[[10060, 10060], 'valid', [], 'NV8'],
		[[10061, 10061], 'valid', [], 'NV8'],
		[[10062, 10062], 'valid', [], 'NV8'],
		[[10063, 10066], 'valid', [], 'NV8'],
		[[10067, 10069], 'valid', [], 'NV8'],
		[[10070, 10070], 'valid', [], 'NV8'],
		[[10071, 10071], 'valid', [], 'NV8'],
		[[10072, 10078], 'valid', [], 'NV8'],
		[[10079, 10080], 'valid', [], 'NV8'],
		[[10081, 10087], 'valid', [], 'NV8'],
		[[10088, 10101], 'valid', [], 'NV8'],
		[[10102, 10132], 'valid', [], 'NV8'],
		[[10133, 10135], 'valid', [], 'NV8'],
		[[10136, 10159], 'valid', [], 'NV8'],
		[[10160, 10160], 'valid', [], 'NV8'],
		[[10161, 10174], 'valid', [], 'NV8'],
		[[10175, 10175], 'valid', [], 'NV8'],
		[[10176, 10182], 'valid', [], 'NV8'],
		[[10183, 10186], 'valid', [], 'NV8'],
		[[10187, 10187], 'valid', [], 'NV8'],
		[[10188, 10188], 'valid', [], 'NV8'],
		[[10189, 10189], 'valid', [], 'NV8'],
		[[10190, 10191], 'valid', [], 'NV8'],
		[[10192, 10219], 'valid', [], 'NV8'],
		[[10220, 10223], 'valid', [], 'NV8'],
		[[10224, 10239], 'valid', [], 'NV8'],
		[[10240, 10495], 'valid', [], 'NV8'],
		[[10496, 10763], 'valid', [], 'NV8'],
		[[10764, 10764], 'mapped', [8747, 8747, 8747, 8747]],
		[[10765, 10867], 'valid', [], 'NV8'],
		[[10868, 10868], 'disallowed_STD3_mapped', [58, 58, 61]],
		[[10869, 10869], 'disallowed_STD3_mapped', [61, 61]],
		[[10870, 10870], 'disallowed_STD3_mapped', [61, 61, 61]],
		[[10871, 10971], 'valid', [], 'NV8'],
		[[10972, 10972], 'mapped', [10973, 824]],
		[[10973, 11007], 'valid', [], 'NV8'],
		[[11008, 11021], 'valid', [], 'NV8'],
		[[11022, 11027], 'valid', [], 'NV8'],
		[[11028, 11034], 'valid', [], 'NV8'],
		[[11035, 11039], 'valid', [], 'NV8'],
		[[11040, 11043], 'valid', [], 'NV8'],
		[[11044, 11084], 'valid', [], 'NV8'],
		[[11085, 11087], 'valid', [], 'NV8'],
		[[11088, 11092], 'valid', [], 'NV8'],
		[[11093, 11097], 'valid', [], 'NV8'],
		[[11098, 11123], 'valid', [], 'NV8'],
		[[11124, 11125], 'disallowed'],
		[[11126, 11157], 'valid', [], 'NV8'],
		[[11158, 11159], 'disallowed'],
		[[11160, 11193], 'valid', [], 'NV8'],
		[[11194, 11196], 'disallowed'],
		[[11197, 11208], 'valid', [], 'NV8'],
		[[11209, 11209], 'disallowed'],
		[[11210, 11217], 'valid', [], 'NV8'],
		[[11218, 11243], 'disallowed'],
		[[11244, 11247], 'valid', [], 'NV8'],
		[[11248, 11263], 'disallowed'],
		[[11264, 11264], 'mapped', [11312]],
		[[11265, 11265], 'mapped', [11313]],
		[[11266, 11266], 'mapped', [11314]],
		[[11267, 11267], 'mapped', [11315]],
		[[11268, 11268], 'mapped', [11316]],
		[[11269, 11269], 'mapped', [11317]],
		[[11270, 11270], 'mapped', [11318]],
		[[11271, 11271], 'mapped', [11319]],
		[[11272, 11272], 'mapped', [11320]],
		[[11273, 11273], 'mapped', [11321]],
		[[11274, 11274], 'mapped', [11322]],
		[[11275, 11275], 'mapped', [11323]],
		[[11276, 11276], 'mapped', [11324]],
		[[11277, 11277], 'mapped', [11325]],
		[[11278, 11278], 'mapped', [11326]],
		[[11279, 11279], 'mapped', [11327]],
		[[11280, 11280], 'mapped', [11328]],
		[[11281, 11281], 'mapped', [11329]],
		[[11282, 11282], 'mapped', [11330]],
		[[11283, 11283], 'mapped', [11331]],
		[[11284, 11284], 'mapped', [11332]],
		[[11285, 11285], 'mapped', [11333]],
		[[11286, 11286], 'mapped', [11334]],
		[[11287, 11287], 'mapped', [11335]],
		[[11288, 11288], 'mapped', [11336]],
		[[11289, 11289], 'mapped', [11337]],
		[[11290, 11290], 'mapped', [11338]],
		[[11291, 11291], 'mapped', [11339]],
		[[11292, 11292], 'mapped', [11340]],
		[[11293, 11293], 'mapped', [11341]],
		[[11294, 11294], 'mapped', [11342]],
		[[11295, 11295], 'mapped', [11343]],
		[[11296, 11296], 'mapped', [11344]],
		[[11297, 11297], 'mapped', [11345]],
		[[11298, 11298], 'mapped', [11346]],
		[[11299, 11299], 'mapped', [11347]],
		[[11300, 11300], 'mapped', [11348]],
		[[11301, 11301], 'mapped', [11349]],
		[[11302, 11302], 'mapped', [11350]],
		[[11303, 11303], 'mapped', [11351]],
		[[11304, 11304], 'mapped', [11352]],
		[[11305, 11305], 'mapped', [11353]],
		[[11306, 11306], 'mapped', [11354]],
		[[11307, 11307], 'mapped', [11355]],
		[[11308, 11308], 'mapped', [11356]],
		[[11309, 11309], 'mapped', [11357]],
		[[11310, 11310], 'mapped', [11358]],
		[[11311, 11311], 'disallowed'],
		[[11312, 11358], 'valid'],
		[[11359, 11359], 'disallowed'],
		[[11360, 11360], 'mapped', [11361]],
		[[11361, 11361], 'valid'],
		[[11362, 11362], 'mapped', [619]],
		[[11363, 11363], 'mapped', [7549]],
		[[11364, 11364], 'mapped', [637]],
		[[11365, 11366], 'valid'],
		[[11367, 11367], 'mapped', [11368]],
		[[11368, 11368], 'valid'],
		[[11369, 11369], 'mapped', [11370]],
		[[11370, 11370], 'valid'],
		[[11371, 11371], 'mapped', [11372]],
		[[11372, 11372], 'valid'],
		[[11373, 11373], 'mapped', [593]],
		[[11374, 11374], 'mapped', [625]],
		[[11375, 11375], 'mapped', [592]],
		[[11376, 11376], 'mapped', [594]],
		[[11377, 11377], 'valid'],
		[[11378, 11378], 'mapped', [11379]],
		[[11379, 11379], 'valid'],
		[[11380, 11380], 'valid'],
		[[11381, 11381], 'mapped', [11382]],
		[[11382, 11383], 'valid'],
		[[11384, 11387], 'valid'],
		[[11388, 11388], 'mapped', [106]],
		[[11389, 11389], 'mapped', [118]],
		[[11390, 11390], 'mapped', [575]],
		[[11391, 11391], 'mapped', [576]],
		[[11392, 11392], 'mapped', [11393]],
		[[11393, 11393], 'valid'],
		[[11394, 11394], 'mapped', [11395]],
		[[11395, 11395], 'valid'],
		[[11396, 11396], 'mapped', [11397]],
		[[11397, 11397], 'valid'],
		[[11398, 11398], 'mapped', [11399]],
		[[11399, 11399], 'valid'],
		[[11400, 11400], 'mapped', [11401]],
		[[11401, 11401], 'valid'],
		[[11402, 11402], 'mapped', [11403]],
		[[11403, 11403], 'valid'],
		[[11404, 11404], 'mapped', [11405]],
		[[11405, 11405], 'valid'],
		[[11406, 11406], 'mapped', [11407]],
		[[11407, 11407], 'valid'],
		[[11408, 11408], 'mapped', [11409]],
		[[11409, 11409], 'valid'],
		[[11410, 11410], 'mapped', [11411]],
		[[11411, 11411], 'valid'],
		[[11412, 11412], 'mapped', [11413]],
		[[11413, 11413], 'valid'],
		[[11414, 11414], 'mapped', [11415]],
		[[11415, 11415], 'valid'],
		[[11416, 11416], 'mapped', [11417]],
		[[11417, 11417], 'valid'],
		[[11418, 11418], 'mapped', [11419]],
		[[11419, 11419], 'valid'],
		[[11420, 11420], 'mapped', [11421]],
		[[11421, 11421], 'valid'],
		[[11422, 11422], 'mapped', [11423]],
		[[11423, 11423], 'valid'],
		[[11424, 11424], 'mapped', [11425]],
		[[11425, 11425], 'valid'],
		[[11426, 11426], 'mapped', [11427]],
		[[11427, 11427], 'valid'],
		[[11428, 11428], 'mapped', [11429]],
		[[11429, 11429], 'valid'],
		[[11430, 11430], 'mapped', [11431]],
		[[11431, 11431], 'valid'],
		[[11432, 11432], 'mapped', [11433]],
		[[11433, 11433], 'valid'],
		[[11434, 11434], 'mapped', [11435]],
		[[11435, 11435], 'valid'],
		[[11436, 11436], 'mapped', [11437]],
		[[11437, 11437], 'valid'],
		[[11438, 11438], 'mapped', [11439]],
		[[11439, 11439], 'valid'],
		[[11440, 11440], 'mapped', [11441]],
		[[11441, 11441], 'valid'],
		[[11442, 11442], 'mapped', [11443]],
		[[11443, 11443], 'valid'],
		[[11444, 11444], 'mapped', [11445]],
		[[11445, 11445], 'valid'],
		[[11446, 11446], 'mapped', [11447]],
		[[11447, 11447], 'valid'],
		[[11448, 11448], 'mapped', [11449]],
		[[11449, 11449], 'valid'],
		[[11450, 11450], 'mapped', [11451]],
		[[11451, 11451], 'valid'],
		[[11452, 11452], 'mapped', [11453]],
		[[11453, 11453], 'valid'],
		[[11454, 11454], 'mapped', [11455]],
		[[11455, 11455], 'valid'],
		[[11456, 11456], 'mapped', [11457]],
		[[11457, 11457], 'valid'],
		[[11458, 11458], 'mapped', [11459]],
		[[11459, 11459], 'valid'],
		[[11460, 11460], 'mapped', [11461]],
		[[11461, 11461], 'valid'],
		[[11462, 11462], 'mapped', [11463]],
		[[11463, 11463], 'valid'],
		[[11464, 11464], 'mapped', [11465]],
		[[11465, 11465], 'valid'],
		[[11466, 11466], 'mapped', [11467]],
		[[11467, 11467], 'valid'],
		[[11468, 11468], 'mapped', [11469]],
		[[11469, 11469], 'valid'],
		[[11470, 11470], 'mapped', [11471]],
		[[11471, 11471], 'valid'],
		[[11472, 11472], 'mapped', [11473]],
		[[11473, 11473], 'valid'],
		[[11474, 11474], 'mapped', [11475]],
		[[11475, 11475], 'valid'],
		[[11476, 11476], 'mapped', [11477]],
		[[11477, 11477], 'valid'],
		[[11478, 11478], 'mapped', [11479]],
		[[11479, 11479], 'valid'],
		[[11480, 11480], 'mapped', [11481]],
		[[11481, 11481], 'valid'],
		[[11482, 11482], 'mapped', [11483]],
		[[11483, 11483], 'valid'],
		[[11484, 11484], 'mapped', [11485]],
		[[11485, 11485], 'valid'],
		[[11486, 11486], 'mapped', [11487]],
		[[11487, 11487], 'valid'],
		[[11488, 11488], 'mapped', [11489]],
		[[11489, 11489], 'valid'],
		[[11490, 11490], 'mapped', [11491]],
		[[11491, 11492], 'valid'],
		[[11493, 11498], 'valid', [], 'NV8'],
		[[11499, 11499], 'mapped', [11500]],
		[[11500, 11500], 'valid'],
		[[11501, 11501], 'mapped', [11502]],
		[[11502, 11505], 'valid'],
		[[11506, 11506], 'mapped', [11507]],
		[[11507, 11507], 'valid'],
		[[11508, 11512], 'disallowed'],
		[[11513, 11519], 'valid', [], 'NV8'],
		[[11520, 11557], 'valid'],
		[[11558, 11558], 'disallowed'],
		[[11559, 11559], 'valid'],
		[[11560, 11564], 'disallowed'],
		[[11565, 11565], 'valid'],
		[[11566, 11567], 'disallowed'],
		[[11568, 11621], 'valid'],
		[[11622, 11623], 'valid'],
		[[11624, 11630], 'disallowed'],
		[[11631, 11631], 'mapped', [11617]],
		[[11632, 11632], 'valid', [], 'NV8'],
		[[11633, 11646], 'disallowed'],
		[[11647, 11647], 'valid'],
		[[11648, 11670], 'valid'],
		[[11671, 11679], 'disallowed'],
		[[11680, 11686], 'valid'],
		[[11687, 11687], 'disallowed'],
		[[11688, 11694], 'valid'],
		[[11695, 11695], 'disallowed'],
		[[11696, 11702], 'valid'],
		[[11703, 11703], 'disallowed'],
		[[11704, 11710], 'valid'],
		[[11711, 11711], 'disallowed'],
		[[11712, 11718], 'valid'],
		[[11719, 11719], 'disallowed'],
		[[11720, 11726], 'valid'],
		[[11727, 11727], 'disallowed'],
		[[11728, 11734], 'valid'],
		[[11735, 11735], 'disallowed'],
		[[11736, 11742], 'valid'],
		[[11743, 11743], 'disallowed'],
		[[11744, 11775], 'valid'],
		[[11776, 11799], 'valid', [], 'NV8'],
		[[11800, 11803], 'valid', [], 'NV8'],
		[[11804, 11805], 'valid', [], 'NV8'],
		[[11806, 11822], 'valid', [], 'NV8'],
		[[11823, 11823], 'valid'],
		[[11824, 11824], 'valid', [], 'NV8'],
		[[11825, 11825], 'valid', [], 'NV8'],
		[[11826, 11835], 'valid', [], 'NV8'],
		[[11836, 11842], 'valid', [], 'NV8'],
		[[11843, 11903], 'disallowed'],
		[[11904, 11929], 'valid', [], 'NV8'],
		[[11930, 11930], 'disallowed'],
		[[11931, 11934], 'valid', [], 'NV8'],
		[[11935, 11935], 'mapped', [27597]],
		[[11936, 12018], 'valid', [], 'NV8'],
		[[12019, 12019], 'mapped', [40863]],
		[[12020, 12031], 'disallowed'],
		[[12032, 12032], 'mapped', [19968]],
		[[12033, 12033], 'mapped', [20008]],
		[[12034, 12034], 'mapped', [20022]],
		[[12035, 12035], 'mapped', [20031]],
		[[12036, 12036], 'mapped', [20057]],
		[[12037, 12037], 'mapped', [20101]],
		[[12038, 12038], 'mapped', [20108]],
		[[12039, 12039], 'mapped', [20128]],
		[[12040, 12040], 'mapped', [20154]],
		[[12041, 12041], 'mapped', [20799]],
		[[12042, 12042], 'mapped', [20837]],
		[[12043, 12043], 'mapped', [20843]],
		[[12044, 12044], 'mapped', [20866]],
		[[12045, 12045], 'mapped', [20886]],
		[[12046, 12046], 'mapped', [20907]],
		[[12047, 12047], 'mapped', [20960]],
		[[12048, 12048], 'mapped', [20981]],
		[[12049, 12049], 'mapped', [20992]],
		[[12050, 12050], 'mapped', [21147]],
		[[12051, 12051], 'mapped', [21241]],
		[[12052, 12052], 'mapped', [21269]],
		[[12053, 12053], 'mapped', [21274]],
		[[12054, 12054], 'mapped', [21304]],
		[[12055, 12055], 'mapped', [21313]],
		[[12056, 12056], 'mapped', [21340]],
		[[12057, 12057], 'mapped', [21353]],
		[[12058, 12058], 'mapped', [21378]],
		[[12059, 12059], 'mapped', [21430]],
		[[12060, 12060], 'mapped', [21448]],
		[[12061, 12061], 'mapped', [21475]],
		[[12062, 12062], 'mapped', [22231]],
		[[12063, 12063], 'mapped', [22303]],
		[[12064, 12064], 'mapped', [22763]],
		[[12065, 12065], 'mapped', [22786]],
		[[12066, 12066], 'mapped', [22794]],
		[[12067, 12067], 'mapped', [22805]],
		[[12068, 12068], 'mapped', [22823]],
		[[12069, 12069], 'mapped', [22899]],
		[[12070, 12070], 'mapped', [23376]],
		[[12071, 12071], 'mapped', [23424]],
		[[12072, 12072], 'mapped', [23544]],
		[[12073, 12073], 'mapped', [23567]],
		[[12074, 12074], 'mapped', [23586]],
		[[12075, 12075], 'mapped', [23608]],
		[[12076, 12076], 'mapped', [23662]],
		[[12077, 12077], 'mapped', [23665]],
		[[12078, 12078], 'mapped', [24027]],
		[[12079, 12079], 'mapped', [24037]],
		[[12080, 12080], 'mapped', [24049]],
		[[12081, 12081], 'mapped', [24062]],
		[[12082, 12082], 'mapped', [24178]],
		[[12083, 12083], 'mapped', [24186]],
		[[12084, 12084], 'mapped', [24191]],
		[[12085, 12085], 'mapped', [24308]],
		[[12086, 12086], 'mapped', [24318]],
		[[12087, 12087], 'mapped', [24331]],
		[[12088, 12088], 'mapped', [24339]],
		[[12089, 12089], 'mapped', [24400]],
		[[12090, 12090], 'mapped', [24417]],
		[[12091, 12091], 'mapped', [24435]],
		[[12092, 12092], 'mapped', [24515]],
		[[12093, 12093], 'mapped', [25096]],
		[[12094, 12094], 'mapped', [25142]],
		[[12095, 12095], 'mapped', [25163]],
		[[12096, 12096], 'mapped', [25903]],
		[[12097, 12097], 'mapped', [25908]],
		[[12098, 12098], 'mapped', [25991]],
		[[12099, 12099], 'mapped', [26007]],
		[[12100, 12100], 'mapped', [26020]],
		[[12101, 12101], 'mapped', [26041]],
		[[12102, 12102], 'mapped', [26080]],
		[[12103, 12103], 'mapped', [26085]],
		[[12104, 12104], 'mapped', [26352]],
		[[12105, 12105], 'mapped', [26376]],
		[[12106, 12106], 'mapped', [26408]],
		[[12107, 12107], 'mapped', [27424]],
		[[12108, 12108], 'mapped', [27490]],
		[[12109, 12109], 'mapped', [27513]],
		[[12110, 12110], 'mapped', [27571]],
		[[12111, 12111], 'mapped', [27595]],
		[[12112, 12112], 'mapped', [27604]],
		[[12113, 12113], 'mapped', [27611]],
		[[12114, 12114], 'mapped', [27663]],
		[[12115, 12115], 'mapped', [27668]],
		[[12116, 12116], 'mapped', [27700]],
		[[12117, 12117], 'mapped', [28779]],
		[[12118, 12118], 'mapped', [29226]],
		[[12119, 12119], 'mapped', [29238]],
		[[12120, 12120], 'mapped', [29243]],
		[[12121, 12121], 'mapped', [29247]],
		[[12122, 12122], 'mapped', [29255]],
		[[12123, 12123], 'mapped', [29273]],
		[[12124, 12124], 'mapped', [29275]],
		[[12125, 12125], 'mapped', [29356]],
		[[12126, 12126], 'mapped', [29572]],
		[[12127, 12127], 'mapped', [29577]],
		[[12128, 12128], 'mapped', [29916]],
		[[12129, 12129], 'mapped', [29926]],
		[[12130, 12130], 'mapped', [29976]],
		[[12131, 12131], 'mapped', [29983]],
		[[12132, 12132], 'mapped', [29992]],
		[[12133, 12133], 'mapped', [3e4]],
		[[12134, 12134], 'mapped', [30091]],
		[[12135, 12135], 'mapped', [30098]],
		[[12136, 12136], 'mapped', [30326]],
		[[12137, 12137], 'mapped', [30333]],
		[[12138, 12138], 'mapped', [30382]],
		[[12139, 12139], 'mapped', [30399]],
		[[12140, 12140], 'mapped', [30446]],
		[[12141, 12141], 'mapped', [30683]],
		[[12142, 12142], 'mapped', [30690]],
		[[12143, 12143], 'mapped', [30707]],
		[[12144, 12144], 'mapped', [31034]],
		[[12145, 12145], 'mapped', [31160]],
		[[12146, 12146], 'mapped', [31166]],
		[[12147, 12147], 'mapped', [31348]],
		[[12148, 12148], 'mapped', [31435]],
		[[12149, 12149], 'mapped', [31481]],
		[[12150, 12150], 'mapped', [31859]],
		[[12151, 12151], 'mapped', [31992]],
		[[12152, 12152], 'mapped', [32566]],
		[[12153, 12153], 'mapped', [32593]],
		[[12154, 12154], 'mapped', [32650]],
		[[12155, 12155], 'mapped', [32701]],
		[[12156, 12156], 'mapped', [32769]],
		[[12157, 12157], 'mapped', [32780]],
		[[12158, 12158], 'mapped', [32786]],
		[[12159, 12159], 'mapped', [32819]],
		[[12160, 12160], 'mapped', [32895]],
		[[12161, 12161], 'mapped', [32905]],
		[[12162, 12162], 'mapped', [33251]],
		[[12163, 12163], 'mapped', [33258]],
		[[12164, 12164], 'mapped', [33267]],
		[[12165, 12165], 'mapped', [33276]],
		[[12166, 12166], 'mapped', [33292]],
		[[12167, 12167], 'mapped', [33307]],
		[[12168, 12168], 'mapped', [33311]],
		[[12169, 12169], 'mapped', [33390]],
		[[12170, 12170], 'mapped', [33394]],
		[[12171, 12171], 'mapped', [33400]],
		[[12172, 12172], 'mapped', [34381]],
		[[12173, 12173], 'mapped', [34411]],
		[[12174, 12174], 'mapped', [34880]],
		[[12175, 12175], 'mapped', [34892]],
		[[12176, 12176], 'mapped', [34915]],
		[[12177, 12177], 'mapped', [35198]],
		[[12178, 12178], 'mapped', [35211]],
		[[12179, 12179], 'mapped', [35282]],
		[[12180, 12180], 'mapped', [35328]],
		[[12181, 12181], 'mapped', [35895]],
		[[12182, 12182], 'mapped', [35910]],
		[[12183, 12183], 'mapped', [35925]],
		[[12184, 12184], 'mapped', [35960]],
		[[12185, 12185], 'mapped', [35997]],
		[[12186, 12186], 'mapped', [36196]],
		[[12187, 12187], 'mapped', [36208]],
		[[12188, 12188], 'mapped', [36275]],
		[[12189, 12189], 'mapped', [36523]],
		[[12190, 12190], 'mapped', [36554]],
		[[12191, 12191], 'mapped', [36763]],
		[[12192, 12192], 'mapped', [36784]],
		[[12193, 12193], 'mapped', [36789]],
		[[12194, 12194], 'mapped', [37009]],
		[[12195, 12195], 'mapped', [37193]],
		[[12196, 12196], 'mapped', [37318]],
		[[12197, 12197], 'mapped', [37324]],
		[[12198, 12198], 'mapped', [37329]],
		[[12199, 12199], 'mapped', [38263]],
		[[12200, 12200], 'mapped', [38272]],
		[[12201, 12201], 'mapped', [38428]],
		[[12202, 12202], 'mapped', [38582]],
		[[12203, 12203], 'mapped', [38585]],
		[[12204, 12204], 'mapped', [38632]],
		[[12205, 12205], 'mapped', [38737]],
		[[12206, 12206], 'mapped', [38750]],
		[[12207, 12207], 'mapped', [38754]],
		[[12208, 12208], 'mapped', [38761]],
		[[12209, 12209], 'mapped', [38859]],
		[[12210, 12210], 'mapped', [38893]],
		[[12211, 12211], 'mapped', [38899]],
		[[12212, 12212], 'mapped', [38913]],
		[[12213, 12213], 'mapped', [39080]],
		[[12214, 12214], 'mapped', [39131]],
		[[12215, 12215], 'mapped', [39135]],
		[[12216, 12216], 'mapped', [39318]],
		[[12217, 12217], 'mapped', [39321]],
		[[12218, 12218], 'mapped', [39340]],
		[[12219, 12219], 'mapped', [39592]],
		[[12220, 12220], 'mapped', [39640]],
		[[12221, 12221], 'mapped', [39647]],
		[[12222, 12222], 'mapped', [39717]],
		[[12223, 12223], 'mapped', [39727]],
		[[12224, 12224], 'mapped', [39730]],
		[[12225, 12225], 'mapped', [39740]],
		[[12226, 12226], 'mapped', [39770]],
		[[12227, 12227], 'mapped', [40165]],
		[[12228, 12228], 'mapped', [40565]],
		[[12229, 12229], 'mapped', [40575]],
		[[12230, 12230], 'mapped', [40613]],
		[[12231, 12231], 'mapped', [40635]],
		[[12232, 12232], 'mapped', [40643]],
		[[12233, 12233], 'mapped', [40653]],
		[[12234, 12234], 'mapped', [40657]],
		[[12235, 12235], 'mapped', [40697]],
		[[12236, 12236], 'mapped', [40701]],
		[[12237, 12237], 'mapped', [40718]],
		[[12238, 12238], 'mapped', [40723]],
		[[12239, 12239], 'mapped', [40736]],
		[[12240, 12240], 'mapped', [40763]],
		[[12241, 12241], 'mapped', [40778]],
		[[12242, 12242], 'mapped', [40786]],
		[[12243, 12243], 'mapped', [40845]],
		[[12244, 12244], 'mapped', [40860]],
		[[12245, 12245], 'mapped', [40864]],
		[[12246, 12271], 'disallowed'],
		[[12272, 12283], 'disallowed'],
		[[12284, 12287], 'disallowed'],
		[[12288, 12288], 'disallowed_STD3_mapped', [32]],
		[[12289, 12289], 'valid', [], 'NV8'],
		[[12290, 12290], 'mapped', [46]],
		[[12291, 12292], 'valid', [], 'NV8'],
		[[12293, 12295], 'valid'],
		[[12296, 12329], 'valid', [], 'NV8'],
		[[12330, 12333], 'valid'],
		[[12334, 12341], 'valid', [], 'NV8'],
		[[12342, 12342], 'mapped', [12306]],
		[[12343, 12343], 'valid', [], 'NV8'],
		[[12344, 12344], 'mapped', [21313]],
		[[12345, 12345], 'mapped', [21316]],
		[[12346, 12346], 'mapped', [21317]],
		[[12347, 12347], 'valid', [], 'NV8'],
		[[12348, 12348], 'valid'],
		[[12349, 12349], 'valid', [], 'NV8'],
		[[12350, 12350], 'valid', [], 'NV8'],
		[[12351, 12351], 'valid', [], 'NV8'],
		[[12352, 12352], 'disallowed'],
		[[12353, 12436], 'valid'],
		[[12437, 12438], 'valid'],
		[[12439, 12440], 'disallowed'],
		[[12441, 12442], 'valid'],
		[[12443, 12443], 'disallowed_STD3_mapped', [32, 12441]],
		[[12444, 12444], 'disallowed_STD3_mapped', [32, 12442]],
		[[12445, 12446], 'valid'],
		[[12447, 12447], 'mapped', [12424, 12426]],
		[[12448, 12448], 'valid', [], 'NV8'],
		[[12449, 12542], 'valid'],
		[[12543, 12543], 'mapped', [12467, 12488]],
		[[12544, 12548], 'disallowed'],
		[[12549, 12588], 'valid'],
		[[12589, 12589], 'valid'],
		[[12590, 12592], 'disallowed'],
		[[12593, 12593], 'mapped', [4352]],
		[[12594, 12594], 'mapped', [4353]],
		[[12595, 12595], 'mapped', [4522]],
		[[12596, 12596], 'mapped', [4354]],
		[[12597, 12597], 'mapped', [4524]],
		[[12598, 12598], 'mapped', [4525]],
		[[12599, 12599], 'mapped', [4355]],
		[[12600, 12600], 'mapped', [4356]],
		[[12601, 12601], 'mapped', [4357]],
		[[12602, 12602], 'mapped', [4528]],
		[[12603, 12603], 'mapped', [4529]],
		[[12604, 12604], 'mapped', [4530]],
		[[12605, 12605], 'mapped', [4531]],
		[[12606, 12606], 'mapped', [4532]],
		[[12607, 12607], 'mapped', [4533]],
		[[12608, 12608], 'mapped', [4378]],
		[[12609, 12609], 'mapped', [4358]],
		[[12610, 12610], 'mapped', [4359]],
		[[12611, 12611], 'mapped', [4360]],
		[[12612, 12612], 'mapped', [4385]],
		[[12613, 12613], 'mapped', [4361]],
		[[12614, 12614], 'mapped', [4362]],
		[[12615, 12615], 'mapped', [4363]],
		[[12616, 12616], 'mapped', [4364]],
		[[12617, 12617], 'mapped', [4365]],
		[[12618, 12618], 'mapped', [4366]],
		[[12619, 12619], 'mapped', [4367]],
		[[12620, 12620], 'mapped', [4368]],
		[[12621, 12621], 'mapped', [4369]],
		[[12622, 12622], 'mapped', [4370]],
		[[12623, 12623], 'mapped', [4449]],
		[[12624, 12624], 'mapped', [4450]],
		[[12625, 12625], 'mapped', [4451]],
		[[12626, 12626], 'mapped', [4452]],
		[[12627, 12627], 'mapped', [4453]],
		[[12628, 12628], 'mapped', [4454]],
		[[12629, 12629], 'mapped', [4455]],
		[[12630, 12630], 'mapped', [4456]],
		[[12631, 12631], 'mapped', [4457]],
		[[12632, 12632], 'mapped', [4458]],
		[[12633, 12633], 'mapped', [4459]],
		[[12634, 12634], 'mapped', [4460]],
		[[12635, 12635], 'mapped', [4461]],
		[[12636, 12636], 'mapped', [4462]],
		[[12637, 12637], 'mapped', [4463]],
		[[12638, 12638], 'mapped', [4464]],
		[[12639, 12639], 'mapped', [4465]],
		[[12640, 12640], 'mapped', [4466]],
		[[12641, 12641], 'mapped', [4467]],
		[[12642, 12642], 'mapped', [4468]],
		[[12643, 12643], 'mapped', [4469]],
		[[12644, 12644], 'disallowed'],
		[[12645, 12645], 'mapped', [4372]],
		[[12646, 12646], 'mapped', [4373]],
		[[12647, 12647], 'mapped', [4551]],
		[[12648, 12648], 'mapped', [4552]],
		[[12649, 12649], 'mapped', [4556]],
		[[12650, 12650], 'mapped', [4558]],
		[[12651, 12651], 'mapped', [4563]],
		[[12652, 12652], 'mapped', [4567]],
		[[12653, 12653], 'mapped', [4569]],
		[[12654, 12654], 'mapped', [4380]],
		[[12655, 12655], 'mapped', [4573]],
		[[12656, 12656], 'mapped', [4575]],
		[[12657, 12657], 'mapped', [4381]],
		[[12658, 12658], 'mapped', [4382]],
		[[12659, 12659], 'mapped', [4384]],
		[[12660, 12660], 'mapped', [4386]],
		[[12661, 12661], 'mapped', [4387]],
		[[12662, 12662], 'mapped', [4391]],
		[[12663, 12663], 'mapped', [4393]],
		[[12664, 12664], 'mapped', [4395]],
		[[12665, 12665], 'mapped', [4396]],
		[[12666, 12666], 'mapped', [4397]],
		[[12667, 12667], 'mapped', [4398]],
		[[12668, 12668], 'mapped', [4399]],
		[[12669, 12669], 'mapped', [4402]],
		[[12670, 12670], 'mapped', [4406]],
		[[12671, 12671], 'mapped', [4416]],
		[[12672, 12672], 'mapped', [4423]],
		[[12673, 12673], 'mapped', [4428]],
		[[12674, 12674], 'mapped', [4593]],
		[[12675, 12675], 'mapped', [4594]],
		[[12676, 12676], 'mapped', [4439]],
		[[12677, 12677], 'mapped', [4440]],
		[[12678, 12678], 'mapped', [4441]],
		[[12679, 12679], 'mapped', [4484]],
		[[12680, 12680], 'mapped', [4485]],
		[[12681, 12681], 'mapped', [4488]],
		[[12682, 12682], 'mapped', [4497]],
		[[12683, 12683], 'mapped', [4498]],
		[[12684, 12684], 'mapped', [4500]],
		[[12685, 12685], 'mapped', [4510]],
		[[12686, 12686], 'mapped', [4513]],
		[[12687, 12687], 'disallowed'],
		[[12688, 12689], 'valid', [], 'NV8'],
		[[12690, 12690], 'mapped', [19968]],
		[[12691, 12691], 'mapped', [20108]],
		[[12692, 12692], 'mapped', [19977]],
		[[12693, 12693], 'mapped', [22235]],
		[[12694, 12694], 'mapped', [19978]],
		[[12695, 12695], 'mapped', [20013]],
		[[12696, 12696], 'mapped', [19979]],
		[[12697, 12697], 'mapped', [30002]],
		[[12698, 12698], 'mapped', [20057]],
		[[12699, 12699], 'mapped', [19993]],
		[[12700, 12700], 'mapped', [19969]],
		[[12701, 12701], 'mapped', [22825]],
		[[12702, 12702], 'mapped', [22320]],
		[[12703, 12703], 'mapped', [20154]],
		[[12704, 12727], 'valid'],
		[[12728, 12730], 'valid'],
		[[12731, 12735], 'disallowed'],
		[[12736, 12751], 'valid', [], 'NV8'],
		[[12752, 12771], 'valid', [], 'NV8'],
		[[12772, 12783], 'disallowed'],
		[[12784, 12799], 'valid'],
		[[12800, 12800], 'disallowed_STD3_mapped', [40, 4352, 41]],
		[[12801, 12801], 'disallowed_STD3_mapped', [40, 4354, 41]],
		[[12802, 12802], 'disallowed_STD3_mapped', [40, 4355, 41]],
		[[12803, 12803], 'disallowed_STD3_mapped', [40, 4357, 41]],
		[[12804, 12804], 'disallowed_STD3_mapped', [40, 4358, 41]],
		[[12805, 12805], 'disallowed_STD3_mapped', [40, 4359, 41]],
		[[12806, 12806], 'disallowed_STD3_mapped', [40, 4361, 41]],
		[[12807, 12807], 'disallowed_STD3_mapped', [40, 4363, 41]],
		[[12808, 12808], 'disallowed_STD3_mapped', [40, 4364, 41]],
		[[12809, 12809], 'disallowed_STD3_mapped', [40, 4366, 41]],
		[[12810, 12810], 'disallowed_STD3_mapped', [40, 4367, 41]],
		[[12811, 12811], 'disallowed_STD3_mapped', [40, 4368, 41]],
		[[12812, 12812], 'disallowed_STD3_mapped', [40, 4369, 41]],
		[[12813, 12813], 'disallowed_STD3_mapped', [40, 4370, 41]],
		[[12814, 12814], 'disallowed_STD3_mapped', [40, 44032, 41]],
		[[12815, 12815], 'disallowed_STD3_mapped', [40, 45208, 41]],
		[[12816, 12816], 'disallowed_STD3_mapped', [40, 45796, 41]],
		[[12817, 12817], 'disallowed_STD3_mapped', [40, 46972, 41]],
		[[12818, 12818], 'disallowed_STD3_mapped', [40, 47560, 41]],
		[[12819, 12819], 'disallowed_STD3_mapped', [40, 48148, 41]],
		[[12820, 12820], 'disallowed_STD3_mapped', [40, 49324, 41]],
		[[12821, 12821], 'disallowed_STD3_mapped', [40, 50500, 41]],
		[[12822, 12822], 'disallowed_STD3_mapped', [40, 51088, 41]],
		[[12823, 12823], 'disallowed_STD3_mapped', [40, 52264, 41]],
		[[12824, 12824], 'disallowed_STD3_mapped', [40, 52852, 41]],
		[[12825, 12825], 'disallowed_STD3_mapped', [40, 53440, 41]],
		[[12826, 12826], 'disallowed_STD3_mapped', [40, 54028, 41]],
		[[12827, 12827], 'disallowed_STD3_mapped', [40, 54616, 41]],
		[[12828, 12828], 'disallowed_STD3_mapped', [40, 51452, 41]],
		[[12829, 12829], 'disallowed_STD3_mapped', [40, 50724, 51204, 41]],
		[[12830, 12830], 'disallowed_STD3_mapped', [40, 50724, 54980, 41]],
		[[12831, 12831], 'disallowed'],
		[[12832, 12832], 'disallowed_STD3_mapped', [40, 19968, 41]],
		[[12833, 12833], 'disallowed_STD3_mapped', [40, 20108, 41]],
		[[12834, 12834], 'disallowed_STD3_mapped', [40, 19977, 41]],
		[[12835, 12835], 'disallowed_STD3_mapped', [40, 22235, 41]],
		[[12836, 12836], 'disallowed_STD3_mapped', [40, 20116, 41]],
		[[12837, 12837], 'disallowed_STD3_mapped', [40, 20845, 41]],
		[[12838, 12838], 'disallowed_STD3_mapped', [40, 19971, 41]],
		[[12839, 12839], 'disallowed_STD3_mapped', [40, 20843, 41]],
		[[12840, 12840], 'disallowed_STD3_mapped', [40, 20061, 41]],
		[[12841, 12841], 'disallowed_STD3_mapped', [40, 21313, 41]],
		[[12842, 12842], 'disallowed_STD3_mapped', [40, 26376, 41]],
		[[12843, 12843], 'disallowed_STD3_mapped', [40, 28779, 41]],
		[[12844, 12844], 'disallowed_STD3_mapped', [40, 27700, 41]],
		[[12845, 12845], 'disallowed_STD3_mapped', [40, 26408, 41]],
		[[12846, 12846], 'disallowed_STD3_mapped', [40, 37329, 41]],
		[[12847, 12847], 'disallowed_STD3_mapped', [40, 22303, 41]],
		[[12848, 12848], 'disallowed_STD3_mapped', [40, 26085, 41]],
		[[12849, 12849], 'disallowed_STD3_mapped', [40, 26666, 41]],
		[[12850, 12850], 'disallowed_STD3_mapped', [40, 26377, 41]],
		[[12851, 12851], 'disallowed_STD3_mapped', [40, 31038, 41]],
		[[12852, 12852], 'disallowed_STD3_mapped', [40, 21517, 41]],
		[[12853, 12853], 'disallowed_STD3_mapped', [40, 29305, 41]],
		[[12854, 12854], 'disallowed_STD3_mapped', [40, 36001, 41]],
		[[12855, 12855], 'disallowed_STD3_mapped', [40, 31069, 41]],
		[[12856, 12856], 'disallowed_STD3_mapped', [40, 21172, 41]],
		[[12857, 12857], 'disallowed_STD3_mapped', [40, 20195, 41]],
		[[12858, 12858], 'disallowed_STD3_mapped', [40, 21628, 41]],
		[[12859, 12859], 'disallowed_STD3_mapped', [40, 23398, 41]],
		[[12860, 12860], 'disallowed_STD3_mapped', [40, 30435, 41]],
		[[12861, 12861], 'disallowed_STD3_mapped', [40, 20225, 41]],
		[[12862, 12862], 'disallowed_STD3_mapped', [40, 36039, 41]],
		[[12863, 12863], 'disallowed_STD3_mapped', [40, 21332, 41]],
		[[12864, 12864], 'disallowed_STD3_mapped', [40, 31085, 41]],
		[[12865, 12865], 'disallowed_STD3_mapped', [40, 20241, 41]],
		[[12866, 12866], 'disallowed_STD3_mapped', [40, 33258, 41]],
		[[12867, 12867], 'disallowed_STD3_mapped', [40, 33267, 41]],
		[[12868, 12868], 'mapped', [21839]],
		[[12869, 12869], 'mapped', [24188]],
		[[12870, 12870], 'mapped', [25991]],
		[[12871, 12871], 'mapped', [31631]],
		[[12872, 12879], 'valid', [], 'NV8'],
		[[12880, 12880], 'mapped', [112, 116, 101]],
		[[12881, 12881], 'mapped', [50, 49]],
		[[12882, 12882], 'mapped', [50, 50]],
		[[12883, 12883], 'mapped', [50, 51]],
		[[12884, 12884], 'mapped', [50, 52]],
		[[12885, 12885], 'mapped', [50, 53]],
		[[12886, 12886], 'mapped', [50, 54]],
		[[12887, 12887], 'mapped', [50, 55]],
		[[12888, 12888], 'mapped', [50, 56]],
		[[12889, 12889], 'mapped', [50, 57]],
		[[12890, 12890], 'mapped', [51, 48]],
		[[12891, 12891], 'mapped', [51, 49]],
		[[12892, 12892], 'mapped', [51, 50]],
		[[12893, 12893], 'mapped', [51, 51]],
		[[12894, 12894], 'mapped', [51, 52]],
		[[12895, 12895], 'mapped', [51, 53]],
		[[12896, 12896], 'mapped', [4352]],
		[[12897, 12897], 'mapped', [4354]],
		[[12898, 12898], 'mapped', [4355]],
		[[12899, 12899], 'mapped', [4357]],
		[[12900, 12900], 'mapped', [4358]],
		[[12901, 12901], 'mapped', [4359]],
		[[12902, 12902], 'mapped', [4361]],
		[[12903, 12903], 'mapped', [4363]],
		[[12904, 12904], 'mapped', [4364]],
		[[12905, 12905], 'mapped', [4366]],
		[[12906, 12906], 'mapped', [4367]],
		[[12907, 12907], 'mapped', [4368]],
		[[12908, 12908], 'mapped', [4369]],
		[[12909, 12909], 'mapped', [4370]],
		[[12910, 12910], 'mapped', [44032]],
		[[12911, 12911], 'mapped', [45208]],
		[[12912, 12912], 'mapped', [45796]],
		[[12913, 12913], 'mapped', [46972]],
		[[12914, 12914], 'mapped', [47560]],
		[[12915, 12915], 'mapped', [48148]],
		[[12916, 12916], 'mapped', [49324]],
		[[12917, 12917], 'mapped', [50500]],
		[[12918, 12918], 'mapped', [51088]],
		[[12919, 12919], 'mapped', [52264]],
		[[12920, 12920], 'mapped', [52852]],
		[[12921, 12921], 'mapped', [53440]],
		[[12922, 12922], 'mapped', [54028]],
		[[12923, 12923], 'mapped', [54616]],
		[[12924, 12924], 'mapped', [52280, 44256]],
		[[12925, 12925], 'mapped', [51452, 51032]],
		[[12926, 12926], 'mapped', [50864]],
		[[12927, 12927], 'valid', [], 'NV8'],
		[[12928, 12928], 'mapped', [19968]],
		[[12929, 12929], 'mapped', [20108]],
		[[12930, 12930], 'mapped', [19977]],
		[[12931, 12931], 'mapped', [22235]],
		[[12932, 12932], 'mapped', [20116]],
		[[12933, 12933], 'mapped', [20845]],
		[[12934, 12934], 'mapped', [19971]],
		[[12935, 12935], 'mapped', [20843]],
		[[12936, 12936], 'mapped', [20061]],
		[[12937, 12937], 'mapped', [21313]],
		[[12938, 12938], 'mapped', [26376]],
		[[12939, 12939], 'mapped', [28779]],
		[[12940, 12940], 'mapped', [27700]],
		[[12941, 12941], 'mapped', [26408]],
		[[12942, 12942], 'mapped', [37329]],
		[[12943, 12943], 'mapped', [22303]],
		[[12944, 12944], 'mapped', [26085]],
		[[12945, 12945], 'mapped', [26666]],
		[[12946, 12946], 'mapped', [26377]],
		[[12947, 12947], 'mapped', [31038]],
		[[12948, 12948], 'mapped', [21517]],
		[[12949, 12949], 'mapped', [29305]],
		[[12950, 12950], 'mapped', [36001]],
		[[12951, 12951], 'mapped', [31069]],
		[[12952, 12952], 'mapped', [21172]],
		[[12953, 12953], 'mapped', [31192]],
		[[12954, 12954], 'mapped', [30007]],
		[[12955, 12955], 'mapped', [22899]],
		[[12956, 12956], 'mapped', [36969]],
		[[12957, 12957], 'mapped', [20778]],
		[[12958, 12958], 'mapped', [21360]],
		[[12959, 12959], 'mapped', [27880]],
		[[12960, 12960], 'mapped', [38917]],
		[[12961, 12961], 'mapped', [20241]],
		[[12962, 12962], 'mapped', [20889]],
		[[12963, 12963], 'mapped', [27491]],
		[[12964, 12964], 'mapped', [19978]],
		[[12965, 12965], 'mapped', [20013]],
		[[12966, 12966], 'mapped', [19979]],
		[[12967, 12967], 'mapped', [24038]],
		[[12968, 12968], 'mapped', [21491]],
		[[12969, 12969], 'mapped', [21307]],
		[[12970, 12970], 'mapped', [23447]],
		[[12971, 12971], 'mapped', [23398]],
		[[12972, 12972], 'mapped', [30435]],
		[[12973, 12973], 'mapped', [20225]],
		[[12974, 12974], 'mapped', [36039]],
		[[12975, 12975], 'mapped', [21332]],
		[[12976, 12976], 'mapped', [22812]],
		[[12977, 12977], 'mapped', [51, 54]],
		[[12978, 12978], 'mapped', [51, 55]],
		[[12979, 12979], 'mapped', [51, 56]],
		[[12980, 12980], 'mapped', [51, 57]],
		[[12981, 12981], 'mapped', [52, 48]],
		[[12982, 12982], 'mapped', [52, 49]],
		[[12983, 12983], 'mapped', [52, 50]],
		[[12984, 12984], 'mapped', [52, 51]],
		[[12985, 12985], 'mapped', [52, 52]],
		[[12986, 12986], 'mapped', [52, 53]],
		[[12987, 12987], 'mapped', [52, 54]],
		[[12988, 12988], 'mapped', [52, 55]],
		[[12989, 12989], 'mapped', [52, 56]],
		[[12990, 12990], 'mapped', [52, 57]],
		[[12991, 12991], 'mapped', [53, 48]],
		[[12992, 12992], 'mapped', [49, 26376]],
		[[12993, 12993], 'mapped', [50, 26376]],
		[[12994, 12994], 'mapped', [51, 26376]],
		[[12995, 12995], 'mapped', [52, 26376]],
		[[12996, 12996], 'mapped', [53, 26376]],
		[[12997, 12997], 'mapped', [54, 26376]],
		[[12998, 12998], 'mapped', [55, 26376]],
		[[12999, 12999], 'mapped', [56, 26376]],
		[[13e3, 13e3], 'mapped', [57, 26376]],
		[[13001, 13001], 'mapped', [49, 48, 26376]],
		[[13002, 13002], 'mapped', [49, 49, 26376]],
		[[13003, 13003], 'mapped', [49, 50, 26376]],
		[[13004, 13004], 'mapped', [104, 103]],
		[[13005, 13005], 'mapped', [101, 114, 103]],
		[[13006, 13006], 'mapped', [101, 118]],
		[[13007, 13007], 'mapped', [108, 116, 100]],
		[[13008, 13008], 'mapped', [12450]],
		[[13009, 13009], 'mapped', [12452]],
		[[13010, 13010], 'mapped', [12454]],
		[[13011, 13011], 'mapped', [12456]],
		[[13012, 13012], 'mapped', [12458]],
		[[13013, 13013], 'mapped', [12459]],
		[[13014, 13014], 'mapped', [12461]],
		[[13015, 13015], 'mapped', [12463]],
		[[13016, 13016], 'mapped', [12465]],
		[[13017, 13017], 'mapped', [12467]],
		[[13018, 13018], 'mapped', [12469]],
		[[13019, 13019], 'mapped', [12471]],
		[[13020, 13020], 'mapped', [12473]],
		[[13021, 13021], 'mapped', [12475]],
		[[13022, 13022], 'mapped', [12477]],
		[[13023, 13023], 'mapped', [12479]],
		[[13024, 13024], 'mapped', [12481]],
		[[13025, 13025], 'mapped', [12484]],
		[[13026, 13026], 'mapped', [12486]],
		[[13027, 13027], 'mapped', [12488]],
		[[13028, 13028], 'mapped', [12490]],
		[[13029, 13029], 'mapped', [12491]],
		[[13030, 13030], 'mapped', [12492]],
		[[13031, 13031], 'mapped', [12493]],
		[[13032, 13032], 'mapped', [12494]],
		[[13033, 13033], 'mapped', [12495]],
		[[13034, 13034], 'mapped', [12498]],
		[[13035, 13035], 'mapped', [12501]],
		[[13036, 13036], 'mapped', [12504]],
		[[13037, 13037], 'mapped', [12507]],
		[[13038, 13038], 'mapped', [12510]],
		[[13039, 13039], 'mapped', [12511]],
		[[13040, 13040], 'mapped', [12512]],
		[[13041, 13041], 'mapped', [12513]],
		[[13042, 13042], 'mapped', [12514]],
		[[13043, 13043], 'mapped', [12516]],
		[[13044, 13044], 'mapped', [12518]],
		[[13045, 13045], 'mapped', [12520]],
		[[13046, 13046], 'mapped', [12521]],
		[[13047, 13047], 'mapped', [12522]],
		[[13048, 13048], 'mapped', [12523]],
		[[13049, 13049], 'mapped', [12524]],
		[[13050, 13050], 'mapped', [12525]],
		[[13051, 13051], 'mapped', [12527]],
		[[13052, 13052], 'mapped', [12528]],
		[[13053, 13053], 'mapped', [12529]],
		[[13054, 13054], 'mapped', [12530]],
		[[13055, 13055], 'disallowed'],
		[[13056, 13056], 'mapped', [12450, 12497, 12540, 12488]],
		[[13057, 13057], 'mapped', [12450, 12523, 12501, 12449]],
		[[13058, 13058], 'mapped', [12450, 12531, 12506, 12450]],
		[[13059, 13059], 'mapped', [12450, 12540, 12523]],
		[[13060, 13060], 'mapped', [12452, 12491, 12531, 12464]],
		[[13061, 13061], 'mapped', [12452, 12531, 12481]],
		[[13062, 13062], 'mapped', [12454, 12457, 12531]],
		[[13063, 13063], 'mapped', [12456, 12473, 12463, 12540, 12489]],
		[[13064, 13064], 'mapped', [12456, 12540, 12459, 12540]],
		[[13065, 13065], 'mapped', [12458, 12531, 12473]],
		[[13066, 13066], 'mapped', [12458, 12540, 12512]],
		[[13067, 13067], 'mapped', [12459, 12452, 12522]],
		[[13068, 13068], 'mapped', [12459, 12521, 12483, 12488]],
		[[13069, 13069], 'mapped', [12459, 12525, 12522, 12540]],
		[[13070, 13070], 'mapped', [12460, 12525, 12531]],
		[[13071, 13071], 'mapped', [12460, 12531, 12510]],
		[[13072, 13072], 'mapped', [12462, 12460]],
		[[13073, 13073], 'mapped', [12462, 12491, 12540]],
		[[13074, 13074], 'mapped', [12461, 12517, 12522, 12540]],
		[[13075, 13075], 'mapped', [12462, 12523, 12480, 12540]],
		[[13076, 13076], 'mapped', [12461, 12525]],
		[[13077, 13077], 'mapped', [12461, 12525, 12464, 12521, 12512]],
		[[13078, 13078], 'mapped', [12461, 12525, 12513, 12540, 12488, 12523]],
		[[13079, 13079], 'mapped', [12461, 12525, 12527, 12483, 12488]],
		[[13080, 13080], 'mapped', [12464, 12521, 12512]],
		[[13081, 13081], 'mapped', [12464, 12521, 12512, 12488, 12531]],
		[[13082, 13082], 'mapped', [12463, 12523, 12476, 12452, 12525]],
		[[13083, 13083], 'mapped', [12463, 12525, 12540, 12493]],
		[[13084, 13084], 'mapped', [12465, 12540, 12473]],
		[[13085, 13085], 'mapped', [12467, 12523, 12490]],
		[[13086, 13086], 'mapped', [12467, 12540, 12509]],
		[[13087, 13087], 'mapped', [12469, 12452, 12463, 12523]],
		[[13088, 13088], 'mapped', [12469, 12531, 12481, 12540, 12512]],
		[[13089, 13089], 'mapped', [12471, 12522, 12531, 12464]],
		[[13090, 13090], 'mapped', [12475, 12531, 12481]],
		[[13091, 13091], 'mapped', [12475, 12531, 12488]],
		[[13092, 13092], 'mapped', [12480, 12540, 12473]],
		[[13093, 13093], 'mapped', [12487, 12471]],
		[[13094, 13094], 'mapped', [12489, 12523]],
		[[13095, 13095], 'mapped', [12488, 12531]],
		[[13096, 13096], 'mapped', [12490, 12494]],
		[[13097, 13097], 'mapped', [12494, 12483, 12488]],
		[[13098, 13098], 'mapped', [12495, 12452, 12484]],
		[[13099, 13099], 'mapped', [12497, 12540, 12475, 12531, 12488]],
		[[13100, 13100], 'mapped', [12497, 12540, 12484]],
		[[13101, 13101], 'mapped', [12496, 12540, 12524, 12523]],
		[[13102, 13102], 'mapped', [12500, 12450, 12473, 12488, 12523]],
		[[13103, 13103], 'mapped', [12500, 12463, 12523]],
		[[13104, 13104], 'mapped', [12500, 12467]],
		[[13105, 13105], 'mapped', [12499, 12523]],
		[[13106, 13106], 'mapped', [12501, 12449, 12521, 12483, 12489]],
		[[13107, 13107], 'mapped', [12501, 12451, 12540, 12488]],
		[[13108, 13108], 'mapped', [12502, 12483, 12471, 12455, 12523]],
		[[13109, 13109], 'mapped', [12501, 12521, 12531]],
		[[13110, 13110], 'mapped', [12504, 12463, 12479, 12540, 12523]],
		[[13111, 13111], 'mapped', [12506, 12477]],
		[[13112, 13112], 'mapped', [12506, 12491, 12498]],
		[[13113, 13113], 'mapped', [12504, 12523, 12484]],
		[[13114, 13114], 'mapped', [12506, 12531, 12473]],
		[[13115, 13115], 'mapped', [12506, 12540, 12472]],
		[[13116, 13116], 'mapped', [12505, 12540, 12479]],
		[[13117, 13117], 'mapped', [12509, 12452, 12531, 12488]],
		[[13118, 13118], 'mapped', [12508, 12523, 12488]],
		[[13119, 13119], 'mapped', [12507, 12531]],
		[[13120, 13120], 'mapped', [12509, 12531, 12489]],
		[[13121, 13121], 'mapped', [12507, 12540, 12523]],
		[[13122, 13122], 'mapped', [12507, 12540, 12531]],
		[[13123, 13123], 'mapped', [12510, 12452, 12463, 12525]],
		[[13124, 13124], 'mapped', [12510, 12452, 12523]],
		[[13125, 13125], 'mapped', [12510, 12483, 12495]],
		[[13126, 13126], 'mapped', [12510, 12523, 12463]],
		[[13127, 13127], 'mapped', [12510, 12531, 12471, 12519, 12531]],
		[[13128, 13128], 'mapped', [12511, 12463, 12525, 12531]],
		[[13129, 13129], 'mapped', [12511, 12522]],
		[[13130, 13130], 'mapped', [12511, 12522, 12496, 12540, 12523]],
		[[13131, 13131], 'mapped', [12513, 12460]],
		[[13132, 13132], 'mapped', [12513, 12460, 12488, 12531]],
		[[13133, 13133], 'mapped', [12513, 12540, 12488, 12523]],
		[[13134, 13134], 'mapped', [12516, 12540, 12489]],
		[[13135, 13135], 'mapped', [12516, 12540, 12523]],
		[[13136, 13136], 'mapped', [12518, 12450, 12531]],
		[[13137, 13137], 'mapped', [12522, 12483, 12488, 12523]],
		[[13138, 13138], 'mapped', [12522, 12521]],
		[[13139, 13139], 'mapped', [12523, 12500, 12540]],
		[[13140, 13140], 'mapped', [12523, 12540, 12502, 12523]],
		[[13141, 13141], 'mapped', [12524, 12512]],
		[[13142, 13142], 'mapped', [12524, 12531, 12488, 12466, 12531]],
		[[13143, 13143], 'mapped', [12527, 12483, 12488]],
		[[13144, 13144], 'mapped', [48, 28857]],
		[[13145, 13145], 'mapped', [49, 28857]],
		[[13146, 13146], 'mapped', [50, 28857]],
		[[13147, 13147], 'mapped', [51, 28857]],
		[[13148, 13148], 'mapped', [52, 28857]],
		[[13149, 13149], 'mapped', [53, 28857]],
		[[13150, 13150], 'mapped', [54, 28857]],
		[[13151, 13151], 'mapped', [55, 28857]],
		[[13152, 13152], 'mapped', [56, 28857]],
		[[13153, 13153], 'mapped', [57, 28857]],
		[[13154, 13154], 'mapped', [49, 48, 28857]],
		[[13155, 13155], 'mapped', [49, 49, 28857]],
		[[13156, 13156], 'mapped', [49, 50, 28857]],
		[[13157, 13157], 'mapped', [49, 51, 28857]],
		[[13158, 13158], 'mapped', [49, 52, 28857]],
		[[13159, 13159], 'mapped', [49, 53, 28857]],
		[[13160, 13160], 'mapped', [49, 54, 28857]],
		[[13161, 13161], 'mapped', [49, 55, 28857]],
		[[13162, 13162], 'mapped', [49, 56, 28857]],
		[[13163, 13163], 'mapped', [49, 57, 28857]],
		[[13164, 13164], 'mapped', [50, 48, 28857]],
		[[13165, 13165], 'mapped', [50, 49, 28857]],
		[[13166, 13166], 'mapped', [50, 50, 28857]],
		[[13167, 13167], 'mapped', [50, 51, 28857]],
		[[13168, 13168], 'mapped', [50, 52, 28857]],
		[[13169, 13169], 'mapped', [104, 112, 97]],
		[[13170, 13170], 'mapped', [100, 97]],
		[[13171, 13171], 'mapped', [97, 117]],
		[[13172, 13172], 'mapped', [98, 97, 114]],
		[[13173, 13173], 'mapped', [111, 118]],
		[[13174, 13174], 'mapped', [112, 99]],
		[[13175, 13175], 'mapped', [100, 109]],
		[[13176, 13176], 'mapped', [100, 109, 50]],
		[[13177, 13177], 'mapped', [100, 109, 51]],
		[[13178, 13178], 'mapped', [105, 117]],
		[[13179, 13179], 'mapped', [24179, 25104]],
		[[13180, 13180], 'mapped', [26157, 21644]],
		[[13181, 13181], 'mapped', [22823, 27491]],
		[[13182, 13182], 'mapped', [26126, 27835]],
		[[13183, 13183], 'mapped', [26666, 24335, 20250, 31038]],
		[[13184, 13184], 'mapped', [112, 97]],
		[[13185, 13185], 'mapped', [110, 97]],
		[[13186, 13186], 'mapped', [956, 97]],
		[[13187, 13187], 'mapped', [109, 97]],
		[[13188, 13188], 'mapped', [107, 97]],
		[[13189, 13189], 'mapped', [107, 98]],
		[[13190, 13190], 'mapped', [109, 98]],
		[[13191, 13191], 'mapped', [103, 98]],
		[[13192, 13192], 'mapped', [99, 97, 108]],
		[[13193, 13193], 'mapped', [107, 99, 97, 108]],
		[[13194, 13194], 'mapped', [112, 102]],
		[[13195, 13195], 'mapped', [110, 102]],
		[[13196, 13196], 'mapped', [956, 102]],
		[[13197, 13197], 'mapped', [956, 103]],
		[[13198, 13198], 'mapped', [109, 103]],
		[[13199, 13199], 'mapped', [107, 103]],
		[[13200, 13200], 'mapped', [104, 122]],
		[[13201, 13201], 'mapped', [107, 104, 122]],
		[[13202, 13202], 'mapped', [109, 104, 122]],
		[[13203, 13203], 'mapped', [103, 104, 122]],
		[[13204, 13204], 'mapped', [116, 104, 122]],
		[[13205, 13205], 'mapped', [956, 108]],
		[[13206, 13206], 'mapped', [109, 108]],
		[[13207, 13207], 'mapped', [100, 108]],
		[[13208, 13208], 'mapped', [107, 108]],
		[[13209, 13209], 'mapped', [102, 109]],
		[[13210, 13210], 'mapped', [110, 109]],
		[[13211, 13211], 'mapped', [956, 109]],
		[[13212, 13212], 'mapped', [109, 109]],
		[[13213, 13213], 'mapped', [99, 109]],
		[[13214, 13214], 'mapped', [107, 109]],
		[[13215, 13215], 'mapped', [109, 109, 50]],
		[[13216, 13216], 'mapped', [99, 109, 50]],
		[[13217, 13217], 'mapped', [109, 50]],
		[[13218, 13218], 'mapped', [107, 109, 50]],
		[[13219, 13219], 'mapped', [109, 109, 51]],
		[[13220, 13220], 'mapped', [99, 109, 51]],
		[[13221, 13221], 'mapped', [109, 51]],
		[[13222, 13222], 'mapped', [107, 109, 51]],
		[[13223, 13223], 'mapped', [109, 8725, 115]],
		[[13224, 13224], 'mapped', [109, 8725, 115, 50]],
		[[13225, 13225], 'mapped', [112, 97]],
		[[13226, 13226], 'mapped', [107, 112, 97]],
		[[13227, 13227], 'mapped', [109, 112, 97]],
		[[13228, 13228], 'mapped', [103, 112, 97]],
		[[13229, 13229], 'mapped', [114, 97, 100]],
		[[13230, 13230], 'mapped', [114, 97, 100, 8725, 115]],
		[[13231, 13231], 'mapped', [114, 97, 100, 8725, 115, 50]],
		[[13232, 13232], 'mapped', [112, 115]],
		[[13233, 13233], 'mapped', [110, 115]],
		[[13234, 13234], 'mapped', [956, 115]],
		[[13235, 13235], 'mapped', [109, 115]],
		[[13236, 13236], 'mapped', [112, 118]],
		[[13237, 13237], 'mapped', [110, 118]],
		[[13238, 13238], 'mapped', [956, 118]],
		[[13239, 13239], 'mapped', [109, 118]],
		[[13240, 13240], 'mapped', [107, 118]],
		[[13241, 13241], 'mapped', [109, 118]],
		[[13242, 13242], 'mapped', [112, 119]],
		[[13243, 13243], 'mapped', [110, 119]],
		[[13244, 13244], 'mapped', [956, 119]],
		[[13245, 13245], 'mapped', [109, 119]],
		[[13246, 13246], 'mapped', [107, 119]],
		[[13247, 13247], 'mapped', [109, 119]],
		[[13248, 13248], 'mapped', [107, 969]],
		[[13249, 13249], 'mapped', [109, 969]],
		[[13250, 13250], 'disallowed'],
		[[13251, 13251], 'mapped', [98, 113]],
		[[13252, 13252], 'mapped', [99, 99]],
		[[13253, 13253], 'mapped', [99, 100]],
		[[13254, 13254], 'mapped', [99, 8725, 107, 103]],
		[[13255, 13255], 'disallowed'],
		[[13256, 13256], 'mapped', [100, 98]],
		[[13257, 13257], 'mapped', [103, 121]],
		[[13258, 13258], 'mapped', [104, 97]],
		[[13259, 13259], 'mapped', [104, 112]],
		[[13260, 13260], 'mapped', [105, 110]],
		[[13261, 13261], 'mapped', [107, 107]],
		[[13262, 13262], 'mapped', [107, 109]],
		[[13263, 13263], 'mapped', [107, 116]],
		[[13264, 13264], 'mapped', [108, 109]],
		[[13265, 13265], 'mapped', [108, 110]],
		[[13266, 13266], 'mapped', [108, 111, 103]],
		[[13267, 13267], 'mapped', [108, 120]],
		[[13268, 13268], 'mapped', [109, 98]],
		[[13269, 13269], 'mapped', [109, 105, 108]],
		[[13270, 13270], 'mapped', [109, 111, 108]],
		[[13271, 13271], 'mapped', [112, 104]],
		[[13272, 13272], 'disallowed'],
		[[13273, 13273], 'mapped', [112, 112, 109]],
		[[13274, 13274], 'mapped', [112, 114]],
		[[13275, 13275], 'mapped', [115, 114]],
		[[13276, 13276], 'mapped', [115, 118]],
		[[13277, 13277], 'mapped', [119, 98]],
		[[13278, 13278], 'mapped', [118, 8725, 109]],
		[[13279, 13279], 'mapped', [97, 8725, 109]],
		[[13280, 13280], 'mapped', [49, 26085]],
		[[13281, 13281], 'mapped', [50, 26085]],
		[[13282, 13282], 'mapped', [51, 26085]],
		[[13283, 13283], 'mapped', [52, 26085]],
		[[13284, 13284], 'mapped', [53, 26085]],
		[[13285, 13285], 'mapped', [54, 26085]],
		[[13286, 13286], 'mapped', [55, 26085]],
		[[13287, 13287], 'mapped', [56, 26085]],
		[[13288, 13288], 'mapped', [57, 26085]],
		[[13289, 13289], 'mapped', [49, 48, 26085]],
		[[13290, 13290], 'mapped', [49, 49, 26085]],
		[[13291, 13291], 'mapped', [49, 50, 26085]],
		[[13292, 13292], 'mapped', [49, 51, 26085]],
		[[13293, 13293], 'mapped', [49, 52, 26085]],
		[[13294, 13294], 'mapped', [49, 53, 26085]],
		[[13295, 13295], 'mapped', [49, 54, 26085]],
		[[13296, 13296], 'mapped', [49, 55, 26085]],
		[[13297, 13297], 'mapped', [49, 56, 26085]],
		[[13298, 13298], 'mapped', [49, 57, 26085]],
		[[13299, 13299], 'mapped', [50, 48, 26085]],
		[[13300, 13300], 'mapped', [50, 49, 26085]],
		[[13301, 13301], 'mapped', [50, 50, 26085]],
		[[13302, 13302], 'mapped', [50, 51, 26085]],
		[[13303, 13303], 'mapped', [50, 52, 26085]],
		[[13304, 13304], 'mapped', [50, 53, 26085]],
		[[13305, 13305], 'mapped', [50, 54, 26085]],
		[[13306, 13306], 'mapped', [50, 55, 26085]],
		[[13307, 13307], 'mapped', [50, 56, 26085]],
		[[13308, 13308], 'mapped', [50, 57, 26085]],
		[[13309, 13309], 'mapped', [51, 48, 26085]],
		[[13310, 13310], 'mapped', [51, 49, 26085]],
		[[13311, 13311], 'mapped', [103, 97, 108]],
		[[13312, 19893], 'valid'],
		[[19894, 19903], 'disallowed'],
		[[19904, 19967], 'valid', [], 'NV8'],
		[[19968, 40869], 'valid'],
		[[40870, 40891], 'valid'],
		[[40892, 40899], 'valid'],
		[[40900, 40907], 'valid'],
		[[40908, 40908], 'valid'],
		[[40909, 40917], 'valid'],
		[[40918, 40959], 'disallowed'],
		[[40960, 42124], 'valid'],
		[[42125, 42127], 'disallowed'],
		[[42128, 42145], 'valid', [], 'NV8'],
		[[42146, 42147], 'valid', [], 'NV8'],
		[[42148, 42163], 'valid', [], 'NV8'],
		[[42164, 42164], 'valid', [], 'NV8'],
		[[42165, 42176], 'valid', [], 'NV8'],
		[[42177, 42177], 'valid', [], 'NV8'],
		[[42178, 42180], 'valid', [], 'NV8'],
		[[42181, 42181], 'valid', [], 'NV8'],
		[[42182, 42182], 'valid', [], 'NV8'],
		[[42183, 42191], 'disallowed'],
		[[42192, 42237], 'valid'],
		[[42238, 42239], 'valid', [], 'NV8'],
		[[42240, 42508], 'valid'],
		[[42509, 42511], 'valid', [], 'NV8'],
		[[42512, 42539], 'valid'],
		[[42540, 42559], 'disallowed'],
		[[42560, 42560], 'mapped', [42561]],
		[[42561, 42561], 'valid'],
		[[42562, 42562], 'mapped', [42563]],
		[[42563, 42563], 'valid'],
		[[42564, 42564], 'mapped', [42565]],
		[[42565, 42565], 'valid'],
		[[42566, 42566], 'mapped', [42567]],
		[[42567, 42567], 'valid'],
		[[42568, 42568], 'mapped', [42569]],
		[[42569, 42569], 'valid'],
		[[42570, 42570], 'mapped', [42571]],
		[[42571, 42571], 'valid'],
		[[42572, 42572], 'mapped', [42573]],
		[[42573, 42573], 'valid'],
		[[42574, 42574], 'mapped', [42575]],
		[[42575, 42575], 'valid'],
		[[42576, 42576], 'mapped', [42577]],
		[[42577, 42577], 'valid'],
		[[42578, 42578], 'mapped', [42579]],
		[[42579, 42579], 'valid'],
		[[42580, 42580], 'mapped', [42581]],
		[[42581, 42581], 'valid'],
		[[42582, 42582], 'mapped', [42583]],
		[[42583, 42583], 'valid'],
		[[42584, 42584], 'mapped', [42585]],
		[[42585, 42585], 'valid'],
		[[42586, 42586], 'mapped', [42587]],
		[[42587, 42587], 'valid'],
		[[42588, 42588], 'mapped', [42589]],
		[[42589, 42589], 'valid'],
		[[42590, 42590], 'mapped', [42591]],
		[[42591, 42591], 'valid'],
		[[42592, 42592], 'mapped', [42593]],
		[[42593, 42593], 'valid'],
		[[42594, 42594], 'mapped', [42595]],
		[[42595, 42595], 'valid'],
		[[42596, 42596], 'mapped', [42597]],
		[[42597, 42597], 'valid'],
		[[42598, 42598], 'mapped', [42599]],
		[[42599, 42599], 'valid'],
		[[42600, 42600], 'mapped', [42601]],
		[[42601, 42601], 'valid'],
		[[42602, 42602], 'mapped', [42603]],
		[[42603, 42603], 'valid'],
		[[42604, 42604], 'mapped', [42605]],
		[[42605, 42607], 'valid'],
		[[42608, 42611], 'valid', [], 'NV8'],
		[[42612, 42619], 'valid'],
		[[42620, 42621], 'valid'],
		[[42622, 42622], 'valid', [], 'NV8'],
		[[42623, 42623], 'valid'],
		[[42624, 42624], 'mapped', [42625]],
		[[42625, 42625], 'valid'],
		[[42626, 42626], 'mapped', [42627]],
		[[42627, 42627], 'valid'],
		[[42628, 42628], 'mapped', [42629]],
		[[42629, 42629], 'valid'],
		[[42630, 42630], 'mapped', [42631]],
		[[42631, 42631], 'valid'],
		[[42632, 42632], 'mapped', [42633]],
		[[42633, 42633], 'valid'],
		[[42634, 42634], 'mapped', [42635]],
		[[42635, 42635], 'valid'],
		[[42636, 42636], 'mapped', [42637]],
		[[42637, 42637], 'valid'],
		[[42638, 42638], 'mapped', [42639]],
		[[42639, 42639], 'valid'],
		[[42640, 42640], 'mapped', [42641]],
		[[42641, 42641], 'valid'],
		[[42642, 42642], 'mapped', [42643]],
		[[42643, 42643], 'valid'],
		[[42644, 42644], 'mapped', [42645]],
		[[42645, 42645], 'valid'],
		[[42646, 42646], 'mapped', [42647]],
		[[42647, 42647], 'valid'],
		[[42648, 42648], 'mapped', [42649]],
		[[42649, 42649], 'valid'],
		[[42650, 42650], 'mapped', [42651]],
		[[42651, 42651], 'valid'],
		[[42652, 42652], 'mapped', [1098]],
		[[42653, 42653], 'mapped', [1100]],
		[[42654, 42654], 'valid'],
		[[42655, 42655], 'valid'],
		[[42656, 42725], 'valid'],
		[[42726, 42735], 'valid', [], 'NV8'],
		[[42736, 42737], 'valid'],
		[[42738, 42743], 'valid', [], 'NV8'],
		[[42744, 42751], 'disallowed'],
		[[42752, 42774], 'valid', [], 'NV8'],
		[[42775, 42778], 'valid'],
		[[42779, 42783], 'valid'],
		[[42784, 42785], 'valid', [], 'NV8'],
		[[42786, 42786], 'mapped', [42787]],
		[[42787, 42787], 'valid'],
		[[42788, 42788], 'mapped', [42789]],
		[[42789, 42789], 'valid'],
		[[42790, 42790], 'mapped', [42791]],
		[[42791, 42791], 'valid'],
		[[42792, 42792], 'mapped', [42793]],
		[[42793, 42793], 'valid'],
		[[42794, 42794], 'mapped', [42795]],
		[[42795, 42795], 'valid'],
		[[42796, 42796], 'mapped', [42797]],
		[[42797, 42797], 'valid'],
		[[42798, 42798], 'mapped', [42799]],
		[[42799, 42801], 'valid'],
		[[42802, 42802], 'mapped', [42803]],
		[[42803, 42803], 'valid'],
		[[42804, 42804], 'mapped', [42805]],
		[[42805, 42805], 'valid'],
		[[42806, 42806], 'mapped', [42807]],
		[[42807, 42807], 'valid'],
		[[42808, 42808], 'mapped', [42809]],
		[[42809, 42809], 'valid'],
		[[42810, 42810], 'mapped', [42811]],
		[[42811, 42811], 'valid'],
		[[42812, 42812], 'mapped', [42813]],
		[[42813, 42813], 'valid'],
		[[42814, 42814], 'mapped', [42815]],
		[[42815, 42815], 'valid'],
		[[42816, 42816], 'mapped', [42817]],
		[[42817, 42817], 'valid'],
		[[42818, 42818], 'mapped', [42819]],
		[[42819, 42819], 'valid'],
		[[42820, 42820], 'mapped', [42821]],
		[[42821, 42821], 'valid'],
		[[42822, 42822], 'mapped', [42823]],
		[[42823, 42823], 'valid'],
		[[42824, 42824], 'mapped', [42825]],
		[[42825, 42825], 'valid'],
		[[42826, 42826], 'mapped', [42827]],
		[[42827, 42827], 'valid'],
		[[42828, 42828], 'mapped', [42829]],
		[[42829, 42829], 'valid'],
		[[42830, 42830], 'mapped', [42831]],
		[[42831, 42831], 'valid'],
		[[42832, 42832], 'mapped', [42833]],
		[[42833, 42833], 'valid'],
		[[42834, 42834], 'mapped', [42835]],
		[[42835, 42835], 'valid'],
		[[42836, 42836], 'mapped', [42837]],
		[[42837, 42837], 'valid'],
		[[42838, 42838], 'mapped', [42839]],
		[[42839, 42839], 'valid'],
		[[42840, 42840], 'mapped', [42841]],
		[[42841, 42841], 'valid'],
		[[42842, 42842], 'mapped', [42843]],
		[[42843, 42843], 'valid'],
		[[42844, 42844], 'mapped', [42845]],
		[[42845, 42845], 'valid'],
		[[42846, 42846], 'mapped', [42847]],
		[[42847, 42847], 'valid'],
		[[42848, 42848], 'mapped', [42849]],
		[[42849, 42849], 'valid'],
		[[42850, 42850], 'mapped', [42851]],
		[[42851, 42851], 'valid'],
		[[42852, 42852], 'mapped', [42853]],
		[[42853, 42853], 'valid'],
		[[42854, 42854], 'mapped', [42855]],
		[[42855, 42855], 'valid'],
		[[42856, 42856], 'mapped', [42857]],
		[[42857, 42857], 'valid'],
		[[42858, 42858], 'mapped', [42859]],
		[[42859, 42859], 'valid'],
		[[42860, 42860], 'mapped', [42861]],
		[[42861, 42861], 'valid'],
		[[42862, 42862], 'mapped', [42863]],
		[[42863, 42863], 'valid'],
		[[42864, 42864], 'mapped', [42863]],
		[[42865, 42872], 'valid'],
		[[42873, 42873], 'mapped', [42874]],
		[[42874, 42874], 'valid'],
		[[42875, 42875], 'mapped', [42876]],
		[[42876, 42876], 'valid'],
		[[42877, 42877], 'mapped', [7545]],
		[[42878, 42878], 'mapped', [42879]],
		[[42879, 42879], 'valid'],
		[[42880, 42880], 'mapped', [42881]],
		[[42881, 42881], 'valid'],
		[[42882, 42882], 'mapped', [42883]],
		[[42883, 42883], 'valid'],
		[[42884, 42884], 'mapped', [42885]],
		[[42885, 42885], 'valid'],
		[[42886, 42886], 'mapped', [42887]],
		[[42887, 42888], 'valid'],
		[[42889, 42890], 'valid', [], 'NV8'],
		[[42891, 42891], 'mapped', [42892]],
		[[42892, 42892], 'valid'],
		[[42893, 42893], 'mapped', [613]],
		[[42894, 42894], 'valid'],
		[[42895, 42895], 'valid'],
		[[42896, 42896], 'mapped', [42897]],
		[[42897, 42897], 'valid'],
		[[42898, 42898], 'mapped', [42899]],
		[[42899, 42899], 'valid'],
		[[42900, 42901], 'valid'],
		[[42902, 42902], 'mapped', [42903]],
		[[42903, 42903], 'valid'],
		[[42904, 42904], 'mapped', [42905]],
		[[42905, 42905], 'valid'],
		[[42906, 42906], 'mapped', [42907]],
		[[42907, 42907], 'valid'],
		[[42908, 42908], 'mapped', [42909]],
		[[42909, 42909], 'valid'],
		[[42910, 42910], 'mapped', [42911]],
		[[42911, 42911], 'valid'],
		[[42912, 42912], 'mapped', [42913]],
		[[42913, 42913], 'valid'],
		[[42914, 42914], 'mapped', [42915]],
		[[42915, 42915], 'valid'],
		[[42916, 42916], 'mapped', [42917]],
		[[42917, 42917], 'valid'],
		[[42918, 42918], 'mapped', [42919]],
		[[42919, 42919], 'valid'],
		[[42920, 42920], 'mapped', [42921]],
		[[42921, 42921], 'valid'],
		[[42922, 42922], 'mapped', [614]],
		[[42923, 42923], 'mapped', [604]],
		[[42924, 42924], 'mapped', [609]],
		[[42925, 42925], 'mapped', [620]],
		[[42926, 42927], 'disallowed'],
		[[42928, 42928], 'mapped', [670]],
		[[42929, 42929], 'mapped', [647]],
		[[42930, 42930], 'mapped', [669]],
		[[42931, 42931], 'mapped', [43859]],
		[[42932, 42932], 'mapped', [42933]],
		[[42933, 42933], 'valid'],
		[[42934, 42934], 'mapped', [42935]],
		[[42935, 42935], 'valid'],
		[[42936, 42998], 'disallowed'],
		[[42999, 42999], 'valid'],
		[[43e3, 43e3], 'mapped', [295]],
		[[43001, 43001], 'mapped', [339]],
		[[43002, 43002], 'valid'],
		[[43003, 43007], 'valid'],
		[[43008, 43047], 'valid'],
		[[43048, 43051], 'valid', [], 'NV8'],
		[[43052, 43055], 'disallowed'],
		[[43056, 43065], 'valid', [], 'NV8'],
		[[43066, 43071], 'disallowed'],
		[[43072, 43123], 'valid'],
		[[43124, 43127], 'valid', [], 'NV8'],
		[[43128, 43135], 'disallowed'],
		[[43136, 43204], 'valid'],
		[[43205, 43213], 'disallowed'],
		[[43214, 43215], 'valid', [], 'NV8'],
		[[43216, 43225], 'valid'],
		[[43226, 43231], 'disallowed'],
		[[43232, 43255], 'valid'],
		[[43256, 43258], 'valid', [], 'NV8'],
		[[43259, 43259], 'valid'],
		[[43260, 43260], 'valid', [], 'NV8'],
		[[43261, 43261], 'valid'],
		[[43262, 43263], 'disallowed'],
		[[43264, 43309], 'valid'],
		[[43310, 43311], 'valid', [], 'NV8'],
		[[43312, 43347], 'valid'],
		[[43348, 43358], 'disallowed'],
		[[43359, 43359], 'valid', [], 'NV8'],
		[[43360, 43388], 'valid', [], 'NV8'],
		[[43389, 43391], 'disallowed'],
		[[43392, 43456], 'valid'],
		[[43457, 43469], 'valid', [], 'NV8'],
		[[43470, 43470], 'disallowed'],
		[[43471, 43481], 'valid'],
		[[43482, 43485], 'disallowed'],
		[[43486, 43487], 'valid', [], 'NV8'],
		[[43488, 43518], 'valid'],
		[[43519, 43519], 'disallowed'],
		[[43520, 43574], 'valid'],
		[[43575, 43583], 'disallowed'],
		[[43584, 43597], 'valid'],
		[[43598, 43599], 'disallowed'],
		[[43600, 43609], 'valid'],
		[[43610, 43611], 'disallowed'],
		[[43612, 43615], 'valid', [], 'NV8'],
		[[43616, 43638], 'valid'],
		[[43639, 43641], 'valid', [], 'NV8'],
		[[43642, 43643], 'valid'],
		[[43644, 43647], 'valid'],
		[[43648, 43714], 'valid'],
		[[43715, 43738], 'disallowed'],
		[[43739, 43741], 'valid'],
		[[43742, 43743], 'valid', [], 'NV8'],
		[[43744, 43759], 'valid'],
		[[43760, 43761], 'valid', [], 'NV8'],
		[[43762, 43766], 'valid'],
		[[43767, 43776], 'disallowed'],
		[[43777, 43782], 'valid'],
		[[43783, 43784], 'disallowed'],
		[[43785, 43790], 'valid'],
		[[43791, 43792], 'disallowed'],
		[[43793, 43798], 'valid'],
		[[43799, 43807], 'disallowed'],
		[[43808, 43814], 'valid'],
		[[43815, 43815], 'disallowed'],
		[[43816, 43822], 'valid'],
		[[43823, 43823], 'disallowed'],
		[[43824, 43866], 'valid'],
		[[43867, 43867], 'valid', [], 'NV8'],
		[[43868, 43868], 'mapped', [42791]],
		[[43869, 43869], 'mapped', [43831]],
		[[43870, 43870], 'mapped', [619]],
		[[43871, 43871], 'mapped', [43858]],
		[[43872, 43875], 'valid'],
		[[43876, 43877], 'valid'],
		[[43878, 43887], 'disallowed'],
		[[43888, 43888], 'mapped', [5024]],
		[[43889, 43889], 'mapped', [5025]],
		[[43890, 43890], 'mapped', [5026]],
		[[43891, 43891], 'mapped', [5027]],
		[[43892, 43892], 'mapped', [5028]],
		[[43893, 43893], 'mapped', [5029]],
		[[43894, 43894], 'mapped', [5030]],
		[[43895, 43895], 'mapped', [5031]],
		[[43896, 43896], 'mapped', [5032]],
		[[43897, 43897], 'mapped', [5033]],
		[[43898, 43898], 'mapped', [5034]],
		[[43899, 43899], 'mapped', [5035]],
		[[43900, 43900], 'mapped', [5036]],
		[[43901, 43901], 'mapped', [5037]],
		[[43902, 43902], 'mapped', [5038]],
		[[43903, 43903], 'mapped', [5039]],
		[[43904, 43904], 'mapped', [5040]],
		[[43905, 43905], 'mapped', [5041]],
		[[43906, 43906], 'mapped', [5042]],
		[[43907, 43907], 'mapped', [5043]],
		[[43908, 43908], 'mapped', [5044]],
		[[43909, 43909], 'mapped', [5045]],
		[[43910, 43910], 'mapped', [5046]],
		[[43911, 43911], 'mapped', [5047]],
		[[43912, 43912], 'mapped', [5048]],
		[[43913, 43913], 'mapped', [5049]],
		[[43914, 43914], 'mapped', [5050]],
		[[43915, 43915], 'mapped', [5051]],
		[[43916, 43916], 'mapped', [5052]],
		[[43917, 43917], 'mapped', [5053]],
		[[43918, 43918], 'mapped', [5054]],
		[[43919, 43919], 'mapped', [5055]],
		[[43920, 43920], 'mapped', [5056]],
		[[43921, 43921], 'mapped', [5057]],
		[[43922, 43922], 'mapped', [5058]],
		[[43923, 43923], 'mapped', [5059]],
		[[43924, 43924], 'mapped', [5060]],
		[[43925, 43925], 'mapped', [5061]],
		[[43926, 43926], 'mapped', [5062]],
		[[43927, 43927], 'mapped', [5063]],
		[[43928, 43928], 'mapped', [5064]],
		[[43929, 43929], 'mapped', [5065]],
		[[43930, 43930], 'mapped', [5066]],
		[[43931, 43931], 'mapped', [5067]],
		[[43932, 43932], 'mapped', [5068]],
		[[43933, 43933], 'mapped', [5069]],
		[[43934, 43934], 'mapped', [5070]],
		[[43935, 43935], 'mapped', [5071]],
		[[43936, 43936], 'mapped', [5072]],
		[[43937, 43937], 'mapped', [5073]],
		[[43938, 43938], 'mapped', [5074]],
		[[43939, 43939], 'mapped', [5075]],
		[[43940, 43940], 'mapped', [5076]],
		[[43941, 43941], 'mapped', [5077]],
		[[43942, 43942], 'mapped', [5078]],
		[[43943, 43943], 'mapped', [5079]],
		[[43944, 43944], 'mapped', [5080]],
		[[43945, 43945], 'mapped', [5081]],
		[[43946, 43946], 'mapped', [5082]],
		[[43947, 43947], 'mapped', [5083]],
		[[43948, 43948], 'mapped', [5084]],
		[[43949, 43949], 'mapped', [5085]],
		[[43950, 43950], 'mapped', [5086]],
		[[43951, 43951], 'mapped', [5087]],
		[[43952, 43952], 'mapped', [5088]],
		[[43953, 43953], 'mapped', [5089]],
		[[43954, 43954], 'mapped', [5090]],
		[[43955, 43955], 'mapped', [5091]],
		[[43956, 43956], 'mapped', [5092]],
		[[43957, 43957], 'mapped', [5093]],
		[[43958, 43958], 'mapped', [5094]],
		[[43959, 43959], 'mapped', [5095]],
		[[43960, 43960], 'mapped', [5096]],
		[[43961, 43961], 'mapped', [5097]],
		[[43962, 43962], 'mapped', [5098]],
		[[43963, 43963], 'mapped', [5099]],
		[[43964, 43964], 'mapped', [5100]],
		[[43965, 43965], 'mapped', [5101]],
		[[43966, 43966], 'mapped', [5102]],
		[[43967, 43967], 'mapped', [5103]],
		[[43968, 44010], 'valid'],
		[[44011, 44011], 'valid', [], 'NV8'],
		[[44012, 44013], 'valid'],
		[[44014, 44015], 'disallowed'],
		[[44016, 44025], 'valid'],
		[[44026, 44031], 'disallowed'],
		[[44032, 55203], 'valid'],
		[[55204, 55215], 'disallowed'],
		[[55216, 55238], 'valid', [], 'NV8'],
		[[55239, 55242], 'disallowed'],
		[[55243, 55291], 'valid', [], 'NV8'],
		[[55292, 55295], 'disallowed'],
		[[55296, 57343], 'disallowed'],
		[[57344, 63743], 'disallowed'],
		[[63744, 63744], 'mapped', [35912]],
		[[63745, 63745], 'mapped', [26356]],
		[[63746, 63746], 'mapped', [36554]],
		[[63747, 63747], 'mapped', [36040]],
		[[63748, 63748], 'mapped', [28369]],
		[[63749, 63749], 'mapped', [20018]],
		[[63750, 63750], 'mapped', [21477]],
		[[63751, 63752], 'mapped', [40860]],
		[[63753, 63753], 'mapped', [22865]],
		[[63754, 63754], 'mapped', [37329]],
		[[63755, 63755], 'mapped', [21895]],
		[[63756, 63756], 'mapped', [22856]],
		[[63757, 63757], 'mapped', [25078]],
		[[63758, 63758], 'mapped', [30313]],
		[[63759, 63759], 'mapped', [32645]],
		[[63760, 63760], 'mapped', [34367]],
		[[63761, 63761], 'mapped', [34746]],
		[[63762, 63762], 'mapped', [35064]],
		[[63763, 63763], 'mapped', [37007]],
		[[63764, 63764], 'mapped', [27138]],
		[[63765, 63765], 'mapped', [27931]],
		[[63766, 63766], 'mapped', [28889]],
		[[63767, 63767], 'mapped', [29662]],
		[[63768, 63768], 'mapped', [33853]],
		[[63769, 63769], 'mapped', [37226]],
		[[63770, 63770], 'mapped', [39409]],
		[[63771, 63771], 'mapped', [20098]],
		[[63772, 63772], 'mapped', [21365]],
		[[63773, 63773], 'mapped', [27396]],
		[[63774, 63774], 'mapped', [29211]],
		[[63775, 63775], 'mapped', [34349]],
		[[63776, 63776], 'mapped', [40478]],
		[[63777, 63777], 'mapped', [23888]],
		[[63778, 63778], 'mapped', [28651]],
		[[63779, 63779], 'mapped', [34253]],
		[[63780, 63780], 'mapped', [35172]],
		[[63781, 63781], 'mapped', [25289]],
		[[63782, 63782], 'mapped', [33240]],
		[[63783, 63783], 'mapped', [34847]],
		[[63784, 63784], 'mapped', [24266]],
		[[63785, 63785], 'mapped', [26391]],
		[[63786, 63786], 'mapped', [28010]],
		[[63787, 63787], 'mapped', [29436]],
		[[63788, 63788], 'mapped', [37070]],
		[[63789, 63789], 'mapped', [20358]],
		[[63790, 63790], 'mapped', [20919]],
		[[63791, 63791], 'mapped', [21214]],
		[[63792, 63792], 'mapped', [25796]],
		[[63793, 63793], 'mapped', [27347]],
		[[63794, 63794], 'mapped', [29200]],
		[[63795, 63795], 'mapped', [30439]],
		[[63796, 63796], 'mapped', [32769]],
		[[63797, 63797], 'mapped', [34310]],
		[[63798, 63798], 'mapped', [34396]],
		[[63799, 63799], 'mapped', [36335]],
		[[63800, 63800], 'mapped', [38706]],
		[[63801, 63801], 'mapped', [39791]],
		[[63802, 63802], 'mapped', [40442]],
		[[63803, 63803], 'mapped', [30860]],
		[[63804, 63804], 'mapped', [31103]],
		[[63805, 63805], 'mapped', [32160]],
		[[63806, 63806], 'mapped', [33737]],
		[[63807, 63807], 'mapped', [37636]],
		[[63808, 63808], 'mapped', [40575]],
		[[63809, 63809], 'mapped', [35542]],
		[[63810, 63810], 'mapped', [22751]],
		[[63811, 63811], 'mapped', [24324]],
		[[63812, 63812], 'mapped', [31840]],
		[[63813, 63813], 'mapped', [32894]],
		[[63814, 63814], 'mapped', [29282]],
		[[63815, 63815], 'mapped', [30922]],
		[[63816, 63816], 'mapped', [36034]],
		[[63817, 63817], 'mapped', [38647]],
		[[63818, 63818], 'mapped', [22744]],
		[[63819, 63819], 'mapped', [23650]],
		[[63820, 63820], 'mapped', [27155]],
		[[63821, 63821], 'mapped', [28122]],
		[[63822, 63822], 'mapped', [28431]],
		[[63823, 63823], 'mapped', [32047]],
		[[63824, 63824], 'mapped', [32311]],
		[[63825, 63825], 'mapped', [38475]],
		[[63826, 63826], 'mapped', [21202]],
		[[63827, 63827], 'mapped', [32907]],
		[[63828, 63828], 'mapped', [20956]],
		[[63829, 63829], 'mapped', [20940]],
		[[63830, 63830], 'mapped', [31260]],
		[[63831, 63831], 'mapped', [32190]],
		[[63832, 63832], 'mapped', [33777]],
		[[63833, 63833], 'mapped', [38517]],
		[[63834, 63834], 'mapped', [35712]],
		[[63835, 63835], 'mapped', [25295]],
		[[63836, 63836], 'mapped', [27138]],
		[[63837, 63837], 'mapped', [35582]],
		[[63838, 63838], 'mapped', [20025]],
		[[63839, 63839], 'mapped', [23527]],
		[[63840, 63840], 'mapped', [24594]],
		[[63841, 63841], 'mapped', [29575]],
		[[63842, 63842], 'mapped', [30064]],
		[[63843, 63843], 'mapped', [21271]],
		[[63844, 63844], 'mapped', [30971]],
		[[63845, 63845], 'mapped', [20415]],
		[[63846, 63846], 'mapped', [24489]],
		[[63847, 63847], 'mapped', [19981]],
		[[63848, 63848], 'mapped', [27852]],
		[[63849, 63849], 'mapped', [25976]],
		[[63850, 63850], 'mapped', [32034]],
		[[63851, 63851], 'mapped', [21443]],
		[[63852, 63852], 'mapped', [22622]],
		[[63853, 63853], 'mapped', [30465]],
		[[63854, 63854], 'mapped', [33865]],
		[[63855, 63855], 'mapped', [35498]],
		[[63856, 63856], 'mapped', [27578]],
		[[63857, 63857], 'mapped', [36784]],
		[[63858, 63858], 'mapped', [27784]],
		[[63859, 63859], 'mapped', [25342]],
		[[63860, 63860], 'mapped', [33509]],
		[[63861, 63861], 'mapped', [25504]],
		[[63862, 63862], 'mapped', [30053]],
		[[63863, 63863], 'mapped', [20142]],
		[[63864, 63864], 'mapped', [20841]],
		[[63865, 63865], 'mapped', [20937]],
		[[63866, 63866], 'mapped', [26753]],
		[[63867, 63867], 'mapped', [31975]],
		[[63868, 63868], 'mapped', [33391]],
		[[63869, 63869], 'mapped', [35538]],
		[[63870, 63870], 'mapped', [37327]],
		[[63871, 63871], 'mapped', [21237]],
		[[63872, 63872], 'mapped', [21570]],
		[[63873, 63873], 'mapped', [22899]],
		[[63874, 63874], 'mapped', [24300]],
		[[63875, 63875], 'mapped', [26053]],
		[[63876, 63876], 'mapped', [28670]],
		[[63877, 63877], 'mapped', [31018]],
		[[63878, 63878], 'mapped', [38317]],
		[[63879, 63879], 'mapped', [39530]],
		[[63880, 63880], 'mapped', [40599]],
		[[63881, 63881], 'mapped', [40654]],
		[[63882, 63882], 'mapped', [21147]],
		[[63883, 63883], 'mapped', [26310]],
		[[63884, 63884], 'mapped', [27511]],
		[[63885, 63885], 'mapped', [36706]],
		[[63886, 63886], 'mapped', [24180]],
		[[63887, 63887], 'mapped', [24976]],
		[[63888, 63888], 'mapped', [25088]],
		[[63889, 63889], 'mapped', [25754]],
		[[63890, 63890], 'mapped', [28451]],
		[[63891, 63891], 'mapped', [29001]],
		[[63892, 63892], 'mapped', [29833]],
		[[63893, 63893], 'mapped', [31178]],
		[[63894, 63894], 'mapped', [32244]],
		[[63895, 63895], 'mapped', [32879]],
		[[63896, 63896], 'mapped', [36646]],
		[[63897, 63897], 'mapped', [34030]],
		[[63898, 63898], 'mapped', [36899]],
		[[63899, 63899], 'mapped', [37706]],
		[[63900, 63900], 'mapped', [21015]],
		[[63901, 63901], 'mapped', [21155]],
		[[63902, 63902], 'mapped', [21693]],
		[[63903, 63903], 'mapped', [28872]],
		[[63904, 63904], 'mapped', [35010]],
		[[63905, 63905], 'mapped', [35498]],
		[[63906, 63906], 'mapped', [24265]],
		[[63907, 63907], 'mapped', [24565]],
		[[63908, 63908], 'mapped', [25467]],
		[[63909, 63909], 'mapped', [27566]],
		[[63910, 63910], 'mapped', [31806]],
		[[63911, 63911], 'mapped', [29557]],
		[[63912, 63912], 'mapped', [20196]],
		[[63913, 63913], 'mapped', [22265]],
		[[63914, 63914], 'mapped', [23527]],
		[[63915, 63915], 'mapped', [23994]],
		[[63916, 63916], 'mapped', [24604]],
		[[63917, 63917], 'mapped', [29618]],
		[[63918, 63918], 'mapped', [29801]],
		[[63919, 63919], 'mapped', [32666]],
		[[63920, 63920], 'mapped', [32838]],
		[[63921, 63921], 'mapped', [37428]],
		[[63922, 63922], 'mapped', [38646]],
		[[63923, 63923], 'mapped', [38728]],
		[[63924, 63924], 'mapped', [38936]],
		[[63925, 63925], 'mapped', [20363]],
		[[63926, 63926], 'mapped', [31150]],
		[[63927, 63927], 'mapped', [37300]],
		[[63928, 63928], 'mapped', [38584]],
		[[63929, 63929], 'mapped', [24801]],
		[[63930, 63930], 'mapped', [20102]],
		[[63931, 63931], 'mapped', [20698]],
		[[63932, 63932], 'mapped', [23534]],
		[[63933, 63933], 'mapped', [23615]],
		[[63934, 63934], 'mapped', [26009]],
		[[63935, 63935], 'mapped', [27138]],
		[[63936, 63936], 'mapped', [29134]],
		[[63937, 63937], 'mapped', [30274]],
		[[63938, 63938], 'mapped', [34044]],
		[[63939, 63939], 'mapped', [36988]],
		[[63940, 63940], 'mapped', [40845]],
		[[63941, 63941], 'mapped', [26248]],
		[[63942, 63942], 'mapped', [38446]],
		[[63943, 63943], 'mapped', [21129]],
		[[63944, 63944], 'mapped', [26491]],
		[[63945, 63945], 'mapped', [26611]],
		[[63946, 63946], 'mapped', [27969]],
		[[63947, 63947], 'mapped', [28316]],
		[[63948, 63948], 'mapped', [29705]],
		[[63949, 63949], 'mapped', [30041]],
		[[63950, 63950], 'mapped', [30827]],
		[[63951, 63951], 'mapped', [32016]],
		[[63952, 63952], 'mapped', [39006]],
		[[63953, 63953], 'mapped', [20845]],
		[[63954, 63954], 'mapped', [25134]],
		[[63955, 63955], 'mapped', [38520]],
		[[63956, 63956], 'mapped', [20523]],
		[[63957, 63957], 'mapped', [23833]],
		[[63958, 63958], 'mapped', [28138]],
		[[63959, 63959], 'mapped', [36650]],
		[[63960, 63960], 'mapped', [24459]],
		[[63961, 63961], 'mapped', [24900]],
		[[63962, 63962], 'mapped', [26647]],
		[[63963, 63963], 'mapped', [29575]],
		[[63964, 63964], 'mapped', [38534]],
		[[63965, 63965], 'mapped', [21033]],
		[[63966, 63966], 'mapped', [21519]],
		[[63967, 63967], 'mapped', [23653]],
		[[63968, 63968], 'mapped', [26131]],
		[[63969, 63969], 'mapped', [26446]],
		[[63970, 63970], 'mapped', [26792]],
		[[63971, 63971], 'mapped', [27877]],
		[[63972, 63972], 'mapped', [29702]],
		[[63973, 63973], 'mapped', [30178]],
		[[63974, 63974], 'mapped', [32633]],
		[[63975, 63975], 'mapped', [35023]],
		[[63976, 63976], 'mapped', [35041]],
		[[63977, 63977], 'mapped', [37324]],
		[[63978, 63978], 'mapped', [38626]],
		[[63979, 63979], 'mapped', [21311]],
		[[63980, 63980], 'mapped', [28346]],
		[[63981, 63981], 'mapped', [21533]],
		[[63982, 63982], 'mapped', [29136]],
		[[63983, 63983], 'mapped', [29848]],
		[[63984, 63984], 'mapped', [34298]],
		[[63985, 63985], 'mapped', [38563]],
		[[63986, 63986], 'mapped', [40023]],
		[[63987, 63987], 'mapped', [40607]],
		[[63988, 63988], 'mapped', [26519]],
		[[63989, 63989], 'mapped', [28107]],
		[[63990, 63990], 'mapped', [33256]],
		[[63991, 63991], 'mapped', [31435]],
		[[63992, 63992], 'mapped', [31520]],
		[[63993, 63993], 'mapped', [31890]],
		[[63994, 63994], 'mapped', [29376]],
		[[63995, 63995], 'mapped', [28825]],
		[[63996, 63996], 'mapped', [35672]],
		[[63997, 63997], 'mapped', [20160]],
		[[63998, 63998], 'mapped', [33590]],
		[[63999, 63999], 'mapped', [21050]],
		[[64e3, 64e3], 'mapped', [20999]],
		[[64001, 64001], 'mapped', [24230]],
		[[64002, 64002], 'mapped', [25299]],
		[[64003, 64003], 'mapped', [31958]],
		[[64004, 64004], 'mapped', [23429]],
		[[64005, 64005], 'mapped', [27934]],
		[[64006, 64006], 'mapped', [26292]],
		[[64007, 64007], 'mapped', [36667]],
		[[64008, 64008], 'mapped', [34892]],
		[[64009, 64009], 'mapped', [38477]],
		[[64010, 64010], 'mapped', [35211]],
		[[64011, 64011], 'mapped', [24275]],
		[[64012, 64012], 'mapped', [20800]],
		[[64013, 64013], 'mapped', [21952]],
		[[64014, 64015], 'valid'],
		[[64016, 64016], 'mapped', [22618]],
		[[64017, 64017], 'valid'],
		[[64018, 64018], 'mapped', [26228]],
		[[64019, 64020], 'valid'],
		[[64021, 64021], 'mapped', [20958]],
		[[64022, 64022], 'mapped', [29482]],
		[[64023, 64023], 'mapped', [30410]],
		[[64024, 64024], 'mapped', [31036]],
		[[64025, 64025], 'mapped', [31070]],
		[[64026, 64026], 'mapped', [31077]],
		[[64027, 64027], 'mapped', [31119]],
		[[64028, 64028], 'mapped', [38742]],
		[[64029, 64029], 'mapped', [31934]],
		[[64030, 64030], 'mapped', [32701]],
		[[64031, 64031], 'valid'],
		[[64032, 64032], 'mapped', [34322]],
		[[64033, 64033], 'valid'],
		[[64034, 64034], 'mapped', [35576]],
		[[64035, 64036], 'valid'],
		[[64037, 64037], 'mapped', [36920]],
		[[64038, 64038], 'mapped', [37117]],
		[[64039, 64041], 'valid'],
		[[64042, 64042], 'mapped', [39151]],
		[[64043, 64043], 'mapped', [39164]],
		[[64044, 64044], 'mapped', [39208]],
		[[64045, 64045], 'mapped', [40372]],
		[[64046, 64046], 'mapped', [37086]],
		[[64047, 64047], 'mapped', [38583]],
		[[64048, 64048], 'mapped', [20398]],
		[[64049, 64049], 'mapped', [20711]],
		[[64050, 64050], 'mapped', [20813]],
		[[64051, 64051], 'mapped', [21193]],
		[[64052, 64052], 'mapped', [21220]],
		[[64053, 64053], 'mapped', [21329]],
		[[64054, 64054], 'mapped', [21917]],
		[[64055, 64055], 'mapped', [22022]],
		[[64056, 64056], 'mapped', [22120]],
		[[64057, 64057], 'mapped', [22592]],
		[[64058, 64058], 'mapped', [22696]],
		[[64059, 64059], 'mapped', [23652]],
		[[64060, 64060], 'mapped', [23662]],
		[[64061, 64061], 'mapped', [24724]],
		[[64062, 64062], 'mapped', [24936]],
		[[64063, 64063], 'mapped', [24974]],
		[[64064, 64064], 'mapped', [25074]],
		[[64065, 64065], 'mapped', [25935]],
		[[64066, 64066], 'mapped', [26082]],
		[[64067, 64067], 'mapped', [26257]],
		[[64068, 64068], 'mapped', [26757]],
		[[64069, 64069], 'mapped', [28023]],
		[[64070, 64070], 'mapped', [28186]],
		[[64071, 64071], 'mapped', [28450]],
		[[64072, 64072], 'mapped', [29038]],
		[[64073, 64073], 'mapped', [29227]],
		[[64074, 64074], 'mapped', [29730]],
		[[64075, 64075], 'mapped', [30865]],
		[[64076, 64076], 'mapped', [31038]],
		[[64077, 64077], 'mapped', [31049]],
		[[64078, 64078], 'mapped', [31048]],
		[[64079, 64079], 'mapped', [31056]],
		[[64080, 64080], 'mapped', [31062]],
		[[64081, 64081], 'mapped', [31069]],
		[[64082, 64082], 'mapped', [31117]],
		[[64083, 64083], 'mapped', [31118]],
		[[64084, 64084], 'mapped', [31296]],
		[[64085, 64085], 'mapped', [31361]],
		[[64086, 64086], 'mapped', [31680]],
		[[64087, 64087], 'mapped', [32244]],
		[[64088, 64088], 'mapped', [32265]],
		[[64089, 64089], 'mapped', [32321]],
		[[64090, 64090], 'mapped', [32626]],
		[[64091, 64091], 'mapped', [32773]],
		[[64092, 64092], 'mapped', [33261]],
		[[64093, 64094], 'mapped', [33401]],
		[[64095, 64095], 'mapped', [33879]],
		[[64096, 64096], 'mapped', [35088]],
		[[64097, 64097], 'mapped', [35222]],
		[[64098, 64098], 'mapped', [35585]],
		[[64099, 64099], 'mapped', [35641]],
		[[64100, 64100], 'mapped', [36051]],
		[[64101, 64101], 'mapped', [36104]],
		[[64102, 64102], 'mapped', [36790]],
		[[64103, 64103], 'mapped', [36920]],
		[[64104, 64104], 'mapped', [38627]],
		[[64105, 64105], 'mapped', [38911]],
		[[64106, 64106], 'mapped', [38971]],
		[[64107, 64107], 'mapped', [24693]],
		[[64108, 64108], 'mapped', [148206]],
		[[64109, 64109], 'mapped', [33304]],
		[[64110, 64111], 'disallowed'],
		[[64112, 64112], 'mapped', [20006]],
		[[64113, 64113], 'mapped', [20917]],
		[[64114, 64114], 'mapped', [20840]],
		[[64115, 64115], 'mapped', [20352]],
		[[64116, 64116], 'mapped', [20805]],
		[[64117, 64117], 'mapped', [20864]],
		[[64118, 64118], 'mapped', [21191]],
		[[64119, 64119], 'mapped', [21242]],
		[[64120, 64120], 'mapped', [21917]],
		[[64121, 64121], 'mapped', [21845]],
		[[64122, 64122], 'mapped', [21913]],
		[[64123, 64123], 'mapped', [21986]],
		[[64124, 64124], 'mapped', [22618]],
		[[64125, 64125], 'mapped', [22707]],
		[[64126, 64126], 'mapped', [22852]],
		[[64127, 64127], 'mapped', [22868]],
		[[64128, 64128], 'mapped', [23138]],
		[[64129, 64129], 'mapped', [23336]],
		[[64130, 64130], 'mapped', [24274]],
		[[64131, 64131], 'mapped', [24281]],
		[[64132, 64132], 'mapped', [24425]],
		[[64133, 64133], 'mapped', [24493]],
		[[64134, 64134], 'mapped', [24792]],
		[[64135, 64135], 'mapped', [24910]],
		[[64136, 64136], 'mapped', [24840]],
		[[64137, 64137], 'mapped', [24974]],
		[[64138, 64138], 'mapped', [24928]],
		[[64139, 64139], 'mapped', [25074]],
		[[64140, 64140], 'mapped', [25140]],
		[[64141, 64141], 'mapped', [25540]],
		[[64142, 64142], 'mapped', [25628]],
		[[64143, 64143], 'mapped', [25682]],
		[[64144, 64144], 'mapped', [25942]],
		[[64145, 64145], 'mapped', [26228]],
		[[64146, 64146], 'mapped', [26391]],
		[[64147, 64147], 'mapped', [26395]],
		[[64148, 64148], 'mapped', [26454]],
		[[64149, 64149], 'mapped', [27513]],
		[[64150, 64150], 'mapped', [27578]],
		[[64151, 64151], 'mapped', [27969]],
		[[64152, 64152], 'mapped', [28379]],
		[[64153, 64153], 'mapped', [28363]],
		[[64154, 64154], 'mapped', [28450]],
		[[64155, 64155], 'mapped', [28702]],
		[[64156, 64156], 'mapped', [29038]],
		[[64157, 64157], 'mapped', [30631]],
		[[64158, 64158], 'mapped', [29237]],
		[[64159, 64159], 'mapped', [29359]],
		[[64160, 64160], 'mapped', [29482]],
		[[64161, 64161], 'mapped', [29809]],
		[[64162, 64162], 'mapped', [29958]],
		[[64163, 64163], 'mapped', [30011]],
		[[64164, 64164], 'mapped', [30237]],
		[[64165, 64165], 'mapped', [30239]],
		[[64166, 64166], 'mapped', [30410]],
		[[64167, 64167], 'mapped', [30427]],
		[[64168, 64168], 'mapped', [30452]],
		[[64169, 64169], 'mapped', [30538]],
		[[64170, 64170], 'mapped', [30528]],
		[[64171, 64171], 'mapped', [30924]],
		[[64172, 64172], 'mapped', [31409]],
		[[64173, 64173], 'mapped', [31680]],
		[[64174, 64174], 'mapped', [31867]],
		[[64175, 64175], 'mapped', [32091]],
		[[64176, 64176], 'mapped', [32244]],
		[[64177, 64177], 'mapped', [32574]],
		[[64178, 64178], 'mapped', [32773]],
		[[64179, 64179], 'mapped', [33618]],
		[[64180, 64180], 'mapped', [33775]],
		[[64181, 64181], 'mapped', [34681]],
		[[64182, 64182], 'mapped', [35137]],
		[[64183, 64183], 'mapped', [35206]],
		[[64184, 64184], 'mapped', [35222]],
		[[64185, 64185], 'mapped', [35519]],
		[[64186, 64186], 'mapped', [35576]],
		[[64187, 64187], 'mapped', [35531]],
		[[64188, 64188], 'mapped', [35585]],
		[[64189, 64189], 'mapped', [35582]],
		[[64190, 64190], 'mapped', [35565]],
		[[64191, 64191], 'mapped', [35641]],
		[[64192, 64192], 'mapped', [35722]],
		[[64193, 64193], 'mapped', [36104]],
		[[64194, 64194], 'mapped', [36664]],
		[[64195, 64195], 'mapped', [36978]],
		[[64196, 64196], 'mapped', [37273]],
		[[64197, 64197], 'mapped', [37494]],
		[[64198, 64198], 'mapped', [38524]],
		[[64199, 64199], 'mapped', [38627]],
		[[64200, 64200], 'mapped', [38742]],
		[[64201, 64201], 'mapped', [38875]],
		[[64202, 64202], 'mapped', [38911]],
		[[64203, 64203], 'mapped', [38923]],
		[[64204, 64204], 'mapped', [38971]],
		[[64205, 64205], 'mapped', [39698]],
		[[64206, 64206], 'mapped', [40860]],
		[[64207, 64207], 'mapped', [141386]],
		[[64208, 64208], 'mapped', [141380]],
		[[64209, 64209], 'mapped', [144341]],
		[[64210, 64210], 'mapped', [15261]],
		[[64211, 64211], 'mapped', [16408]],
		[[64212, 64212], 'mapped', [16441]],
		[[64213, 64213], 'mapped', [152137]],
		[[64214, 64214], 'mapped', [154832]],
		[[64215, 64215], 'mapped', [163539]],
		[[64216, 64216], 'mapped', [40771]],
		[[64217, 64217], 'mapped', [40846]],
		[[64218, 64255], 'disallowed'],
		[[64256, 64256], 'mapped', [102, 102]],
		[[64257, 64257], 'mapped', [102, 105]],
		[[64258, 64258], 'mapped', [102, 108]],
		[[64259, 64259], 'mapped', [102, 102, 105]],
		[[64260, 64260], 'mapped', [102, 102, 108]],
		[[64261, 64262], 'mapped', [115, 116]],
		[[64263, 64274], 'disallowed'],
		[[64275, 64275], 'mapped', [1396, 1398]],
		[[64276, 64276], 'mapped', [1396, 1381]],
		[[64277, 64277], 'mapped', [1396, 1387]],
		[[64278, 64278], 'mapped', [1406, 1398]],
		[[64279, 64279], 'mapped', [1396, 1389]],
		[[64280, 64284], 'disallowed'],
		[[64285, 64285], 'mapped', [1497, 1460]],
		[[64286, 64286], 'valid'],
		[[64287, 64287], 'mapped', [1522, 1463]],
		[[64288, 64288], 'mapped', [1506]],
		[[64289, 64289], 'mapped', [1488]],
		[[64290, 64290], 'mapped', [1491]],
		[[64291, 64291], 'mapped', [1492]],
		[[64292, 64292], 'mapped', [1499]],
		[[64293, 64293], 'mapped', [1500]],
		[[64294, 64294], 'mapped', [1501]],
		[[64295, 64295], 'mapped', [1512]],
		[[64296, 64296], 'mapped', [1514]],
		[[64297, 64297], 'disallowed_STD3_mapped', [43]],
		[[64298, 64298], 'mapped', [1513, 1473]],
		[[64299, 64299], 'mapped', [1513, 1474]],
		[[64300, 64300], 'mapped', [1513, 1468, 1473]],
		[[64301, 64301], 'mapped', [1513, 1468, 1474]],
		[[64302, 64302], 'mapped', [1488, 1463]],
		[[64303, 64303], 'mapped', [1488, 1464]],
		[[64304, 64304], 'mapped', [1488, 1468]],
		[[64305, 64305], 'mapped', [1489, 1468]],
		[[64306, 64306], 'mapped', [1490, 1468]],
		[[64307, 64307], 'mapped', [1491, 1468]],
		[[64308, 64308], 'mapped', [1492, 1468]],
		[[64309, 64309], 'mapped', [1493, 1468]],
		[[64310, 64310], 'mapped', [1494, 1468]],
		[[64311, 64311], 'disallowed'],
		[[64312, 64312], 'mapped', [1496, 1468]],
		[[64313, 64313], 'mapped', [1497, 1468]],
		[[64314, 64314], 'mapped', [1498, 1468]],
		[[64315, 64315], 'mapped', [1499, 1468]],
		[[64316, 64316], 'mapped', [1500, 1468]],
		[[64317, 64317], 'disallowed'],
		[[64318, 64318], 'mapped', [1502, 1468]],
		[[64319, 64319], 'disallowed'],
		[[64320, 64320], 'mapped', [1504, 1468]],
		[[64321, 64321], 'mapped', [1505, 1468]],
		[[64322, 64322], 'disallowed'],
		[[64323, 64323], 'mapped', [1507, 1468]],
		[[64324, 64324], 'mapped', [1508, 1468]],
		[[64325, 64325], 'disallowed'],
		[[64326, 64326], 'mapped', [1510, 1468]],
		[[64327, 64327], 'mapped', [1511, 1468]],
		[[64328, 64328], 'mapped', [1512, 1468]],
		[[64329, 64329], 'mapped', [1513, 1468]],
		[[64330, 64330], 'mapped', [1514, 1468]],
		[[64331, 64331], 'mapped', [1493, 1465]],
		[[64332, 64332], 'mapped', [1489, 1471]],
		[[64333, 64333], 'mapped', [1499, 1471]],
		[[64334, 64334], 'mapped', [1508, 1471]],
		[[64335, 64335], 'mapped', [1488, 1500]],
		[[64336, 64337], 'mapped', [1649]],
		[[64338, 64341], 'mapped', [1659]],
		[[64342, 64345], 'mapped', [1662]],
		[[64346, 64349], 'mapped', [1664]],
		[[64350, 64353], 'mapped', [1658]],
		[[64354, 64357], 'mapped', [1663]],
		[[64358, 64361], 'mapped', [1657]],
		[[64362, 64365], 'mapped', [1700]],
		[[64366, 64369], 'mapped', [1702]],
		[[64370, 64373], 'mapped', [1668]],
		[[64374, 64377], 'mapped', [1667]],
		[[64378, 64381], 'mapped', [1670]],
		[[64382, 64385], 'mapped', [1671]],
		[[64386, 64387], 'mapped', [1677]],
		[[64388, 64389], 'mapped', [1676]],
		[[64390, 64391], 'mapped', [1678]],
		[[64392, 64393], 'mapped', [1672]],
		[[64394, 64395], 'mapped', [1688]],
		[[64396, 64397], 'mapped', [1681]],
		[[64398, 64401], 'mapped', [1705]],
		[[64402, 64405], 'mapped', [1711]],
		[[64406, 64409], 'mapped', [1715]],
		[[64410, 64413], 'mapped', [1713]],
		[[64414, 64415], 'mapped', [1722]],
		[[64416, 64419], 'mapped', [1723]],
		[[64420, 64421], 'mapped', [1728]],
		[[64422, 64425], 'mapped', [1729]],
		[[64426, 64429], 'mapped', [1726]],
		[[64430, 64431], 'mapped', [1746]],
		[[64432, 64433], 'mapped', [1747]],
		[[64434, 64449], 'valid', [], 'NV8'],
		[[64450, 64466], 'disallowed'],
		[[64467, 64470], 'mapped', [1709]],
		[[64471, 64472], 'mapped', [1735]],
		[[64473, 64474], 'mapped', [1734]],
		[[64475, 64476], 'mapped', [1736]],
		[[64477, 64477], 'mapped', [1735, 1652]],
		[[64478, 64479], 'mapped', [1739]],
		[[64480, 64481], 'mapped', [1733]],
		[[64482, 64483], 'mapped', [1737]],
		[[64484, 64487], 'mapped', [1744]],
		[[64488, 64489], 'mapped', [1609]],
		[[64490, 64491], 'mapped', [1574, 1575]],
		[[64492, 64493], 'mapped', [1574, 1749]],
		[[64494, 64495], 'mapped', [1574, 1608]],
		[[64496, 64497], 'mapped', [1574, 1735]],
		[[64498, 64499], 'mapped', [1574, 1734]],
		[[64500, 64501], 'mapped', [1574, 1736]],
		[[64502, 64504], 'mapped', [1574, 1744]],
		[[64505, 64507], 'mapped', [1574, 1609]],
		[[64508, 64511], 'mapped', [1740]],
		[[64512, 64512], 'mapped', [1574, 1580]],
		[[64513, 64513], 'mapped', [1574, 1581]],
		[[64514, 64514], 'mapped', [1574, 1605]],
		[[64515, 64515], 'mapped', [1574, 1609]],
		[[64516, 64516], 'mapped', [1574, 1610]],
		[[64517, 64517], 'mapped', [1576, 1580]],
		[[64518, 64518], 'mapped', [1576, 1581]],
		[[64519, 64519], 'mapped', [1576, 1582]],
		[[64520, 64520], 'mapped', [1576, 1605]],
		[[64521, 64521], 'mapped', [1576, 1609]],
		[[64522, 64522], 'mapped', [1576, 1610]],
		[[64523, 64523], 'mapped', [1578, 1580]],
		[[64524, 64524], 'mapped', [1578, 1581]],
		[[64525, 64525], 'mapped', [1578, 1582]],
		[[64526, 64526], 'mapped', [1578, 1605]],
		[[64527, 64527], 'mapped', [1578, 1609]],
		[[64528, 64528], 'mapped', [1578, 1610]],
		[[64529, 64529], 'mapped', [1579, 1580]],
		[[64530, 64530], 'mapped', [1579, 1605]],
		[[64531, 64531], 'mapped', [1579, 1609]],
		[[64532, 64532], 'mapped', [1579, 1610]],
		[[64533, 64533], 'mapped', [1580, 1581]],
		[[64534, 64534], 'mapped', [1580, 1605]],
		[[64535, 64535], 'mapped', [1581, 1580]],
		[[64536, 64536], 'mapped', [1581, 1605]],
		[[64537, 64537], 'mapped', [1582, 1580]],
		[[64538, 64538], 'mapped', [1582, 1581]],
		[[64539, 64539], 'mapped', [1582, 1605]],
		[[64540, 64540], 'mapped', [1587, 1580]],
		[[64541, 64541], 'mapped', [1587, 1581]],
		[[64542, 64542], 'mapped', [1587, 1582]],
		[[64543, 64543], 'mapped', [1587, 1605]],
		[[64544, 64544], 'mapped', [1589, 1581]],
		[[64545, 64545], 'mapped', [1589, 1605]],
		[[64546, 64546], 'mapped', [1590, 1580]],
		[[64547, 64547], 'mapped', [1590, 1581]],
		[[64548, 64548], 'mapped', [1590, 1582]],
		[[64549, 64549], 'mapped', [1590, 1605]],
		[[64550, 64550], 'mapped', [1591, 1581]],
		[[64551, 64551], 'mapped', [1591, 1605]],
		[[64552, 64552], 'mapped', [1592, 1605]],
		[[64553, 64553], 'mapped', [1593, 1580]],
		[[64554, 64554], 'mapped', [1593, 1605]],
		[[64555, 64555], 'mapped', [1594, 1580]],
		[[64556, 64556], 'mapped', [1594, 1605]],
		[[64557, 64557], 'mapped', [1601, 1580]],
		[[64558, 64558], 'mapped', [1601, 1581]],
		[[64559, 64559], 'mapped', [1601, 1582]],
		[[64560, 64560], 'mapped', [1601, 1605]],
		[[64561, 64561], 'mapped', [1601, 1609]],
		[[64562, 64562], 'mapped', [1601, 1610]],
		[[64563, 64563], 'mapped', [1602, 1581]],
		[[64564, 64564], 'mapped', [1602, 1605]],
		[[64565, 64565], 'mapped', [1602, 1609]],
		[[64566, 64566], 'mapped', [1602, 1610]],
		[[64567, 64567], 'mapped', [1603, 1575]],
		[[64568, 64568], 'mapped', [1603, 1580]],
		[[64569, 64569], 'mapped', [1603, 1581]],
		[[64570, 64570], 'mapped', [1603, 1582]],
		[[64571, 64571], 'mapped', [1603, 1604]],
		[[64572, 64572], 'mapped', [1603, 1605]],
		[[64573, 64573], 'mapped', [1603, 1609]],
		[[64574, 64574], 'mapped', [1603, 1610]],
		[[64575, 64575], 'mapped', [1604, 1580]],
		[[64576, 64576], 'mapped', [1604, 1581]],
		[[64577, 64577], 'mapped', [1604, 1582]],
		[[64578, 64578], 'mapped', [1604, 1605]],
		[[64579, 64579], 'mapped', [1604, 1609]],
		[[64580, 64580], 'mapped', [1604, 1610]],
		[[64581, 64581], 'mapped', [1605, 1580]],
		[[64582, 64582], 'mapped', [1605, 1581]],
		[[64583, 64583], 'mapped', [1605, 1582]],
		[[64584, 64584], 'mapped', [1605, 1605]],
		[[64585, 64585], 'mapped', [1605, 1609]],
		[[64586, 64586], 'mapped', [1605, 1610]],
		[[64587, 64587], 'mapped', [1606, 1580]],
		[[64588, 64588], 'mapped', [1606, 1581]],
		[[64589, 64589], 'mapped', [1606, 1582]],
		[[64590, 64590], 'mapped', [1606, 1605]],
		[[64591, 64591], 'mapped', [1606, 1609]],
		[[64592, 64592], 'mapped', [1606, 1610]],
		[[64593, 64593], 'mapped', [1607, 1580]],
		[[64594, 64594], 'mapped', [1607, 1605]],
		[[64595, 64595], 'mapped', [1607, 1609]],
		[[64596, 64596], 'mapped', [1607, 1610]],
		[[64597, 64597], 'mapped', [1610, 1580]],
		[[64598, 64598], 'mapped', [1610, 1581]],
		[[64599, 64599], 'mapped', [1610, 1582]],
		[[64600, 64600], 'mapped', [1610, 1605]],
		[[64601, 64601], 'mapped', [1610, 1609]],
		[[64602, 64602], 'mapped', [1610, 1610]],
		[[64603, 64603], 'mapped', [1584, 1648]],
		[[64604, 64604], 'mapped', [1585, 1648]],
		[[64605, 64605], 'mapped', [1609, 1648]],
		[[64606, 64606], 'disallowed_STD3_mapped', [32, 1612, 1617]],
		[[64607, 64607], 'disallowed_STD3_mapped', [32, 1613, 1617]],
		[[64608, 64608], 'disallowed_STD3_mapped', [32, 1614, 1617]],
		[[64609, 64609], 'disallowed_STD3_mapped', [32, 1615, 1617]],
		[[64610, 64610], 'disallowed_STD3_mapped', [32, 1616, 1617]],
		[[64611, 64611], 'disallowed_STD3_mapped', [32, 1617, 1648]],
		[[64612, 64612], 'mapped', [1574, 1585]],
		[[64613, 64613], 'mapped', [1574, 1586]],
		[[64614, 64614], 'mapped', [1574, 1605]],
		[[64615, 64615], 'mapped', [1574, 1606]],
		[[64616, 64616], 'mapped', [1574, 1609]],
		[[64617, 64617], 'mapped', [1574, 1610]],
		[[64618, 64618], 'mapped', [1576, 1585]],
		[[64619, 64619], 'mapped', [1576, 1586]],
		[[64620, 64620], 'mapped', [1576, 1605]],
		[[64621, 64621], 'mapped', [1576, 1606]],
		[[64622, 64622], 'mapped', [1576, 1609]],
		[[64623, 64623], 'mapped', [1576, 1610]],
		[[64624, 64624], 'mapped', [1578, 1585]],
		[[64625, 64625], 'mapped', [1578, 1586]],
		[[64626, 64626], 'mapped', [1578, 1605]],
		[[64627, 64627], 'mapped', [1578, 1606]],
		[[64628, 64628], 'mapped', [1578, 1609]],
		[[64629, 64629], 'mapped', [1578, 1610]],
		[[64630, 64630], 'mapped', [1579, 1585]],
		[[64631, 64631], 'mapped', [1579, 1586]],
		[[64632, 64632], 'mapped', [1579, 1605]],
		[[64633, 64633], 'mapped', [1579, 1606]],
		[[64634, 64634], 'mapped', [1579, 1609]],
		[[64635, 64635], 'mapped', [1579, 1610]],
		[[64636, 64636], 'mapped', [1601, 1609]],
		[[64637, 64637], 'mapped', [1601, 1610]],
		[[64638, 64638], 'mapped', [1602, 1609]],
		[[64639, 64639], 'mapped', [1602, 1610]],
		[[64640, 64640], 'mapped', [1603, 1575]],
		[[64641, 64641], 'mapped', [1603, 1604]],
		[[64642, 64642], 'mapped', [1603, 1605]],
		[[64643, 64643], 'mapped', [1603, 1609]],
		[[64644, 64644], 'mapped', [1603, 1610]],
		[[64645, 64645], 'mapped', [1604, 1605]],
		[[64646, 64646], 'mapped', [1604, 1609]],
		[[64647, 64647], 'mapped', [1604, 1610]],
		[[64648, 64648], 'mapped', [1605, 1575]],
		[[64649, 64649], 'mapped', [1605, 1605]],
		[[64650, 64650], 'mapped', [1606, 1585]],
		[[64651, 64651], 'mapped', [1606, 1586]],
		[[64652, 64652], 'mapped', [1606, 1605]],
		[[64653, 64653], 'mapped', [1606, 1606]],
		[[64654, 64654], 'mapped', [1606, 1609]],
		[[64655, 64655], 'mapped', [1606, 1610]],
		[[64656, 64656], 'mapped', [1609, 1648]],
		[[64657, 64657], 'mapped', [1610, 1585]],
		[[64658, 64658], 'mapped', [1610, 1586]],
		[[64659, 64659], 'mapped', [1610, 1605]],
		[[64660, 64660], 'mapped', [1610, 1606]],
		[[64661, 64661], 'mapped', [1610, 1609]],
		[[64662, 64662], 'mapped', [1610, 1610]],
		[[64663, 64663], 'mapped', [1574, 1580]],
		[[64664, 64664], 'mapped', [1574, 1581]],
		[[64665, 64665], 'mapped', [1574, 1582]],
		[[64666, 64666], 'mapped', [1574, 1605]],
		[[64667, 64667], 'mapped', [1574, 1607]],
		[[64668, 64668], 'mapped', [1576, 1580]],
		[[64669, 64669], 'mapped', [1576, 1581]],
		[[64670, 64670], 'mapped', [1576, 1582]],
		[[64671, 64671], 'mapped', [1576, 1605]],
		[[64672, 64672], 'mapped', [1576, 1607]],
		[[64673, 64673], 'mapped', [1578, 1580]],
		[[64674, 64674], 'mapped', [1578, 1581]],
		[[64675, 64675], 'mapped', [1578, 1582]],
		[[64676, 64676], 'mapped', [1578, 1605]],
		[[64677, 64677], 'mapped', [1578, 1607]],
		[[64678, 64678], 'mapped', [1579, 1605]],
		[[64679, 64679], 'mapped', [1580, 1581]],
		[[64680, 64680], 'mapped', [1580, 1605]],
		[[64681, 64681], 'mapped', [1581, 1580]],
		[[64682, 64682], 'mapped', [1581, 1605]],
		[[64683, 64683], 'mapped', [1582, 1580]],
		[[64684, 64684], 'mapped', [1582, 1605]],
		[[64685, 64685], 'mapped', [1587, 1580]],
		[[64686, 64686], 'mapped', [1587, 1581]],
		[[64687, 64687], 'mapped', [1587, 1582]],
		[[64688, 64688], 'mapped', [1587, 1605]],
		[[64689, 64689], 'mapped', [1589, 1581]],
		[[64690, 64690], 'mapped', [1589, 1582]],
		[[64691, 64691], 'mapped', [1589, 1605]],
		[[64692, 64692], 'mapped', [1590, 1580]],
		[[64693, 64693], 'mapped', [1590, 1581]],
		[[64694, 64694], 'mapped', [1590, 1582]],
		[[64695, 64695], 'mapped', [1590, 1605]],
		[[64696, 64696], 'mapped', [1591, 1581]],
		[[64697, 64697], 'mapped', [1592, 1605]],
		[[64698, 64698], 'mapped', [1593, 1580]],
		[[64699, 64699], 'mapped', [1593, 1605]],
		[[64700, 64700], 'mapped', [1594, 1580]],
		[[64701, 64701], 'mapped', [1594, 1605]],
		[[64702, 64702], 'mapped', [1601, 1580]],
		[[64703, 64703], 'mapped', [1601, 1581]],
		[[64704, 64704], 'mapped', [1601, 1582]],
		[[64705, 64705], 'mapped', [1601, 1605]],
		[[64706, 64706], 'mapped', [1602, 1581]],
		[[64707, 64707], 'mapped', [1602, 1605]],
		[[64708, 64708], 'mapped', [1603, 1580]],
		[[64709, 64709], 'mapped', [1603, 1581]],
		[[64710, 64710], 'mapped', [1603, 1582]],
		[[64711, 64711], 'mapped', [1603, 1604]],
		[[64712, 64712], 'mapped', [1603, 1605]],
		[[64713, 64713], 'mapped', [1604, 1580]],
		[[64714, 64714], 'mapped', [1604, 1581]],
		[[64715, 64715], 'mapped', [1604, 1582]],
		[[64716, 64716], 'mapped', [1604, 1605]],
		[[64717, 64717], 'mapped', [1604, 1607]],
		[[64718, 64718], 'mapped', [1605, 1580]],
		[[64719, 64719], 'mapped', [1605, 1581]],
		[[64720, 64720], 'mapped', [1605, 1582]],
		[[64721, 64721], 'mapped', [1605, 1605]],
		[[64722, 64722], 'mapped', [1606, 1580]],
		[[64723, 64723], 'mapped', [1606, 1581]],
		[[64724, 64724], 'mapped', [1606, 1582]],
		[[64725, 64725], 'mapped', [1606, 1605]],
		[[64726, 64726], 'mapped', [1606, 1607]],
		[[64727, 64727], 'mapped', [1607, 1580]],
		[[64728, 64728], 'mapped', [1607, 1605]],
		[[64729, 64729], 'mapped', [1607, 1648]],
		[[64730, 64730], 'mapped', [1610, 1580]],
		[[64731, 64731], 'mapped', [1610, 1581]],
		[[64732, 64732], 'mapped', [1610, 1582]],
		[[64733, 64733], 'mapped', [1610, 1605]],
		[[64734, 64734], 'mapped', [1610, 1607]],
		[[64735, 64735], 'mapped', [1574, 1605]],
		[[64736, 64736], 'mapped', [1574, 1607]],
		[[64737, 64737], 'mapped', [1576, 1605]],
		[[64738, 64738], 'mapped', [1576, 1607]],
		[[64739, 64739], 'mapped', [1578, 1605]],
		[[64740, 64740], 'mapped', [1578, 1607]],
		[[64741, 64741], 'mapped', [1579, 1605]],
		[[64742, 64742], 'mapped', [1579, 1607]],
		[[64743, 64743], 'mapped', [1587, 1605]],
		[[64744, 64744], 'mapped', [1587, 1607]],
		[[64745, 64745], 'mapped', [1588, 1605]],
		[[64746, 64746], 'mapped', [1588, 1607]],
		[[64747, 64747], 'mapped', [1603, 1604]],
		[[64748, 64748], 'mapped', [1603, 1605]],
		[[64749, 64749], 'mapped', [1604, 1605]],
		[[64750, 64750], 'mapped', [1606, 1605]],
		[[64751, 64751], 'mapped', [1606, 1607]],
		[[64752, 64752], 'mapped', [1610, 1605]],
		[[64753, 64753], 'mapped', [1610, 1607]],
		[[64754, 64754], 'mapped', [1600, 1614, 1617]],
		[[64755, 64755], 'mapped', [1600, 1615, 1617]],
		[[64756, 64756], 'mapped', [1600, 1616, 1617]],
		[[64757, 64757], 'mapped', [1591, 1609]],
		[[64758, 64758], 'mapped', [1591, 1610]],
		[[64759, 64759], 'mapped', [1593, 1609]],
		[[64760, 64760], 'mapped', [1593, 1610]],
		[[64761, 64761], 'mapped', [1594, 1609]],
		[[64762, 64762], 'mapped', [1594, 1610]],
		[[64763, 64763], 'mapped', [1587, 1609]],
		[[64764, 64764], 'mapped', [1587, 1610]],
		[[64765, 64765], 'mapped', [1588, 1609]],
		[[64766, 64766], 'mapped', [1588, 1610]],
		[[64767, 64767], 'mapped', [1581, 1609]],
		[[64768, 64768], 'mapped', [1581, 1610]],
		[[64769, 64769], 'mapped', [1580, 1609]],
		[[64770, 64770], 'mapped', [1580, 1610]],
		[[64771, 64771], 'mapped', [1582, 1609]],
		[[64772, 64772], 'mapped', [1582, 1610]],
		[[64773, 64773], 'mapped', [1589, 1609]],
		[[64774, 64774], 'mapped', [1589, 1610]],
		[[64775, 64775], 'mapped', [1590, 1609]],
		[[64776, 64776], 'mapped', [1590, 1610]],
		[[64777, 64777], 'mapped', [1588, 1580]],
		[[64778, 64778], 'mapped', [1588, 1581]],
		[[64779, 64779], 'mapped', [1588, 1582]],
		[[64780, 64780], 'mapped', [1588, 1605]],
		[[64781, 64781], 'mapped', [1588, 1585]],
		[[64782, 64782], 'mapped', [1587, 1585]],
		[[64783, 64783], 'mapped', [1589, 1585]],
		[[64784, 64784], 'mapped', [1590, 1585]],
		[[64785, 64785], 'mapped', [1591, 1609]],
		[[64786, 64786], 'mapped', [1591, 1610]],
		[[64787, 64787], 'mapped', [1593, 1609]],
		[[64788, 64788], 'mapped', [1593, 1610]],
		[[64789, 64789], 'mapped', [1594, 1609]],
		[[64790, 64790], 'mapped', [1594, 1610]],
		[[64791, 64791], 'mapped', [1587, 1609]],
		[[64792, 64792], 'mapped', [1587, 1610]],
		[[64793, 64793], 'mapped', [1588, 1609]],
		[[64794, 64794], 'mapped', [1588, 1610]],
		[[64795, 64795], 'mapped', [1581, 1609]],
		[[64796, 64796], 'mapped', [1581, 1610]],
		[[64797, 64797], 'mapped', [1580, 1609]],
		[[64798, 64798], 'mapped', [1580, 1610]],
		[[64799, 64799], 'mapped', [1582, 1609]],
		[[64800, 64800], 'mapped', [1582, 1610]],
		[[64801, 64801], 'mapped', [1589, 1609]],
		[[64802, 64802], 'mapped', [1589, 1610]],
		[[64803, 64803], 'mapped', [1590, 1609]],
		[[64804, 64804], 'mapped', [1590, 1610]],
		[[64805, 64805], 'mapped', [1588, 1580]],
		[[64806, 64806], 'mapped', [1588, 1581]],
		[[64807, 64807], 'mapped', [1588, 1582]],
		[[64808, 64808], 'mapped', [1588, 1605]],
		[[64809, 64809], 'mapped', [1588, 1585]],
		[[64810, 64810], 'mapped', [1587, 1585]],
		[[64811, 64811], 'mapped', [1589, 1585]],
		[[64812, 64812], 'mapped', [1590, 1585]],
		[[64813, 64813], 'mapped', [1588, 1580]],
		[[64814, 64814], 'mapped', [1588, 1581]],
		[[64815, 64815], 'mapped', [1588, 1582]],
		[[64816, 64816], 'mapped', [1588, 1605]],
		[[64817, 64817], 'mapped', [1587, 1607]],
		[[64818, 64818], 'mapped', [1588, 1607]],
		[[64819, 64819], 'mapped', [1591, 1605]],
		[[64820, 64820], 'mapped', [1587, 1580]],
		[[64821, 64821], 'mapped', [1587, 1581]],
		[[64822, 64822], 'mapped', [1587, 1582]],
		[[64823, 64823], 'mapped', [1588, 1580]],
		[[64824, 64824], 'mapped', [1588, 1581]],
		[[64825, 64825], 'mapped', [1588, 1582]],
		[[64826, 64826], 'mapped', [1591, 1605]],
		[[64827, 64827], 'mapped', [1592, 1605]],
		[[64828, 64829], 'mapped', [1575, 1611]],
		[[64830, 64831], 'valid', [], 'NV8'],
		[[64832, 64847], 'disallowed'],
		[[64848, 64848], 'mapped', [1578, 1580, 1605]],
		[[64849, 64850], 'mapped', [1578, 1581, 1580]],
		[[64851, 64851], 'mapped', [1578, 1581, 1605]],
		[[64852, 64852], 'mapped', [1578, 1582, 1605]],
		[[64853, 64853], 'mapped', [1578, 1605, 1580]],
		[[64854, 64854], 'mapped', [1578, 1605, 1581]],
		[[64855, 64855], 'mapped', [1578, 1605, 1582]],
		[[64856, 64857], 'mapped', [1580, 1605, 1581]],
		[[64858, 64858], 'mapped', [1581, 1605, 1610]],
		[[64859, 64859], 'mapped', [1581, 1605, 1609]],
		[[64860, 64860], 'mapped', [1587, 1581, 1580]],
		[[64861, 64861], 'mapped', [1587, 1580, 1581]],
		[[64862, 64862], 'mapped', [1587, 1580, 1609]],
		[[64863, 64864], 'mapped', [1587, 1605, 1581]],
		[[64865, 64865], 'mapped', [1587, 1605, 1580]],
		[[64866, 64867], 'mapped', [1587, 1605, 1605]],
		[[64868, 64869], 'mapped', [1589, 1581, 1581]],
		[[64870, 64870], 'mapped', [1589, 1605, 1605]],
		[[64871, 64872], 'mapped', [1588, 1581, 1605]],
		[[64873, 64873], 'mapped', [1588, 1580, 1610]],
		[[64874, 64875], 'mapped', [1588, 1605, 1582]],
		[[64876, 64877], 'mapped', [1588, 1605, 1605]],
		[[64878, 64878], 'mapped', [1590, 1581, 1609]],
		[[64879, 64880], 'mapped', [1590, 1582, 1605]],
		[[64881, 64882], 'mapped', [1591, 1605, 1581]],
		[[64883, 64883], 'mapped', [1591, 1605, 1605]],
		[[64884, 64884], 'mapped', [1591, 1605, 1610]],
		[[64885, 64885], 'mapped', [1593, 1580, 1605]],
		[[64886, 64887], 'mapped', [1593, 1605, 1605]],
		[[64888, 64888], 'mapped', [1593, 1605, 1609]],
		[[64889, 64889], 'mapped', [1594, 1605, 1605]],
		[[64890, 64890], 'mapped', [1594, 1605, 1610]],
		[[64891, 64891], 'mapped', [1594, 1605, 1609]],
		[[64892, 64893], 'mapped', [1601, 1582, 1605]],
		[[64894, 64894], 'mapped', [1602, 1605, 1581]],
		[[64895, 64895], 'mapped', [1602, 1605, 1605]],
		[[64896, 64896], 'mapped', [1604, 1581, 1605]],
		[[64897, 64897], 'mapped', [1604, 1581, 1610]],
		[[64898, 64898], 'mapped', [1604, 1581, 1609]],
		[[64899, 64900], 'mapped', [1604, 1580, 1580]],
		[[64901, 64902], 'mapped', [1604, 1582, 1605]],
		[[64903, 64904], 'mapped', [1604, 1605, 1581]],
		[[64905, 64905], 'mapped', [1605, 1581, 1580]],
		[[64906, 64906], 'mapped', [1605, 1581, 1605]],
		[[64907, 64907], 'mapped', [1605, 1581, 1610]],
		[[64908, 64908], 'mapped', [1605, 1580, 1581]],
		[[64909, 64909], 'mapped', [1605, 1580, 1605]],
		[[64910, 64910], 'mapped', [1605, 1582, 1580]],
		[[64911, 64911], 'mapped', [1605, 1582, 1605]],
		[[64912, 64913], 'disallowed'],
		[[64914, 64914], 'mapped', [1605, 1580, 1582]],
		[[64915, 64915], 'mapped', [1607, 1605, 1580]],
		[[64916, 64916], 'mapped', [1607, 1605, 1605]],
		[[64917, 64917], 'mapped', [1606, 1581, 1605]],
		[[64918, 64918], 'mapped', [1606, 1581, 1609]],
		[[64919, 64920], 'mapped', [1606, 1580, 1605]],
		[[64921, 64921], 'mapped', [1606, 1580, 1609]],
		[[64922, 64922], 'mapped', [1606, 1605, 1610]],
		[[64923, 64923], 'mapped', [1606, 1605, 1609]],
		[[64924, 64925], 'mapped', [1610, 1605, 1605]],
		[[64926, 64926], 'mapped', [1576, 1582, 1610]],
		[[64927, 64927], 'mapped', [1578, 1580, 1610]],
		[[64928, 64928], 'mapped', [1578, 1580, 1609]],
		[[64929, 64929], 'mapped', [1578, 1582, 1610]],
		[[64930, 64930], 'mapped', [1578, 1582, 1609]],
		[[64931, 64931], 'mapped', [1578, 1605, 1610]],
		[[64932, 64932], 'mapped', [1578, 1605, 1609]],
		[[64933, 64933], 'mapped', [1580, 1605, 1610]],
		[[64934, 64934], 'mapped', [1580, 1581, 1609]],
		[[64935, 64935], 'mapped', [1580, 1605, 1609]],
		[[64936, 64936], 'mapped', [1587, 1582, 1609]],
		[[64937, 64937], 'mapped', [1589, 1581, 1610]],
		[[64938, 64938], 'mapped', [1588, 1581, 1610]],
		[[64939, 64939], 'mapped', [1590, 1581, 1610]],
		[[64940, 64940], 'mapped', [1604, 1580, 1610]],
		[[64941, 64941], 'mapped', [1604, 1605, 1610]],
		[[64942, 64942], 'mapped', [1610, 1581, 1610]],
		[[64943, 64943], 'mapped', [1610, 1580, 1610]],
		[[64944, 64944], 'mapped', [1610, 1605, 1610]],
		[[64945, 64945], 'mapped', [1605, 1605, 1610]],
		[[64946, 64946], 'mapped', [1602, 1605, 1610]],
		[[64947, 64947], 'mapped', [1606, 1581, 1610]],
		[[64948, 64948], 'mapped', [1602, 1605, 1581]],
		[[64949, 64949], 'mapped', [1604, 1581, 1605]],
		[[64950, 64950], 'mapped', [1593, 1605, 1610]],
		[[64951, 64951], 'mapped', [1603, 1605, 1610]],
		[[64952, 64952], 'mapped', [1606, 1580, 1581]],
		[[64953, 64953], 'mapped', [1605, 1582, 1610]],
		[[64954, 64954], 'mapped', [1604, 1580, 1605]],
		[[64955, 64955], 'mapped', [1603, 1605, 1605]],
		[[64956, 64956], 'mapped', [1604, 1580, 1605]],
		[[64957, 64957], 'mapped', [1606, 1580, 1581]],
		[[64958, 64958], 'mapped', [1580, 1581, 1610]],
		[[64959, 64959], 'mapped', [1581, 1580, 1610]],
		[[64960, 64960], 'mapped', [1605, 1580, 1610]],
		[[64961, 64961], 'mapped', [1601, 1605, 1610]],
		[[64962, 64962], 'mapped', [1576, 1581, 1610]],
		[[64963, 64963], 'mapped', [1603, 1605, 1605]],
		[[64964, 64964], 'mapped', [1593, 1580, 1605]],
		[[64965, 64965], 'mapped', [1589, 1605, 1605]],
		[[64966, 64966], 'mapped', [1587, 1582, 1610]],
		[[64967, 64967], 'mapped', [1606, 1580, 1610]],
		[[64968, 64975], 'disallowed'],
		[[64976, 65007], 'disallowed'],
		[[65008, 65008], 'mapped', [1589, 1604, 1746]],
		[[65009, 65009], 'mapped', [1602, 1604, 1746]],
		[[65010, 65010], 'mapped', [1575, 1604, 1604, 1607]],
		[[65011, 65011], 'mapped', [1575, 1603, 1576, 1585]],
		[[65012, 65012], 'mapped', [1605, 1581, 1605, 1583]],
		[[65013, 65013], 'mapped', [1589, 1604, 1593, 1605]],
		[[65014, 65014], 'mapped', [1585, 1587, 1608, 1604]],
		[[65015, 65015], 'mapped', [1593, 1604, 1610, 1607]],
		[[65016, 65016], 'mapped', [1608, 1587, 1604, 1605]],
		[[65017, 65017], 'mapped', [1589, 1604, 1609]],
		[
			[65018, 65018],
			'disallowed_STD3_mapped',
			[1589, 1604, 1609, 32, 1575, 1604, 1604, 1607, 32, 1593, 1604, 1610, 1607, 32, 1608, 1587, 1604, 1605],
		],
		[[65019, 65019], 'disallowed_STD3_mapped', [1580, 1604, 32, 1580, 1604, 1575, 1604, 1607]],
		[[65020, 65020], 'mapped', [1585, 1740, 1575, 1604]],
		[[65021, 65021], 'valid', [], 'NV8'],
		[[65022, 65023], 'disallowed'],
		[[65024, 65039], 'ignored'],
		[[65040, 65040], 'disallowed_STD3_mapped', [44]],
		[[65041, 65041], 'mapped', [12289]],
		[[65042, 65042], 'disallowed'],
		[[65043, 65043], 'disallowed_STD3_mapped', [58]],
		[[65044, 65044], 'disallowed_STD3_mapped', [59]],
		[[65045, 65045], 'disallowed_STD3_mapped', [33]],
		[[65046, 65046], 'disallowed_STD3_mapped', [63]],
		[[65047, 65047], 'mapped', [12310]],
		[[65048, 65048], 'mapped', [12311]],
		[[65049, 65049], 'disallowed'],
		[[65050, 65055], 'disallowed'],
		[[65056, 65059], 'valid'],
		[[65060, 65062], 'valid'],
		[[65063, 65069], 'valid'],
		[[65070, 65071], 'valid'],
		[[65072, 65072], 'disallowed'],
		[[65073, 65073], 'mapped', [8212]],
		[[65074, 65074], 'mapped', [8211]],
		[[65075, 65076], 'disallowed_STD3_mapped', [95]],
		[[65077, 65077], 'disallowed_STD3_mapped', [40]],
		[[65078, 65078], 'disallowed_STD3_mapped', [41]],
		[[65079, 65079], 'disallowed_STD3_mapped', [123]],
		[[65080, 65080], 'disallowed_STD3_mapped', [125]],
		[[65081, 65081], 'mapped', [12308]],
		[[65082, 65082], 'mapped', [12309]],
		[[65083, 65083], 'mapped', [12304]],
		[[65084, 65084], 'mapped', [12305]],
		[[65085, 65085], 'mapped', [12298]],
		[[65086, 65086], 'mapped', [12299]],
		[[65087, 65087], 'mapped', [12296]],
		[[65088, 65088], 'mapped', [12297]],
		[[65089, 65089], 'mapped', [12300]],
		[[65090, 65090], 'mapped', [12301]],
		[[65091, 65091], 'mapped', [12302]],
		[[65092, 65092], 'mapped', [12303]],
		[[65093, 65094], 'valid', [], 'NV8'],
		[[65095, 65095], 'disallowed_STD3_mapped', [91]],
		[[65096, 65096], 'disallowed_STD3_mapped', [93]],
		[[65097, 65100], 'disallowed_STD3_mapped', [32, 773]],
		[[65101, 65103], 'disallowed_STD3_mapped', [95]],
		[[65104, 65104], 'disallowed_STD3_mapped', [44]],
		[[65105, 65105], 'mapped', [12289]],
		[[65106, 65106], 'disallowed'],
		[[65107, 65107], 'disallowed'],
		[[65108, 65108], 'disallowed_STD3_mapped', [59]],
		[[65109, 65109], 'disallowed_STD3_mapped', [58]],
		[[65110, 65110], 'disallowed_STD3_mapped', [63]],
		[[65111, 65111], 'disallowed_STD3_mapped', [33]],
		[[65112, 65112], 'mapped', [8212]],
		[[65113, 65113], 'disallowed_STD3_mapped', [40]],
		[[65114, 65114], 'disallowed_STD3_mapped', [41]],
		[[65115, 65115], 'disallowed_STD3_mapped', [123]],
		[[65116, 65116], 'disallowed_STD3_mapped', [125]],
		[[65117, 65117], 'mapped', [12308]],
		[[65118, 65118], 'mapped', [12309]],
		[[65119, 65119], 'disallowed_STD3_mapped', [35]],
		[[65120, 65120], 'disallowed_STD3_mapped', [38]],
		[[65121, 65121], 'disallowed_STD3_mapped', [42]],
		[[65122, 65122], 'disallowed_STD3_mapped', [43]],
		[[65123, 65123], 'mapped', [45]],
		[[65124, 65124], 'disallowed_STD3_mapped', [60]],
		[[65125, 65125], 'disallowed_STD3_mapped', [62]],
		[[65126, 65126], 'disallowed_STD3_mapped', [61]],
		[[65127, 65127], 'disallowed'],
		[[65128, 65128], 'disallowed_STD3_mapped', [92]],
		[[65129, 65129], 'disallowed_STD3_mapped', [36]],
		[[65130, 65130], 'disallowed_STD3_mapped', [37]],
		[[65131, 65131], 'disallowed_STD3_mapped', [64]],
		[[65132, 65135], 'disallowed'],
		[[65136, 65136], 'disallowed_STD3_mapped', [32, 1611]],
		[[65137, 65137], 'mapped', [1600, 1611]],
		[[65138, 65138], 'disallowed_STD3_mapped', [32, 1612]],
		[[65139, 65139], 'valid'],
		[[65140, 65140], 'disallowed_STD3_mapped', [32, 1613]],
		[[65141, 65141], 'disallowed'],
		[[65142, 65142], 'disallowed_STD3_mapped', [32, 1614]],
		[[65143, 65143], 'mapped', [1600, 1614]],
		[[65144, 65144], 'disallowed_STD3_mapped', [32, 1615]],
		[[65145, 65145], 'mapped', [1600, 1615]],
		[[65146, 65146], 'disallowed_STD3_mapped', [32, 1616]],
		[[65147, 65147], 'mapped', [1600, 1616]],
		[[65148, 65148], 'disallowed_STD3_mapped', [32, 1617]],
		[[65149, 65149], 'mapped', [1600, 1617]],
		[[65150, 65150], 'disallowed_STD3_mapped', [32, 1618]],
		[[65151, 65151], 'mapped', [1600, 1618]],
		[[65152, 65152], 'mapped', [1569]],
		[[65153, 65154], 'mapped', [1570]],
		[[65155, 65156], 'mapped', [1571]],
		[[65157, 65158], 'mapped', [1572]],
		[[65159, 65160], 'mapped', [1573]],
		[[65161, 65164], 'mapped', [1574]],
		[[65165, 65166], 'mapped', [1575]],
		[[65167, 65170], 'mapped', [1576]],
		[[65171, 65172], 'mapped', [1577]],
		[[65173, 65176], 'mapped', [1578]],
		[[65177, 65180], 'mapped', [1579]],
		[[65181, 65184], 'mapped', [1580]],
		[[65185, 65188], 'mapped', [1581]],
		[[65189, 65192], 'mapped', [1582]],
		[[65193, 65194], 'mapped', [1583]],
		[[65195, 65196], 'mapped', [1584]],
		[[65197, 65198], 'mapped', [1585]],
		[[65199, 65200], 'mapped', [1586]],
		[[65201, 65204], 'mapped', [1587]],
		[[65205, 65208], 'mapped', [1588]],
		[[65209, 65212], 'mapped', [1589]],
		[[65213, 65216], 'mapped', [1590]],
		[[65217, 65220], 'mapped', [1591]],
		[[65221, 65224], 'mapped', [1592]],
		[[65225, 65228], 'mapped', [1593]],
		[[65229, 65232], 'mapped', [1594]],
		[[65233, 65236], 'mapped', [1601]],
		[[65237, 65240], 'mapped', [1602]],
		[[65241, 65244], 'mapped', [1603]],
		[[65245, 65248], 'mapped', [1604]],
		[[65249, 65252], 'mapped', [1605]],
		[[65253, 65256], 'mapped', [1606]],
		[[65257, 65260], 'mapped', [1607]],
		[[65261, 65262], 'mapped', [1608]],
		[[65263, 65264], 'mapped', [1609]],
		[[65265, 65268], 'mapped', [1610]],
		[[65269, 65270], 'mapped', [1604, 1570]],
		[[65271, 65272], 'mapped', [1604, 1571]],
		[[65273, 65274], 'mapped', [1604, 1573]],
		[[65275, 65276], 'mapped', [1604, 1575]],
		[[65277, 65278], 'disallowed'],
		[[65279, 65279], 'ignored'],
		[[65280, 65280], 'disallowed'],
		[[65281, 65281], 'disallowed_STD3_mapped', [33]],
		[[65282, 65282], 'disallowed_STD3_mapped', [34]],
		[[65283, 65283], 'disallowed_STD3_mapped', [35]],
		[[65284, 65284], 'disallowed_STD3_mapped', [36]],
		[[65285, 65285], 'disallowed_STD3_mapped', [37]],
		[[65286, 65286], 'disallowed_STD3_mapped', [38]],
		[[65287, 65287], 'disallowed_STD3_mapped', [39]],
		[[65288, 65288], 'disallowed_STD3_mapped', [40]],
		[[65289, 65289], 'disallowed_STD3_mapped', [41]],
		[[65290, 65290], 'disallowed_STD3_mapped', [42]],
		[[65291, 65291], 'disallowed_STD3_mapped', [43]],
		[[65292, 65292], 'disallowed_STD3_mapped', [44]],
		[[65293, 65293], 'mapped', [45]],
		[[65294, 65294], 'mapped', [46]],
		[[65295, 65295], 'disallowed_STD3_mapped', [47]],
		[[65296, 65296], 'mapped', [48]],
		[[65297, 65297], 'mapped', [49]],
		[[65298, 65298], 'mapped', [50]],
		[[65299, 65299], 'mapped', [51]],
		[[65300, 65300], 'mapped', [52]],
		[[65301, 65301], 'mapped', [53]],
		[[65302, 65302], 'mapped', [54]],
		[[65303, 65303], 'mapped', [55]],
		[[65304, 65304], 'mapped', [56]],
		[[65305, 65305], 'mapped', [57]],
		[[65306, 65306], 'disallowed_STD3_mapped', [58]],
		[[65307, 65307], 'disallowed_STD3_mapped', [59]],
		[[65308, 65308], 'disallowed_STD3_mapped', [60]],
		[[65309, 65309], 'disallowed_STD3_mapped', [61]],
		[[65310, 65310], 'disallowed_STD3_mapped', [62]],
		[[65311, 65311], 'disallowed_STD3_mapped', [63]],
		[[65312, 65312], 'disallowed_STD3_mapped', [64]],
		[[65313, 65313], 'mapped', [97]],
		[[65314, 65314], 'mapped', [98]],
		[[65315, 65315], 'mapped', [99]],
		[[65316, 65316], 'mapped', [100]],
		[[65317, 65317], 'mapped', [101]],
		[[65318, 65318], 'mapped', [102]],
		[[65319, 65319], 'mapped', [103]],
		[[65320, 65320], 'mapped', [104]],
		[[65321, 65321], 'mapped', [105]],
		[[65322, 65322], 'mapped', [106]],
		[[65323, 65323], 'mapped', [107]],
		[[65324, 65324], 'mapped', [108]],
		[[65325, 65325], 'mapped', [109]],
		[[65326, 65326], 'mapped', [110]],
		[[65327, 65327], 'mapped', [111]],
		[[65328, 65328], 'mapped', [112]],
		[[65329, 65329], 'mapped', [113]],
		[[65330, 65330], 'mapped', [114]],
		[[65331, 65331], 'mapped', [115]],
		[[65332, 65332], 'mapped', [116]],
		[[65333, 65333], 'mapped', [117]],
		[[65334, 65334], 'mapped', [118]],
		[[65335, 65335], 'mapped', [119]],
		[[65336, 65336], 'mapped', [120]],
		[[65337, 65337], 'mapped', [121]],
		[[65338, 65338], 'mapped', [122]],
		[[65339, 65339], 'disallowed_STD3_mapped', [91]],
		[[65340, 65340], 'disallowed_STD3_mapped', [92]],
		[[65341, 65341], 'disallowed_STD3_mapped', [93]],
		[[65342, 65342], 'disallowed_STD3_mapped', [94]],
		[[65343, 65343], 'disallowed_STD3_mapped', [95]],
		[[65344, 65344], 'disallowed_STD3_mapped', [96]],
		[[65345, 65345], 'mapped', [97]],
		[[65346, 65346], 'mapped', [98]],
		[[65347, 65347], 'mapped', [99]],
		[[65348, 65348], 'mapped', [100]],
		[[65349, 65349], 'mapped', [101]],
		[[65350, 65350], 'mapped', [102]],
		[[65351, 65351], 'mapped', [103]],
		[[65352, 65352], 'mapped', [104]],
		[[65353, 65353], 'mapped', [105]],
		[[65354, 65354], 'mapped', [106]],
		[[65355, 65355], 'mapped', [107]],
		[[65356, 65356], 'mapped', [108]],
		[[65357, 65357], 'mapped', [109]],
		[[65358, 65358], 'mapped', [110]],
		[[65359, 65359], 'mapped', [111]],
		[[65360, 65360], 'mapped', [112]],
		[[65361, 65361], 'mapped', [113]],
		[[65362, 65362], 'mapped', [114]],
		[[65363, 65363], 'mapped', [115]],
		[[65364, 65364], 'mapped', [116]],
		[[65365, 65365], 'mapped', [117]],
		[[65366, 65366], 'mapped', [118]],
		[[65367, 65367], 'mapped', [119]],
		[[65368, 65368], 'mapped', [120]],
		[[65369, 65369], 'mapped', [121]],
		[[65370, 65370], 'mapped', [122]],
		[[65371, 65371], 'disallowed_STD3_mapped', [123]],
		[[65372, 65372], 'disallowed_STD3_mapped', [124]],
		[[65373, 65373], 'disallowed_STD3_mapped', [125]],
		[[65374, 65374], 'disallowed_STD3_mapped', [126]],
		[[65375, 65375], 'mapped', [10629]],
		[[65376, 65376], 'mapped', [10630]],
		[[65377, 65377], 'mapped', [46]],
		[[65378, 65378], 'mapped', [12300]],
		[[65379, 65379], 'mapped', [12301]],
		[[65380, 65380], 'mapped', [12289]],
		[[65381, 65381], 'mapped', [12539]],
		[[65382, 65382], 'mapped', [12530]],
		[[65383, 65383], 'mapped', [12449]],
		[[65384, 65384], 'mapped', [12451]],
		[[65385, 65385], 'mapped', [12453]],
		[[65386, 65386], 'mapped', [12455]],
		[[65387, 65387], 'mapped', [12457]],
		[[65388, 65388], 'mapped', [12515]],
		[[65389, 65389], 'mapped', [12517]],
		[[65390, 65390], 'mapped', [12519]],
		[[65391, 65391], 'mapped', [12483]],
		[[65392, 65392], 'mapped', [12540]],
		[[65393, 65393], 'mapped', [12450]],
		[[65394, 65394], 'mapped', [12452]],
		[[65395, 65395], 'mapped', [12454]],
		[[65396, 65396], 'mapped', [12456]],
		[[65397, 65397], 'mapped', [12458]],
		[[65398, 65398], 'mapped', [12459]],
		[[65399, 65399], 'mapped', [12461]],
		[[65400, 65400], 'mapped', [12463]],
		[[65401, 65401], 'mapped', [12465]],
		[[65402, 65402], 'mapped', [12467]],
		[[65403, 65403], 'mapped', [12469]],
		[[65404, 65404], 'mapped', [12471]],
		[[65405, 65405], 'mapped', [12473]],
		[[65406, 65406], 'mapped', [12475]],
		[[65407, 65407], 'mapped', [12477]],
		[[65408, 65408], 'mapped', [12479]],
		[[65409, 65409], 'mapped', [12481]],
		[[65410, 65410], 'mapped', [12484]],
		[[65411, 65411], 'mapped', [12486]],
		[[65412, 65412], 'mapped', [12488]],
		[[65413, 65413], 'mapped', [12490]],
		[[65414, 65414], 'mapped', [12491]],
		[[65415, 65415], 'mapped', [12492]],
		[[65416, 65416], 'mapped', [12493]],
		[[65417, 65417], 'mapped', [12494]],
		[[65418, 65418], 'mapped', [12495]],
		[[65419, 65419], 'mapped', [12498]],
		[[65420, 65420], 'mapped', [12501]],
		[[65421, 65421], 'mapped', [12504]],
		[[65422, 65422], 'mapped', [12507]],
		[[65423, 65423], 'mapped', [12510]],
		[[65424, 65424], 'mapped', [12511]],
		[[65425, 65425], 'mapped', [12512]],
		[[65426, 65426], 'mapped', [12513]],
		[[65427, 65427], 'mapped', [12514]],
		[[65428, 65428], 'mapped', [12516]],
		[[65429, 65429], 'mapped', [12518]],
		[[65430, 65430], 'mapped', [12520]],
		[[65431, 65431], 'mapped', [12521]],
		[[65432, 65432], 'mapped', [12522]],
		[[65433, 65433], 'mapped', [12523]],
		[[65434, 65434], 'mapped', [12524]],
		[[65435, 65435], 'mapped', [12525]],
		[[65436, 65436], 'mapped', [12527]],
		[[65437, 65437], 'mapped', [12531]],
		[[65438, 65438], 'mapped', [12441]],
		[[65439, 65439], 'mapped', [12442]],
		[[65440, 65440], 'disallowed'],
		[[65441, 65441], 'mapped', [4352]],
		[[65442, 65442], 'mapped', [4353]],
		[[65443, 65443], 'mapped', [4522]],
		[[65444, 65444], 'mapped', [4354]],
		[[65445, 65445], 'mapped', [4524]],
		[[65446, 65446], 'mapped', [4525]],
		[[65447, 65447], 'mapped', [4355]],
		[[65448, 65448], 'mapped', [4356]],
		[[65449, 65449], 'mapped', [4357]],
		[[65450, 65450], 'mapped', [4528]],
		[[65451, 65451], 'mapped', [4529]],
		[[65452, 65452], 'mapped', [4530]],
		[[65453, 65453], 'mapped', [4531]],
		[[65454, 65454], 'mapped', [4532]],
		[[65455, 65455], 'mapped', [4533]],
		[[65456, 65456], 'mapped', [4378]],
		[[65457, 65457], 'mapped', [4358]],
		[[65458, 65458], 'mapped', [4359]],
		[[65459, 65459], 'mapped', [4360]],
		[[65460, 65460], 'mapped', [4385]],
		[[65461, 65461], 'mapped', [4361]],
		[[65462, 65462], 'mapped', [4362]],
		[[65463, 65463], 'mapped', [4363]],
		[[65464, 65464], 'mapped', [4364]],
		[[65465, 65465], 'mapped', [4365]],
		[[65466, 65466], 'mapped', [4366]],
		[[65467, 65467], 'mapped', [4367]],
		[[65468, 65468], 'mapped', [4368]],
		[[65469, 65469], 'mapped', [4369]],
		[[65470, 65470], 'mapped', [4370]],
		[[65471, 65473], 'disallowed'],
		[[65474, 65474], 'mapped', [4449]],
		[[65475, 65475], 'mapped', [4450]],
		[[65476, 65476], 'mapped', [4451]],
		[[65477, 65477], 'mapped', [4452]],
		[[65478, 65478], 'mapped', [4453]],
		[[65479, 65479], 'mapped', [4454]],
		[[65480, 65481], 'disallowed'],
		[[65482, 65482], 'mapped', [4455]],
		[[65483, 65483], 'mapped', [4456]],
		[[65484, 65484], 'mapped', [4457]],
		[[65485, 65485], 'mapped', [4458]],
		[[65486, 65486], 'mapped', [4459]],
		[[65487, 65487], 'mapped', [4460]],
		[[65488, 65489], 'disallowed'],
		[[65490, 65490], 'mapped', [4461]],
		[[65491, 65491], 'mapped', [4462]],
		[[65492, 65492], 'mapped', [4463]],
		[[65493, 65493], 'mapped', [4464]],
		[[65494, 65494], 'mapped', [4465]],
		[[65495, 65495], 'mapped', [4466]],
		[[65496, 65497], 'disallowed'],
		[[65498, 65498], 'mapped', [4467]],
		[[65499, 65499], 'mapped', [4468]],
		[[65500, 65500], 'mapped', [4469]],
		[[65501, 65503], 'disallowed'],
		[[65504, 65504], 'mapped', [162]],
		[[65505, 65505], 'mapped', [163]],
		[[65506, 65506], 'mapped', [172]],
		[[65507, 65507], 'disallowed_STD3_mapped', [32, 772]],
		[[65508, 65508], 'mapped', [166]],
		[[65509, 65509], 'mapped', [165]],
		[[65510, 65510], 'mapped', [8361]],
		[[65511, 65511], 'disallowed'],
		[[65512, 65512], 'mapped', [9474]],
		[[65513, 65513], 'mapped', [8592]],
		[[65514, 65514], 'mapped', [8593]],
		[[65515, 65515], 'mapped', [8594]],
		[[65516, 65516], 'mapped', [8595]],
		[[65517, 65517], 'mapped', [9632]],
		[[65518, 65518], 'mapped', [9675]],
		[[65519, 65528], 'disallowed'],
		[[65529, 65531], 'disallowed'],
		[[65532, 65532], 'disallowed'],
		[[65533, 65533], 'disallowed'],
		[[65534, 65535], 'disallowed'],
		[[65536, 65547], 'valid'],
		[[65548, 65548], 'disallowed'],
		[[65549, 65574], 'valid'],
		[[65575, 65575], 'disallowed'],
		[[65576, 65594], 'valid'],
		[[65595, 65595], 'disallowed'],
		[[65596, 65597], 'valid'],
		[[65598, 65598], 'disallowed'],
		[[65599, 65613], 'valid'],
		[[65614, 65615], 'disallowed'],
		[[65616, 65629], 'valid'],
		[[65630, 65663], 'disallowed'],
		[[65664, 65786], 'valid'],
		[[65787, 65791], 'disallowed'],
		[[65792, 65794], 'valid', [], 'NV8'],
		[[65795, 65798], 'disallowed'],
		[[65799, 65843], 'valid', [], 'NV8'],
		[[65844, 65846], 'disallowed'],
		[[65847, 65855], 'valid', [], 'NV8'],
		[[65856, 65930], 'valid', [], 'NV8'],
		[[65931, 65932], 'valid', [], 'NV8'],
		[[65933, 65935], 'disallowed'],
		[[65936, 65947], 'valid', [], 'NV8'],
		[[65948, 65951], 'disallowed'],
		[[65952, 65952], 'valid', [], 'NV8'],
		[[65953, 65999], 'disallowed'],
		[[66e3, 66044], 'valid', [], 'NV8'],
		[[66045, 66045], 'valid'],
		[[66046, 66175], 'disallowed'],
		[[66176, 66204], 'valid'],
		[[66205, 66207], 'disallowed'],
		[[66208, 66256], 'valid'],
		[[66257, 66271], 'disallowed'],
		[[66272, 66272], 'valid'],
		[[66273, 66299], 'valid', [], 'NV8'],
		[[66300, 66303], 'disallowed'],
		[[66304, 66334], 'valid'],
		[[66335, 66335], 'valid'],
		[[66336, 66339], 'valid', [], 'NV8'],
		[[66340, 66351], 'disallowed'],
		[[66352, 66368], 'valid'],
		[[66369, 66369], 'valid', [], 'NV8'],
		[[66370, 66377], 'valid'],
		[[66378, 66378], 'valid', [], 'NV8'],
		[[66379, 66383], 'disallowed'],
		[[66384, 66426], 'valid'],
		[[66427, 66431], 'disallowed'],
		[[66432, 66461], 'valid'],
		[[66462, 66462], 'disallowed'],
		[[66463, 66463], 'valid', [], 'NV8'],
		[[66464, 66499], 'valid'],
		[[66500, 66503], 'disallowed'],
		[[66504, 66511], 'valid'],
		[[66512, 66517], 'valid', [], 'NV8'],
		[[66518, 66559], 'disallowed'],
		[[66560, 66560], 'mapped', [66600]],
		[[66561, 66561], 'mapped', [66601]],
		[[66562, 66562], 'mapped', [66602]],
		[[66563, 66563], 'mapped', [66603]],
		[[66564, 66564], 'mapped', [66604]],
		[[66565, 66565], 'mapped', [66605]],
		[[66566, 66566], 'mapped', [66606]],
		[[66567, 66567], 'mapped', [66607]],
		[[66568, 66568], 'mapped', [66608]],
		[[66569, 66569], 'mapped', [66609]],
		[[66570, 66570], 'mapped', [66610]],
		[[66571, 66571], 'mapped', [66611]],
		[[66572, 66572], 'mapped', [66612]],
		[[66573, 66573], 'mapped', [66613]],
		[[66574, 66574], 'mapped', [66614]],
		[[66575, 66575], 'mapped', [66615]],
		[[66576, 66576], 'mapped', [66616]],
		[[66577, 66577], 'mapped', [66617]],
		[[66578, 66578], 'mapped', [66618]],
		[[66579, 66579], 'mapped', [66619]],
		[[66580, 66580], 'mapped', [66620]],
		[[66581, 66581], 'mapped', [66621]],
		[[66582, 66582], 'mapped', [66622]],
		[[66583, 66583], 'mapped', [66623]],
		[[66584, 66584], 'mapped', [66624]],
		[[66585, 66585], 'mapped', [66625]],
		[[66586, 66586], 'mapped', [66626]],
		[[66587, 66587], 'mapped', [66627]],
		[[66588, 66588], 'mapped', [66628]],
		[[66589, 66589], 'mapped', [66629]],
		[[66590, 66590], 'mapped', [66630]],
		[[66591, 66591], 'mapped', [66631]],
		[[66592, 66592], 'mapped', [66632]],
		[[66593, 66593], 'mapped', [66633]],
		[[66594, 66594], 'mapped', [66634]],
		[[66595, 66595], 'mapped', [66635]],
		[[66596, 66596], 'mapped', [66636]],
		[[66597, 66597], 'mapped', [66637]],
		[[66598, 66598], 'mapped', [66638]],
		[[66599, 66599], 'mapped', [66639]],
		[[66600, 66637], 'valid'],
		[[66638, 66717], 'valid'],
		[[66718, 66719], 'disallowed'],
		[[66720, 66729], 'valid'],
		[[66730, 66815], 'disallowed'],
		[[66816, 66855], 'valid'],
		[[66856, 66863], 'disallowed'],
		[[66864, 66915], 'valid'],
		[[66916, 66926], 'disallowed'],
		[[66927, 66927], 'valid', [], 'NV8'],
		[[66928, 67071], 'disallowed'],
		[[67072, 67382], 'valid'],
		[[67383, 67391], 'disallowed'],
		[[67392, 67413], 'valid'],
		[[67414, 67423], 'disallowed'],
		[[67424, 67431], 'valid'],
		[[67432, 67583], 'disallowed'],
		[[67584, 67589], 'valid'],
		[[67590, 67591], 'disallowed'],
		[[67592, 67592], 'valid'],
		[[67593, 67593], 'disallowed'],
		[[67594, 67637], 'valid'],
		[[67638, 67638], 'disallowed'],
		[[67639, 67640], 'valid'],
		[[67641, 67643], 'disallowed'],
		[[67644, 67644], 'valid'],
		[[67645, 67646], 'disallowed'],
		[[67647, 67647], 'valid'],
		[[67648, 67669], 'valid'],
		[[67670, 67670], 'disallowed'],
		[[67671, 67679], 'valid', [], 'NV8'],
		[[67680, 67702], 'valid'],
		[[67703, 67711], 'valid', [], 'NV8'],
		[[67712, 67742], 'valid'],
		[[67743, 67750], 'disallowed'],
		[[67751, 67759], 'valid', [], 'NV8'],
		[[67760, 67807], 'disallowed'],
		[[67808, 67826], 'valid'],
		[[67827, 67827], 'disallowed'],
		[[67828, 67829], 'valid'],
		[[67830, 67834], 'disallowed'],
		[[67835, 67839], 'valid', [], 'NV8'],
		[[67840, 67861], 'valid'],
		[[67862, 67865], 'valid', [], 'NV8'],
		[[67866, 67867], 'valid', [], 'NV8'],
		[[67868, 67870], 'disallowed'],
		[[67871, 67871], 'valid', [], 'NV8'],
		[[67872, 67897], 'valid'],
		[[67898, 67902], 'disallowed'],
		[[67903, 67903], 'valid', [], 'NV8'],
		[[67904, 67967], 'disallowed'],
		[[67968, 68023], 'valid'],
		[[68024, 68027], 'disallowed'],
		[[68028, 68029], 'valid', [], 'NV8'],
		[[68030, 68031], 'valid'],
		[[68032, 68047], 'valid', [], 'NV8'],
		[[68048, 68049], 'disallowed'],
		[[68050, 68095], 'valid', [], 'NV8'],
		[[68096, 68099], 'valid'],
		[[68100, 68100], 'disallowed'],
		[[68101, 68102], 'valid'],
		[[68103, 68107], 'disallowed'],
		[[68108, 68115], 'valid'],
		[[68116, 68116], 'disallowed'],
		[[68117, 68119], 'valid'],
		[[68120, 68120], 'disallowed'],
		[[68121, 68147], 'valid'],
		[[68148, 68151], 'disallowed'],
		[[68152, 68154], 'valid'],
		[[68155, 68158], 'disallowed'],
		[[68159, 68159], 'valid'],
		[[68160, 68167], 'valid', [], 'NV8'],
		[[68168, 68175], 'disallowed'],
		[[68176, 68184], 'valid', [], 'NV8'],
		[[68185, 68191], 'disallowed'],
		[[68192, 68220], 'valid'],
		[[68221, 68223], 'valid', [], 'NV8'],
		[[68224, 68252], 'valid'],
		[[68253, 68255], 'valid', [], 'NV8'],
		[[68256, 68287], 'disallowed'],
		[[68288, 68295], 'valid'],
		[[68296, 68296], 'valid', [], 'NV8'],
		[[68297, 68326], 'valid'],
		[[68327, 68330], 'disallowed'],
		[[68331, 68342], 'valid', [], 'NV8'],
		[[68343, 68351], 'disallowed'],
		[[68352, 68405], 'valid'],
		[[68406, 68408], 'disallowed'],
		[[68409, 68415], 'valid', [], 'NV8'],
		[[68416, 68437], 'valid'],
		[[68438, 68439], 'disallowed'],
		[[68440, 68447], 'valid', [], 'NV8'],
		[[68448, 68466], 'valid'],
		[[68467, 68471], 'disallowed'],
		[[68472, 68479], 'valid', [], 'NV8'],
		[[68480, 68497], 'valid'],
		[[68498, 68504], 'disallowed'],
		[[68505, 68508], 'valid', [], 'NV8'],
		[[68509, 68520], 'disallowed'],
		[[68521, 68527], 'valid', [], 'NV8'],
		[[68528, 68607], 'disallowed'],
		[[68608, 68680], 'valid'],
		[[68681, 68735], 'disallowed'],
		[[68736, 68736], 'mapped', [68800]],
		[[68737, 68737], 'mapped', [68801]],
		[[68738, 68738], 'mapped', [68802]],
		[[68739, 68739], 'mapped', [68803]],
		[[68740, 68740], 'mapped', [68804]],
		[[68741, 68741], 'mapped', [68805]],
		[[68742, 68742], 'mapped', [68806]],
		[[68743, 68743], 'mapped', [68807]],
		[[68744, 68744], 'mapped', [68808]],
		[[68745, 68745], 'mapped', [68809]],
		[[68746, 68746], 'mapped', [68810]],
		[[68747, 68747], 'mapped', [68811]],
		[[68748, 68748], 'mapped', [68812]],
		[[68749, 68749], 'mapped', [68813]],
		[[68750, 68750], 'mapped', [68814]],
		[[68751, 68751], 'mapped', [68815]],
		[[68752, 68752], 'mapped', [68816]],
		[[68753, 68753], 'mapped', [68817]],
		[[68754, 68754], 'mapped', [68818]],
		[[68755, 68755], 'mapped', [68819]],
		[[68756, 68756], 'mapped', [68820]],
		[[68757, 68757], 'mapped', [68821]],
		[[68758, 68758], 'mapped', [68822]],
		[[68759, 68759], 'mapped', [68823]],
		[[68760, 68760], 'mapped', [68824]],
		[[68761, 68761], 'mapped', [68825]],
		[[68762, 68762], 'mapped', [68826]],
		[[68763, 68763], 'mapped', [68827]],
		[[68764, 68764], 'mapped', [68828]],
		[[68765, 68765], 'mapped', [68829]],
		[[68766, 68766], 'mapped', [68830]],
		[[68767, 68767], 'mapped', [68831]],
		[[68768, 68768], 'mapped', [68832]],
		[[68769, 68769], 'mapped', [68833]],
		[[68770, 68770], 'mapped', [68834]],
		[[68771, 68771], 'mapped', [68835]],
		[[68772, 68772], 'mapped', [68836]],
		[[68773, 68773], 'mapped', [68837]],
		[[68774, 68774], 'mapped', [68838]],
		[[68775, 68775], 'mapped', [68839]],
		[[68776, 68776], 'mapped', [68840]],
		[[68777, 68777], 'mapped', [68841]],
		[[68778, 68778], 'mapped', [68842]],
		[[68779, 68779], 'mapped', [68843]],
		[[68780, 68780], 'mapped', [68844]],
		[[68781, 68781], 'mapped', [68845]],
		[[68782, 68782], 'mapped', [68846]],
		[[68783, 68783], 'mapped', [68847]],
		[[68784, 68784], 'mapped', [68848]],
		[[68785, 68785], 'mapped', [68849]],
		[[68786, 68786], 'mapped', [68850]],
		[[68787, 68799], 'disallowed'],
		[[68800, 68850], 'valid'],
		[[68851, 68857], 'disallowed'],
		[[68858, 68863], 'valid', [], 'NV8'],
		[[68864, 69215], 'disallowed'],
		[[69216, 69246], 'valid', [], 'NV8'],
		[[69247, 69631], 'disallowed'],
		[[69632, 69702], 'valid'],
		[[69703, 69709], 'valid', [], 'NV8'],
		[[69710, 69713], 'disallowed'],
		[[69714, 69733], 'valid', [], 'NV8'],
		[[69734, 69743], 'valid'],
		[[69744, 69758], 'disallowed'],
		[[69759, 69759], 'valid'],
		[[69760, 69818], 'valid'],
		[[69819, 69820], 'valid', [], 'NV8'],
		[[69821, 69821], 'disallowed'],
		[[69822, 69825], 'valid', [], 'NV8'],
		[[69826, 69839], 'disallowed'],
		[[69840, 69864], 'valid'],
		[[69865, 69871], 'disallowed'],
		[[69872, 69881], 'valid'],
		[[69882, 69887], 'disallowed'],
		[[69888, 69940], 'valid'],
		[[69941, 69941], 'disallowed'],
		[[69942, 69951], 'valid'],
		[[69952, 69955], 'valid', [], 'NV8'],
		[[69956, 69967], 'disallowed'],
		[[69968, 70003], 'valid'],
		[[70004, 70005], 'valid', [], 'NV8'],
		[[70006, 70006], 'valid'],
		[[70007, 70015], 'disallowed'],
		[[70016, 70084], 'valid'],
		[[70085, 70088], 'valid', [], 'NV8'],
		[[70089, 70089], 'valid', [], 'NV8'],
		[[70090, 70092], 'valid'],
		[[70093, 70093], 'valid', [], 'NV8'],
		[[70094, 70095], 'disallowed'],
		[[70096, 70105], 'valid'],
		[[70106, 70106], 'valid'],
		[[70107, 70107], 'valid', [], 'NV8'],
		[[70108, 70108], 'valid'],
		[[70109, 70111], 'valid', [], 'NV8'],
		[[70112, 70112], 'disallowed'],
		[[70113, 70132], 'valid', [], 'NV8'],
		[[70133, 70143], 'disallowed'],
		[[70144, 70161], 'valid'],
		[[70162, 70162], 'disallowed'],
		[[70163, 70199], 'valid'],
		[[70200, 70205], 'valid', [], 'NV8'],
		[[70206, 70271], 'disallowed'],
		[[70272, 70278], 'valid'],
		[[70279, 70279], 'disallowed'],
		[[70280, 70280], 'valid'],
		[[70281, 70281], 'disallowed'],
		[[70282, 70285], 'valid'],
		[[70286, 70286], 'disallowed'],
		[[70287, 70301], 'valid'],
		[[70302, 70302], 'disallowed'],
		[[70303, 70312], 'valid'],
		[[70313, 70313], 'valid', [], 'NV8'],
		[[70314, 70319], 'disallowed'],
		[[70320, 70378], 'valid'],
		[[70379, 70383], 'disallowed'],
		[[70384, 70393], 'valid'],
		[[70394, 70399], 'disallowed'],
		[[70400, 70400], 'valid'],
		[[70401, 70403], 'valid'],
		[[70404, 70404], 'disallowed'],
		[[70405, 70412], 'valid'],
		[[70413, 70414], 'disallowed'],
		[[70415, 70416], 'valid'],
		[[70417, 70418], 'disallowed'],
		[[70419, 70440], 'valid'],
		[[70441, 70441], 'disallowed'],
		[[70442, 70448], 'valid'],
		[[70449, 70449], 'disallowed'],
		[[70450, 70451], 'valid'],
		[[70452, 70452], 'disallowed'],
		[[70453, 70457], 'valid'],
		[[70458, 70459], 'disallowed'],
		[[70460, 70468], 'valid'],
		[[70469, 70470], 'disallowed'],
		[[70471, 70472], 'valid'],
		[[70473, 70474], 'disallowed'],
		[[70475, 70477], 'valid'],
		[[70478, 70479], 'disallowed'],
		[[70480, 70480], 'valid'],
		[[70481, 70486], 'disallowed'],
		[[70487, 70487], 'valid'],
		[[70488, 70492], 'disallowed'],
		[[70493, 70499], 'valid'],
		[[70500, 70501], 'disallowed'],
		[[70502, 70508], 'valid'],
		[[70509, 70511], 'disallowed'],
		[[70512, 70516], 'valid'],
		[[70517, 70783], 'disallowed'],
		[[70784, 70853], 'valid'],
		[[70854, 70854], 'valid', [], 'NV8'],
		[[70855, 70855], 'valid'],
		[[70856, 70863], 'disallowed'],
		[[70864, 70873], 'valid'],
		[[70874, 71039], 'disallowed'],
		[[71040, 71093], 'valid'],
		[[71094, 71095], 'disallowed'],
		[[71096, 71104], 'valid'],
		[[71105, 71113], 'valid', [], 'NV8'],
		[[71114, 71127], 'valid', [], 'NV8'],
		[[71128, 71133], 'valid'],
		[[71134, 71167], 'disallowed'],
		[[71168, 71232], 'valid'],
		[[71233, 71235], 'valid', [], 'NV8'],
		[[71236, 71236], 'valid'],
		[[71237, 71247], 'disallowed'],
		[[71248, 71257], 'valid'],
		[[71258, 71295], 'disallowed'],
		[[71296, 71351], 'valid'],
		[[71352, 71359], 'disallowed'],
		[[71360, 71369], 'valid'],
		[[71370, 71423], 'disallowed'],
		[[71424, 71449], 'valid'],
		[[71450, 71452], 'disallowed'],
		[[71453, 71467], 'valid'],
		[[71468, 71471], 'disallowed'],
		[[71472, 71481], 'valid'],
		[[71482, 71487], 'valid', [], 'NV8'],
		[[71488, 71839], 'disallowed'],
		[[71840, 71840], 'mapped', [71872]],
		[[71841, 71841], 'mapped', [71873]],
		[[71842, 71842], 'mapped', [71874]],
		[[71843, 71843], 'mapped', [71875]],
		[[71844, 71844], 'mapped', [71876]],
		[[71845, 71845], 'mapped', [71877]],
		[[71846, 71846], 'mapped', [71878]],
		[[71847, 71847], 'mapped', [71879]],
		[[71848, 71848], 'mapped', [71880]],
		[[71849, 71849], 'mapped', [71881]],
		[[71850, 71850], 'mapped', [71882]],
		[[71851, 71851], 'mapped', [71883]],
		[[71852, 71852], 'mapped', [71884]],
		[[71853, 71853], 'mapped', [71885]],
		[[71854, 71854], 'mapped', [71886]],
		[[71855, 71855], 'mapped', [71887]],
		[[71856, 71856], 'mapped', [71888]],
		[[71857, 71857], 'mapped', [71889]],
		[[71858, 71858], 'mapped', [71890]],
		[[71859, 71859], 'mapped', [71891]],
		[[71860, 71860], 'mapped', [71892]],
		[[71861, 71861], 'mapped', [71893]],
		[[71862, 71862], 'mapped', [71894]],
		[[71863, 71863], 'mapped', [71895]],
		[[71864, 71864], 'mapped', [71896]],
		[[71865, 71865], 'mapped', [71897]],
		[[71866, 71866], 'mapped', [71898]],
		[[71867, 71867], 'mapped', [71899]],
		[[71868, 71868], 'mapped', [71900]],
		[[71869, 71869], 'mapped', [71901]],
		[[71870, 71870], 'mapped', [71902]],
		[[71871, 71871], 'mapped', [71903]],
		[[71872, 71913], 'valid'],
		[[71914, 71922], 'valid', [], 'NV8'],
		[[71923, 71934], 'disallowed'],
		[[71935, 71935], 'valid'],
		[[71936, 72383], 'disallowed'],
		[[72384, 72440], 'valid'],
		[[72441, 73727], 'disallowed'],
		[[73728, 74606], 'valid'],
		[[74607, 74648], 'valid'],
		[[74649, 74649], 'valid'],
		[[74650, 74751], 'disallowed'],
		[[74752, 74850], 'valid', [], 'NV8'],
		[[74851, 74862], 'valid', [], 'NV8'],
		[[74863, 74863], 'disallowed'],
		[[74864, 74867], 'valid', [], 'NV8'],
		[[74868, 74868], 'valid', [], 'NV8'],
		[[74869, 74879], 'disallowed'],
		[[74880, 75075], 'valid'],
		[[75076, 77823], 'disallowed'],
		[[77824, 78894], 'valid'],
		[[78895, 82943], 'disallowed'],
		[[82944, 83526], 'valid'],
		[[83527, 92159], 'disallowed'],
		[[92160, 92728], 'valid'],
		[[92729, 92735], 'disallowed'],
		[[92736, 92766], 'valid'],
		[[92767, 92767], 'disallowed'],
		[[92768, 92777], 'valid'],
		[[92778, 92781], 'disallowed'],
		[[92782, 92783], 'valid', [], 'NV8'],
		[[92784, 92879], 'disallowed'],
		[[92880, 92909], 'valid'],
		[[92910, 92911], 'disallowed'],
		[[92912, 92916], 'valid'],
		[[92917, 92917], 'valid', [], 'NV8'],
		[[92918, 92927], 'disallowed'],
		[[92928, 92982], 'valid'],
		[[92983, 92991], 'valid', [], 'NV8'],
		[[92992, 92995], 'valid'],
		[[92996, 92997], 'valid', [], 'NV8'],
		[[92998, 93007], 'disallowed'],
		[[93008, 93017], 'valid'],
		[[93018, 93018], 'disallowed'],
		[[93019, 93025], 'valid', [], 'NV8'],
		[[93026, 93026], 'disallowed'],
		[[93027, 93047], 'valid'],
		[[93048, 93052], 'disallowed'],
		[[93053, 93071], 'valid'],
		[[93072, 93951], 'disallowed'],
		[[93952, 94020], 'valid'],
		[[94021, 94031], 'disallowed'],
		[[94032, 94078], 'valid'],
		[[94079, 94094], 'disallowed'],
		[[94095, 94111], 'valid'],
		[[94112, 110591], 'disallowed'],
		[[110592, 110593], 'valid'],
		[[110594, 113663], 'disallowed'],
		[[113664, 113770], 'valid'],
		[[113771, 113775], 'disallowed'],
		[[113776, 113788], 'valid'],
		[[113789, 113791], 'disallowed'],
		[[113792, 113800], 'valid'],
		[[113801, 113807], 'disallowed'],
		[[113808, 113817], 'valid'],
		[[113818, 113819], 'disallowed'],
		[[113820, 113820], 'valid', [], 'NV8'],
		[[113821, 113822], 'valid'],
		[[113823, 113823], 'valid', [], 'NV8'],
		[[113824, 113827], 'ignored'],
		[[113828, 118783], 'disallowed'],
		[[118784, 119029], 'valid', [], 'NV8'],
		[[119030, 119039], 'disallowed'],
		[[119040, 119078], 'valid', [], 'NV8'],
		[[119079, 119080], 'disallowed'],
		[[119081, 119081], 'valid', [], 'NV8'],
		[[119082, 119133], 'valid', [], 'NV8'],
		[[119134, 119134], 'mapped', [119127, 119141]],
		[[119135, 119135], 'mapped', [119128, 119141]],
		[[119136, 119136], 'mapped', [119128, 119141, 119150]],
		[[119137, 119137], 'mapped', [119128, 119141, 119151]],
		[[119138, 119138], 'mapped', [119128, 119141, 119152]],
		[[119139, 119139], 'mapped', [119128, 119141, 119153]],
		[[119140, 119140], 'mapped', [119128, 119141, 119154]],
		[[119141, 119154], 'valid', [], 'NV8'],
		[[119155, 119162], 'disallowed'],
		[[119163, 119226], 'valid', [], 'NV8'],
		[[119227, 119227], 'mapped', [119225, 119141]],
		[[119228, 119228], 'mapped', [119226, 119141]],
		[[119229, 119229], 'mapped', [119225, 119141, 119150]],
		[[119230, 119230], 'mapped', [119226, 119141, 119150]],
		[[119231, 119231], 'mapped', [119225, 119141, 119151]],
		[[119232, 119232], 'mapped', [119226, 119141, 119151]],
		[[119233, 119261], 'valid', [], 'NV8'],
		[[119262, 119272], 'valid', [], 'NV8'],
		[[119273, 119295], 'disallowed'],
		[[119296, 119365], 'valid', [], 'NV8'],
		[[119366, 119551], 'disallowed'],
		[[119552, 119638], 'valid', [], 'NV8'],
		[[119639, 119647], 'disallowed'],
		[[119648, 119665], 'valid', [], 'NV8'],
		[[119666, 119807], 'disallowed'],
		[[119808, 119808], 'mapped', [97]],
		[[119809, 119809], 'mapped', [98]],
		[[119810, 119810], 'mapped', [99]],
		[[119811, 119811], 'mapped', [100]],
		[[119812, 119812], 'mapped', [101]],
		[[119813, 119813], 'mapped', [102]],
		[[119814, 119814], 'mapped', [103]],
		[[119815, 119815], 'mapped', [104]],
		[[119816, 119816], 'mapped', [105]],
		[[119817, 119817], 'mapped', [106]],
		[[119818, 119818], 'mapped', [107]],
		[[119819, 119819], 'mapped', [108]],
		[[119820, 119820], 'mapped', [109]],
		[[119821, 119821], 'mapped', [110]],
		[[119822, 119822], 'mapped', [111]],
		[[119823, 119823], 'mapped', [112]],
		[[119824, 119824], 'mapped', [113]],
		[[119825, 119825], 'mapped', [114]],
		[[119826, 119826], 'mapped', [115]],
		[[119827, 119827], 'mapped', [116]],
		[[119828, 119828], 'mapped', [117]],
		[[119829, 119829], 'mapped', [118]],
		[[119830, 119830], 'mapped', [119]],
		[[119831, 119831], 'mapped', [120]],
		[[119832, 119832], 'mapped', [121]],
		[[119833, 119833], 'mapped', [122]],
		[[119834, 119834], 'mapped', [97]],
		[[119835, 119835], 'mapped', [98]],
		[[119836, 119836], 'mapped', [99]],
		[[119837, 119837], 'mapped', [100]],
		[[119838, 119838], 'mapped', [101]],
		[[119839, 119839], 'mapped', [102]],
		[[119840, 119840], 'mapped', [103]],
		[[119841, 119841], 'mapped', [104]],
		[[119842, 119842], 'mapped', [105]],
		[[119843, 119843], 'mapped', [106]],
		[[119844, 119844], 'mapped', [107]],
		[[119845, 119845], 'mapped', [108]],
		[[119846, 119846], 'mapped', [109]],
		[[119847, 119847], 'mapped', [110]],
		[[119848, 119848], 'mapped', [111]],
		[[119849, 119849], 'mapped', [112]],
		[[119850, 119850], 'mapped', [113]],
		[[119851, 119851], 'mapped', [114]],
		[[119852, 119852], 'mapped', [115]],
		[[119853, 119853], 'mapped', [116]],
		[[119854, 119854], 'mapped', [117]],
		[[119855, 119855], 'mapped', [118]],
		[[119856, 119856], 'mapped', [119]],
		[[119857, 119857], 'mapped', [120]],
		[[119858, 119858], 'mapped', [121]],
		[[119859, 119859], 'mapped', [122]],
		[[119860, 119860], 'mapped', [97]],
		[[119861, 119861], 'mapped', [98]],
		[[119862, 119862], 'mapped', [99]],
		[[119863, 119863], 'mapped', [100]],
		[[119864, 119864], 'mapped', [101]],
		[[119865, 119865], 'mapped', [102]],
		[[119866, 119866], 'mapped', [103]],
		[[119867, 119867], 'mapped', [104]],
		[[119868, 119868], 'mapped', [105]],
		[[119869, 119869], 'mapped', [106]],
		[[119870, 119870], 'mapped', [107]],
		[[119871, 119871], 'mapped', [108]],
		[[119872, 119872], 'mapped', [109]],
		[[119873, 119873], 'mapped', [110]],
		[[119874, 119874], 'mapped', [111]],
		[[119875, 119875], 'mapped', [112]],
		[[119876, 119876], 'mapped', [113]],
		[[119877, 119877], 'mapped', [114]],
		[[119878, 119878], 'mapped', [115]],
		[[119879, 119879], 'mapped', [116]],
		[[119880, 119880], 'mapped', [117]],
		[[119881, 119881], 'mapped', [118]],
		[[119882, 119882], 'mapped', [119]],
		[[119883, 119883], 'mapped', [120]],
		[[119884, 119884], 'mapped', [121]],
		[[119885, 119885], 'mapped', [122]],
		[[119886, 119886], 'mapped', [97]],
		[[119887, 119887], 'mapped', [98]],
		[[119888, 119888], 'mapped', [99]],
		[[119889, 119889], 'mapped', [100]],
		[[119890, 119890], 'mapped', [101]],
		[[119891, 119891], 'mapped', [102]],
		[[119892, 119892], 'mapped', [103]],
		[[119893, 119893], 'disallowed'],
		[[119894, 119894], 'mapped', [105]],
		[[119895, 119895], 'mapped', [106]],
		[[119896, 119896], 'mapped', [107]],
		[[119897, 119897], 'mapped', [108]],
		[[119898, 119898], 'mapped', [109]],
		[[119899, 119899], 'mapped', [110]],
		[[119900, 119900], 'mapped', [111]],
		[[119901, 119901], 'mapped', [112]],
		[[119902, 119902], 'mapped', [113]],
		[[119903, 119903], 'mapped', [114]],
		[[119904, 119904], 'mapped', [115]],
		[[119905, 119905], 'mapped', [116]],
		[[119906, 119906], 'mapped', [117]],
		[[119907, 119907], 'mapped', [118]],
		[[119908, 119908], 'mapped', [119]],
		[[119909, 119909], 'mapped', [120]],
		[[119910, 119910], 'mapped', [121]],
		[[119911, 119911], 'mapped', [122]],
		[[119912, 119912], 'mapped', [97]],
		[[119913, 119913], 'mapped', [98]],
		[[119914, 119914], 'mapped', [99]],
		[[119915, 119915], 'mapped', [100]],
		[[119916, 119916], 'mapped', [101]],
		[[119917, 119917], 'mapped', [102]],
		[[119918, 119918], 'mapped', [103]],
		[[119919, 119919], 'mapped', [104]],
		[[119920, 119920], 'mapped', [105]],
		[[119921, 119921], 'mapped', [106]],
		[[119922, 119922], 'mapped', [107]],
		[[119923, 119923], 'mapped', [108]],
		[[119924, 119924], 'mapped', [109]],
		[[119925, 119925], 'mapped', [110]],
		[[119926, 119926], 'mapped', [111]],
		[[119927, 119927], 'mapped', [112]],
		[[119928, 119928], 'mapped', [113]],
		[[119929, 119929], 'mapped', [114]],
		[[119930, 119930], 'mapped', [115]],
		[[119931, 119931], 'mapped', [116]],
		[[119932, 119932], 'mapped', [117]],
		[[119933, 119933], 'mapped', [118]],
		[[119934, 119934], 'mapped', [119]],
		[[119935, 119935], 'mapped', [120]],
		[[119936, 119936], 'mapped', [121]],
		[[119937, 119937], 'mapped', [122]],
		[[119938, 119938], 'mapped', [97]],
		[[119939, 119939], 'mapped', [98]],
		[[119940, 119940], 'mapped', [99]],
		[[119941, 119941], 'mapped', [100]],
		[[119942, 119942], 'mapped', [101]],
		[[119943, 119943], 'mapped', [102]],
		[[119944, 119944], 'mapped', [103]],
		[[119945, 119945], 'mapped', [104]],
		[[119946, 119946], 'mapped', [105]],
		[[119947, 119947], 'mapped', [106]],
		[[119948, 119948], 'mapped', [107]],
		[[119949, 119949], 'mapped', [108]],
		[[119950, 119950], 'mapped', [109]],
		[[119951, 119951], 'mapped', [110]],
		[[119952, 119952], 'mapped', [111]],
		[[119953, 119953], 'mapped', [112]],
		[[119954, 119954], 'mapped', [113]],
		[[119955, 119955], 'mapped', [114]],
		[[119956, 119956], 'mapped', [115]],
		[[119957, 119957], 'mapped', [116]],
		[[119958, 119958], 'mapped', [117]],
		[[119959, 119959], 'mapped', [118]],
		[[119960, 119960], 'mapped', [119]],
		[[119961, 119961], 'mapped', [120]],
		[[119962, 119962], 'mapped', [121]],
		[[119963, 119963], 'mapped', [122]],
		[[119964, 119964], 'mapped', [97]],
		[[119965, 119965], 'disallowed'],
		[[119966, 119966], 'mapped', [99]],
		[[119967, 119967], 'mapped', [100]],
		[[119968, 119969], 'disallowed'],
		[[119970, 119970], 'mapped', [103]],
		[[119971, 119972], 'disallowed'],
		[[119973, 119973], 'mapped', [106]],
		[[119974, 119974], 'mapped', [107]],
		[[119975, 119976], 'disallowed'],
		[[119977, 119977], 'mapped', [110]],
		[[119978, 119978], 'mapped', [111]],
		[[119979, 119979], 'mapped', [112]],
		[[119980, 119980], 'mapped', [113]],
		[[119981, 119981], 'disallowed'],
		[[119982, 119982], 'mapped', [115]],
		[[119983, 119983], 'mapped', [116]],
		[[119984, 119984], 'mapped', [117]],
		[[119985, 119985], 'mapped', [118]],
		[[119986, 119986], 'mapped', [119]],
		[[119987, 119987], 'mapped', [120]],
		[[119988, 119988], 'mapped', [121]],
		[[119989, 119989], 'mapped', [122]],
		[[119990, 119990], 'mapped', [97]],
		[[119991, 119991], 'mapped', [98]],
		[[119992, 119992], 'mapped', [99]],
		[[119993, 119993], 'mapped', [100]],
		[[119994, 119994], 'disallowed'],
		[[119995, 119995], 'mapped', [102]],
		[[119996, 119996], 'disallowed'],
		[[119997, 119997], 'mapped', [104]],
		[[119998, 119998], 'mapped', [105]],
		[[119999, 119999], 'mapped', [106]],
		[[12e4, 12e4], 'mapped', [107]],
		[[120001, 120001], 'mapped', [108]],
		[[120002, 120002], 'mapped', [109]],
		[[120003, 120003], 'mapped', [110]],
		[[120004, 120004], 'disallowed'],
		[[120005, 120005], 'mapped', [112]],
		[[120006, 120006], 'mapped', [113]],
		[[120007, 120007], 'mapped', [114]],
		[[120008, 120008], 'mapped', [115]],
		[[120009, 120009], 'mapped', [116]],
		[[120010, 120010], 'mapped', [117]],
		[[120011, 120011], 'mapped', [118]],
		[[120012, 120012], 'mapped', [119]],
		[[120013, 120013], 'mapped', [120]],
		[[120014, 120014], 'mapped', [121]],
		[[120015, 120015], 'mapped', [122]],
		[[120016, 120016], 'mapped', [97]],
		[[120017, 120017], 'mapped', [98]],
		[[120018, 120018], 'mapped', [99]],
		[[120019, 120019], 'mapped', [100]],
		[[120020, 120020], 'mapped', [101]],
		[[120021, 120021], 'mapped', [102]],
		[[120022, 120022], 'mapped', [103]],
		[[120023, 120023], 'mapped', [104]],
		[[120024, 120024], 'mapped', [105]],
		[[120025, 120025], 'mapped', [106]],
		[[120026, 120026], 'mapped', [107]],
		[[120027, 120027], 'mapped', [108]],
		[[120028, 120028], 'mapped', [109]],
		[[120029, 120029], 'mapped', [110]],
		[[120030, 120030], 'mapped', [111]],
		[[120031, 120031], 'mapped', [112]],
		[[120032, 120032], 'mapped', [113]],
		[[120033, 120033], 'mapped', [114]],
		[[120034, 120034], 'mapped', [115]],
		[[120035, 120035], 'mapped', [116]],
		[[120036, 120036], 'mapped', [117]],
		[[120037, 120037], 'mapped', [118]],
		[[120038, 120038], 'mapped', [119]],
		[[120039, 120039], 'mapped', [120]],
		[[120040, 120040], 'mapped', [121]],
		[[120041, 120041], 'mapped', [122]],
		[[120042, 120042], 'mapped', [97]],
		[[120043, 120043], 'mapped', [98]],
		[[120044, 120044], 'mapped', [99]],
		[[120045, 120045], 'mapped', [100]],
		[[120046, 120046], 'mapped', [101]],
		[[120047, 120047], 'mapped', [102]],
		[[120048, 120048], 'mapped', [103]],
		[[120049, 120049], 'mapped', [104]],
		[[120050, 120050], 'mapped', [105]],
		[[120051, 120051], 'mapped', [106]],
		[[120052, 120052], 'mapped', [107]],
		[[120053, 120053], 'mapped', [108]],
		[[120054, 120054], 'mapped', [109]],
		[[120055, 120055], 'mapped', [110]],
		[[120056, 120056], 'mapped', [111]],
		[[120057, 120057], 'mapped', [112]],
		[[120058, 120058], 'mapped', [113]],
		[[120059, 120059], 'mapped', [114]],
		[[120060, 120060], 'mapped', [115]],
		[[120061, 120061], 'mapped', [116]],
		[[120062, 120062], 'mapped', [117]],
		[[120063, 120063], 'mapped', [118]],
		[[120064, 120064], 'mapped', [119]],
		[[120065, 120065], 'mapped', [120]],
		[[120066, 120066], 'mapped', [121]],
		[[120067, 120067], 'mapped', [122]],
		[[120068, 120068], 'mapped', [97]],
		[[120069, 120069], 'mapped', [98]],
		[[120070, 120070], 'disallowed'],
		[[120071, 120071], 'mapped', [100]],
		[[120072, 120072], 'mapped', [101]],
		[[120073, 120073], 'mapped', [102]],
		[[120074, 120074], 'mapped', [103]],
		[[120075, 120076], 'disallowed'],
		[[120077, 120077], 'mapped', [106]],
		[[120078, 120078], 'mapped', [107]],
		[[120079, 120079], 'mapped', [108]],
		[[120080, 120080], 'mapped', [109]],
		[[120081, 120081], 'mapped', [110]],
		[[120082, 120082], 'mapped', [111]],
		[[120083, 120083], 'mapped', [112]],
		[[120084, 120084], 'mapped', [113]],
		[[120085, 120085], 'disallowed'],
		[[120086, 120086], 'mapped', [115]],
		[[120087, 120087], 'mapped', [116]],
		[[120088, 120088], 'mapped', [117]],
		[[120089, 120089], 'mapped', [118]],
		[[120090, 120090], 'mapped', [119]],
		[[120091, 120091], 'mapped', [120]],
		[[120092, 120092], 'mapped', [121]],
		[[120093, 120093], 'disallowed'],
		[[120094, 120094], 'mapped', [97]],
		[[120095, 120095], 'mapped', [98]],
		[[120096, 120096], 'mapped', [99]],
		[[120097, 120097], 'mapped', [100]],
		[[120098, 120098], 'mapped', [101]],
		[[120099, 120099], 'mapped', [102]],
		[[120100, 120100], 'mapped', [103]],
		[[120101, 120101], 'mapped', [104]],
		[[120102, 120102], 'mapped', [105]],
		[[120103, 120103], 'mapped', [106]],
		[[120104, 120104], 'mapped', [107]],
		[[120105, 120105], 'mapped', [108]],
		[[120106, 120106], 'mapped', [109]],
		[[120107, 120107], 'mapped', [110]],
		[[120108, 120108], 'mapped', [111]],
		[[120109, 120109], 'mapped', [112]],
		[[120110, 120110], 'mapped', [113]],
		[[120111, 120111], 'mapped', [114]],
		[[120112, 120112], 'mapped', [115]],
		[[120113, 120113], 'mapped', [116]],
		[[120114, 120114], 'mapped', [117]],
		[[120115, 120115], 'mapped', [118]],
		[[120116, 120116], 'mapped', [119]],
		[[120117, 120117], 'mapped', [120]],
		[[120118, 120118], 'mapped', [121]],
		[[120119, 120119], 'mapped', [122]],
		[[120120, 120120], 'mapped', [97]],
		[[120121, 120121], 'mapped', [98]],
		[[120122, 120122], 'disallowed'],
		[[120123, 120123], 'mapped', [100]],
		[[120124, 120124], 'mapped', [101]],
		[[120125, 120125], 'mapped', [102]],
		[[120126, 120126], 'mapped', [103]],
		[[120127, 120127], 'disallowed'],
		[[120128, 120128], 'mapped', [105]],
		[[120129, 120129], 'mapped', [106]],
		[[120130, 120130], 'mapped', [107]],
		[[120131, 120131], 'mapped', [108]],
		[[120132, 120132], 'mapped', [109]],
		[[120133, 120133], 'disallowed'],
		[[120134, 120134], 'mapped', [111]],
		[[120135, 120137], 'disallowed'],
		[[120138, 120138], 'mapped', [115]],
		[[120139, 120139], 'mapped', [116]],
		[[120140, 120140], 'mapped', [117]],
		[[120141, 120141], 'mapped', [118]],
		[[120142, 120142], 'mapped', [119]],
		[[120143, 120143], 'mapped', [120]],
		[[120144, 120144], 'mapped', [121]],
		[[120145, 120145], 'disallowed'],
		[[120146, 120146], 'mapped', [97]],
		[[120147, 120147], 'mapped', [98]],
		[[120148, 120148], 'mapped', [99]],
		[[120149, 120149], 'mapped', [100]],
		[[120150, 120150], 'mapped', [101]],
		[[120151, 120151], 'mapped', [102]],
		[[120152, 120152], 'mapped', [103]],
		[[120153, 120153], 'mapped', [104]],
		[[120154, 120154], 'mapped', [105]],
		[[120155, 120155], 'mapped', [106]],
		[[120156, 120156], 'mapped', [107]],
		[[120157, 120157], 'mapped', [108]],
		[[120158, 120158], 'mapped', [109]],
		[[120159, 120159], 'mapped', [110]],
		[[120160, 120160], 'mapped', [111]],
		[[120161, 120161], 'mapped', [112]],
		[[120162, 120162], 'mapped', [113]],
		[[120163, 120163], 'mapped', [114]],
		[[120164, 120164], 'mapped', [115]],
		[[120165, 120165], 'mapped', [116]],
		[[120166, 120166], 'mapped', [117]],
		[[120167, 120167], 'mapped', [118]],
		[[120168, 120168], 'mapped', [119]],
		[[120169, 120169], 'mapped', [120]],
		[[120170, 120170], 'mapped', [121]],
		[[120171, 120171], 'mapped', [122]],
		[[120172, 120172], 'mapped', [97]],
		[[120173, 120173], 'mapped', [98]],
		[[120174, 120174], 'mapped', [99]],
		[[120175, 120175], 'mapped', [100]],
		[[120176, 120176], 'mapped', [101]],
		[[120177, 120177], 'mapped', [102]],
		[[120178, 120178], 'mapped', [103]],
		[[120179, 120179], 'mapped', [104]],
		[[120180, 120180], 'mapped', [105]],
		[[120181, 120181], 'mapped', [106]],
		[[120182, 120182], 'mapped', [107]],
		[[120183, 120183], 'mapped', [108]],
		[[120184, 120184], 'mapped', [109]],
		[[120185, 120185], 'mapped', [110]],
		[[120186, 120186], 'mapped', [111]],
		[[120187, 120187], 'mapped', [112]],
		[[120188, 120188], 'mapped', [113]],
		[[120189, 120189], 'mapped', [114]],
		[[120190, 120190], 'mapped', [115]],
		[[120191, 120191], 'mapped', [116]],
		[[120192, 120192], 'mapped', [117]],
		[[120193, 120193], 'mapped', [118]],
		[[120194, 120194], 'mapped', [119]],
		[[120195, 120195], 'mapped', [120]],
		[[120196, 120196], 'mapped', [121]],
		[[120197, 120197], 'mapped', [122]],
		[[120198, 120198], 'mapped', [97]],
		[[120199, 120199], 'mapped', [98]],
		[[120200, 120200], 'mapped', [99]],
		[[120201, 120201], 'mapped', [100]],
		[[120202, 120202], 'mapped', [101]],
		[[120203, 120203], 'mapped', [102]],
		[[120204, 120204], 'mapped', [103]],
		[[120205, 120205], 'mapped', [104]],
		[[120206, 120206], 'mapped', [105]],
		[[120207, 120207], 'mapped', [106]],
		[[120208, 120208], 'mapped', [107]],
		[[120209, 120209], 'mapped', [108]],
		[[120210, 120210], 'mapped', [109]],
		[[120211, 120211], 'mapped', [110]],
		[[120212, 120212], 'mapped', [111]],
		[[120213, 120213], 'mapped', [112]],
		[[120214, 120214], 'mapped', [113]],
		[[120215, 120215], 'mapped', [114]],
		[[120216, 120216], 'mapped', [115]],
		[[120217, 120217], 'mapped', [116]],
		[[120218, 120218], 'mapped', [117]],
		[[120219, 120219], 'mapped', [118]],
		[[120220, 120220], 'mapped', [119]],
		[[120221, 120221], 'mapped', [120]],
		[[120222, 120222], 'mapped', [121]],
		[[120223, 120223], 'mapped', [122]],
		[[120224, 120224], 'mapped', [97]],
		[[120225, 120225], 'mapped', [98]],
		[[120226, 120226], 'mapped', [99]],
		[[120227, 120227], 'mapped', [100]],
		[[120228, 120228], 'mapped', [101]],
		[[120229, 120229], 'mapped', [102]],
		[[120230, 120230], 'mapped', [103]],
		[[120231, 120231], 'mapped', [104]],
		[[120232, 120232], 'mapped', [105]],
		[[120233, 120233], 'mapped', [106]],
		[[120234, 120234], 'mapped', [107]],
		[[120235, 120235], 'mapped', [108]],
		[[120236, 120236], 'mapped', [109]],
		[[120237, 120237], 'mapped', [110]],
		[[120238, 120238], 'mapped', [111]],
		[[120239, 120239], 'mapped', [112]],
		[[120240, 120240], 'mapped', [113]],
		[[120241, 120241], 'mapped', [114]],
		[[120242, 120242], 'mapped', [115]],
		[[120243, 120243], 'mapped', [116]],
		[[120244, 120244], 'mapped', [117]],
		[[120245, 120245], 'mapped', [118]],
		[[120246, 120246], 'mapped', [119]],
		[[120247, 120247], 'mapped', [120]],
		[[120248, 120248], 'mapped', [121]],
		[[120249, 120249], 'mapped', [122]],
		[[120250, 120250], 'mapped', [97]],
		[[120251, 120251], 'mapped', [98]],
		[[120252, 120252], 'mapped', [99]],
		[[120253, 120253], 'mapped', [100]],
		[[120254, 120254], 'mapped', [101]],
		[[120255, 120255], 'mapped', [102]],
		[[120256, 120256], 'mapped', [103]],
		[[120257, 120257], 'mapped', [104]],
		[[120258, 120258], 'mapped', [105]],
		[[120259, 120259], 'mapped', [106]],
		[[120260, 120260], 'mapped', [107]],
		[[120261, 120261], 'mapped', [108]],
		[[120262, 120262], 'mapped', [109]],
		[[120263, 120263], 'mapped', [110]],
		[[120264, 120264], 'mapped', [111]],
		[[120265, 120265], 'mapped', [112]],
		[[120266, 120266], 'mapped', [113]],
		[[120267, 120267], 'mapped', [114]],
		[[120268, 120268], 'mapped', [115]],
		[[120269, 120269], 'mapped', [116]],
		[[120270, 120270], 'mapped', [117]],
		[[120271, 120271], 'mapped', [118]],
		[[120272, 120272], 'mapped', [119]],
		[[120273, 120273], 'mapped', [120]],
		[[120274, 120274], 'mapped', [121]],
		[[120275, 120275], 'mapped', [122]],
		[[120276, 120276], 'mapped', [97]],
		[[120277, 120277], 'mapped', [98]],
		[[120278, 120278], 'mapped', [99]],
		[[120279, 120279], 'mapped', [100]],
		[[120280, 120280], 'mapped', [101]],
		[[120281, 120281], 'mapped', [102]],
		[[120282, 120282], 'mapped', [103]],
		[[120283, 120283], 'mapped', [104]],
		[[120284, 120284], 'mapped', [105]],
		[[120285, 120285], 'mapped', [106]],
		[[120286, 120286], 'mapped', [107]],
		[[120287, 120287], 'mapped', [108]],
		[[120288, 120288], 'mapped', [109]],
		[[120289, 120289], 'mapped', [110]],
		[[120290, 120290], 'mapped', [111]],
		[[120291, 120291], 'mapped', [112]],
		[[120292, 120292], 'mapped', [113]],
		[[120293, 120293], 'mapped', [114]],
		[[120294, 120294], 'mapped', [115]],
		[[120295, 120295], 'mapped', [116]],
		[[120296, 120296], 'mapped', [117]],
		[[120297, 120297], 'mapped', [118]],
		[[120298, 120298], 'mapped', [119]],
		[[120299, 120299], 'mapped', [120]],
		[[120300, 120300], 'mapped', [121]],
		[[120301, 120301], 'mapped', [122]],
		[[120302, 120302], 'mapped', [97]],
		[[120303, 120303], 'mapped', [98]],
		[[120304, 120304], 'mapped', [99]],
		[[120305, 120305], 'mapped', [100]],
		[[120306, 120306], 'mapped', [101]],
		[[120307, 120307], 'mapped', [102]],
		[[120308, 120308], 'mapped', [103]],
		[[120309, 120309], 'mapped', [104]],
		[[120310, 120310], 'mapped', [105]],
		[[120311, 120311], 'mapped', [106]],
		[[120312, 120312], 'mapped', [107]],
		[[120313, 120313], 'mapped', [108]],
		[[120314, 120314], 'mapped', [109]],
		[[120315, 120315], 'mapped', [110]],
		[[120316, 120316], 'mapped', [111]],
		[[120317, 120317], 'mapped', [112]],
		[[120318, 120318], 'mapped', [113]],
		[[120319, 120319], 'mapped', [114]],
		[[120320, 120320], 'mapped', [115]],
		[[120321, 120321], 'mapped', [116]],
		[[120322, 120322], 'mapped', [117]],
		[[120323, 120323], 'mapped', [118]],
		[[120324, 120324], 'mapped', [119]],
		[[120325, 120325], 'mapped', [120]],
		[[120326, 120326], 'mapped', [121]],
		[[120327, 120327], 'mapped', [122]],
		[[120328, 120328], 'mapped', [97]],
		[[120329, 120329], 'mapped', [98]],
		[[120330, 120330], 'mapped', [99]],
		[[120331, 120331], 'mapped', [100]],
		[[120332, 120332], 'mapped', [101]],
		[[120333, 120333], 'mapped', [102]],
		[[120334, 120334], 'mapped', [103]],
		[[120335, 120335], 'mapped', [104]],
		[[120336, 120336], 'mapped', [105]],
		[[120337, 120337], 'mapped', [106]],
		[[120338, 120338], 'mapped', [107]],
		[[120339, 120339], 'mapped', [108]],
		[[120340, 120340], 'mapped', [109]],
		[[120341, 120341], 'mapped', [110]],
		[[120342, 120342], 'mapped', [111]],
		[[120343, 120343], 'mapped', [112]],
		[[120344, 120344], 'mapped', [113]],
		[[120345, 120345], 'mapped', [114]],
		[[120346, 120346], 'mapped', [115]],
		[[120347, 120347], 'mapped', [116]],
		[[120348, 120348], 'mapped', [117]],
		[[120349, 120349], 'mapped', [118]],
		[[120350, 120350], 'mapped', [119]],
		[[120351, 120351], 'mapped', [120]],
		[[120352, 120352], 'mapped', [121]],
		[[120353, 120353], 'mapped', [122]],
		[[120354, 120354], 'mapped', [97]],
		[[120355, 120355], 'mapped', [98]],
		[[120356, 120356], 'mapped', [99]],
		[[120357, 120357], 'mapped', [100]],
		[[120358, 120358], 'mapped', [101]],
		[[120359, 120359], 'mapped', [102]],
		[[120360, 120360], 'mapped', [103]],
		[[120361, 120361], 'mapped', [104]],
		[[120362, 120362], 'mapped', [105]],
		[[120363, 120363], 'mapped', [106]],
		[[120364, 120364], 'mapped', [107]],
		[[120365, 120365], 'mapped', [108]],
		[[120366, 120366], 'mapped', [109]],
		[[120367, 120367], 'mapped', [110]],
		[[120368, 120368], 'mapped', [111]],
		[[120369, 120369], 'mapped', [112]],
		[[120370, 120370], 'mapped', [113]],
		[[120371, 120371], 'mapped', [114]],
		[[120372, 120372], 'mapped', [115]],
		[[120373, 120373], 'mapped', [116]],
		[[120374, 120374], 'mapped', [117]],
		[[120375, 120375], 'mapped', [118]],
		[[120376, 120376], 'mapped', [119]],
		[[120377, 120377], 'mapped', [120]],
		[[120378, 120378], 'mapped', [121]],
		[[120379, 120379], 'mapped', [122]],
		[[120380, 120380], 'mapped', [97]],
		[[120381, 120381], 'mapped', [98]],
		[[120382, 120382], 'mapped', [99]],
		[[120383, 120383], 'mapped', [100]],
		[[120384, 120384], 'mapped', [101]],
		[[120385, 120385], 'mapped', [102]],
		[[120386, 120386], 'mapped', [103]],
		[[120387, 120387], 'mapped', [104]],
		[[120388, 120388], 'mapped', [105]],
		[[120389, 120389], 'mapped', [106]],
		[[120390, 120390], 'mapped', [107]],
		[[120391, 120391], 'mapped', [108]],
		[[120392, 120392], 'mapped', [109]],
		[[120393, 120393], 'mapped', [110]],
		[[120394, 120394], 'mapped', [111]],
		[[120395, 120395], 'mapped', [112]],
		[[120396, 120396], 'mapped', [113]],
		[[120397, 120397], 'mapped', [114]],
		[[120398, 120398], 'mapped', [115]],
		[[120399, 120399], 'mapped', [116]],
		[[120400, 120400], 'mapped', [117]],
		[[120401, 120401], 'mapped', [118]],
		[[120402, 120402], 'mapped', [119]],
		[[120403, 120403], 'mapped', [120]],
		[[120404, 120404], 'mapped', [121]],
		[[120405, 120405], 'mapped', [122]],
		[[120406, 120406], 'mapped', [97]],
		[[120407, 120407], 'mapped', [98]],
		[[120408, 120408], 'mapped', [99]],
		[[120409, 120409], 'mapped', [100]],
		[[120410, 120410], 'mapped', [101]],
		[[120411, 120411], 'mapped', [102]],
		[[120412, 120412], 'mapped', [103]],
		[[120413, 120413], 'mapped', [104]],
		[[120414, 120414], 'mapped', [105]],
		[[120415, 120415], 'mapped', [106]],
		[[120416, 120416], 'mapped', [107]],
		[[120417, 120417], 'mapped', [108]],
		[[120418, 120418], 'mapped', [109]],
		[[120419, 120419], 'mapped', [110]],
		[[120420, 120420], 'mapped', [111]],
		[[120421, 120421], 'mapped', [112]],
		[[120422, 120422], 'mapped', [113]],
		[[120423, 120423], 'mapped', [114]],
		[[120424, 120424], 'mapped', [115]],
		[[120425, 120425], 'mapped', [116]],
		[[120426, 120426], 'mapped', [117]],
		[[120427, 120427], 'mapped', [118]],
		[[120428, 120428], 'mapped', [119]],
		[[120429, 120429], 'mapped', [120]],
		[[120430, 120430], 'mapped', [121]],
		[[120431, 120431], 'mapped', [122]],
		[[120432, 120432], 'mapped', [97]],
		[[120433, 120433], 'mapped', [98]],
		[[120434, 120434], 'mapped', [99]],
		[[120435, 120435], 'mapped', [100]],
		[[120436, 120436], 'mapped', [101]],
		[[120437, 120437], 'mapped', [102]],
		[[120438, 120438], 'mapped', [103]],
		[[120439, 120439], 'mapped', [104]],
		[[120440, 120440], 'mapped', [105]],
		[[120441, 120441], 'mapped', [106]],
		[[120442, 120442], 'mapped', [107]],
		[[120443, 120443], 'mapped', [108]],
		[[120444, 120444], 'mapped', [109]],
		[[120445, 120445], 'mapped', [110]],
		[[120446, 120446], 'mapped', [111]],
		[[120447, 120447], 'mapped', [112]],
		[[120448, 120448], 'mapped', [113]],
		[[120449, 120449], 'mapped', [114]],
		[[120450, 120450], 'mapped', [115]],
		[[120451, 120451], 'mapped', [116]],
		[[120452, 120452], 'mapped', [117]],
		[[120453, 120453], 'mapped', [118]],
		[[120454, 120454], 'mapped', [119]],
		[[120455, 120455], 'mapped', [120]],
		[[120456, 120456], 'mapped', [121]],
		[[120457, 120457], 'mapped', [122]],
		[[120458, 120458], 'mapped', [97]],
		[[120459, 120459], 'mapped', [98]],
		[[120460, 120460], 'mapped', [99]],
		[[120461, 120461], 'mapped', [100]],
		[[120462, 120462], 'mapped', [101]],
		[[120463, 120463], 'mapped', [102]],
		[[120464, 120464], 'mapped', [103]],
		[[120465, 120465], 'mapped', [104]],
		[[120466, 120466], 'mapped', [105]],
		[[120467, 120467], 'mapped', [106]],
		[[120468, 120468], 'mapped', [107]],
		[[120469, 120469], 'mapped', [108]],
		[[120470, 120470], 'mapped', [109]],
		[[120471, 120471], 'mapped', [110]],
		[[120472, 120472], 'mapped', [111]],
		[[120473, 120473], 'mapped', [112]],
		[[120474, 120474], 'mapped', [113]],
		[[120475, 120475], 'mapped', [114]],
		[[120476, 120476], 'mapped', [115]],
		[[120477, 120477], 'mapped', [116]],
		[[120478, 120478], 'mapped', [117]],
		[[120479, 120479], 'mapped', [118]],
		[[120480, 120480], 'mapped', [119]],
		[[120481, 120481], 'mapped', [120]],
		[[120482, 120482], 'mapped', [121]],
		[[120483, 120483], 'mapped', [122]],
		[[120484, 120484], 'mapped', [305]],
		[[120485, 120485], 'mapped', [567]],
		[[120486, 120487], 'disallowed'],
		[[120488, 120488], 'mapped', [945]],
		[[120489, 120489], 'mapped', [946]],
		[[120490, 120490], 'mapped', [947]],
		[[120491, 120491], 'mapped', [948]],
		[[120492, 120492], 'mapped', [949]],
		[[120493, 120493], 'mapped', [950]],
		[[120494, 120494], 'mapped', [951]],
		[[120495, 120495], 'mapped', [952]],
		[[120496, 120496], 'mapped', [953]],
		[[120497, 120497], 'mapped', [954]],
		[[120498, 120498], 'mapped', [955]],
		[[120499, 120499], 'mapped', [956]],
		[[120500, 120500], 'mapped', [957]],
		[[120501, 120501], 'mapped', [958]],
		[[120502, 120502], 'mapped', [959]],
		[[120503, 120503], 'mapped', [960]],
		[[120504, 120504], 'mapped', [961]],
		[[120505, 120505], 'mapped', [952]],
		[[120506, 120506], 'mapped', [963]],
		[[120507, 120507], 'mapped', [964]],
		[[120508, 120508], 'mapped', [965]],
		[[120509, 120509], 'mapped', [966]],
		[[120510, 120510], 'mapped', [967]],
		[[120511, 120511], 'mapped', [968]],
		[[120512, 120512], 'mapped', [969]],
		[[120513, 120513], 'mapped', [8711]],
		[[120514, 120514], 'mapped', [945]],
		[[120515, 120515], 'mapped', [946]],
		[[120516, 120516], 'mapped', [947]],
		[[120517, 120517], 'mapped', [948]],
		[[120518, 120518], 'mapped', [949]],
		[[120519, 120519], 'mapped', [950]],
		[[120520, 120520], 'mapped', [951]],
		[[120521, 120521], 'mapped', [952]],
		[[120522, 120522], 'mapped', [953]],
		[[120523, 120523], 'mapped', [954]],
		[[120524, 120524], 'mapped', [955]],
		[[120525, 120525], 'mapped', [956]],
		[[120526, 120526], 'mapped', [957]],
		[[120527, 120527], 'mapped', [958]],
		[[120528, 120528], 'mapped', [959]],
		[[120529, 120529], 'mapped', [960]],
		[[120530, 120530], 'mapped', [961]],
		[[120531, 120532], 'mapped', [963]],
		[[120533, 120533], 'mapped', [964]],
		[[120534, 120534], 'mapped', [965]],
		[[120535, 120535], 'mapped', [966]],
		[[120536, 120536], 'mapped', [967]],
		[[120537, 120537], 'mapped', [968]],
		[[120538, 120538], 'mapped', [969]],
		[[120539, 120539], 'mapped', [8706]],
		[[120540, 120540], 'mapped', [949]],
		[[120541, 120541], 'mapped', [952]],
		[[120542, 120542], 'mapped', [954]],
		[[120543, 120543], 'mapped', [966]],
		[[120544, 120544], 'mapped', [961]],
		[[120545, 120545], 'mapped', [960]],
		[[120546, 120546], 'mapped', [945]],
		[[120547, 120547], 'mapped', [946]],
		[[120548, 120548], 'mapped', [947]],
		[[120549, 120549], 'mapped', [948]],
		[[120550, 120550], 'mapped', [949]],
		[[120551, 120551], 'mapped', [950]],
		[[120552, 120552], 'mapped', [951]],
		[[120553, 120553], 'mapped', [952]],
		[[120554, 120554], 'mapped', [953]],
		[[120555, 120555], 'mapped', [954]],
		[[120556, 120556], 'mapped', [955]],
		[[120557, 120557], 'mapped', [956]],
		[[120558, 120558], 'mapped', [957]],
		[[120559, 120559], 'mapped', [958]],
		[[120560, 120560], 'mapped', [959]],
		[[120561, 120561], 'mapped', [960]],
		[[120562, 120562], 'mapped', [961]],
		[[120563, 120563], 'mapped', [952]],
		[[120564, 120564], 'mapped', [963]],
		[[120565, 120565], 'mapped', [964]],
		[[120566, 120566], 'mapped', [965]],
		[[120567, 120567], 'mapped', [966]],
		[[120568, 120568], 'mapped', [967]],
		[[120569, 120569], 'mapped', [968]],
		[[120570, 120570], 'mapped', [969]],
		[[120571, 120571], 'mapped', [8711]],
		[[120572, 120572], 'mapped', [945]],
		[[120573, 120573], 'mapped', [946]],
		[[120574, 120574], 'mapped', [947]],
		[[120575, 120575], 'mapped', [948]],
		[[120576, 120576], 'mapped', [949]],
		[[120577, 120577], 'mapped', [950]],
		[[120578, 120578], 'mapped', [951]],
		[[120579, 120579], 'mapped', [952]],
		[[120580, 120580], 'mapped', [953]],
		[[120581, 120581], 'mapped', [954]],
		[[120582, 120582], 'mapped', [955]],
		[[120583, 120583], 'mapped', [956]],
		[[120584, 120584], 'mapped', [957]],
		[[120585, 120585], 'mapped', [958]],
		[[120586, 120586], 'mapped', [959]],
		[[120587, 120587], 'mapped', [960]],
		[[120588, 120588], 'mapped', [961]],
		[[120589, 120590], 'mapped', [963]],
		[[120591, 120591], 'mapped', [964]],
		[[120592, 120592], 'mapped', [965]],
		[[120593, 120593], 'mapped', [966]],
		[[120594, 120594], 'mapped', [967]],
		[[120595, 120595], 'mapped', [968]],
		[[120596, 120596], 'mapped', [969]],
		[[120597, 120597], 'mapped', [8706]],
		[[120598, 120598], 'mapped', [949]],
		[[120599, 120599], 'mapped', [952]],
		[[120600, 120600], 'mapped', [954]],
		[[120601, 120601], 'mapped', [966]],
		[[120602, 120602], 'mapped', [961]],
		[[120603, 120603], 'mapped', [960]],
		[[120604, 120604], 'mapped', [945]],
		[[120605, 120605], 'mapped', [946]],
		[[120606, 120606], 'mapped', [947]],
		[[120607, 120607], 'mapped', [948]],
		[[120608, 120608], 'mapped', [949]],
		[[120609, 120609], 'mapped', [950]],
		[[120610, 120610], 'mapped', [951]],
		[[120611, 120611], 'mapped', [952]],
		[[120612, 120612], 'mapped', [953]],
		[[120613, 120613], 'mapped', [954]],
		[[120614, 120614], 'mapped', [955]],
		[[120615, 120615], 'mapped', [956]],
		[[120616, 120616], 'mapped', [957]],
		[[120617, 120617], 'mapped', [958]],
		[[120618, 120618], 'mapped', [959]],
		[[120619, 120619], 'mapped', [960]],
		[[120620, 120620], 'mapped', [961]],
		[[120621, 120621], 'mapped', [952]],
		[[120622, 120622], 'mapped', [963]],
		[[120623, 120623], 'mapped', [964]],
		[[120624, 120624], 'mapped', [965]],
		[[120625, 120625], 'mapped', [966]],
		[[120626, 120626], 'mapped', [967]],
		[[120627, 120627], 'mapped', [968]],
		[[120628, 120628], 'mapped', [969]],
		[[120629, 120629], 'mapped', [8711]],
		[[120630, 120630], 'mapped', [945]],
		[[120631, 120631], 'mapped', [946]],
		[[120632, 120632], 'mapped', [947]],
		[[120633, 120633], 'mapped', [948]],
		[[120634, 120634], 'mapped', [949]],
		[[120635, 120635], 'mapped', [950]],
		[[120636, 120636], 'mapped', [951]],
		[[120637, 120637], 'mapped', [952]],
		[[120638, 120638], 'mapped', [953]],
		[[120639, 120639], 'mapped', [954]],
		[[120640, 120640], 'mapped', [955]],
		[[120641, 120641], 'mapped', [956]],
		[[120642, 120642], 'mapped', [957]],
		[[120643, 120643], 'mapped', [958]],
		[[120644, 120644], 'mapped', [959]],
		[[120645, 120645], 'mapped', [960]],
		[[120646, 120646], 'mapped', [961]],
		[[120647, 120648], 'mapped', [963]],
		[[120649, 120649], 'mapped', [964]],
		[[120650, 120650], 'mapped', [965]],
		[[120651, 120651], 'mapped', [966]],
		[[120652, 120652], 'mapped', [967]],
		[[120653, 120653], 'mapped', [968]],
		[[120654, 120654], 'mapped', [969]],
		[[120655, 120655], 'mapped', [8706]],
		[[120656, 120656], 'mapped', [949]],
		[[120657, 120657], 'mapped', [952]],
		[[120658, 120658], 'mapped', [954]],
		[[120659, 120659], 'mapped', [966]],
		[[120660, 120660], 'mapped', [961]],
		[[120661, 120661], 'mapped', [960]],
		[[120662, 120662], 'mapped', [945]],
		[[120663, 120663], 'mapped', [946]],
		[[120664, 120664], 'mapped', [947]],
		[[120665, 120665], 'mapped', [948]],
		[[120666, 120666], 'mapped', [949]],
		[[120667, 120667], 'mapped', [950]],
		[[120668, 120668], 'mapped', [951]],
		[[120669, 120669], 'mapped', [952]],
		[[120670, 120670], 'mapped', [953]],
		[[120671, 120671], 'mapped', [954]],
		[[120672, 120672], 'mapped', [955]],
		[[120673, 120673], 'mapped', [956]],
		[[120674, 120674], 'mapped', [957]],
		[[120675, 120675], 'mapped', [958]],
		[[120676, 120676], 'mapped', [959]],
		[[120677, 120677], 'mapped', [960]],
		[[120678, 120678], 'mapped', [961]],
		[[120679, 120679], 'mapped', [952]],
		[[120680, 120680], 'mapped', [963]],
		[[120681, 120681], 'mapped', [964]],
		[[120682, 120682], 'mapped', [965]],
		[[120683, 120683], 'mapped', [966]],
		[[120684, 120684], 'mapped', [967]],
		[[120685, 120685], 'mapped', [968]],
		[[120686, 120686], 'mapped', [969]],
		[[120687, 120687], 'mapped', [8711]],
		[[120688, 120688], 'mapped', [945]],
		[[120689, 120689], 'mapped', [946]],
		[[120690, 120690], 'mapped', [947]],
		[[120691, 120691], 'mapped', [948]],
		[[120692, 120692], 'mapped', [949]],
		[[120693, 120693], 'mapped', [950]],
		[[120694, 120694], 'mapped', [951]],
		[[120695, 120695], 'mapped', [952]],
		[[120696, 120696], 'mapped', [953]],
		[[120697, 120697], 'mapped', [954]],
		[[120698, 120698], 'mapped', [955]],
		[[120699, 120699], 'mapped', [956]],
		[[120700, 120700], 'mapped', [957]],
		[[120701, 120701], 'mapped', [958]],
		[[120702, 120702], 'mapped', [959]],
		[[120703, 120703], 'mapped', [960]],
		[[120704, 120704], 'mapped', [961]],
		[[120705, 120706], 'mapped', [963]],
		[[120707, 120707], 'mapped', [964]],
		[[120708, 120708], 'mapped', [965]],
		[[120709, 120709], 'mapped', [966]],
		[[120710, 120710], 'mapped', [967]],
		[[120711, 120711], 'mapped', [968]],
		[[120712, 120712], 'mapped', [969]],
		[[120713, 120713], 'mapped', [8706]],
		[[120714, 120714], 'mapped', [949]],
		[[120715, 120715], 'mapped', [952]],
		[[120716, 120716], 'mapped', [954]],
		[[120717, 120717], 'mapped', [966]],
		[[120718, 120718], 'mapped', [961]],
		[[120719, 120719], 'mapped', [960]],
		[[120720, 120720], 'mapped', [945]],
		[[120721, 120721], 'mapped', [946]],
		[[120722, 120722], 'mapped', [947]],
		[[120723, 120723], 'mapped', [948]],
		[[120724, 120724], 'mapped', [949]],
		[[120725, 120725], 'mapped', [950]],
		[[120726, 120726], 'mapped', [951]],
		[[120727, 120727], 'mapped', [952]],
		[[120728, 120728], 'mapped', [953]],
		[[120729, 120729], 'mapped', [954]],
		[[120730, 120730], 'mapped', [955]],
		[[120731, 120731], 'mapped', [956]],
		[[120732, 120732], 'mapped', [957]],
		[[120733, 120733], 'mapped', [958]],
		[[120734, 120734], 'mapped', [959]],
		[[120735, 120735], 'mapped', [960]],
		[[120736, 120736], 'mapped', [961]],
		[[120737, 120737], 'mapped', [952]],
		[[120738, 120738], 'mapped', [963]],
		[[120739, 120739], 'mapped', [964]],
		[[120740, 120740], 'mapped', [965]],
		[[120741, 120741], 'mapped', [966]],
		[[120742, 120742], 'mapped', [967]],
		[[120743, 120743], 'mapped', [968]],
		[[120744, 120744], 'mapped', [969]],
		[[120745, 120745], 'mapped', [8711]],
		[[120746, 120746], 'mapped', [945]],
		[[120747, 120747], 'mapped', [946]],
		[[120748, 120748], 'mapped', [947]],
		[[120749, 120749], 'mapped', [948]],
		[[120750, 120750], 'mapped', [949]],
		[[120751, 120751], 'mapped', [950]],
		[[120752, 120752], 'mapped', [951]],
		[[120753, 120753], 'mapped', [952]],
		[[120754, 120754], 'mapped', [953]],
		[[120755, 120755], 'mapped', [954]],
		[[120756, 120756], 'mapped', [955]],
		[[120757, 120757], 'mapped', [956]],
		[[120758, 120758], 'mapped', [957]],
		[[120759, 120759], 'mapped', [958]],
		[[120760, 120760], 'mapped', [959]],
		[[120761, 120761], 'mapped', [960]],
		[[120762, 120762], 'mapped', [961]],
		[[120763, 120764], 'mapped', [963]],
		[[120765, 120765], 'mapped', [964]],
		[[120766, 120766], 'mapped', [965]],
		[[120767, 120767], 'mapped', [966]],
		[[120768, 120768], 'mapped', [967]],
		[[120769, 120769], 'mapped', [968]],
		[[120770, 120770], 'mapped', [969]],
		[[120771, 120771], 'mapped', [8706]],
		[[120772, 120772], 'mapped', [949]],
		[[120773, 120773], 'mapped', [952]],
		[[120774, 120774], 'mapped', [954]],
		[[120775, 120775], 'mapped', [966]],
		[[120776, 120776], 'mapped', [961]],
		[[120777, 120777], 'mapped', [960]],
		[[120778, 120779], 'mapped', [989]],
		[[120780, 120781], 'disallowed'],
		[[120782, 120782], 'mapped', [48]],
		[[120783, 120783], 'mapped', [49]],
		[[120784, 120784], 'mapped', [50]],
		[[120785, 120785], 'mapped', [51]],
		[[120786, 120786], 'mapped', [52]],
		[[120787, 120787], 'mapped', [53]],
		[[120788, 120788], 'mapped', [54]],
		[[120789, 120789], 'mapped', [55]],
		[[120790, 120790], 'mapped', [56]],
		[[120791, 120791], 'mapped', [57]],
		[[120792, 120792], 'mapped', [48]],
		[[120793, 120793], 'mapped', [49]],
		[[120794, 120794], 'mapped', [50]],
		[[120795, 120795], 'mapped', [51]],
		[[120796, 120796], 'mapped', [52]],
		[[120797, 120797], 'mapped', [53]],
		[[120798, 120798], 'mapped', [54]],
		[[120799, 120799], 'mapped', [55]],
		[[120800, 120800], 'mapped', [56]],
		[[120801, 120801], 'mapped', [57]],
		[[120802, 120802], 'mapped', [48]],
		[[120803, 120803], 'mapped', [49]],
		[[120804, 120804], 'mapped', [50]],
		[[120805, 120805], 'mapped', [51]],
		[[120806, 120806], 'mapped', [52]],
		[[120807, 120807], 'mapped', [53]],
		[[120808, 120808], 'mapped', [54]],
		[[120809, 120809], 'mapped', [55]],
		[[120810, 120810], 'mapped', [56]],
		[[120811, 120811], 'mapped', [57]],
		[[120812, 120812], 'mapped', [48]],
		[[120813, 120813], 'mapped', [49]],
		[[120814, 120814], 'mapped', [50]],
		[[120815, 120815], 'mapped', [51]],
		[[120816, 120816], 'mapped', [52]],
		[[120817, 120817], 'mapped', [53]],
		[[120818, 120818], 'mapped', [54]],
		[[120819, 120819], 'mapped', [55]],
		[[120820, 120820], 'mapped', [56]],
		[[120821, 120821], 'mapped', [57]],
		[[120822, 120822], 'mapped', [48]],
		[[120823, 120823], 'mapped', [49]],
		[[120824, 120824], 'mapped', [50]],
		[[120825, 120825], 'mapped', [51]],
		[[120826, 120826], 'mapped', [52]],
		[[120827, 120827], 'mapped', [53]],
		[[120828, 120828], 'mapped', [54]],
		[[120829, 120829], 'mapped', [55]],
		[[120830, 120830], 'mapped', [56]],
		[[120831, 120831], 'mapped', [57]],
		[[120832, 121343], 'valid', [], 'NV8'],
		[[121344, 121398], 'valid'],
		[[121399, 121402], 'valid', [], 'NV8'],
		[[121403, 121452], 'valid'],
		[[121453, 121460], 'valid', [], 'NV8'],
		[[121461, 121461], 'valid'],
		[[121462, 121475], 'valid', [], 'NV8'],
		[[121476, 121476], 'valid'],
		[[121477, 121483], 'valid', [], 'NV8'],
		[[121484, 121498], 'disallowed'],
		[[121499, 121503], 'valid'],
		[[121504, 121504], 'disallowed'],
		[[121505, 121519], 'valid'],
		[[121520, 124927], 'disallowed'],
		[[124928, 125124], 'valid'],
		[[125125, 125126], 'disallowed'],
		[[125127, 125135], 'valid', [], 'NV8'],
		[[125136, 125142], 'valid'],
		[[125143, 126463], 'disallowed'],
		[[126464, 126464], 'mapped', [1575]],
		[[126465, 126465], 'mapped', [1576]],
		[[126466, 126466], 'mapped', [1580]],
		[[126467, 126467], 'mapped', [1583]],
		[[126468, 126468], 'disallowed'],
		[[126469, 126469], 'mapped', [1608]],
		[[126470, 126470], 'mapped', [1586]],
		[[126471, 126471], 'mapped', [1581]],
		[[126472, 126472], 'mapped', [1591]],
		[[126473, 126473], 'mapped', [1610]],
		[[126474, 126474], 'mapped', [1603]],
		[[126475, 126475], 'mapped', [1604]],
		[[126476, 126476], 'mapped', [1605]],
		[[126477, 126477], 'mapped', [1606]],
		[[126478, 126478], 'mapped', [1587]],
		[[126479, 126479], 'mapped', [1593]],
		[[126480, 126480], 'mapped', [1601]],
		[[126481, 126481], 'mapped', [1589]],
		[[126482, 126482], 'mapped', [1602]],
		[[126483, 126483], 'mapped', [1585]],
		[[126484, 126484], 'mapped', [1588]],
		[[126485, 126485], 'mapped', [1578]],
		[[126486, 126486], 'mapped', [1579]],
		[[126487, 126487], 'mapped', [1582]],
		[[126488, 126488], 'mapped', [1584]],
		[[126489, 126489], 'mapped', [1590]],
		[[126490, 126490], 'mapped', [1592]],
		[[126491, 126491], 'mapped', [1594]],
		[[126492, 126492], 'mapped', [1646]],
		[[126493, 126493], 'mapped', [1722]],
		[[126494, 126494], 'mapped', [1697]],
		[[126495, 126495], 'mapped', [1647]],
		[[126496, 126496], 'disallowed'],
		[[126497, 126497], 'mapped', [1576]],
		[[126498, 126498], 'mapped', [1580]],
		[[126499, 126499], 'disallowed'],
		[[126500, 126500], 'mapped', [1607]],
		[[126501, 126502], 'disallowed'],
		[[126503, 126503], 'mapped', [1581]],
		[[126504, 126504], 'disallowed'],
		[[126505, 126505], 'mapped', [1610]],
		[[126506, 126506], 'mapped', [1603]],
		[[126507, 126507], 'mapped', [1604]],
		[[126508, 126508], 'mapped', [1605]],
		[[126509, 126509], 'mapped', [1606]],
		[[126510, 126510], 'mapped', [1587]],
		[[126511, 126511], 'mapped', [1593]],
		[[126512, 126512], 'mapped', [1601]],
		[[126513, 126513], 'mapped', [1589]],
		[[126514, 126514], 'mapped', [1602]],
		[[126515, 126515], 'disallowed'],
		[[126516, 126516], 'mapped', [1588]],
		[[126517, 126517], 'mapped', [1578]],
		[[126518, 126518], 'mapped', [1579]],
		[[126519, 126519], 'mapped', [1582]],
		[[126520, 126520], 'disallowed'],
		[[126521, 126521], 'mapped', [1590]],
		[[126522, 126522], 'disallowed'],
		[[126523, 126523], 'mapped', [1594]],
		[[126524, 126529], 'disallowed'],
		[[126530, 126530], 'mapped', [1580]],
		[[126531, 126534], 'disallowed'],
		[[126535, 126535], 'mapped', [1581]],
		[[126536, 126536], 'disallowed'],
		[[126537, 126537], 'mapped', [1610]],
		[[126538, 126538], 'disallowed'],
		[[126539, 126539], 'mapped', [1604]],
		[[126540, 126540], 'disallowed'],
		[[126541, 126541], 'mapped', [1606]],
		[[126542, 126542], 'mapped', [1587]],
		[[126543, 126543], 'mapped', [1593]],
		[[126544, 126544], 'disallowed'],
		[[126545, 126545], 'mapped', [1589]],
		[[126546, 126546], 'mapped', [1602]],
		[[126547, 126547], 'disallowed'],
		[[126548, 126548], 'mapped', [1588]],
		[[126549, 126550], 'disallowed'],
		[[126551, 126551], 'mapped', [1582]],
		[[126552, 126552], 'disallowed'],
		[[126553, 126553], 'mapped', [1590]],
		[[126554, 126554], 'disallowed'],
		[[126555, 126555], 'mapped', [1594]],
		[[126556, 126556], 'disallowed'],
		[[126557, 126557], 'mapped', [1722]],
		[[126558, 126558], 'disallowed'],
		[[126559, 126559], 'mapped', [1647]],
		[[126560, 126560], 'disallowed'],
		[[126561, 126561], 'mapped', [1576]],
		[[126562, 126562], 'mapped', [1580]],
		[[126563, 126563], 'disallowed'],
		[[126564, 126564], 'mapped', [1607]],
		[[126565, 126566], 'disallowed'],
		[[126567, 126567], 'mapped', [1581]],
		[[126568, 126568], 'mapped', [1591]],
		[[126569, 126569], 'mapped', [1610]],
		[[126570, 126570], 'mapped', [1603]],
		[[126571, 126571], 'disallowed'],
		[[126572, 126572], 'mapped', [1605]],
		[[126573, 126573], 'mapped', [1606]],
		[[126574, 126574], 'mapped', [1587]],
		[[126575, 126575], 'mapped', [1593]],
		[[126576, 126576], 'mapped', [1601]],
		[[126577, 126577], 'mapped', [1589]],
		[[126578, 126578], 'mapped', [1602]],
		[[126579, 126579], 'disallowed'],
		[[126580, 126580], 'mapped', [1588]],
		[[126581, 126581], 'mapped', [1578]],
		[[126582, 126582], 'mapped', [1579]],
		[[126583, 126583], 'mapped', [1582]],
		[[126584, 126584], 'disallowed'],
		[[126585, 126585], 'mapped', [1590]],
		[[126586, 126586], 'mapped', [1592]],
		[[126587, 126587], 'mapped', [1594]],
		[[126588, 126588], 'mapped', [1646]],
		[[126589, 126589], 'disallowed'],
		[[126590, 126590], 'mapped', [1697]],
		[[126591, 126591], 'disallowed'],
		[[126592, 126592], 'mapped', [1575]],
		[[126593, 126593], 'mapped', [1576]],
		[[126594, 126594], 'mapped', [1580]],
		[[126595, 126595], 'mapped', [1583]],
		[[126596, 126596], 'mapped', [1607]],
		[[126597, 126597], 'mapped', [1608]],
		[[126598, 126598], 'mapped', [1586]],
		[[126599, 126599], 'mapped', [1581]],
		[[126600, 126600], 'mapped', [1591]],
		[[126601, 126601], 'mapped', [1610]],
		[[126602, 126602], 'disallowed'],
		[[126603, 126603], 'mapped', [1604]],
		[[126604, 126604], 'mapped', [1605]],
		[[126605, 126605], 'mapped', [1606]],
		[[126606, 126606], 'mapped', [1587]],
		[[126607, 126607], 'mapped', [1593]],
		[[126608, 126608], 'mapped', [1601]],
		[[126609, 126609], 'mapped', [1589]],
		[[126610, 126610], 'mapped', [1602]],
		[[126611, 126611], 'mapped', [1585]],
		[[126612, 126612], 'mapped', [1588]],
		[[126613, 126613], 'mapped', [1578]],
		[[126614, 126614], 'mapped', [1579]],
		[[126615, 126615], 'mapped', [1582]],
		[[126616, 126616], 'mapped', [1584]],
		[[126617, 126617], 'mapped', [1590]],
		[[126618, 126618], 'mapped', [1592]],
		[[126619, 126619], 'mapped', [1594]],
		[[126620, 126624], 'disallowed'],
		[[126625, 126625], 'mapped', [1576]],
		[[126626, 126626], 'mapped', [1580]],
		[[126627, 126627], 'mapped', [1583]],
		[[126628, 126628], 'disallowed'],
		[[126629, 126629], 'mapped', [1608]],
		[[126630, 126630], 'mapped', [1586]],
		[[126631, 126631], 'mapped', [1581]],
		[[126632, 126632], 'mapped', [1591]],
		[[126633, 126633], 'mapped', [1610]],
		[[126634, 126634], 'disallowed'],
		[[126635, 126635], 'mapped', [1604]],
		[[126636, 126636], 'mapped', [1605]],
		[[126637, 126637], 'mapped', [1606]],
		[[126638, 126638], 'mapped', [1587]],
		[[126639, 126639], 'mapped', [1593]],
		[[126640, 126640], 'mapped', [1601]],
		[[126641, 126641], 'mapped', [1589]],
		[[126642, 126642], 'mapped', [1602]],
		[[126643, 126643], 'mapped', [1585]],
		[[126644, 126644], 'mapped', [1588]],
		[[126645, 126645], 'mapped', [1578]],
		[[126646, 126646], 'mapped', [1579]],
		[[126647, 126647], 'mapped', [1582]],
		[[126648, 126648], 'mapped', [1584]],
		[[126649, 126649], 'mapped', [1590]],
		[[126650, 126650], 'mapped', [1592]],
		[[126651, 126651], 'mapped', [1594]],
		[[126652, 126703], 'disallowed'],
		[[126704, 126705], 'valid', [], 'NV8'],
		[[126706, 126975], 'disallowed'],
		[[126976, 127019], 'valid', [], 'NV8'],
		[[127020, 127023], 'disallowed'],
		[[127024, 127123], 'valid', [], 'NV8'],
		[[127124, 127135], 'disallowed'],
		[[127136, 127150], 'valid', [], 'NV8'],
		[[127151, 127152], 'disallowed'],
		[[127153, 127166], 'valid', [], 'NV8'],
		[[127167, 127167], 'valid', [], 'NV8'],
		[[127168, 127168], 'disallowed'],
		[[127169, 127183], 'valid', [], 'NV8'],
		[[127184, 127184], 'disallowed'],
		[[127185, 127199], 'valid', [], 'NV8'],
		[[127200, 127221], 'valid', [], 'NV8'],
		[[127222, 127231], 'disallowed'],
		[[127232, 127232], 'disallowed'],
		[[127233, 127233], 'disallowed_STD3_mapped', [48, 44]],
		[[127234, 127234], 'disallowed_STD3_mapped', [49, 44]],
		[[127235, 127235], 'disallowed_STD3_mapped', [50, 44]],
		[[127236, 127236], 'disallowed_STD3_mapped', [51, 44]],
		[[127237, 127237], 'disallowed_STD3_mapped', [52, 44]],
		[[127238, 127238], 'disallowed_STD3_mapped', [53, 44]],
		[[127239, 127239], 'disallowed_STD3_mapped', [54, 44]],
		[[127240, 127240], 'disallowed_STD3_mapped', [55, 44]],
		[[127241, 127241], 'disallowed_STD3_mapped', [56, 44]],
		[[127242, 127242], 'disallowed_STD3_mapped', [57, 44]],
		[[127243, 127244], 'valid', [], 'NV8'],
		[[127245, 127247], 'disallowed'],
		[[127248, 127248], 'disallowed_STD3_mapped', [40, 97, 41]],
		[[127249, 127249], 'disallowed_STD3_mapped', [40, 98, 41]],
		[[127250, 127250], 'disallowed_STD3_mapped', [40, 99, 41]],
		[[127251, 127251], 'disallowed_STD3_mapped', [40, 100, 41]],
		[[127252, 127252], 'disallowed_STD3_mapped', [40, 101, 41]],
		[[127253, 127253], 'disallowed_STD3_mapped', [40, 102, 41]],
		[[127254, 127254], 'disallowed_STD3_mapped', [40, 103, 41]],
		[[127255, 127255], 'disallowed_STD3_mapped', [40, 104, 41]],
		[[127256, 127256], 'disallowed_STD3_mapped', [40, 105, 41]],
		[[127257, 127257], 'disallowed_STD3_mapped', [40, 106, 41]],
		[[127258, 127258], 'disallowed_STD3_mapped', [40, 107, 41]],
		[[127259, 127259], 'disallowed_STD3_mapped', [40, 108, 41]],
		[[127260, 127260], 'disallowed_STD3_mapped', [40, 109, 41]],
		[[127261, 127261], 'disallowed_STD3_mapped', [40, 110, 41]],
		[[127262, 127262], 'disallowed_STD3_mapped', [40, 111, 41]],
		[[127263, 127263], 'disallowed_STD3_mapped', [40, 112, 41]],
		[[127264, 127264], 'disallowed_STD3_mapped', [40, 113, 41]],
		[[127265, 127265], 'disallowed_STD3_mapped', [40, 114, 41]],
		[[127266, 127266], 'disallowed_STD3_mapped', [40, 115, 41]],
		[[127267, 127267], 'disallowed_STD3_mapped', [40, 116, 41]],
		[[127268, 127268], 'disallowed_STD3_mapped', [40, 117, 41]],
		[[127269, 127269], 'disallowed_STD3_mapped', [40, 118, 41]],
		[[127270, 127270], 'disallowed_STD3_mapped', [40, 119, 41]],
		[[127271, 127271], 'disallowed_STD3_mapped', [40, 120, 41]],
		[[127272, 127272], 'disallowed_STD3_mapped', [40, 121, 41]],
		[[127273, 127273], 'disallowed_STD3_mapped', [40, 122, 41]],
		[[127274, 127274], 'mapped', [12308, 115, 12309]],
		[[127275, 127275], 'mapped', [99]],
		[[127276, 127276], 'mapped', [114]],
		[[127277, 127277], 'mapped', [99, 100]],
		[[127278, 127278], 'mapped', [119, 122]],
		[[127279, 127279], 'disallowed'],
		[[127280, 127280], 'mapped', [97]],
		[[127281, 127281], 'mapped', [98]],
		[[127282, 127282], 'mapped', [99]],
		[[127283, 127283], 'mapped', [100]],
		[[127284, 127284], 'mapped', [101]],
		[[127285, 127285], 'mapped', [102]],
		[[127286, 127286], 'mapped', [103]],
		[[127287, 127287], 'mapped', [104]],
		[[127288, 127288], 'mapped', [105]],
		[[127289, 127289], 'mapped', [106]],
		[[127290, 127290], 'mapped', [107]],
		[[127291, 127291], 'mapped', [108]],
		[[127292, 127292], 'mapped', [109]],
		[[127293, 127293], 'mapped', [110]],
		[[127294, 127294], 'mapped', [111]],
		[[127295, 127295], 'mapped', [112]],
		[[127296, 127296], 'mapped', [113]],
		[[127297, 127297], 'mapped', [114]],
		[[127298, 127298], 'mapped', [115]],
		[[127299, 127299], 'mapped', [116]],
		[[127300, 127300], 'mapped', [117]],
		[[127301, 127301], 'mapped', [118]],
		[[127302, 127302], 'mapped', [119]],
		[[127303, 127303], 'mapped', [120]],
		[[127304, 127304], 'mapped', [121]],
		[[127305, 127305], 'mapped', [122]],
		[[127306, 127306], 'mapped', [104, 118]],
		[[127307, 127307], 'mapped', [109, 118]],
		[[127308, 127308], 'mapped', [115, 100]],
		[[127309, 127309], 'mapped', [115, 115]],
		[[127310, 127310], 'mapped', [112, 112, 118]],
		[[127311, 127311], 'mapped', [119, 99]],
		[[127312, 127318], 'valid', [], 'NV8'],
		[[127319, 127319], 'valid', [], 'NV8'],
		[[127320, 127326], 'valid', [], 'NV8'],
		[[127327, 127327], 'valid', [], 'NV8'],
		[[127328, 127337], 'valid', [], 'NV8'],
		[[127338, 127338], 'mapped', [109, 99]],
		[[127339, 127339], 'mapped', [109, 100]],
		[[127340, 127343], 'disallowed'],
		[[127344, 127352], 'valid', [], 'NV8'],
		[[127353, 127353], 'valid', [], 'NV8'],
		[[127354, 127354], 'valid', [], 'NV8'],
		[[127355, 127356], 'valid', [], 'NV8'],
		[[127357, 127358], 'valid', [], 'NV8'],
		[[127359, 127359], 'valid', [], 'NV8'],
		[[127360, 127369], 'valid', [], 'NV8'],
		[[127370, 127373], 'valid', [], 'NV8'],
		[[127374, 127375], 'valid', [], 'NV8'],
		[[127376, 127376], 'mapped', [100, 106]],
		[[127377, 127386], 'valid', [], 'NV8'],
		[[127387, 127461], 'disallowed'],
		[[127462, 127487], 'valid', [], 'NV8'],
		[[127488, 127488], 'mapped', [12411, 12363]],
		[[127489, 127489], 'mapped', [12467, 12467]],
		[[127490, 127490], 'mapped', [12469]],
		[[127491, 127503], 'disallowed'],
		[[127504, 127504], 'mapped', [25163]],
		[[127505, 127505], 'mapped', [23383]],
		[[127506, 127506], 'mapped', [21452]],
		[[127507, 127507], 'mapped', [12487]],
		[[127508, 127508], 'mapped', [20108]],
		[[127509, 127509], 'mapped', [22810]],
		[[127510, 127510], 'mapped', [35299]],
		[[127511, 127511], 'mapped', [22825]],
		[[127512, 127512], 'mapped', [20132]],
		[[127513, 127513], 'mapped', [26144]],
		[[127514, 127514], 'mapped', [28961]],
		[[127515, 127515], 'mapped', [26009]],
		[[127516, 127516], 'mapped', [21069]],
		[[127517, 127517], 'mapped', [24460]],
		[[127518, 127518], 'mapped', [20877]],
		[[127519, 127519], 'mapped', [26032]],
		[[127520, 127520], 'mapped', [21021]],
		[[127521, 127521], 'mapped', [32066]],
		[[127522, 127522], 'mapped', [29983]],
		[[127523, 127523], 'mapped', [36009]],
		[[127524, 127524], 'mapped', [22768]],
		[[127525, 127525], 'mapped', [21561]],
		[[127526, 127526], 'mapped', [28436]],
		[[127527, 127527], 'mapped', [25237]],
		[[127528, 127528], 'mapped', [25429]],
		[[127529, 127529], 'mapped', [19968]],
		[[127530, 127530], 'mapped', [19977]],
		[[127531, 127531], 'mapped', [36938]],
		[[127532, 127532], 'mapped', [24038]],
		[[127533, 127533], 'mapped', [20013]],
		[[127534, 127534], 'mapped', [21491]],
		[[127535, 127535], 'mapped', [25351]],
		[[127536, 127536], 'mapped', [36208]],
		[[127537, 127537], 'mapped', [25171]],
		[[127538, 127538], 'mapped', [31105]],
		[[127539, 127539], 'mapped', [31354]],
		[[127540, 127540], 'mapped', [21512]],
		[[127541, 127541], 'mapped', [28288]],
		[[127542, 127542], 'mapped', [26377]],
		[[127543, 127543], 'mapped', [26376]],
		[[127544, 127544], 'mapped', [30003]],
		[[127545, 127545], 'mapped', [21106]],
		[[127546, 127546], 'mapped', [21942]],
		[[127547, 127551], 'disallowed'],
		[[127552, 127552], 'mapped', [12308, 26412, 12309]],
		[[127553, 127553], 'mapped', [12308, 19977, 12309]],
		[[127554, 127554], 'mapped', [12308, 20108, 12309]],
		[[127555, 127555], 'mapped', [12308, 23433, 12309]],
		[[127556, 127556], 'mapped', [12308, 28857, 12309]],
		[[127557, 127557], 'mapped', [12308, 25171, 12309]],
		[[127558, 127558], 'mapped', [12308, 30423, 12309]],
		[[127559, 127559], 'mapped', [12308, 21213, 12309]],
		[[127560, 127560], 'mapped', [12308, 25943, 12309]],
		[[127561, 127567], 'disallowed'],
		[[127568, 127568], 'mapped', [24471]],
		[[127569, 127569], 'mapped', [21487]],
		[[127570, 127743], 'disallowed'],
		[[127744, 127776], 'valid', [], 'NV8'],
		[[127777, 127788], 'valid', [], 'NV8'],
		[[127789, 127791], 'valid', [], 'NV8'],
		[[127792, 127797], 'valid', [], 'NV8'],
		[[127798, 127798], 'valid', [], 'NV8'],
		[[127799, 127868], 'valid', [], 'NV8'],
		[[127869, 127869], 'valid', [], 'NV8'],
		[[127870, 127871], 'valid', [], 'NV8'],
		[[127872, 127891], 'valid', [], 'NV8'],
		[[127892, 127903], 'valid', [], 'NV8'],
		[[127904, 127940], 'valid', [], 'NV8'],
		[[127941, 127941], 'valid', [], 'NV8'],
		[[127942, 127946], 'valid', [], 'NV8'],
		[[127947, 127950], 'valid', [], 'NV8'],
		[[127951, 127955], 'valid', [], 'NV8'],
		[[127956, 127967], 'valid', [], 'NV8'],
		[[127968, 127984], 'valid', [], 'NV8'],
		[[127985, 127991], 'valid', [], 'NV8'],
		[[127992, 127999], 'valid', [], 'NV8'],
		[[128e3, 128062], 'valid', [], 'NV8'],
		[[128063, 128063], 'valid', [], 'NV8'],
		[[128064, 128064], 'valid', [], 'NV8'],
		[[128065, 128065], 'valid', [], 'NV8'],
		[[128066, 128247], 'valid', [], 'NV8'],
		[[128248, 128248], 'valid', [], 'NV8'],
		[[128249, 128252], 'valid', [], 'NV8'],
		[[128253, 128254], 'valid', [], 'NV8'],
		[[128255, 128255], 'valid', [], 'NV8'],
		[[128256, 128317], 'valid', [], 'NV8'],
		[[128318, 128319], 'valid', [], 'NV8'],
		[[128320, 128323], 'valid', [], 'NV8'],
		[[128324, 128330], 'valid', [], 'NV8'],
		[[128331, 128335], 'valid', [], 'NV8'],
		[[128336, 128359], 'valid', [], 'NV8'],
		[[128360, 128377], 'valid', [], 'NV8'],
		[[128378, 128378], 'disallowed'],
		[[128379, 128419], 'valid', [], 'NV8'],
		[[128420, 128420], 'disallowed'],
		[[128421, 128506], 'valid', [], 'NV8'],
		[[128507, 128511], 'valid', [], 'NV8'],
		[[128512, 128512], 'valid', [], 'NV8'],
		[[128513, 128528], 'valid', [], 'NV8'],
		[[128529, 128529], 'valid', [], 'NV8'],
		[[128530, 128532], 'valid', [], 'NV8'],
		[[128533, 128533], 'valid', [], 'NV8'],
		[[128534, 128534], 'valid', [], 'NV8'],
		[[128535, 128535], 'valid', [], 'NV8'],
		[[128536, 128536], 'valid', [], 'NV8'],
		[[128537, 128537], 'valid', [], 'NV8'],
		[[128538, 128538], 'valid', [], 'NV8'],
		[[128539, 128539], 'valid', [], 'NV8'],
		[[128540, 128542], 'valid', [], 'NV8'],
		[[128543, 128543], 'valid', [], 'NV8'],
		[[128544, 128549], 'valid', [], 'NV8'],
		[[128550, 128551], 'valid', [], 'NV8'],
		[[128552, 128555], 'valid', [], 'NV8'],
		[[128556, 128556], 'valid', [], 'NV8'],
		[[128557, 128557], 'valid', [], 'NV8'],
		[[128558, 128559], 'valid', [], 'NV8'],
		[[128560, 128563], 'valid', [], 'NV8'],
		[[128564, 128564], 'valid', [], 'NV8'],
		[[128565, 128576], 'valid', [], 'NV8'],
		[[128577, 128578], 'valid', [], 'NV8'],
		[[128579, 128580], 'valid', [], 'NV8'],
		[[128581, 128591], 'valid', [], 'NV8'],
		[[128592, 128639], 'valid', [], 'NV8'],
		[[128640, 128709], 'valid', [], 'NV8'],
		[[128710, 128719], 'valid', [], 'NV8'],
		[[128720, 128720], 'valid', [], 'NV8'],
		[[128721, 128735], 'disallowed'],
		[[128736, 128748], 'valid', [], 'NV8'],
		[[128749, 128751], 'disallowed'],
		[[128752, 128755], 'valid', [], 'NV8'],
		[[128756, 128767], 'disallowed'],
		[[128768, 128883], 'valid', [], 'NV8'],
		[[128884, 128895], 'disallowed'],
		[[128896, 128980], 'valid', [], 'NV8'],
		[[128981, 129023], 'disallowed'],
		[[129024, 129035], 'valid', [], 'NV8'],
		[[129036, 129039], 'disallowed'],
		[[129040, 129095], 'valid', [], 'NV8'],
		[[129096, 129103], 'disallowed'],
		[[129104, 129113], 'valid', [], 'NV8'],
		[[129114, 129119], 'disallowed'],
		[[129120, 129159], 'valid', [], 'NV8'],
		[[129160, 129167], 'disallowed'],
		[[129168, 129197], 'valid', [], 'NV8'],
		[[129198, 129295], 'disallowed'],
		[[129296, 129304], 'valid', [], 'NV8'],
		[[129305, 129407], 'disallowed'],
		[[129408, 129412], 'valid', [], 'NV8'],
		[[129413, 129471], 'disallowed'],
		[[129472, 129472], 'valid', [], 'NV8'],
		[[129473, 131069], 'disallowed'],
		[[131070, 131071], 'disallowed'],
		[[131072, 173782], 'valid'],
		[[173783, 173823], 'disallowed'],
		[[173824, 177972], 'valid'],
		[[177973, 177983], 'disallowed'],
		[[177984, 178205], 'valid'],
		[[178206, 178207], 'disallowed'],
		[[178208, 183969], 'valid'],
		[[183970, 194559], 'disallowed'],
		[[194560, 194560], 'mapped', [20029]],
		[[194561, 194561], 'mapped', [20024]],
		[[194562, 194562], 'mapped', [20033]],
		[[194563, 194563], 'mapped', [131362]],
		[[194564, 194564], 'mapped', [20320]],
		[[194565, 194565], 'mapped', [20398]],
		[[194566, 194566], 'mapped', [20411]],
		[[194567, 194567], 'mapped', [20482]],
		[[194568, 194568], 'mapped', [20602]],
		[[194569, 194569], 'mapped', [20633]],
		[[194570, 194570], 'mapped', [20711]],
		[[194571, 194571], 'mapped', [20687]],
		[[194572, 194572], 'mapped', [13470]],
		[[194573, 194573], 'mapped', [132666]],
		[[194574, 194574], 'mapped', [20813]],
		[[194575, 194575], 'mapped', [20820]],
		[[194576, 194576], 'mapped', [20836]],
		[[194577, 194577], 'mapped', [20855]],
		[[194578, 194578], 'mapped', [132380]],
		[[194579, 194579], 'mapped', [13497]],
		[[194580, 194580], 'mapped', [20839]],
		[[194581, 194581], 'mapped', [20877]],
		[[194582, 194582], 'mapped', [132427]],
		[[194583, 194583], 'mapped', [20887]],
		[[194584, 194584], 'mapped', [20900]],
		[[194585, 194585], 'mapped', [20172]],
		[[194586, 194586], 'mapped', [20908]],
		[[194587, 194587], 'mapped', [20917]],
		[[194588, 194588], 'mapped', [168415]],
		[[194589, 194589], 'mapped', [20981]],
		[[194590, 194590], 'mapped', [20995]],
		[[194591, 194591], 'mapped', [13535]],
		[[194592, 194592], 'mapped', [21051]],
		[[194593, 194593], 'mapped', [21062]],
		[[194594, 194594], 'mapped', [21106]],
		[[194595, 194595], 'mapped', [21111]],
		[[194596, 194596], 'mapped', [13589]],
		[[194597, 194597], 'mapped', [21191]],
		[[194598, 194598], 'mapped', [21193]],
		[[194599, 194599], 'mapped', [21220]],
		[[194600, 194600], 'mapped', [21242]],
		[[194601, 194601], 'mapped', [21253]],
		[[194602, 194602], 'mapped', [21254]],
		[[194603, 194603], 'mapped', [21271]],
		[[194604, 194604], 'mapped', [21321]],
		[[194605, 194605], 'mapped', [21329]],
		[[194606, 194606], 'mapped', [21338]],
		[[194607, 194607], 'mapped', [21363]],
		[[194608, 194608], 'mapped', [21373]],
		[[194609, 194611], 'mapped', [21375]],
		[[194612, 194612], 'mapped', [133676]],
		[[194613, 194613], 'mapped', [28784]],
		[[194614, 194614], 'mapped', [21450]],
		[[194615, 194615], 'mapped', [21471]],
		[[194616, 194616], 'mapped', [133987]],
		[[194617, 194617], 'mapped', [21483]],
		[[194618, 194618], 'mapped', [21489]],
		[[194619, 194619], 'mapped', [21510]],
		[[194620, 194620], 'mapped', [21662]],
		[[194621, 194621], 'mapped', [21560]],
		[[194622, 194622], 'mapped', [21576]],
		[[194623, 194623], 'mapped', [21608]],
		[[194624, 194624], 'mapped', [21666]],
		[[194625, 194625], 'mapped', [21750]],
		[[194626, 194626], 'mapped', [21776]],
		[[194627, 194627], 'mapped', [21843]],
		[[194628, 194628], 'mapped', [21859]],
		[[194629, 194630], 'mapped', [21892]],
		[[194631, 194631], 'mapped', [21913]],
		[[194632, 194632], 'mapped', [21931]],
		[[194633, 194633], 'mapped', [21939]],
		[[194634, 194634], 'mapped', [21954]],
		[[194635, 194635], 'mapped', [22294]],
		[[194636, 194636], 'mapped', [22022]],
		[[194637, 194637], 'mapped', [22295]],
		[[194638, 194638], 'mapped', [22097]],
		[[194639, 194639], 'mapped', [22132]],
		[[194640, 194640], 'mapped', [20999]],
		[[194641, 194641], 'mapped', [22766]],
		[[194642, 194642], 'mapped', [22478]],
		[[194643, 194643], 'mapped', [22516]],
		[[194644, 194644], 'mapped', [22541]],
		[[194645, 194645], 'mapped', [22411]],
		[[194646, 194646], 'mapped', [22578]],
		[[194647, 194647], 'mapped', [22577]],
		[[194648, 194648], 'mapped', [22700]],
		[[194649, 194649], 'mapped', [136420]],
		[[194650, 194650], 'mapped', [22770]],
		[[194651, 194651], 'mapped', [22775]],
		[[194652, 194652], 'mapped', [22790]],
		[[194653, 194653], 'mapped', [22810]],
		[[194654, 194654], 'mapped', [22818]],
		[[194655, 194655], 'mapped', [22882]],
		[[194656, 194656], 'mapped', [136872]],
		[[194657, 194657], 'mapped', [136938]],
		[[194658, 194658], 'mapped', [23020]],
		[[194659, 194659], 'mapped', [23067]],
		[[194660, 194660], 'mapped', [23079]],
		[[194661, 194661], 'mapped', [23e3]],
		[[194662, 194662], 'mapped', [23142]],
		[[194663, 194663], 'mapped', [14062]],
		[[194664, 194664], 'disallowed'],
		[[194665, 194665], 'mapped', [23304]],
		[[194666, 194667], 'mapped', [23358]],
		[[194668, 194668], 'mapped', [137672]],
		[[194669, 194669], 'mapped', [23491]],
		[[194670, 194670], 'mapped', [23512]],
		[[194671, 194671], 'mapped', [23527]],
		[[194672, 194672], 'mapped', [23539]],
		[[194673, 194673], 'mapped', [138008]],
		[[194674, 194674], 'mapped', [23551]],
		[[194675, 194675], 'mapped', [23558]],
		[[194676, 194676], 'disallowed'],
		[[194677, 194677], 'mapped', [23586]],
		[[194678, 194678], 'mapped', [14209]],
		[[194679, 194679], 'mapped', [23648]],
		[[194680, 194680], 'mapped', [23662]],
		[[194681, 194681], 'mapped', [23744]],
		[[194682, 194682], 'mapped', [23693]],
		[[194683, 194683], 'mapped', [138724]],
		[[194684, 194684], 'mapped', [23875]],
		[[194685, 194685], 'mapped', [138726]],
		[[194686, 194686], 'mapped', [23918]],
		[[194687, 194687], 'mapped', [23915]],
		[[194688, 194688], 'mapped', [23932]],
		[[194689, 194689], 'mapped', [24033]],
		[[194690, 194690], 'mapped', [24034]],
		[[194691, 194691], 'mapped', [14383]],
		[[194692, 194692], 'mapped', [24061]],
		[[194693, 194693], 'mapped', [24104]],
		[[194694, 194694], 'mapped', [24125]],
		[[194695, 194695], 'mapped', [24169]],
		[[194696, 194696], 'mapped', [14434]],
		[[194697, 194697], 'mapped', [139651]],
		[[194698, 194698], 'mapped', [14460]],
		[[194699, 194699], 'mapped', [24240]],
		[[194700, 194700], 'mapped', [24243]],
		[[194701, 194701], 'mapped', [24246]],
		[[194702, 194702], 'mapped', [24266]],
		[[194703, 194703], 'mapped', [172946]],
		[[194704, 194704], 'mapped', [24318]],
		[[194705, 194706], 'mapped', [140081]],
		[[194707, 194707], 'mapped', [33281]],
		[[194708, 194709], 'mapped', [24354]],
		[[194710, 194710], 'mapped', [14535]],
		[[194711, 194711], 'mapped', [144056]],
		[[194712, 194712], 'mapped', [156122]],
		[[194713, 194713], 'mapped', [24418]],
		[[194714, 194714], 'mapped', [24427]],
		[[194715, 194715], 'mapped', [14563]],
		[[194716, 194716], 'mapped', [24474]],
		[[194717, 194717], 'mapped', [24525]],
		[[194718, 194718], 'mapped', [24535]],
		[[194719, 194719], 'mapped', [24569]],
		[[194720, 194720], 'mapped', [24705]],
		[[194721, 194721], 'mapped', [14650]],
		[[194722, 194722], 'mapped', [14620]],
		[[194723, 194723], 'mapped', [24724]],
		[[194724, 194724], 'mapped', [141012]],
		[[194725, 194725], 'mapped', [24775]],
		[[194726, 194726], 'mapped', [24904]],
		[[194727, 194727], 'mapped', [24908]],
		[[194728, 194728], 'mapped', [24910]],
		[[194729, 194729], 'mapped', [24908]],
		[[194730, 194730], 'mapped', [24954]],
		[[194731, 194731], 'mapped', [24974]],
		[[194732, 194732], 'mapped', [25010]],
		[[194733, 194733], 'mapped', [24996]],
		[[194734, 194734], 'mapped', [25007]],
		[[194735, 194735], 'mapped', [25054]],
		[[194736, 194736], 'mapped', [25074]],
		[[194737, 194737], 'mapped', [25078]],
		[[194738, 194738], 'mapped', [25104]],
		[[194739, 194739], 'mapped', [25115]],
		[[194740, 194740], 'mapped', [25181]],
		[[194741, 194741], 'mapped', [25265]],
		[[194742, 194742], 'mapped', [25300]],
		[[194743, 194743], 'mapped', [25424]],
		[[194744, 194744], 'mapped', [142092]],
		[[194745, 194745], 'mapped', [25405]],
		[[194746, 194746], 'mapped', [25340]],
		[[194747, 194747], 'mapped', [25448]],
		[[194748, 194748], 'mapped', [25475]],
		[[194749, 194749], 'mapped', [25572]],
		[[194750, 194750], 'mapped', [142321]],
		[[194751, 194751], 'mapped', [25634]],
		[[194752, 194752], 'mapped', [25541]],
		[[194753, 194753], 'mapped', [25513]],
		[[194754, 194754], 'mapped', [14894]],
		[[194755, 194755], 'mapped', [25705]],
		[[194756, 194756], 'mapped', [25726]],
		[[194757, 194757], 'mapped', [25757]],
		[[194758, 194758], 'mapped', [25719]],
		[[194759, 194759], 'mapped', [14956]],
		[[194760, 194760], 'mapped', [25935]],
		[[194761, 194761], 'mapped', [25964]],
		[[194762, 194762], 'mapped', [143370]],
		[[194763, 194763], 'mapped', [26083]],
		[[194764, 194764], 'mapped', [26360]],
		[[194765, 194765], 'mapped', [26185]],
		[[194766, 194766], 'mapped', [15129]],
		[[194767, 194767], 'mapped', [26257]],
		[[194768, 194768], 'mapped', [15112]],
		[[194769, 194769], 'mapped', [15076]],
		[[194770, 194770], 'mapped', [20882]],
		[[194771, 194771], 'mapped', [20885]],
		[[194772, 194772], 'mapped', [26368]],
		[[194773, 194773], 'mapped', [26268]],
		[[194774, 194774], 'mapped', [32941]],
		[[194775, 194775], 'mapped', [17369]],
		[[194776, 194776], 'mapped', [26391]],
		[[194777, 194777], 'mapped', [26395]],
		[[194778, 194778], 'mapped', [26401]],
		[[194779, 194779], 'mapped', [26462]],
		[[194780, 194780], 'mapped', [26451]],
		[[194781, 194781], 'mapped', [144323]],
		[[194782, 194782], 'mapped', [15177]],
		[[194783, 194783], 'mapped', [26618]],
		[[194784, 194784], 'mapped', [26501]],
		[[194785, 194785], 'mapped', [26706]],
		[[194786, 194786], 'mapped', [26757]],
		[[194787, 194787], 'mapped', [144493]],
		[[194788, 194788], 'mapped', [26766]],
		[[194789, 194789], 'mapped', [26655]],
		[[194790, 194790], 'mapped', [26900]],
		[[194791, 194791], 'mapped', [15261]],
		[[194792, 194792], 'mapped', [26946]],
		[[194793, 194793], 'mapped', [27043]],
		[[194794, 194794], 'mapped', [27114]],
		[[194795, 194795], 'mapped', [27304]],
		[[194796, 194796], 'mapped', [145059]],
		[[194797, 194797], 'mapped', [27355]],
		[[194798, 194798], 'mapped', [15384]],
		[[194799, 194799], 'mapped', [27425]],
		[[194800, 194800], 'mapped', [145575]],
		[[194801, 194801], 'mapped', [27476]],
		[[194802, 194802], 'mapped', [15438]],
		[[194803, 194803], 'mapped', [27506]],
		[[194804, 194804], 'mapped', [27551]],
		[[194805, 194805], 'mapped', [27578]],
		[[194806, 194806], 'mapped', [27579]],
		[[194807, 194807], 'mapped', [146061]],
		[[194808, 194808], 'mapped', [138507]],
		[[194809, 194809], 'mapped', [146170]],
		[[194810, 194810], 'mapped', [27726]],
		[[194811, 194811], 'mapped', [146620]],
		[[194812, 194812], 'mapped', [27839]],
		[[194813, 194813], 'mapped', [27853]],
		[[194814, 194814], 'mapped', [27751]],
		[[194815, 194815], 'mapped', [27926]],
		[[194816, 194816], 'mapped', [27966]],
		[[194817, 194817], 'mapped', [28023]],
		[[194818, 194818], 'mapped', [27969]],
		[[194819, 194819], 'mapped', [28009]],
		[[194820, 194820], 'mapped', [28024]],
		[[194821, 194821], 'mapped', [28037]],
		[[194822, 194822], 'mapped', [146718]],
		[[194823, 194823], 'mapped', [27956]],
		[[194824, 194824], 'mapped', [28207]],
		[[194825, 194825], 'mapped', [28270]],
		[[194826, 194826], 'mapped', [15667]],
		[[194827, 194827], 'mapped', [28363]],
		[[194828, 194828], 'mapped', [28359]],
		[[194829, 194829], 'mapped', [147153]],
		[[194830, 194830], 'mapped', [28153]],
		[[194831, 194831], 'mapped', [28526]],
		[[194832, 194832], 'mapped', [147294]],
		[[194833, 194833], 'mapped', [147342]],
		[[194834, 194834], 'mapped', [28614]],
		[[194835, 194835], 'mapped', [28729]],
		[[194836, 194836], 'mapped', [28702]],
		[[194837, 194837], 'mapped', [28699]],
		[[194838, 194838], 'mapped', [15766]],
		[[194839, 194839], 'mapped', [28746]],
		[[194840, 194840], 'mapped', [28797]],
		[[194841, 194841], 'mapped', [28791]],
		[[194842, 194842], 'mapped', [28845]],
		[[194843, 194843], 'mapped', [132389]],
		[[194844, 194844], 'mapped', [28997]],
		[[194845, 194845], 'mapped', [148067]],
		[[194846, 194846], 'mapped', [29084]],
		[[194847, 194847], 'disallowed'],
		[[194848, 194848], 'mapped', [29224]],
		[[194849, 194849], 'mapped', [29237]],
		[[194850, 194850], 'mapped', [29264]],
		[[194851, 194851], 'mapped', [149e3]],
		[[194852, 194852], 'mapped', [29312]],
		[[194853, 194853], 'mapped', [29333]],
		[[194854, 194854], 'mapped', [149301]],
		[[194855, 194855], 'mapped', [149524]],
		[[194856, 194856], 'mapped', [29562]],
		[[194857, 194857], 'mapped', [29579]],
		[[194858, 194858], 'mapped', [16044]],
		[[194859, 194859], 'mapped', [29605]],
		[[194860, 194861], 'mapped', [16056]],
		[[194862, 194862], 'mapped', [29767]],
		[[194863, 194863], 'mapped', [29788]],
		[[194864, 194864], 'mapped', [29809]],
		[[194865, 194865], 'mapped', [29829]],
		[[194866, 194866], 'mapped', [29898]],
		[[194867, 194867], 'mapped', [16155]],
		[[194868, 194868], 'mapped', [29988]],
		[[194869, 194869], 'mapped', [150582]],
		[[194870, 194870], 'mapped', [30014]],
		[[194871, 194871], 'mapped', [150674]],
		[[194872, 194872], 'mapped', [30064]],
		[[194873, 194873], 'mapped', [139679]],
		[[194874, 194874], 'mapped', [30224]],
		[[194875, 194875], 'mapped', [151457]],
		[[194876, 194876], 'mapped', [151480]],
		[[194877, 194877], 'mapped', [151620]],
		[[194878, 194878], 'mapped', [16380]],
		[[194879, 194879], 'mapped', [16392]],
		[[194880, 194880], 'mapped', [30452]],
		[[194881, 194881], 'mapped', [151795]],
		[[194882, 194882], 'mapped', [151794]],
		[[194883, 194883], 'mapped', [151833]],
		[[194884, 194884], 'mapped', [151859]],
		[[194885, 194885], 'mapped', [30494]],
		[[194886, 194887], 'mapped', [30495]],
		[[194888, 194888], 'mapped', [30538]],
		[[194889, 194889], 'mapped', [16441]],
		[[194890, 194890], 'mapped', [30603]],
		[[194891, 194891], 'mapped', [16454]],
		[[194892, 194892], 'mapped', [16534]],
		[[194893, 194893], 'mapped', [152605]],
		[[194894, 194894], 'mapped', [30798]],
		[[194895, 194895], 'mapped', [30860]],
		[[194896, 194896], 'mapped', [30924]],
		[[194897, 194897], 'mapped', [16611]],
		[[194898, 194898], 'mapped', [153126]],
		[[194899, 194899], 'mapped', [31062]],
		[[194900, 194900], 'mapped', [153242]],
		[[194901, 194901], 'mapped', [153285]],
		[[194902, 194902], 'mapped', [31119]],
		[[194903, 194903], 'mapped', [31211]],
		[[194904, 194904], 'mapped', [16687]],
		[[194905, 194905], 'mapped', [31296]],
		[[194906, 194906], 'mapped', [31306]],
		[[194907, 194907], 'mapped', [31311]],
		[[194908, 194908], 'mapped', [153980]],
		[[194909, 194910], 'mapped', [154279]],
		[[194911, 194911], 'disallowed'],
		[[194912, 194912], 'mapped', [16898]],
		[[194913, 194913], 'mapped', [154539]],
		[[194914, 194914], 'mapped', [31686]],
		[[194915, 194915], 'mapped', [31689]],
		[[194916, 194916], 'mapped', [16935]],
		[[194917, 194917], 'mapped', [154752]],
		[[194918, 194918], 'mapped', [31954]],
		[[194919, 194919], 'mapped', [17056]],
		[[194920, 194920], 'mapped', [31976]],
		[[194921, 194921], 'mapped', [31971]],
		[[194922, 194922], 'mapped', [32e3]],
		[[194923, 194923], 'mapped', [155526]],
		[[194924, 194924], 'mapped', [32099]],
		[[194925, 194925], 'mapped', [17153]],
		[[194926, 194926], 'mapped', [32199]],
		[[194927, 194927], 'mapped', [32258]],
		[[194928, 194928], 'mapped', [32325]],
		[[194929, 194929], 'mapped', [17204]],
		[[194930, 194930], 'mapped', [156200]],
		[[194931, 194931], 'mapped', [156231]],
		[[194932, 194932], 'mapped', [17241]],
		[[194933, 194933], 'mapped', [156377]],
		[[194934, 194934], 'mapped', [32634]],
		[[194935, 194935], 'mapped', [156478]],
		[[194936, 194936], 'mapped', [32661]],
		[[194937, 194937], 'mapped', [32762]],
		[[194938, 194938], 'mapped', [32773]],
		[[194939, 194939], 'mapped', [156890]],
		[[194940, 194940], 'mapped', [156963]],
		[[194941, 194941], 'mapped', [32864]],
		[[194942, 194942], 'mapped', [157096]],
		[[194943, 194943], 'mapped', [32880]],
		[[194944, 194944], 'mapped', [144223]],
		[[194945, 194945], 'mapped', [17365]],
		[[194946, 194946], 'mapped', [32946]],
		[[194947, 194947], 'mapped', [33027]],
		[[194948, 194948], 'mapped', [17419]],
		[[194949, 194949], 'mapped', [33086]],
		[[194950, 194950], 'mapped', [23221]],
		[[194951, 194951], 'mapped', [157607]],
		[[194952, 194952], 'mapped', [157621]],
		[[194953, 194953], 'mapped', [144275]],
		[[194954, 194954], 'mapped', [144284]],
		[[194955, 194955], 'mapped', [33281]],
		[[194956, 194956], 'mapped', [33284]],
		[[194957, 194957], 'mapped', [36766]],
		[[194958, 194958], 'mapped', [17515]],
		[[194959, 194959], 'mapped', [33425]],
		[[194960, 194960], 'mapped', [33419]],
		[[194961, 194961], 'mapped', [33437]],
		[[194962, 194962], 'mapped', [21171]],
		[[194963, 194963], 'mapped', [33457]],
		[[194964, 194964], 'mapped', [33459]],
		[[194965, 194965], 'mapped', [33469]],
		[[194966, 194966], 'mapped', [33510]],
		[[194967, 194967], 'mapped', [158524]],
		[[194968, 194968], 'mapped', [33509]],
		[[194969, 194969], 'mapped', [33565]],
		[[194970, 194970], 'mapped', [33635]],
		[[194971, 194971], 'mapped', [33709]],
		[[194972, 194972], 'mapped', [33571]],
		[[194973, 194973], 'mapped', [33725]],
		[[194974, 194974], 'mapped', [33767]],
		[[194975, 194975], 'mapped', [33879]],
		[[194976, 194976], 'mapped', [33619]],
		[[194977, 194977], 'mapped', [33738]],
		[[194978, 194978], 'mapped', [33740]],
		[[194979, 194979], 'mapped', [33756]],
		[[194980, 194980], 'mapped', [158774]],
		[[194981, 194981], 'mapped', [159083]],
		[[194982, 194982], 'mapped', [158933]],
		[[194983, 194983], 'mapped', [17707]],
		[[194984, 194984], 'mapped', [34033]],
		[[194985, 194985], 'mapped', [34035]],
		[[194986, 194986], 'mapped', [34070]],
		[[194987, 194987], 'mapped', [160714]],
		[[194988, 194988], 'mapped', [34148]],
		[[194989, 194989], 'mapped', [159532]],
		[[194990, 194990], 'mapped', [17757]],
		[[194991, 194991], 'mapped', [17761]],
		[[194992, 194992], 'mapped', [159665]],
		[[194993, 194993], 'mapped', [159954]],
		[[194994, 194994], 'mapped', [17771]],
		[[194995, 194995], 'mapped', [34384]],
		[[194996, 194996], 'mapped', [34396]],
		[[194997, 194997], 'mapped', [34407]],
		[[194998, 194998], 'mapped', [34409]],
		[[194999, 194999], 'mapped', [34473]],
		[[195e3, 195e3], 'mapped', [34440]],
		[[195001, 195001], 'mapped', [34574]],
		[[195002, 195002], 'mapped', [34530]],
		[[195003, 195003], 'mapped', [34681]],
		[[195004, 195004], 'mapped', [34600]],
		[[195005, 195005], 'mapped', [34667]],
		[[195006, 195006], 'mapped', [34694]],
		[[195007, 195007], 'disallowed'],
		[[195008, 195008], 'mapped', [34785]],
		[[195009, 195009], 'mapped', [34817]],
		[[195010, 195010], 'mapped', [17913]],
		[[195011, 195011], 'mapped', [34912]],
		[[195012, 195012], 'mapped', [34915]],
		[[195013, 195013], 'mapped', [161383]],
		[[195014, 195014], 'mapped', [35031]],
		[[195015, 195015], 'mapped', [35038]],
		[[195016, 195016], 'mapped', [17973]],
		[[195017, 195017], 'mapped', [35066]],
		[[195018, 195018], 'mapped', [13499]],
		[[195019, 195019], 'mapped', [161966]],
		[[195020, 195020], 'mapped', [162150]],
		[[195021, 195021], 'mapped', [18110]],
		[[195022, 195022], 'mapped', [18119]],
		[[195023, 195023], 'mapped', [35488]],
		[[195024, 195024], 'mapped', [35565]],
		[[195025, 195025], 'mapped', [35722]],
		[[195026, 195026], 'mapped', [35925]],
		[[195027, 195027], 'mapped', [162984]],
		[[195028, 195028], 'mapped', [36011]],
		[[195029, 195029], 'mapped', [36033]],
		[[195030, 195030], 'mapped', [36123]],
		[[195031, 195031], 'mapped', [36215]],
		[[195032, 195032], 'mapped', [163631]],
		[[195033, 195033], 'mapped', [133124]],
		[[195034, 195034], 'mapped', [36299]],
		[[195035, 195035], 'mapped', [36284]],
		[[195036, 195036], 'mapped', [36336]],
		[[195037, 195037], 'mapped', [133342]],
		[[195038, 195038], 'mapped', [36564]],
		[[195039, 195039], 'mapped', [36664]],
		[[195040, 195040], 'mapped', [165330]],
		[[195041, 195041], 'mapped', [165357]],
		[[195042, 195042], 'mapped', [37012]],
		[[195043, 195043], 'mapped', [37105]],
		[[195044, 195044], 'mapped', [37137]],
		[[195045, 195045], 'mapped', [165678]],
		[[195046, 195046], 'mapped', [37147]],
		[[195047, 195047], 'mapped', [37432]],
		[[195048, 195048], 'mapped', [37591]],
		[[195049, 195049], 'mapped', [37592]],
		[[195050, 195050], 'mapped', [37500]],
		[[195051, 195051], 'mapped', [37881]],
		[[195052, 195052], 'mapped', [37909]],
		[[195053, 195053], 'mapped', [166906]],
		[[195054, 195054], 'mapped', [38283]],
		[[195055, 195055], 'mapped', [18837]],
		[[195056, 195056], 'mapped', [38327]],
		[[195057, 195057], 'mapped', [167287]],
		[[195058, 195058], 'mapped', [18918]],
		[[195059, 195059], 'mapped', [38595]],
		[[195060, 195060], 'mapped', [23986]],
		[[195061, 195061], 'mapped', [38691]],
		[[195062, 195062], 'mapped', [168261]],
		[[195063, 195063], 'mapped', [168474]],
		[[195064, 195064], 'mapped', [19054]],
		[[195065, 195065], 'mapped', [19062]],
		[[195066, 195066], 'mapped', [38880]],
		[[195067, 195067], 'mapped', [168970]],
		[[195068, 195068], 'mapped', [19122]],
		[[195069, 195069], 'mapped', [169110]],
		[[195070, 195071], 'mapped', [38923]],
		[[195072, 195072], 'mapped', [38953]],
		[[195073, 195073], 'mapped', [169398]],
		[[195074, 195074], 'mapped', [39138]],
		[[195075, 195075], 'mapped', [19251]],
		[[195076, 195076], 'mapped', [39209]],
		[[195077, 195077], 'mapped', [39335]],
		[[195078, 195078], 'mapped', [39362]],
		[[195079, 195079], 'mapped', [39422]],
		[[195080, 195080], 'mapped', [19406]],
		[[195081, 195081], 'mapped', [170800]],
		[[195082, 195082], 'mapped', [39698]],
		[[195083, 195083], 'mapped', [4e4]],
		[[195084, 195084], 'mapped', [40189]],
		[[195085, 195085], 'mapped', [19662]],
		[[195086, 195086], 'mapped', [19693]],
		[[195087, 195087], 'mapped', [40295]],
		[[195088, 195088], 'mapped', [172238]],
		[[195089, 195089], 'mapped', [19704]],
		[[195090, 195090], 'mapped', [172293]],
		[[195091, 195091], 'mapped', [172558]],
		[[195092, 195092], 'mapped', [172689]],
		[[195093, 195093], 'mapped', [40635]],
		[[195094, 195094], 'mapped', [19798]],
		[[195095, 195095], 'mapped', [40697]],
		[[195096, 195096], 'mapped', [40702]],
		[[195097, 195097], 'mapped', [40709]],
		[[195098, 195098], 'mapped', [40719]],
		[[195099, 195099], 'mapped', [40726]],
		[[195100, 195100], 'mapped', [40763]],
		[[195101, 195101], 'mapped', [173568]],
		[[195102, 196605], 'disallowed'],
		[[196606, 196607], 'disallowed'],
		[[196608, 262141], 'disallowed'],
		[[262142, 262143], 'disallowed'],
		[[262144, 327677], 'disallowed'],
		[[327678, 327679], 'disallowed'],
		[[327680, 393213], 'disallowed'],
		[[393214, 393215], 'disallowed'],
		[[393216, 458749], 'disallowed'],
		[[458750, 458751], 'disallowed'],
		[[458752, 524285], 'disallowed'],
		[[524286, 524287], 'disallowed'],
		[[524288, 589821], 'disallowed'],
		[[589822, 589823], 'disallowed'],
		[[589824, 655357], 'disallowed'],
		[[655358, 655359], 'disallowed'],
		[[655360, 720893], 'disallowed'],
		[[720894, 720895], 'disallowed'],
		[[720896, 786429], 'disallowed'],
		[[786430, 786431], 'disallowed'],
		[[786432, 851965], 'disallowed'],
		[[851966, 851967], 'disallowed'],
		[[851968, 917501], 'disallowed'],
		[[917502, 917503], 'disallowed'],
		[[917504, 917504], 'disallowed'],
		[[917505, 917505], 'disallowed'],
		[[917506, 917535], 'disallowed'],
		[[917536, 917631], 'disallowed'],
		[[917632, 917759], 'disallowed'],
		[[917760, 917999], 'ignored'],
		[[918e3, 983037], 'disallowed'],
		[[983038, 983039], 'disallowed'],
		[[983040, 1048573], 'disallowed'],
		[[1048574, 1048575], 'disallowed'],
		[[1048576, 1114109], 'disallowed'],
		[[1114110, 1114111], 'disallowed'],
	];
});
var D5 = Z((TR, Id) => {
	'use strict';
	var I5 = require('punycode'),
		S5 = L5(),
		El = { TRANSITIONAL: 0, NONTRANSITIONAL: 1 };
	function N5(u) {
		return u
			.split('\0')
			.map(function (e) {
				return e.normalize('NFC');
			})
			.join('\0');
	}
	function P5(u) {
		for (var e = 0, i = S5.length - 1; e <= i; ) {
			var n = Math.floor((e + i) / 2),
				a = S5[n];
			if (a[0][0] <= u && a[0][1] >= u) return a;
			a[0][0] > u ? (i = n - 1) : (e = n + 1);
		}
		return null;
	}
	var J8 = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;
	function g5(u) {
		return u.replace(J8, '_').length;
	}
	function z8(u, e, i) {
		for (var n = !1, a = '', o = g5(u), c = 0; c < o; ++c) {
			var h = u.codePointAt(c),
				_ = P5(h);
			switch (_[1]) {
				case 'disallowed':
					(n = !0), (a += String.fromCodePoint(h));
					break;
				case 'ignored':
					break;
				case 'mapped':
					a += String.fromCodePoint.apply(String, _[2]);
					break;
				case 'deviation':
					i === El.TRANSITIONAL
						? (a += String.fromCodePoint.apply(String, _[2]))
						: (a += String.fromCodePoint(h));
					break;
				case 'valid':
					a += String.fromCodePoint(h);
					break;
				case 'disallowed_STD3_mapped':
					e ? ((n = !0), (a += String.fromCodePoint(h))) : (a += String.fromCodePoint.apply(String, _[2]));
					break;
				case 'disallowed_STD3_valid':
					e && (n = !0), (a += String.fromCodePoint(h));
					break;
			}
		}
		return { string: a, error: n };
	}
	var $8 =
		/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;
	function u_(u, e) {
		u.substr(0, 4) === 'xn--' && ((u = I5.toUnicode(u)), (e = El.NONTRANSITIONAL));
		var i = !1;
		(N5(u) !== u ||
			(u[3] === '-' && u[4] === '-') ||
			u[0] === '-' ||
			u[u.length - 1] === '-' ||
			u.indexOf('.') !== -1 ||
			u.search($8) === 0) &&
			(i = !0);
		for (var n = g5(u), a = 0; a < n; ++a) {
			var o = P5(u.codePointAt(a));
			if (
				(Sd === El.TRANSITIONAL && o[1] !== 'valid') ||
				(Sd === El.NONTRANSITIONAL && o[1] !== 'valid' && o[1] !== 'deviation')
			) {
				i = !0;
				break;
			}
		}
		return { label: u, error: i };
	}
	function Sd(u, e, i) {
		var n = z8(u, e, i);
		n.string = N5(n.string);
		for (var a = n.string.split('.'), o = 0; o < a.length; ++o)
			try {
				var c = u_(a[o]);
				(a[o] = c.label), (n.error = n.error || c.error);
			} catch {
				n.error = !0;
			}
		return { string: a.join('.'), error: n.error };
	}
	Id.exports.toASCII = function (u, e, i, n) {
		var a = Sd(u, e, i),
			o = a.string.split('.');
		if (
			((o = o.map(function (_) {
				try {
					return I5.toASCII(_);
				} catch {
					return (a.error = !0), _;
				}
			})),
			n)
		) {
			var c = o.slice(0, o.length - 1).join('.').length;
			(c.length > 253 || c.length === 0) && (a.error = !0);
			for (var h = 0; h < o.length; ++h)
				if (o.length > 63 || o.length === 0) {
					a.error = !0;
					break;
				}
		}
		return a.error ? null : o.join('.');
	};
	Id.exports.toUnicode = function (u, e) {
		var i = Sd(u, e, El.NONTRANSITIONAL);
		return { domain: i.string, error: i.error };
	};
	Id.exports.PROCESSING_OPTIONS = El;
});
var na = Z((RR, Ti) => {
	'use strict';
	var Tl = require('punycode'),
		U5 = D5(),
		H5 = { ftp: 21, file: null, gopher: 70, http: 80, https: 443, ws: 80, wss: 443 },
		Q = Symbol('failure');
	function v5(u) {
		return Tl.ucs2.decode(u).length;
	}
	function w5(u, e) {
		let i = u[e];
		return isNaN(i) ? void 0 : String.fromCodePoint(i);
	}
	function Ml(u) {
		return u >= 48 && u <= 57;
	}
	function Hl(u) {
		return (u >= 65 && u <= 90) || (u >= 97 && u <= 122);
	}
	function t_(u) {
		return Hl(u) || Ml(u);
	}
	function ts(u) {
		return Ml(u) || (u >= 65 && u <= 70) || (u >= 97 && u <= 102);
	}
	function M5(u) {
		return u === '.' || u.toLowerCase() === '%2e';
	}
	function e_(u) {
		return (u = u.toLowerCase()), u === '..' || u === '%2e.' || u === '.%2e' || u === '%2e%2e';
	}
	function i_(u, e) {
		return Hl(u) && (e === 58 || e === 124);
	}
	function F5(u) {
		return u.length === 2 && Hl(u.codePointAt(0)) && (u[1] === ':' || u[1] === '|');
	}
	function r_(u) {
		return u.length === 2 && Hl(u.codePointAt(0)) && u[1] === ':';
	}
	function n_(u) {
		return u.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
	}
	function s_(u) {
		return u.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
	}
	function nf(u) {
		return H5[u] !== void 0;
	}
	function ou(u) {
		return nf(u.scheme);
	}
	function a_(u) {
		return H5[u];
	}
	function k5(u) {
		let e = u.toString(16).toUpperCase();
		return e.length === 1 && (e = '0' + e), '%' + e;
	}
	function o_(u) {
		let e = new Buffer(u),
			i = '';
		for (let n = 0; n < e.length; ++n) i += k5(e[n]);
		return i;
	}
	function c_(u) {
		let e = new Buffer(u),
			i = [];
		for (let n = 0; n < e.length; ++n)
			e[n] !== 37
				? i.push(e[n])
				: e[n] === 37 && ts(e[n + 1]) && ts(e[n + 2])
				? (i.push(parseInt(e.slice(n + 1, n + 3).toString(), 16)), (n += 2))
				: i.push(e[n]);
		return new Buffer(i).toString();
	}
	function Nd(u) {
		return u <= 31 || u > 126;
	}
	var p_ = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
	function V5(u) {
		return Nd(u) || p_.has(u);
	}
	var h_ = new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
	function af(u) {
		return V5(u) || h_.has(u);
	}
	function rh(u, e) {
		let i = String.fromCodePoint(u);
		return e(u) ? o_(i) : i;
	}
	function l_(u) {
		let e = 10;
		return (
			u.length >= 2 && u.charAt(0) === '0' && u.charAt(1).toLowerCase() === 'x'
				? ((u = u.substring(2)), (e = 16))
				: u.length >= 2 && u.charAt(0) === '0' && ((u = u.substring(1)), (e = 8)),
			u === '' ? 0 : (e === 10 ? /[^0-9]/ : e === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/).test(u) ? Q : parseInt(u, e)
		);
	}
	function d_(u) {
		let e = u.split('.');
		if ((e[e.length - 1] === '' && e.length > 1 && e.pop(), e.length > 4)) return u;
		let i = [];
		for (let o of e) {
			if (o === '') return u;
			let c = l_(o);
			if (c === Q) return u;
			i.push(c);
		}
		for (let o = 0; o < i.length - 1; ++o) if (i[o] > 255) return Q;
		if (i[i.length - 1] >= Math.pow(256, 5 - i.length)) return Q;
		let n = i.pop(),
			a = 0;
		for (let o of i) (n += o * Math.pow(256, 3 - a)), ++a;
		return n;
	}
	function f_(u) {
		let e = '',
			i = u;
		for (let n = 1; n <= 4; ++n) (e = String(i % 256) + e), n !== 4 && (e = '.' + e), (i = Math.floor(i / 256));
		return e;
	}
	function __(u) {
		let e = [0, 0, 0, 0, 0, 0, 0, 0],
			i = 0,
			n = null,
			a = 0;
		if (((u = Tl.ucs2.decode(u)), u[a] === 58)) {
			if (u[a + 1] !== 58) return Q;
			(a += 2), ++i, (n = i);
		}
		for (; a < u.length; ) {
			if (i === 8) return Q;
			if (u[a] === 58) {
				if (n !== null) return Q;
				++a, ++i, (n = i);
				continue;
			}
			let o = 0,
				c = 0;
			for (; c < 4 && ts(u[a]); ) (o = o * 16 + parseInt(w5(u, a), 16)), ++a, ++c;
			if (u[a] === 46) {
				if (c === 0 || ((a -= c), i > 6)) return Q;
				let h = 0;
				for (; u[a] !== void 0; ) {
					let _ = null;
					if (h > 0)
						if (u[a] === 46 && h < 4) ++a;
						else return Q;
					if (!Ml(u[a])) return Q;
					for (; Ml(u[a]); ) {
						let y = parseInt(w5(u, a));
						if (_ === null) _ = y;
						else {
							if (_ === 0) return Q;
							_ = _ * 10 + y;
						}
						if (_ > 255) return Q;
						++a;
					}
					(e[i] = e[i] * 256 + _), ++h, (h === 2 || h === 4) && ++i;
				}
				if (h !== 4) return Q;
				break;
			} else if (u[a] === 58) {
				if ((++a, u[a] === void 0)) return Q;
			} else if (u[a] !== void 0) return Q;
			(e[i] = o), ++i;
		}
		if (n !== null) {
			let o = i - n;
			for (i = 7; i !== 0 && o > 0; ) {
				let c = e[n + o - 1];
				(e[n + o - 1] = e[i]), (e[i] = c), --i, --o;
			}
		} else if (n === null && i !== 8) return Q;
		return e;
	}
	function E_(u) {
		let e = '',
			n = R_(u).idx,
			a = !1;
		for (let o = 0; o <= 7; ++o)
			if (!(a && u[o] === 0)) {
				if ((a && (a = !1), n === o)) {
					(e += o === 0 ? '::' : ':'), (a = !0);
					continue;
				}
				(e += u[o].toString(16)), o !== 7 && (e += ':');
			}
		return e;
	}
	function sf(u, e) {
		if (u[0] === '[') return u[u.length - 1] !== ']' ? Q : __(u.substring(1, u.length - 1));
		if (!e) return T_(u);
		let i = c_(u),
			n = U5.toASCII(i, !1, U5.PROCESSING_OPTIONS.NONTRANSITIONAL, !1);
		if (n === null || n_(n)) return Q;
		let a = d_(n);
		return typeof a == 'number' || a === Q ? a : n;
	}
	function T_(u) {
		if (s_(u)) return Q;
		let e = '',
			i = Tl.ucs2.decode(u);
		for (let n = 0; n < i.length; ++n) e += rh(i[n], Nd);
		return e;
	}
	function R_(u) {
		let e = null,
			i = 1,
			n = null,
			a = 0;
		for (let o = 0; o < u.length; ++o)
			u[o] !== 0 ? (a > i && ((e = n), (i = a)), (n = null), (a = 0)) : (n === null && (n = o), ++a);
		return a > i && ((e = n), (i = a)), { idx: e, len: i };
	}
	function of(u) {
		return typeof u == 'number' ? f_(u) : u instanceof Array ? '[' + E_(u) + ']' : u;
	}
	function m_(u) {
		return u.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, '');
	}
	function y_(u) {
		return u.replace(/\u0009|\u000A|\u000D/g, '');
	}
	function B5(u) {
		let e = u.path;
		e.length !== 0 && ((u.scheme === 'file' && e.length === 1 && b_(e[0])) || e.pop());
	}
	function Y5(u) {
		return u.username !== '' || u.password !== '';
	}
	function C_(u) {
		return u.host === null || u.host === '' || u.cannotBeABaseURL || u.scheme === 'file';
	}
	function b_(u) {
		return /^[A-Za-z]:$/.test(u);
	}
	function P0(u, e, i, n, a) {
		if (
			((this.pointer = 0),
			(this.input = u),
			(this.base = e || null),
			(this.encodingOverride = i || 'utf-8'),
			(this.stateOverride = a),
			(this.url = n),
			(this.failure = !1),
			(this.parseError = !1),
			!this.url)
		) {
			this.url = {
				scheme: '',
				username: '',
				password: '',
				host: null,
				port: null,
				path: [],
				query: null,
				fragment: null,
				cannotBeABaseURL: !1,
			};
			let c = m_(this.input);
			c !== this.input && (this.parseError = !0), (this.input = c);
		}
		let o = y_(this.input);
		for (
			o !== this.input && (this.parseError = !0),
				this.input = o,
				this.state = a || 'scheme start',
				this.buffer = '',
				this.atFlag = !1,
				this.arrFlag = !1,
				this.passwordTokenSeenFlag = !1,
				this.input = Tl.ucs2.decode(this.input);
			this.pointer <= this.input.length;
			++this.pointer
		) {
			let c = this.input[this.pointer],
				h = isNaN(c) ? void 0 : String.fromCodePoint(c),
				_ = this['parse ' + this.state](c, h);
			if (_) {
				if (_ === Q) {
					this.failure = !0;
					break;
				}
			} else break;
		}
	}
	P0.prototype['parse scheme start'] = function (e, i) {
		if (Hl(e)) (this.buffer += i.toLowerCase()), (this.state = 'scheme');
		else if (!this.stateOverride) (this.state = 'no scheme'), --this.pointer;
		else return (this.parseError = !0), Q;
		return !0;
	};
	P0.prototype['parse scheme'] = function (e, i) {
		if (t_(e) || e === 43 || e === 45 || e === 46) this.buffer += i.toLowerCase();
		else if (e === 58) {
			if (
				(this.stateOverride &&
					((ou(this.url) && !nf(this.buffer)) ||
						(!ou(this.url) && nf(this.buffer)) ||
						((Y5(this.url) || this.url.port !== null) && this.buffer === 'file') ||
						(this.url.scheme === 'file' && (this.url.host === '' || this.url.host === null)))) ||
				((this.url.scheme = this.buffer), (this.buffer = ''), this.stateOverride)
			)
				return !1;
			this.url.scheme === 'file'
				? ((this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) &&
						(this.parseError = !0),
				  (this.state = 'file'))
				: ou(this.url) && this.base !== null && this.base.scheme === this.url.scheme
				? (this.state = 'special relative or authority')
				: ou(this.url)
				? (this.state = 'special authority slashes')
				: this.input[this.pointer + 1] === 47
				? ((this.state = 'path or authority'), ++this.pointer)
				: ((this.url.cannotBeABaseURL = !0),
				  this.url.path.push(''),
				  (this.state = 'cannot-be-a-base-URL path'));
		} else if (!this.stateOverride) (this.buffer = ''), (this.state = 'no scheme'), (this.pointer = -1);
		else return (this.parseError = !0), Q;
		return !0;
	};
	P0.prototype['parse no scheme'] = function (e) {
		return this.base === null || (this.base.cannotBeABaseURL && e !== 35)
			? Q
			: (this.base.cannotBeABaseURL && e === 35
					? ((this.url.scheme = this.base.scheme),
					  (this.url.path = this.base.path.slice()),
					  (this.url.query = this.base.query),
					  (this.url.fragment = ''),
					  (this.url.cannotBeABaseURL = !0),
					  (this.state = 'fragment'))
					: this.base.scheme === 'file'
					? ((this.state = 'file'), --this.pointer)
					: ((this.state = 'relative'), --this.pointer),
			  !0);
	};
	P0.prototype['parse special relative or authority'] = function (e) {
		return (
			e === 47 && this.input[this.pointer + 1] === 47
				? ((this.state = 'special authority ignore slashes'), ++this.pointer)
				: ((this.parseError = !0), (this.state = 'relative'), --this.pointer),
			!0
		);
	};
	P0.prototype['parse path or authority'] = function (e) {
		return e === 47 ? (this.state = 'authority') : ((this.state = 'path'), --this.pointer), !0;
	};
	P0.prototype['parse relative'] = function (e) {
		return (
			(this.url.scheme = this.base.scheme),
			isNaN(e)
				? ((this.url.username = this.base.username),
				  (this.url.password = this.base.password),
				  (this.url.host = this.base.host),
				  (this.url.port = this.base.port),
				  (this.url.path = this.base.path.slice()),
				  (this.url.query = this.base.query))
				: e === 47
				? (this.state = 'relative slash')
				: e === 63
				? ((this.url.username = this.base.username),
				  (this.url.password = this.base.password),
				  (this.url.host = this.base.host),
				  (this.url.port = this.base.port),
				  (this.url.path = this.base.path.slice()),
				  (this.url.query = ''),
				  (this.state = 'query'))
				: e === 35
				? ((this.url.username = this.base.username),
				  (this.url.password = this.base.password),
				  (this.url.host = this.base.host),
				  (this.url.port = this.base.port),
				  (this.url.path = this.base.path.slice()),
				  (this.url.query = this.base.query),
				  (this.url.fragment = ''),
				  (this.state = 'fragment'))
				: ou(this.url) && e === 92
				? ((this.parseError = !0), (this.state = 'relative slash'))
				: ((this.url.username = this.base.username),
				  (this.url.password = this.base.password),
				  (this.url.host = this.base.host),
				  (this.url.port = this.base.port),
				  (this.url.path = this.base.path.slice(0, this.base.path.length - 1)),
				  (this.state = 'path'),
				  --this.pointer),
			!0
		);
	};
	P0.prototype['parse relative slash'] = function (e) {
		return (
			ou(this.url) && (e === 47 || e === 92)
				? (e === 92 && (this.parseError = !0), (this.state = 'special authority ignore slashes'))
				: e === 47
				? (this.state = 'authority')
				: ((this.url.username = this.base.username),
				  (this.url.password = this.base.password),
				  (this.url.host = this.base.host),
				  (this.url.port = this.base.port),
				  (this.state = 'path'),
				  --this.pointer),
			!0
		);
	};
	P0.prototype['parse special authority slashes'] = function (e) {
		return (
			e === 47 && this.input[this.pointer + 1] === 47
				? ((this.state = 'special authority ignore slashes'), ++this.pointer)
				: ((this.parseError = !0), (this.state = 'special authority ignore slashes'), --this.pointer),
			!0
		);
	};
	P0.prototype['parse special authority ignore slashes'] = function (e) {
		return e !== 47 && e !== 92 ? ((this.state = 'authority'), --this.pointer) : (this.parseError = !0), !0;
	};
	P0.prototype['parse authority'] = function (e, i) {
		if (e === 64) {
			(this.parseError = !0), this.atFlag && (this.buffer = '%40' + this.buffer), (this.atFlag = !0);
			let n = v5(this.buffer);
			for (let a = 0; a < n; ++a) {
				let o = this.buffer.codePointAt(a);
				if (o === 58 && !this.passwordTokenSeenFlag) {
					this.passwordTokenSeenFlag = !0;
					continue;
				}
				let c = rh(o, af);
				this.passwordTokenSeenFlag ? (this.url.password += c) : (this.url.username += c);
			}
			this.buffer = '';
		} else if (isNaN(e) || e === 47 || e === 63 || e === 35 || (ou(this.url) && e === 92)) {
			if (this.atFlag && this.buffer === '') return (this.parseError = !0), Q;
			(this.pointer -= v5(this.buffer) + 1), (this.buffer = ''), (this.state = 'host');
		} else this.buffer += i;
		return !0;
	};
	P0.prototype['parse hostname'] = P0.prototype['parse host'] = function (e, i) {
		if (this.stateOverride && this.url.scheme === 'file') --this.pointer, (this.state = 'file host');
		else if (e === 58 && !this.arrFlag) {
			if (this.buffer === '') return (this.parseError = !0), Q;
			let n = sf(this.buffer, ou(this.url));
			if (n === Q) return Q;
			if (((this.url.host = n), (this.buffer = ''), (this.state = 'port'), this.stateOverride === 'hostname'))
				return !1;
		} else if (isNaN(e) || e === 47 || e === 63 || e === 35 || (ou(this.url) && e === 92)) {
			if ((--this.pointer, ou(this.url) && this.buffer === '')) return (this.parseError = !0), Q;
			if (this.stateOverride && this.buffer === '' && (Y5(this.url) || this.url.port !== null))
				return (this.parseError = !0), !1;
			let n = sf(this.buffer, ou(this.url));
			if (n === Q) return Q;
			if (((this.url.host = n), (this.buffer = ''), (this.state = 'path start'), this.stateOverride)) return !1;
		} else e === 91 ? (this.arrFlag = !0) : e === 93 && (this.arrFlag = !1), (this.buffer += i);
		return !0;
	};
	P0.prototype['parse port'] = function (e, i) {
		if (Ml(e)) this.buffer += i;
		else if (isNaN(e) || e === 47 || e === 63 || e === 35 || (ou(this.url) && e === 92) || this.stateOverride) {
			if (this.buffer !== '') {
				let n = parseInt(this.buffer);
				if (n > Math.pow(2, 16) - 1) return (this.parseError = !0), Q;
				(this.url.port = n === a_(this.url.scheme) ? null : n), (this.buffer = '');
			}
			if (this.stateOverride) return !1;
			(this.state = 'path start'), --this.pointer;
		} else return (this.parseError = !0), Q;
		return !0;
	};
	var A_ = new Set([47, 92, 63, 35]);
	P0.prototype['parse file'] = function (e) {
		return (
			(this.url.scheme = 'file'),
			e === 47 || e === 92
				? (e === 92 && (this.parseError = !0), (this.state = 'file slash'))
				: this.base !== null && this.base.scheme === 'file'
				? isNaN(e)
					? ((this.url.host = this.base.host),
					  (this.url.path = this.base.path.slice()),
					  (this.url.query = this.base.query))
					: e === 63
					? ((this.url.host = this.base.host),
					  (this.url.path = this.base.path.slice()),
					  (this.url.query = ''),
					  (this.state = 'query'))
					: e === 35
					? ((this.url.host = this.base.host),
					  (this.url.path = this.base.path.slice()),
					  (this.url.query = this.base.query),
					  (this.url.fragment = ''),
					  (this.state = 'fragment'))
					: (this.input.length - this.pointer - 1 === 0 ||
					  !i_(e, this.input[this.pointer + 1]) ||
					  (this.input.length - this.pointer - 1 >= 2 && !A_.has(this.input[this.pointer + 2]))
							? ((this.url.host = this.base.host), (this.url.path = this.base.path.slice()), B5(this.url))
							: (this.parseError = !0),
					  (this.state = 'path'),
					  --this.pointer)
				: ((this.state = 'path'), --this.pointer),
			!0
		);
	};
	P0.prototype['parse file slash'] = function (e) {
		return (
			e === 47 || e === 92
				? (e === 92 && (this.parseError = !0), (this.state = 'file host'))
				: (this.base !== null &&
						this.base.scheme === 'file' &&
						(r_(this.base.path[0])
							? this.url.path.push(this.base.path[0])
							: (this.url.host = this.base.host)),
				  (this.state = 'path'),
				  --this.pointer),
			!0
		);
	};
	P0.prototype['parse file host'] = function (e, i) {
		if (isNaN(e) || e === 47 || e === 92 || e === 63 || e === 35)
			if ((--this.pointer, !this.stateOverride && F5(this.buffer))) (this.parseError = !0), (this.state = 'path');
			else if (this.buffer === '') {
				if (((this.url.host = ''), this.stateOverride)) return !1;
				this.state = 'path start';
			} else {
				let n = sf(this.buffer, ou(this.url));
				if (n === Q) return Q;
				if ((n === 'localhost' && (n = ''), (this.url.host = n), this.stateOverride)) return !1;
				(this.buffer = ''), (this.state = 'path start');
			}
		else this.buffer += i;
		return !0;
	};
	P0.prototype['parse path start'] = function (e) {
		return (
			ou(this.url)
				? (e === 92 && (this.parseError = !0), (this.state = 'path'), e !== 47 && e !== 92 && --this.pointer)
				: !this.stateOverride && e === 63
				? ((this.url.query = ''), (this.state = 'query'))
				: !this.stateOverride && e === 35
				? ((this.url.fragment = ''), (this.state = 'fragment'))
				: e !== void 0 && ((this.state = 'path'), e !== 47 && --this.pointer),
			!0
		);
	};
	P0.prototype['parse path'] = function (e) {
		if (isNaN(e) || e === 47 || (ou(this.url) && e === 92) || (!this.stateOverride && (e === 63 || e === 35))) {
			if (
				(ou(this.url) && e === 92 && (this.parseError = !0),
				e_(this.buffer)
					? (B5(this.url), e !== 47 && !(ou(this.url) && e === 92) && this.url.path.push(''))
					: M5(this.buffer) && e !== 47 && !(ou(this.url) && e === 92)
					? this.url.path.push('')
					: M5(this.buffer) ||
					  (this.url.scheme === 'file' &&
							this.url.path.length === 0 &&
							F5(this.buffer) &&
							(this.url.host !== '' &&
								this.url.host !== null &&
								((this.parseError = !0), (this.url.host = '')),
							(this.buffer = this.buffer[0] + ':')),
					  this.url.path.push(this.buffer)),
				(this.buffer = ''),
				this.url.scheme === 'file' && (e === void 0 || e === 63 || e === 35))
			)
				for (; this.url.path.length > 1 && this.url.path[0] === ''; )
					(this.parseError = !0), this.url.path.shift();
			e === 63 && ((this.url.query = ''), (this.state = 'query')),
				e === 35 && ((this.url.fragment = ''), (this.state = 'fragment'));
		} else
			e === 37 &&
				(!ts(this.input[this.pointer + 1]) || !ts(this.input[this.pointer + 2])) &&
				(this.parseError = !0),
				(this.buffer += rh(e, V5));
		return !0;
	};
	P0.prototype['parse cannot-be-a-base-URL path'] = function (e) {
		return (
			e === 63
				? ((this.url.query = ''), (this.state = 'query'))
				: e === 35
				? ((this.url.fragment = ''), (this.state = 'fragment'))
				: (!isNaN(e) && e !== 37 && (this.parseError = !0),
				  e === 37 &&
						(!ts(this.input[this.pointer + 1]) || !ts(this.input[this.pointer + 2])) &&
						(this.parseError = !0),
				  isNaN(e) || (this.url.path[0] = this.url.path[0] + rh(e, Nd))),
			!0
		);
	};
	P0.prototype['parse query'] = function (e, i) {
		if (isNaN(e) || (!this.stateOverride && e === 35)) {
			(!ou(this.url) || this.url.scheme === 'ws' || this.url.scheme === 'wss') &&
				(this.encodingOverride = 'utf-8');
			let n = new Buffer(this.buffer);
			for (let a = 0; a < n.length; ++a)
				n[a] < 33 || n[a] > 126 || n[a] === 34 || n[a] === 35 || n[a] === 60 || n[a] === 62
					? (this.url.query += k5(n[a]))
					: (this.url.query += String.fromCodePoint(n[a]));
			(this.buffer = ''), e === 35 && ((this.url.fragment = ''), (this.state = 'fragment'));
		} else
			e === 37 &&
				(!ts(this.input[this.pointer + 1]) || !ts(this.input[this.pointer + 2])) &&
				(this.parseError = !0),
				(this.buffer += i);
		return !0;
	};
	P0.prototype['parse fragment'] = function (e) {
		return (
			isNaN(e) ||
				(e === 0
					? (this.parseError = !0)
					: (e === 37 &&
							(!ts(this.input[this.pointer + 1]) || !ts(this.input[this.pointer + 2])) &&
							(this.parseError = !0),
					  (this.url.fragment += rh(e, Nd)))),
			!0
		);
	};
	function W_(u, e) {
		let i = u.scheme + ':';
		if (
			(u.host !== null
				? ((i += '//'),
				  (u.username !== '' || u.password !== '') &&
						((i += u.username), u.password !== '' && (i += ':' + u.password), (i += '@')),
				  (i += of(u.host)),
				  u.port !== null && (i += ':' + u.port))
				: u.host === null && u.scheme === 'file' && (i += '//'),
			u.cannotBeABaseURL)
		)
			i += u.path[0];
		else for (let n of u.path) i += '/' + n;
		return u.query !== null && (i += '?' + u.query), !e && u.fragment !== null && (i += '#' + u.fragment), i;
	}
	function K_(u) {
		let e = u.scheme + '://';
		return (e += of(u.host)), u.port !== null && (e += ':' + u.port), e;
	}
	Ti.exports.serializeURL = W_;
	Ti.exports.serializeURLOrigin = function (u) {
		switch (u.scheme) {
			case 'blob':
				try {
					return Ti.exports.serializeURLOrigin(Ti.exports.parseURL(u.path[0]));
				} catch {
					return 'null';
				}
			case 'ftp':
			case 'gopher':
			case 'http':
			case 'https':
			case 'ws':
			case 'wss':
				return K_({ scheme: u.scheme, host: u.host, port: u.port });
			case 'file':
				return 'file://';
			default:
				return 'null';
		}
	};
	Ti.exports.basicURLParse = function (u, e) {
		e === void 0 && (e = {});
		let i = new P0(u, e.baseURL, e.encodingOverride, e.url, e.stateOverride);
		return i.failure ? 'failure' : i.url;
	};
	Ti.exports.setTheUsername = function (u, e) {
		u.username = '';
		let i = Tl.ucs2.decode(e);
		for (let n = 0; n < i.length; ++n) u.username += rh(i[n], af);
	};
	Ti.exports.setThePassword = function (u, e) {
		u.password = '';
		let i = Tl.ucs2.decode(e);
		for (let n = 0; n < i.length; ++n) u.password += rh(i[n], af);
	};
	Ti.exports.serializeHost = of;
	Ti.exports.cannotHaveAUsernamePasswordPort = C_;
	Ti.exports.serializeInteger = function (u) {
		return String(u);
	};
	Ti.exports.parseURL = function (u, e) {
		return (
			e === void 0 && (e = {}),
			Ti.exports.basicURLParse(u, { baseURL: e.baseURL, encodingOverride: e.encodingOverride })
		);
	};
});
var j5 = Z(G5 => {
	'use strict';
	var g0 = na();
	G5.implementation = class {
		constructor(e) {
			let i = e[0],
				n = e[1],
				a = null;
			if (n !== void 0 && ((a = g0.basicURLParse(n)), a === 'failure')) throw new TypeError('Invalid base URL');
			let o = g0.basicURLParse(i, { baseURL: a });
			if (o === 'failure') throw new TypeError('Invalid URL');
			this._url = o;
		}
		get href() {
			return g0.serializeURL(this._url);
		}
		set href(e) {
			let i = g0.basicURLParse(e);
			if (i === 'failure') throw new TypeError('Invalid URL');
			this._url = i;
		}
		get origin() {
			return g0.serializeURLOrigin(this._url);
		}
		get protocol() {
			return this._url.scheme + ':';
		}
		set protocol(e) {
			g0.basicURLParse(e + ':', { url: this._url, stateOverride: 'scheme start' });
		}
		get username() {
			return this._url.username;
		}
		set username(e) {
			g0.cannotHaveAUsernamePasswordPort(this._url) || g0.setTheUsername(this._url, e);
		}
		get password() {
			return this._url.password;
		}
		set password(e) {
			g0.cannotHaveAUsernamePasswordPort(this._url) || g0.setThePassword(this._url, e);
		}
		get host() {
			let e = this._url;
			return e.host === null
				? ''
				: e.port === null
				? g0.serializeHost(e.host)
				: g0.serializeHost(e.host) + ':' + g0.serializeInteger(e.port);
		}
		set host(e) {
			this._url.cannotBeABaseURL || g0.basicURLParse(e, { url: this._url, stateOverride: 'host' });
		}
		get hostname() {
			return this._url.host === null ? '' : g0.serializeHost(this._url.host);
		}
		set hostname(e) {
			this._url.cannotBeABaseURL || g0.basicURLParse(e, { url: this._url, stateOverride: 'hostname' });
		}
		get port() {
			return this._url.port === null ? '' : g0.serializeInteger(this._url.port);
		}
		set port(e) {
			g0.cannotHaveAUsernamePasswordPort(this._url) ||
				(e === '' ? (this._url.port = null) : g0.basicURLParse(e, { url: this._url, stateOverride: 'port' }));
		}
		get pathname() {
			return this._url.cannotBeABaseURL
				? this._url.path[0]
				: this._url.path.length === 0
				? ''
				: '/' + this._url.path.join('/');
		}
		set pathname(e) {
			this._url.cannotBeABaseURL ||
				((this._url.path = []), g0.basicURLParse(e, { url: this._url, stateOverride: 'path start' }));
		}
		get search() {
			return this._url.query === null || this._url.query === '' ? '' : '?' + this._url.query;
		}
		set search(e) {
			let i = this._url;
			if (e === '') {
				i.query = null;
				return;
			}
			let n = e[0] === '?' ? e.substring(1) : e;
			(i.query = ''), g0.basicURLParse(n, { url: i, stateOverride: 'query' });
		}
		get hash() {
			return this._url.fragment === null || this._url.fragment === '' ? '' : '#' + this._url.fragment;
		}
		set hash(e) {
			if (e === '') {
				this._url.fragment = null;
				return;
			}
			let i = e[0] === '#' ? e.substring(1) : e;
			(this._url.fragment = ''), g0.basicURLParse(i, { url: this._url, stateOverride: 'fragment' });
		}
		toJSON() {
			return this.href;
		}
	};
});
var q5 = Z((CR, Fl) => {
	'use strict';
	var Kr = x5(),
		Q5 = O5(),
		X5 = j5(),
		p0 = Q5.implSymbol;
	function Au(u) {
		if (!this || this[p0] || !(this instanceof Au))
			throw new TypeError(
				"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.",
			);
		if (arguments.length < 1)
			throw new TypeError(
				"Failed to construct 'URL': 1 argument required, but only " + arguments.length + ' present.',
			);
		let e = [];
		for (let i = 0; i < arguments.length && i < 2; ++i) e[i] = arguments[i];
		(e[0] = Kr.USVString(e[0])), e[1] !== void 0 && (e[1] = Kr.USVString(e[1])), Fl.exports.setup(this, e);
	}
	Au.prototype.toJSON = function () {
		if (!this || !Fl.exports.is(this)) throw new TypeError('Illegal invocation');
		let e = [];
		for (let i = 0; i < arguments.length && i < 0; ++i) e[i] = arguments[i];
		return this[p0].toJSON.apply(this[p0], e);
	};
	Object.defineProperty(Au.prototype, 'href', {
		get() {
			return this[p0].href;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].href = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Au.prototype.toString = function () {
		if (!this || !Fl.exports.is(this)) throw new TypeError('Illegal invocation');
		return this.href;
	};
	Object.defineProperty(Au.prototype, 'origin', {
		get() {
			return this[p0].origin;
		},
		enumerable: !0,
		configurable: !0,
	});
	Object.defineProperty(Au.prototype, 'protocol', {
		get() {
			return this[p0].protocol;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].protocol = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Object.defineProperty(Au.prototype, 'username', {
		get() {
			return this[p0].username;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].username = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Object.defineProperty(Au.prototype, 'password', {
		get() {
			return this[p0].password;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].password = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Object.defineProperty(Au.prototype, 'host', {
		get() {
			return this[p0].host;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].host = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Object.defineProperty(Au.prototype, 'hostname', {
		get() {
			return this[p0].hostname;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].hostname = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Object.defineProperty(Au.prototype, 'port', {
		get() {
			return this[p0].port;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].port = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Object.defineProperty(Au.prototype, 'pathname', {
		get() {
			return this[p0].pathname;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].pathname = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Object.defineProperty(Au.prototype, 'search', {
		get() {
			return this[p0].search;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].search = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Object.defineProperty(Au.prototype, 'hash', {
		get() {
			return this[p0].hash;
		},
		set(u) {
			(u = Kr.USVString(u)), (this[p0].hash = u);
		},
		enumerable: !0,
		configurable: !0,
	});
	Fl.exports = {
		is(u) {
			return !!u && u[p0] instanceof X5.implementation;
		},
		create(u, e) {
			let i = Object.create(Au.prototype);
			return this.setup(i, u, e), i;
		},
		setup(u, e, i) {
			i || (i = {}), (i.wrapper = u), (u[p0] = new X5.implementation(e, i)), (u[p0][Q5.wrapperSymbol] = u);
		},
		interface: Au,
		expose: { Window: { URL: Au }, Worker: { URL: Au } },
	};
});
var Z5 = Z(sa => {
	'use strict';
	sa.URL = q5().interface;
	sa.serializeURL = na().serializeURL;
	sa.serializeURLOrigin = na().serializeURLOrigin;
	sa.basicURLParse = na().basicURLParse;
	sa.setTheUsername = na().setTheUsername;
	sa.setThePassword = na().setThePassword;
	sa.serializeHost = na().serializeHost;
	sa.serializeInteger = na().serializeInteger;
	sa.parseURL = na().parseURL;
});
var o4 = Z((oa, a4) => {
	'use strict';
	Object.defineProperty(oa, '__esModule', { value: !0 });
	function yl(u) {
		return u && typeof u == 'object' && 'default' in u ? u.default : u;
	}
	var es = yl(require('stream')),
		u4 = yl(require('http')),
		gd = yl(require('url')),
		t4 = yl(Z5()),
		x_ = yl(require('https')),
		nh = yl(require('zlib')),
		O_ = es.Readable,
		S1 = Symbol('buffer'),
		cf = Symbol('type'),
		Fp = class {
			constructor() {
				this[cf] = '';
				let e = arguments[0],
					i = arguments[1],
					n = [],
					a = 0;
				if (e) {
					let c = e,
						h = Number(c.length);
					for (let _ = 0; _ < h; _++) {
						let y = c[_],
							W;
						y instanceof Buffer
							? (W = y)
							: ArrayBuffer.isView(y)
							? (W = Buffer.from(y.buffer, y.byteOffset, y.byteLength))
							: y instanceof ArrayBuffer
							? (W = Buffer.from(y))
							: y instanceof Fp
							? (W = y[S1])
							: (W = Buffer.from(typeof y == 'string' ? y : String(y))),
							(a += W.length),
							n.push(W);
					}
				}
				this[S1] = Buffer.concat(n);
				let o = i && i.type !== void 0 && String(i.type).toLowerCase();
				o && !/[^\u0020-\u007E]/.test(o) && (this[cf] = o);
			}
			get size() {
				return this[S1].length;
			}
			get type() {
				return this[cf];
			}
			text() {
				return Promise.resolve(this[S1].toString());
			}
			arrayBuffer() {
				let e = this[S1],
					i = e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
				return Promise.resolve(i);
			}
			stream() {
				let e = new O_();
				return (e._read = function () {}), e.push(this[S1]), e.push(null), e;
			}
			toString() {
				return '[object Blob]';
			}
			slice() {
				let e = this.size,
					i = arguments[0],
					n = arguments[1],
					a,
					o;
				i === void 0 ? (a = 0) : i < 0 ? (a = Math.max(e + i, 0)) : (a = Math.min(i, e)),
					n === void 0 ? (o = e) : n < 0 ? (o = Math.max(e + n, 0)) : (o = Math.min(n, e));
				let c = Math.max(o - a, 0),
					_ = this[S1].slice(a, a + c),
					y = new Fp([], { type: arguments[2] });
				return (y[S1] = _), y;
			}
		};
	Object.defineProperties(Fp.prototype, {
		size: { enumerable: !0 },
		type: { enumerable: !0 },
		slice: { enumerable: !0 },
	});
	Object.defineProperty(Fp.prototype, Symbol.toStringTag, {
		value: 'Blob',
		writable: !1,
		enumerable: !1,
		configurable: !0,
	});
	function Vu(u, e, i) {
		Error.call(this, u),
			(this.message = u),
			(this.type = e),
			i && (this.code = this.errno = i.code),
			Error.captureStackTrace(this, this.constructor);
	}
	Vu.prototype = Object.create(Error.prototype);
	Vu.prototype.constructor = Vu;
	Vu.prototype.name = 'FetchError';
	var lf;
	try {
		lf = require('encoding').convert;
	} catch {}
	var N1 = Symbol('Body internals'),
		J5 = es.PassThrough;
	function Wu(u) {
		var e = this,
			i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
			n = i.size;
		let a = n === void 0 ? 0 : n;
		var o = i.timeout;
		let c = o === void 0 ? 0 : o;
		u == null
			? (u = null)
			: e4(u)
			? (u = Buffer.from(u.toString()))
			: Bl(u) ||
			  Buffer.isBuffer(u) ||
			  (Object.prototype.toString.call(u) === '[object ArrayBuffer]'
					? (u = Buffer.from(u))
					: ArrayBuffer.isView(u)
					? (u = Buffer.from(u.buffer, u.byteOffset, u.byteLength))
					: u instanceof es || (u = Buffer.from(String(u)))),
			(this[N1] = { body: u, disturbed: !1, error: null }),
			(this.size = a),
			(this.timeout = c),
			u instanceof es &&
				u.on('error', function (h) {
					let _ =
						h.name === 'AbortError'
							? h
							: new Vu(`Invalid response body while trying to fetch ${e.url}: ${h.message}`, 'system', h);
					e[N1].error = _;
				});
	}
	Wu.prototype = {
		get body() {
			return this[N1].body;
		},
		get bodyUsed() {
			return this[N1].disturbed;
		},
		arrayBuffer() {
			return Rl.call(this).then(function (u) {
				return u.buffer.slice(u.byteOffset, u.byteOffset + u.byteLength);
			});
		},
		blob() {
			let u = (this.headers && this.headers.get('content-type')) || '';
			return Rl.call(this).then(function (e) {
				return Object.assign(new Fp([], { type: u.toLowerCase() }), { [S1]: e });
			});
		},
		json() {
			var u = this;
			return Rl.call(this).then(function (e) {
				try {
					return JSON.parse(e.toString());
				} catch (i) {
					return Wu.Promise.reject(
						new Vu(`invalid json response body at ${u.url} reason: ${i.message}`, 'invalid-json'),
					);
				}
			});
		},
		text() {
			return Rl.call(this).then(function (u) {
				return u.toString();
			});
		},
		buffer() {
			return Rl.call(this);
		},
		textConverted() {
			var u = this;
			return Rl.call(this).then(function (e) {
				return L_(e, u.headers);
			});
		},
	};
	Object.defineProperties(Wu.prototype, {
		body: { enumerable: !0 },
		bodyUsed: { enumerable: !0 },
		arrayBuffer: { enumerable: !0 },
		blob: { enumerable: !0 },
		json: { enumerable: !0 },
		text: { enumerable: !0 },
	});
	Wu.mixIn = function (u) {
		for (let e of Object.getOwnPropertyNames(Wu.prototype))
			if (!(e in u)) {
				let i = Object.getOwnPropertyDescriptor(Wu.prototype, e);
				Object.defineProperty(u, e, i);
			}
	};
	function Rl() {
		var u = this;
		if (this[N1].disturbed) return Wu.Promise.reject(new TypeError(`body used already for: ${this.url}`));
		if (((this[N1].disturbed = !0), this[N1].error)) return Wu.Promise.reject(this[N1].error);
		let e = this.body;
		if (e === null) return Wu.Promise.resolve(Buffer.alloc(0));
		if ((Bl(e) && (e = e.stream()), Buffer.isBuffer(e))) return Wu.Promise.resolve(e);
		if (!(e instanceof es)) return Wu.Promise.resolve(Buffer.alloc(0));
		let i = [],
			n = 0,
			a = !1;
		return new Wu.Promise(function (o, c) {
			let h;
			u.timeout &&
				(h = setTimeout(function () {
					(a = !0),
						c(
							new Vu(
								`Response timeout while trying to fetch ${u.url} (over ${u.timeout}ms)`,
								'body-timeout',
							),
						);
				}, u.timeout)),
				e.on('error', function (_) {
					_.name === 'AbortError'
						? ((a = !0), c(_))
						: c(new Vu(`Invalid response body while trying to fetch ${u.url}: ${_.message}`, 'system', _));
				}),
				e.on('data', function (_) {
					if (!(a || _ === null)) {
						if (u.size && n + _.length > u.size) {
							(a = !0), c(new Vu(`content size at ${u.url} over limit: ${u.size}`, 'max-size'));
							return;
						}
						(n += _.length), i.push(_);
					}
				}),
				e.on('end', function () {
					if (!a) {
						clearTimeout(h);
						try {
							o(Buffer.concat(i, n));
						} catch (_) {
							c(
								new Vu(
									`Could not create Buffer from response body for ${u.url}: ${_.message}`,
									'system',
									_,
								),
							);
						}
					}
				});
		});
	}
	function L_(u, e) {
		if (typeof lf != 'function')
			throw new Error('The package `encoding` must be installed to use the textConverted() function');
		let i = e.get('content-type'),
			n = 'utf-8',
			a,
			o;
		return (
			i && (a = /charset=([^;]*)/i.exec(i)),
			(o = u.slice(0, 1024).toString()),
			!a && o && (a = /<meta.+?charset=(['"])(.+?)\1/i.exec(o)),
			!a &&
				o &&
				((a = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(o)),
				a ||
					((a = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(o)),
					a && a.pop()),
				a && (a = /charset=(.*)/i.exec(a.pop()))),
			!a && o && (a = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(o)),
			a && ((n = a.pop()), (n === 'gb2312' || n === 'gbk') && (n = 'gb18030')),
			lf(u, 'UTF-8', n).toString()
		);
	}
	function e4(u) {
		return typeof u != 'object' ||
			typeof u.append != 'function' ||
			typeof u.delete != 'function' ||
			typeof u.get != 'function' ||
			typeof u.getAll != 'function' ||
			typeof u.has != 'function' ||
			typeof u.set != 'function'
			? !1
			: u.constructor.name === 'URLSearchParams' ||
					Object.prototype.toString.call(u) === '[object URLSearchParams]' ||
					typeof u.sort == 'function';
	}
	function Bl(u) {
		return (
			typeof u == 'object' &&
			typeof u.arrayBuffer == 'function' &&
			typeof u.type == 'string' &&
			typeof u.stream == 'function' &&
			typeof u.constructor == 'function' &&
			typeof u.constructor.name == 'string' &&
			/^(Blob|File)$/.test(u.constructor.name) &&
			/^(Blob|File)$/.test(u[Symbol.toStringTag])
		);
	}
	function i4(u) {
		let e,
			i,
			n = u.body;
		if (u.bodyUsed) throw new Error('cannot clone body after it is used');
		return (
			n instanceof es &&
				typeof n.getBoundary != 'function' &&
				((e = new J5()), (i = new J5()), n.pipe(e), n.pipe(i), (u[N1].body = e), (n = i)),
			n
		);
	}
	function r4(u) {
		return u === null
			? null
			: typeof u == 'string'
			? 'text/plain;charset=UTF-8'
			: e4(u)
			? 'application/x-www-form-urlencoded;charset=UTF-8'
			: Bl(u)
			? u.type || null
			: Buffer.isBuffer(u) ||
			  Object.prototype.toString.call(u) === '[object ArrayBuffer]' ||
			  ArrayBuffer.isView(u)
			? null
			: typeof u.getBoundary == 'function'
			? `multipart/form-data;boundary=${u.getBoundary()}`
			: u instanceof es
			? null
			: 'text/plain;charset=UTF-8';
	}
	function n4(u) {
		let e = u.body;
		return e === null
			? 0
			: Bl(e)
			? e.size
			: Buffer.isBuffer(e)
			? e.length
			: e &&
			  typeof e.getLengthSync == 'function' &&
			  ((e._lengthRetrievers && e._lengthRetrievers.length == 0) || (e.hasKnownLength && e.hasKnownLength()))
			? e.getLengthSync()
			: null;
	}
	function S_(u, e) {
		let i = e.body;
		i === null ? u.end() : Bl(i) ? i.stream().pipe(u) : Buffer.isBuffer(i) ? (u.write(i), u.end()) : i.pipe(u);
	}
	Wu.Promise = global.Promise;
	var s4 = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,
		df = /[^\t\x20-\x7e\x80-\xff]/;
	function kl(u) {
		if (((u = `${u}`), s4.test(u) || u === '')) throw new TypeError(`${u} is not a legal HTTP header name`);
	}
	function z5(u) {
		if (((u = `${u}`), df.test(u))) throw new TypeError(`${u} is not a legal HTTP header value`);
	}
	function ml(u, e) {
		e = e.toLowerCase();
		for (let i in u) if (i.toLowerCase() === e) return i;
	}
	var k0 = Symbol('map'),
		Ae = class {
			constructor() {
				let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0;
				if (((this[k0] = Object.create(null)), e instanceof Ae)) {
					let i = e.raw(),
						n = Object.keys(i);
					for (let a of n) for (let o of i[a]) this.append(a, o);
					return;
				}
				if (e != null)
					if (typeof e == 'object') {
						let i = e[Symbol.iterator];
						if (i != null) {
							if (typeof i != 'function') throw new TypeError('Header pairs must be iterable');
							let n = [];
							for (let a of e) {
								if (typeof a != 'object' || typeof a[Symbol.iterator] != 'function')
									throw new TypeError('Each header pair must be iterable');
								n.push(Array.from(a));
							}
							for (let a of n) {
								if (a.length !== 2) throw new TypeError('Each header pair must be a name/value tuple');
								this.append(a[0], a[1]);
							}
						} else
							for (let n of Object.keys(e)) {
								let a = e[n];
								this.append(n, a);
							}
					} else throw new TypeError('Provided initializer must be an object');
			}
			get(e) {
				(e = `${e}`), kl(e);
				let i = ml(this[k0], e);
				return i === void 0 ? null : this[k0][i].join(', ');
			}
			forEach(e) {
				let i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0,
					n = ff(this),
					a = 0;
				for (; a < n.length; ) {
					var o = n[a];
					let c = o[0],
						h = o[1];
					e.call(i, h, c, this), (n = ff(this)), a++;
				}
			}
			set(e, i) {
				(e = `${e}`), (i = `${i}`), kl(e), z5(i);
				let n = ml(this[k0], e);
				this[k0][n !== void 0 ? n : e] = [i];
			}
			append(e, i) {
				(e = `${e}`), (i = `${i}`), kl(e), z5(i);
				let n = ml(this[k0], e);
				n !== void 0 ? this[k0][n].push(i) : (this[k0][e] = [i]);
			}
			has(e) {
				return (e = `${e}`), kl(e), ml(this[k0], e) !== void 0;
			}
			delete(e) {
				(e = `${e}`), kl(e);
				let i = ml(this[k0], e);
				i !== void 0 && delete this[k0][i];
			}
			raw() {
				return this[k0];
			}
			keys() {
				return pf(this, 'key');
			}
			values() {
				return pf(this, 'value');
			}
			[Symbol.iterator]() {
				return pf(this, 'key+value');
			}
		};
	Ae.prototype.entries = Ae.prototype[Symbol.iterator];
	Object.defineProperty(Ae.prototype, Symbol.toStringTag, {
		value: 'Headers',
		writable: !1,
		enumerable: !1,
		configurable: !0,
	});
	Object.defineProperties(Ae.prototype, {
		get: { enumerable: !0 },
		forEach: { enumerable: !0 },
		set: { enumerable: !0 },
		append: { enumerable: !0 },
		has: { enumerable: !0 },
		delete: { enumerable: !0 },
		keys: { enumerable: !0 },
		values: { enumerable: !0 },
		entries: { enumerable: !0 },
	});
	function ff(u) {
		let e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 'key+value';
		return Object.keys(u[k0])
			.sort()
			.map(
				e === 'key'
					? function (n) {
							return n.toLowerCase();
					  }
					: e === 'value'
					? function (n) {
							return u[k0][n].join(', ');
					  }
					: function (n) {
							return [n.toLowerCase(), u[k0][n].join(', ')];
					  },
			);
	}
	var _f = Symbol('internal');
	function pf(u, e) {
		let i = Object.create(Tf);
		return (i[_f] = { target: u, kind: e, index: 0 }), i;
	}
	var Tf = Object.setPrototypeOf(
		{
			next() {
				if (!this || Object.getPrototypeOf(this) !== Tf)
					throw new TypeError('Value of `this` is not a HeadersIterator');
				var u = this[_f];
				let e = u.target,
					i = u.kind,
					n = u.index,
					a = ff(e, i),
					o = a.length;
				return n >= o ? { value: void 0, done: !0 } : ((this[_f].index = n + 1), { value: a[n], done: !1 });
			},
		},
		Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())),
	);
	Object.defineProperty(Tf, Symbol.toStringTag, {
		value: 'HeadersIterator',
		writable: !1,
		enumerable: !1,
		configurable: !0,
	});
	function I_(u) {
		let e = Object.assign({ __proto__: null }, u[k0]),
			i = ml(u[k0], 'Host');
		return i !== void 0 && (e[i] = e[i][0]), e;
	}
	function N_(u) {
		let e = new Ae();
		for (let i of Object.keys(u))
			if (!s4.test(i))
				if (Array.isArray(u[i]))
					for (let n of u[i]) df.test(n) || (e[k0][i] === void 0 ? (e[k0][i] = [n]) : e[k0][i].push(n));
				else df.test(u[i]) || (e[k0][i] = [u[i]]);
		return e;
	}
	var Mp = Symbol('Response internals'),
		P_ = u4.STATUS_CODES,
		Ri = class {
			constructor() {
				let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null,
					i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
				Wu.call(this, e, i);
				let n = i.status || 200,
					a = new Ae(i.headers);
				if (e != null && !a.has('Content-Type')) {
					let o = r4(e);
					o && a.append('Content-Type', o);
				}
				this[Mp] = { url: i.url, status: n, statusText: i.statusText || P_[n], headers: a, counter: i.counter };
			}
			get url() {
				return this[Mp].url || '';
			}
			get status() {
				return this[Mp].status;
			}
			get ok() {
				return this[Mp].status >= 200 && this[Mp].status < 300;
			}
			get redirected() {
				return this[Mp].counter > 0;
			}
			get statusText() {
				return this[Mp].statusText;
			}
			get headers() {
				return this[Mp].headers;
			}
			clone() {
				return new Ri(i4(this), {
					url: this.url,
					status: this.status,
					statusText: this.statusText,
					headers: this.headers,
					ok: this.ok,
					redirected: this.redirected,
				});
			}
		};
	Wu.mixIn(Ri.prototype);
	Object.defineProperties(Ri.prototype, {
		url: { enumerable: !0 },
		status: { enumerable: !0 },
		ok: { enumerable: !0 },
		redirected: { enumerable: !0 },
		statusText: { enumerable: !0 },
		headers: { enumerable: !0 },
		clone: { enumerable: !0 },
	});
	Object.defineProperty(Ri.prototype, Symbol.toStringTag, {
		value: 'Response',
		writable: !1,
		enumerable: !1,
		configurable: !0,
	});
	var I1 = Symbol('Request internals'),
		g_ = gd.URL || t4.URL,
		D_ = gd.parse,
		U_ = gd.format;
	function hf(u) {
		return /^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(u) && (u = new g_(u).toString()), D_(u);
	}
	var v_ = 'destroy' in es.Readable.prototype;
	function Pd(u) {
		return typeof u == 'object' && typeof u[I1] == 'object';
	}
	function w_(u) {
		let e = u && typeof u == 'object' && Object.getPrototypeOf(u);
		return !!(e && e.constructor.name === 'AbortSignal');
	}
	var aa = class {
		constructor(e) {
			let i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
				n;
			Pd(e) ? (n = hf(e.url)) : (e && e.href ? (n = hf(e.href)) : (n = hf(`${e}`)), (e = {}));
			let a = i.method || e.method || 'GET';
			if (
				((a = a.toUpperCase()), (i.body != null || (Pd(e) && e.body !== null)) && (a === 'GET' || a === 'HEAD'))
			)
				throw new TypeError('Request with GET/HEAD method cannot have body');
			let o = i.body != null ? i.body : Pd(e) && e.body !== null ? i4(e) : null;
			Wu.call(this, o, { timeout: i.timeout || e.timeout || 0, size: i.size || e.size || 0 });
			let c = new Ae(i.headers || e.headers || {});
			if (o != null && !c.has('Content-Type')) {
				let _ = r4(o);
				_ && c.append('Content-Type', _);
			}
			let h = Pd(e) ? e.signal : null;
			if (('signal' in i && (h = i.signal), h != null && !w_(h)))
				throw new TypeError('Expected signal to be an instanceof AbortSignal');
			(this[I1] = {
				method: a,
				redirect: i.redirect || e.redirect || 'follow',
				headers: c,
				parsedURL: n,
				signal: h,
			}),
				(this.follow = i.follow !== void 0 ? i.follow : e.follow !== void 0 ? e.follow : 20),
				(this.compress = i.compress !== void 0 ? i.compress : e.compress !== void 0 ? e.compress : !0),
				(this.counter = i.counter || e.counter || 0),
				(this.agent = i.agent || e.agent);
		}
		get method() {
			return this[I1].method;
		}
		get url() {
			return U_(this[I1].parsedURL);
		}
		get headers() {
			return this[I1].headers;
		}
		get redirect() {
			return this[I1].redirect;
		}
		get signal() {
			return this[I1].signal;
		}
		clone() {
			return new aa(this);
		}
	};
	Wu.mixIn(aa.prototype);
	Object.defineProperty(aa.prototype, Symbol.toStringTag, {
		value: 'Request',
		writable: !1,
		enumerable: !1,
		configurable: !0,
	});
	Object.defineProperties(aa.prototype, {
		method: { enumerable: !0 },
		url: { enumerable: !0 },
		headers: { enumerable: !0 },
		redirect: { enumerable: !0 },
		clone: { enumerable: !0 },
		signal: { enumerable: !0 },
	});
	function M_(u) {
		let e = u[I1].parsedURL,
			i = new Ae(u[I1].headers);
		if ((i.has('Accept') || i.set('Accept', '*/*'), !e.protocol || !e.hostname))
			throw new TypeError('Only absolute URLs are supported');
		if (!/^https?:$/.test(e.protocol)) throw new TypeError('Only HTTP(S) protocols are supported');
		if (u.signal && u.body instanceof es.Readable && !v_)
			throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
		let n = null;
		if ((u.body == null && /^(POST|PUT)$/i.test(u.method) && (n = '0'), u.body != null)) {
			let o = n4(u);
			typeof o == 'number' && (n = String(o));
		}
		n && i.set('Content-Length', n),
			i.has('User-Agent') || i.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)'),
			u.compress && !i.has('Accept-Encoding') && i.set('Accept-Encoding', 'gzip,deflate');
		let a = u.agent;
		return (
			typeof a == 'function' && (a = a(e)),
			!i.has('Connection') && !a && i.set('Connection', 'close'),
			Object.assign({}, e, { method: u.method, headers: I_(i), agent: a })
		);
	}
	function Vl(u) {
		Error.call(this, u),
			(this.type = 'aborted'),
			(this.message = u),
			Error.captureStackTrace(this, this.constructor);
	}
	Vl.prototype = Object.create(Error.prototype);
	Vl.prototype.constructor = Vl;
	Vl.prototype.name = 'AbortError';
	var Ef = gd.URL || t4.URL,
		$5 = es.PassThrough,
		H_ = function (e, i) {
			let n = new Ef(i).hostname,
				a = new Ef(e).hostname;
			return n === a || (n[n.length - a.length - 1] === '.' && n.endsWith(a));
		};
	function Hp(u, e) {
		if (!Hp.Promise) throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
		return (
			(Wu.Promise = Hp.Promise),
			new Hp.Promise(function (i, n) {
				let a = new aa(u, e),
					o = M_(a),
					c = (o.protocol === 'https:' ? x_ : u4).request,
					h = a.signal,
					_ = null,
					y = function () {
						let u0 = new Vl('The user aborted a request.');
						n(u0),
							a.body && a.body instanceof es.Readable && a.body.destroy(u0),
							!(!_ || !_.body) && _.body.emit('error', u0);
					};
				if (h && h.aborted) {
					y();
					return;
				}
				let W = function () {
						y(), w();
					},
					O = c(o),
					S;
				h && h.addEventListener('abort', W);
				function w() {
					O.abort(), h && h.removeEventListener('abort', W), clearTimeout(S);
				}
				a.timeout &&
					O.once('socket', function (U) {
						S = setTimeout(function () {
							n(new Vu(`network timeout at: ${a.url}`, 'request-timeout')), w();
						}, a.timeout);
					}),
					O.on('error', function (U) {
						n(new Vu(`request to ${a.url} failed, reason: ${U.message}`, 'system', U)), w();
					}),
					O.on('response', function (U) {
						clearTimeout(S);
						let u0 = N_(U.headers);
						if (Hp.isRedirect(U.statusCode)) {
							let t0 = u0.get('Location'),
								a0 = null;
							try {
								a0 = t0 === null ? null : new Ef(t0, a.url).toString();
							} catch {
								if (a.redirect !== 'manual') {
									n(
										new Vu(
											`uri requested responds with an invalid redirect URL: ${t0}`,
											'invalid-redirect',
										),
									),
										w();
									return;
								}
							}
							switch (a.redirect) {
								case 'error':
									n(
										new Vu(
											`uri requested responds with a redirect, redirect mode is set to error: ${a.url}`,
											'no-redirect',
										),
									),
										w();
									return;
								case 'manual':
									if (a0 !== null)
										try {
											u0.set('Location', a0);
										} catch (ia) {
											n(ia);
										}
									break;
								case 'follow':
									if (a0 === null) break;
									if (a.counter >= a.follow) {
										n(new Vu(`maximum redirect reached at: ${a.url}`, 'max-redirect')), w();
										return;
									}
									let au = {
										headers: new Ae(a.headers),
										follow: a.follow,
										counter: a.counter + 1,
										agent: a.agent,
										compress: a.compress,
										method: a.method,
										body: a.body,
										signal: a.signal,
										timeout: a.timeout,
										size: a.size,
									};
									if (!H_(a.url, a0))
										for (let ia of ['authorization', 'www-authenticate', 'cookie', 'cookie2'])
											au.headers.delete(ia);
									if (U.statusCode !== 303 && a.body && n4(a) === null) {
										n(
											new Vu(
												'Cannot follow redirect with body being a readable stream',
												'unsupported-redirect',
											),
										),
											w();
										return;
									}
									(U.statusCode === 303 ||
										((U.statusCode === 301 || U.statusCode === 302) && a.method === 'POST')) &&
										((au.method = 'GET'), (au.body = void 0), au.headers.delete('content-length')),
										i(Hp(new aa(a0, au))),
										w();
									return;
							}
						}
						U.once('end', function () {
							h && h.removeEventListener('abort', W);
						});
						let C0 = U.pipe(new $5()),
							i0 = {
								url: a.url,
								status: U.statusCode,
								statusText: U.statusMessage,
								headers: u0,
								size: a.size,
								timeout: a.timeout,
								counter: a.counter,
							},
							Z0 = u0.get('Content-Encoding');
						if (
							!a.compress ||
							a.method === 'HEAD' ||
							Z0 === null ||
							U.statusCode === 204 ||
							U.statusCode === 304
						) {
							(_ = new Ri(C0, i0)), i(_);
							return;
						}
						let Tt = { flush: nh.Z_SYNC_FLUSH, finishFlush: nh.Z_SYNC_FLUSH };
						if (Z0 == 'gzip' || Z0 == 'x-gzip') {
							(C0 = C0.pipe(nh.createGunzip(Tt))), (_ = new Ri(C0, i0)), i(_);
							return;
						}
						if (Z0 == 'deflate' || Z0 == 'x-deflate') {
							U.pipe(new $5()).once('data', function (a0) {
								(a0[0] & 15) === 8
									? (C0 = C0.pipe(nh.createInflate()))
									: (C0 = C0.pipe(nh.createInflateRaw())),
									(_ = new Ri(C0, i0)),
									i(_);
							});
							return;
						}
						if (Z0 == 'br' && typeof nh.createBrotliDecompress == 'function') {
							(C0 = C0.pipe(nh.createBrotliDecompress())), (_ = new Ri(C0, i0)), i(_);
							return;
						}
						(_ = new Ri(C0, i0)), i(_);
					}),
					S_(O, a);
			})
		);
	}
	Hp.isRedirect = function (u) {
		return u === 301 || u === 302 || u === 303 || u === 307 || u === 308;
	};
	Hp.Promise = global.Promise;
	a4.exports = oa = Hp;
	Object.defineProperty(oa, '__esModule', { value: !0 });
	oa.default = oa;
	oa.Headers = Ae;
	oa.Request = aa;
	oa.Response = Ri;
	oa.FetchError = Vu;
});
var ca = Z((AR, p4) => {
	var c4 = {},
		F_ = u => {
			c4.lodash = u.require('lodash');
		};
	p4.exports = { setDependencies: F_, dependencies: c4 };
});
var l4 = Z((WR, h4) => {
	var k_ = (u, e) => `
import json

databasesNames = [${e}]
databasesTablesNames = {${u}}

def getTableFieldMetadata(dbName, tableName):
    try:
        tableFieldsMetaInfo = spark.table(dbName + "." + tableName).schema.fields
        return {
            "name": tableName,
            "nullableMap": { field.name: field.nullable for field in tableFieldsMetaInfo },
            "indexes": { field.name: field.metadata for field in tableFieldsMetaInfo }
        }
    except:
        return {
            "name": tableName,
            "nullableMap": {},
            "indexes": {}
        }

def getDatabaseMetadata(dbName):
    dbTablesNames = databasesTablesNames.get(dbName, [])
    return [getTableFieldMetadata(dbName, tableName) for tableName in dbTablesNames]

clusterData = { dbName: getDatabaseMetadata(dbName) for dbName in databasesNames }

print(json.dumps(clusterData))
`,
		V_ = u => `
import json

viewNames = spark.sql("show views in ${u}").rdd.map(lambda p: p.viewName).collect()
print(json.dumps(viewNames))
`;
	h4.exports = { getClusterData: k_, getViewNamesCommand: V_ };
});
var Yl = Z((KR, _4) => {
	var { dependencies: B_ } = ca(),
		d4 = u => {
			let e = B_.lodash.partition(u, X_);
			return { views: e[0].map(i => i.slice(0, -4)), tables: e[1] };
		},
		Y_ = (u, e) => {
			let i = e.relative.value;
			return e.active === 'absolute' ? e.absolute.value : Math.round((u / 100) * i);
		},
		G_ = (u, e) =>
			u.reduce(
				(i, n) => {
					let { tables: a } = d4(e[n]),
						o = a.map(c => `"${c}"`).join(', ');
					return { tableNames: [...i.tableNames, `"${n}": [${o}]`], dbNames: u.map(c => `"${c}"`) };
				},
				{ viewNames: [], tableNames: [] },
			),
		j_ = (u, e) => {
			try {
				return Object.keys(u).reduce((i, n) => [...i, { customTagKey: n, customtagvalue: u[n] }], []);
			} catch {
				return e.log('error', u, 'Error converting custom tags'), [];
			}
		},
		X_ = u => u.slice(-4) === ' (v)',
		Q_ = (u = '') => /^create (or replace |global |temporary ){0,1}view/.test(u.toLocaleLowerCase()),
		q_ = (u = '') => /^create (or replace ){0,1}table/.test(u.toLocaleLowerCase()),
		Z_ = (u, e = '') => (f4(u) ? e.replace(/ \(v\)$/, '') : e),
		f4 = (u = '') => parseInt(u.slice(0, u.indexOf('.'))) > 6,
		J_ = (u = {}) =>
			typeof u == 'string'
				? u
				: u.code === 'ENOTFOUND'
				? 'Cannot connect to workspace. Please check the Workspace URL or network connection.'
				: u.message || 'Reverse Engineering error',
		z_ = u => u.replace(/^\(|\)$/g, '');
	_4.exports = {
		prepareNamesForInsertionIntoScalaCode: G_,
		splitTableAndViewNames: d4,
		convertCustomTags: j_,
		getErrorMessage: J_,
		getCount: Y_,
		isViewDdl: Q_,
		isTableDdl: q_,
		cleanEntityName: Z_,
		isSupportGettingListOfViews: f4,
		removeParentheses: z_,
	};
});
var mf = Z((xR, C4) => {
	'use strict';
	var Gl = o4(),
		{ dependencies: kp } = ca(),
		{ getClusterData: $_, getViewNamesCommand: u9 } = l4(),
		{ getCount: t9, prepareNamesForInsertionIntoScalaCode: e9, removeParentheses: i9 } = Yl(),
		is = {},
		r9 = () => {
			is.scala && T4(is.scala.connectionInfo, is.scala.id),
				is.sql && T4(is.sql.connectionInfo, is.sql.id),
				(is = {});
		},
		n9 = async (u, e) => {
			(n => {
				e.log('info', n, 'Applying to instance'), e.progress(n);
			})({
				message: `Applying script: 
 ${u.script}`,
			}),
				await Promise.race([
					pa(u, u.script, 'sql'),
					new Promise((n, a) =>
						setTimeout(() => {
							throw new Error(
								`Timeout exceeded for script
` + u.script,
							);
						}, u.applyToInstanceQueryRequestTimeout || 12e4),
					),
				]);
		},
		s9 = async ({ connectionInfo: u, dbName: e, tableName: i, fields: n, recordSamplingSettings: a }) => {
			try {
				let o = await pa(u, `SELECT COUNT(*) FROM \`${e}\`.\`${i}\``, 'sql'),
					c = kp.lodash.get(o, '[0][0]', 0);
				if (c === 0) return [];
				let h = n.map(O => O.name),
					_ = h.map(O => `\`${O}\``).join(', '),
					y = t9(c, a);
				return (await pa(u, `SELECT ${_} FROM \`${e}\`.\`${i}\` LIMIT ${y}`, 'sql')).map(O =>
					h.reduce((S, w, U) => ({ ...S, [w]: O[U] }), {}),
				);
			} catch {
				return [];
			}
		},
		a9 = async u => {
			let e = u.host + `/api/2.0/clusters/get?cluster_id=${u.clusterId}`,
				i = m4(u);
			return await Gl(e, i)
				.then(n => n.json())
				.then(n => {
					if (n.error_code) throw { message: n.message, code: n.error_code };
					return n;
				});
		},
		o9 = async u => {
			let e = await pa(u, 'SHOW DATABASES', 'sql');
			return kp.lodash.flattenDeep(e);
		},
		c9 = (u, e) => pa(e, `SHOW VIEWS IN \`${u}\``, 'sql'),
		p9 = (u, e) => pa(e, u9(u), 'python'),
		h9 = (u, e) => pa(e, `SHOW TABLES IN \`${u}\``, 'sql'),
		l9 = async (u, e, i, n) => {
			let o = (
					await Promise.all(
						i.map(async h => {
							n.log('info', '', `Start describe database: ${h} `);
							let _ = await pa(u, `DESCRIBE DATABASE EXTENDED \`${h}\``, 'sql');
							n.log('info', '', `Database: ${h} successfully described`);
							let y = _.reduce(
								(W, O) =>
									O[0] === 'Location'
										? { ...W, location: O[1] }
										: O[0] === 'Comment'
										? { ...W, description: O[1] }
										: O[0] === 'Properties'
										? { ...W, dbProperties: R9(O[1]) }
										: W,
								{},
							);
							return { dbName: h, dbProperties: y };
						}),
					)
				).reduce((h, { dbName: _, dbProperties: y }) => ({ ...h, [_]: y }), {}),
				c = await R4(i, e, u, n);
			return i.reduce(
				(h, _) => ({ ...h, [_]: { dbTables: kp.lodash.get(c, _, {}), dbProperties: kp.lodash.get(o, _, {}) } }),
				{},
			);
		},
		R4 = async (u, e, i, n, a = {}) => {
			let { tableNames: o, dbNames: c } = e9(u, e),
				h = $_(o.join(', '), c.join(', '));
			n.log(
				'info',
				'',
				`Start retrieving tables info: 
Databases: ${c.join(', ')} 
Tables: ${o.join(', ')}`,
			);
			let _ = await pa(i, h, 'python');
			n.log('info', '', `Finish retrieving tables info: ${_}`);
			let y = /\*\*\* WARNING: skipped \d* bytes of output \*\*\*$/.test(_);
			try {
				if (!y) {
					let i0 = JSON.parse(_);
					return E4(a, i0);
				}
				let W = '}, {',
					O = _.split(W),
					S = O.slice(0, O.length - 1).join(W),
					w = JSON.parse(S + '}]}'),
					U = E4(a, w),
					{ dbNames: u0, tableNames: C0 } = d9(e, U);
				return R4(u0, C0, i, n, U);
			} catch (W) {
				throw (
					(n.log(
						'error',
						{ error: W },
						`
Databricks response: ${_}
`,
					),
					W)
				);
			}
		},
		d9 = (u, e) =>
			Object.keys(e).reduce(
				(i, n) => {
					let a = e[n].map(h => h.name),
						c = u[n].filter(h => !a.includes(h));
					return c.length ? { dbNames: [...i.dbNames, n], tableNames: { ...i.tableNames, [n]: c } } : i;
				},
				{ dbNames: [], tableNames: {} },
			),
		E4 = (u, e) =>
			kp.lodash.mergeWith(u, e, (i, n) => {
				if (Array.isArray(i) && Array.isArray(n)) return i.concat(n);
			}),
		f9 = async (u, e, i) => {
			try {
				let n = await pa(e, `SHOW CREATE TABLE ${u};`, 'sql');
				return kp.lodash.get(n, '[0][0]', '');
			} catch (n) {
				return i.log('error', n, `Error during retrieve create table DDL statement. Table name: ${u}`), '';
			}
		},
		m4 = u => {
			let e = { Authorization: 'Bearer ' + u.accessToken };
			return { method: 'GET', headers: e };
		},
		Rf = (u, e) => {
			let i = { 'Content-Type': 'application/json', Authorization: 'Bearer ' + u.accessToken };
			return { method: 'POST', headers: i, body: e };
		},
		_9 = (u, e) => {
			if (is[e]) return Promise.resolve(is[e].id);
			let i = u.host + '/api/1.2/contexts/create',
				n = JSON.stringify({ language: e, clusterId: u.clusterId }),
				a = Rf(u, n);
			return Gl(i, a)
				.then(async o => {
					if (o.ok) return o.text();
					let c = await o.json();
					throw {
						message: `${o.statusText}
${JSON.stringify(c)}`,
						code: o.status,
						description: c,
					};
				})
				.then(o => ((o = JSON.parse(o)), (is[e] = { id: o.id, connectionInfo: u }), is[e].id));
		},
		T4 = (u, e) => {
			let i = u.host + '/api/1.2/contexts/destroy',
				n = JSON.stringify({ contextId: e, clusterId: u.clusterId }),
				a = Rf(u, n);
			return Gl(i, a)
				.then(async o => {
					let c = await o.text();
					if (o.ok) return c;
					throw { message: o.statusText, code: o.status, description: n, responseBody: c };
				})
				.then(o => {
					o = JSON.parse(o);
				});
		},
		pa = (u, e, i = 'sql') => {
			let n;
			return _9(u, i).then(a => {
				n = a;
				let o = u.host + '/api/1.2/commands/execute',
					c = JSON.stringify({ language: i, clusterId: u.clusterId, contextId: a, command: e }),
					h = Rf(u, c);
				return Gl(o, h)
					.then(async _ => {
						let y = await _.text();
						if (_.ok) return y;
						throw { message: _.statusText, code: _.status, description: c, responseBody: y };
					})
					.then(_ => {
						_ = JSON.parse(_);
						let y = new URL(u.host + '/api/1.2/commands/status'),
							W = { clusterId: u.clusterId, contextId: n, commandId: _.id };
						y.search = new URLSearchParams(W).toString();
						let O = m4(u);
						return y4(y, O, c);
					});
			});
		},
		y4 = (u, e, i) =>
			Gl(u, e)
				.then(async n => {
					let a = await n.text();
					if (n.ok) return a;
					throw { message: n.statusText, code: n.status, description: i, responseBody: a };
				})
				.then(n => {
					if (((n = JSON.parse(n)), n.status === 'Finished' && n.results !== null)) {
						if (n.results.resultType === 'error')
							throw { message: n.results.data || n.results.cause, code: '', description: i };
						return n.results.data;
					}
					if (n.status === 'Error')
						throw { message: 'Error during receiving command result', code: '', description: i };
					return y4(u, e, i);
				}),
		E9 = u => {
			let e = kp.lodash,
				i = o => !e.isNaN(e.toNumber(o)),
				n = o => e.toLower(o) === 'false' || e.toLower(o) === 'true',
				a = o => {
					switch (e.toLower(o)) {
						case 'true':
							return !0;
						case 'false':
							return !1;
					}
				};
			return i(u) ? e.toNumber(u) : n(u) ? a(u) : `'${u}'`;
		},
		T9 = u => {
			let e = kp.lodash,
				i = [],
				n = 0,
				a = 0;
			return (
				e.range(u.length).forEach(o => {
					let c = u.charAt(o);
					if (c === '(' && n) a++;
					else if (c === '(') n = o + 1;
					else if (c === ')' && a) a--;
					else if (c === ')') {
						let h = u.slice(n, o);
						(i = i.concat(h)), (n = 0), (a = 0);
					}
				}),
				i
			);
		},
		R9 = (u = '') =>
			T9(i9(u)).map(e => {
				let i = e.indexOf(','),
					n = e.slice(0, i),
					a = e.slice(i + 1, e.length);
				return `'${n}'=${E9(a)}`;
			}).join(`,
`);
	C4.exports = {
		fetchClusterProperties: a9,
		fetchApplyToInstance: n9,
		fetchDocuments: s9,
		destroyActiveContext: r9,
		fetchClusterData: l9,
		fetchCreateStatementRequest: f9,
		fetchClusterDatabasesNames: o9,
		fetchDatabaseViewsNames: c9,
		fetchClusterTablesNames: h9,
		fetchDatabaseViewsNamesViaPython: p9,
	};
});
var b4 = K(() => {
	String.prototype.seed = String.prototype.seed || Math.round(Math.random() * Math.pow(2, 32));
	String.prototype.hashCode = function () {
		let u = this.toString(),
			e,
			i,
			n = u.length & 3,
			a = u.length - n,
			o = String.prototype.seed,
			c = 3432918353,
			h = 461845907,
			_ = 0;
		for (; _ < a; )
			(i =
				(u.charCodeAt(_) & 255) |
				((u.charCodeAt(++_) & 255) << 8) |
				((u.charCodeAt(++_) & 255) << 16) |
				((u.charCodeAt(++_) & 255) << 24)),
				++_,
				(i = ((i & 65535) * c + ((((i >>> 16) * c) & 65535) << 16)) & 4294967295),
				(i = (i << 15) | (i >>> 17)),
				(i = ((i & 65535) * h + ((((i >>> 16) * h) & 65535) << 16)) & 4294967295),
				(o ^= i),
				(o = (o << 13) | (o >>> 19)),
				(e = ((o & 65535) * 5 + ((((o >>> 16) * 5) & 65535) << 16)) & 4294967295),
				(o = (e & 65535) + 27492 + ((((e >>> 16) + 58964) & 65535) << 16));
		switch (((i = 0), n)) {
			case 3:
				i ^= (u.charCodeAt(_ + 2) & 255) << 16;
			case 2:
				i ^= (u.charCodeAt(_ + 1) & 255) << 8;
			case 1:
				(i ^= u.charCodeAt(_) & 255),
					(i = ((i & 65535) * c + ((((i >>> 16) * c) & 65535) << 16)) & 4294967295),
					(i = (i << 15) | (i >>> 17)),
					(i = ((i & 65535) * h + ((((i >>> 16) * h) & 65535) << 16)) & 4294967295),
					(o ^= i);
		}
		return (
			(o ^= u.length),
			(o ^= o >>> 16),
			(o = ((o & 65535) * 2246822507 + ((((o >>> 16) * 2246822507) & 65535) << 16)) & 4294967295),
			(o ^= o >>> 13),
			(o = ((o & 65535) * 3266489909 + ((((o >>> 16) * 3266489909) & 65535) << 16)) & 4294967295),
			(o ^= o >>> 16),
			o >>> 0
		);
	};
});
var yf = K(() => {
	String.prototype.codePointAt ||
		(function () {
			'use strict';
			var u = (function () {
				let i;
				try {
					let n = {},
						a = Object.defineProperty;
					i = a(n, n, n) && a;
				} catch {}
				return i;
			})();
			let e = function (i) {
				if (this == null) throw TypeError();
				let n = String(this),
					a = n.length,
					o = i ? Number(i) : 0;
				if ((o !== o && (o = 0), o < 0 || o >= a)) return;
				let c = n.charCodeAt(o),
					h;
				return c >= 55296 && c <= 56319 && a > o + 1 && ((h = n.charCodeAt(o + 1)), h >= 56320 && h <= 57343)
					? (c - 55296) * 1024 + h - 56320 + 65536
					: c;
			};
			u
				? u(String.prototype, 'codePointAt', { value: e, configurable: !0, writable: !0 })
				: (String.prototype.codePointAt = e);
		})();
});
var Cf = K(() => {
	String.fromCodePoint ||
		(function () {
			let u = (function () {
					let a;
					try {
						let o = {},
							c = Object.defineProperty;
						a = c(o, o, o) && c;
					} catch {}
					return a;
				})(),
				e = String.fromCharCode,
				i = Math.floor,
				n = function (a) {
					let c = [],
						h,
						_,
						y = -1,
						W = arguments.length;
					if (!W) return '';
					let O = '';
					for (; ++y < W; ) {
						let S = Number(arguments[y]);
						if (!isFinite(S) || S < 0 || S > 1114111 || i(S) !== S)
							throw RangeError('Invalid code point: ' + S);
						S <= 65535
							? c.push(S)
							: ((S -= 65536), (h = (S >> 10) + 55296), (_ = (S % 1024) + 56320), c.push(h, _)),
							(y + 1 === W || c.length > 16384) && ((O += e.apply(null, c)), (c.length = 0));
					}
					return O;
				};
			u ? u(String, 'fromCodePoint', { value: n, configurable: !0, writable: !0 }) : (String.fromCodePoint = n);
		})();
});
var L,
	cu = K(() => {
		L = class {
			constructor() {
				(this.source = null),
					(this.type = null),
					(this.channel = null),
					(this.start = null),
					(this.stop = null),
					(this.tokenIndex = null),
					(this.line = null),
					(this.column = null),
					(this._text = null);
			}
			getTokenSource() {
				return this.source[0];
			}
			getInputStream() {
				return this.source[1];
			}
			get text() {
				return this._text;
			}
			set text(e) {
				this._text = e;
			}
		};
		L.INVALID_TYPE = 0;
		L.EPSILON = -2;
		L.MIN_USER_TOKEN_TYPE = 1;
		L.EOF = -1;
		L.DEFAULT_CHANNEL = 0;
		L.HIDDEN_CHANNEL = 1;
	});
function rs(u, e) {
	if (!Array.isArray(u) || !Array.isArray(e)) return !1;
	if (u === e) return !0;
	if (u.length !== e.length) return !1;
	for (let i = 0; i < u.length; i++) if (u[i] !== e[i] && (!u[i].equals || !u[i].equals(e[i]))) return !1;
	return !0;
}
var jl = K(() => {});
var d0,
	ns = K(() => {
		d0 = class {
			constructor() {
				(this.count = 0), (this.hash = 0);
			}
			update() {
				for (let e = 0; e < arguments.length; e++) {
					let i = arguments[e];
					if (i != null)
						if (Array.isArray(i)) this.update.apply(this, i);
						else {
							let n = 0;
							switch (typeof i) {
								case 'undefined':
								case 'function':
									continue;
								case 'number':
								case 'boolean':
									n = i;
									break;
								case 'string':
									n = i.hashCode();
									break;
								default:
									i.updateHashCode
										? i.updateHashCode(this)
										: console.log('No updateHashCode for ' + i.toString());
									continue;
							}
							(n = n * 3432918353),
								(n = (n << 15) | (n >>> (32 - 15))),
								(n = n * 461845907),
								(this.count = this.count + 1);
							let a = this.hash ^ n;
							(a = (a << 13) | (a >>> (32 - 13))), (a = a * 5 + 3864292196), (this.hash = a);
						}
				}
			}
			finish() {
				let e = this.hash ^ (this.count * 4);
				return (
					(e = e ^ (e >>> 16)),
					(e = e * 2246822507),
					(e = e ^ (e >>> 13)),
					(e = e * 3266489909),
					(e = e ^ (e >>> 16)),
					e
				);
			}
			static hashStuff() {
				let e = new d0();
				return e.update.apply(e, arguments), e.finish();
			}
		};
	});
function Xl(u) {
	return u ? u.hashCode() : -1;
}
var bf = K(() => {});
function Ql(u, e) {
	return u ? u.equals(e) : u === e;
}
var Af = K(() => {});
function Wf(u) {
	return u === null ? 'null' : u;
}
var A4 = K(() => {});
function We(u) {
	return Array.isArray(u) ? '[' + u.map(Wf).join(', ') + ']' : 'null';
}
var Cl = K(() => {
	A4();
});
var Dd,
	b0,
	Vp = K(() => {
		bf();
		Af();
		Cl();
		(Dd = 'h-'),
			(b0 = class {
				constructor(e, i) {
					(this.data = {}), (this.hashFunction = e || Xl), (this.equalsFunction = i || Ql);
				}
				add(e) {
					let i = Dd + this.hashFunction(e);
					if (i in this.data) {
						let n = this.data[i];
						for (let a = 0; a < n.length; a++) if (this.equalsFunction(e, n[a])) return n[a];
						return n.push(e), e;
					} else return (this.data[i] = [e]), e;
				}
				has(e) {
					return this.get(e) != null;
				}
				get(e) {
					let i = Dd + this.hashFunction(e);
					if (i in this.data) {
						let n = this.data[i];
						for (let a = 0; a < n.length; a++) if (this.equalsFunction(e, n[a])) return n[a];
					}
					return null;
				}
				values() {
					return Object.keys(this.data)
						.filter(e => e.startsWith(Dd))
						.flatMap(e => this.data[e], this);
				}
				toString() {
					return We(this.values());
				}
				get length() {
					return Object.keys(this.data)
						.filter(e => e.startsWith(Dd))
						.map(e => this.data[e].length, this)
						.reduce((e, i) => e + i, 0);
				}
			});
	});
function W4(u) {
	let e = [];
	return (
		u.values().map(function (i) {
			i instanceof Y.PrecedencePredicate && e.push(i);
		}),
		e
	);
}
var Y,
	sh,
	ah,
	oh = K(() => {
		jl();
		ns();
		Vp();
		(Y = class {
			hashCode() {
				let e = new d0();
				return this.updateHashCode(e), e.finish();
			}
			evaluate(e, i) {}
			evalPrecedence(e, i) {
				return this;
			}
			static andContext(e, i) {
				if (e === null || e === Y.NONE) return i;
				if (i === null || i === Y.NONE) return e;
				let n = new sh(e, i);
				return n.opnds.length === 1 ? n.opnds[0] : n;
			}
			static orContext(e, i) {
				if (e === null) return i;
				if (i === null) return e;
				if (e === Y.NONE || i === Y.NONE) return Y.NONE;
				let n = new ah(e, i);
				return n.opnds.length === 1 ? n.opnds[0] : n;
			}
		}),
			(sh = class extends Y {
				constructor(e, i) {
					super();
					let n = new b0();
					e instanceof sh
						? e.opnds.map(function (o) {
								n.add(o);
						  })
						: n.add(e),
						i instanceof sh
							? i.opnds.map(function (o) {
									n.add(o);
							  })
							: n.add(i);
					let a = W4(n);
					if (a.length > 0) {
						let o = null;
						a.map(function (c) {
							(o === null || c.precedence < o.precedence) && (o = c);
						}),
							n.add(o);
					}
					this.opnds = Array.from(n.values());
				}
				equals(e) {
					return this === e ? !0 : e instanceof sh ? rs(this.opnds, e.opnds) : !1;
				}
				updateHashCode(e) {
					e.update(this.opnds, 'AND');
				}
				evaluate(e, i) {
					for (let n = 0; n < this.opnds.length; n++) if (!this.opnds[n].evaluate(e, i)) return !1;
					return !0;
				}
				evalPrecedence(e, i) {
					let n = !1,
						a = [];
					for (let c = 0; c < this.opnds.length; c++) {
						let h = this.opnds[c],
							_ = h.evalPrecedence(e, i);
						if (((n |= _ !== h), _ === null)) return null;
						_ !== Y.NONE && a.push(_);
					}
					if (!n) return this;
					if (a.length === 0) return Y.NONE;
					let o = null;
					return (
						a.map(function (c) {
							o = o === null ? c : Y.andContext(o, c);
						}),
						o
					);
				}
				toString() {
					let e = this.opnds.map(i => i.toString());
					return (e.length > 3 ? e.slice(3) : e).join('&&');
				}
			}),
			(ah = class extends Y {
				constructor(e, i) {
					super();
					let n = new b0();
					e instanceof ah
						? e.opnds.map(function (o) {
								n.add(o);
						  })
						: n.add(e),
						i instanceof ah
							? i.opnds.map(function (o) {
									n.add(o);
							  })
							: n.add(i);
					let a = W4(n);
					if (a.length > 0) {
						let o = a.sort(function (h, _) {
								return h.compareTo(_);
							}),
							c = o[o.length - 1];
						n.add(c);
					}
					this.opnds = Array.from(n.values());
				}
				equals(e) {
					return this === e ? !0 : e instanceof ah ? rs(this.opnds, e.opnds) : !1;
				}
				updateHashCode(e) {
					e.update(this.opnds, 'OR');
				}
				evaluate(e, i) {
					for (let n = 0; n < this.opnds.length; n++) if (this.opnds[n].evaluate(e, i)) return !0;
					return !1;
				}
				evalPrecedence(e, i) {
					let n = !1,
						a = [];
					for (let c = 0; c < this.opnds.length; c++) {
						let h = this.opnds[c],
							_ = h.evalPrecedence(e, i);
						if (((n |= _ !== h), _ === Y.NONE)) return Y.NONE;
						_ !== null && a.push(_);
					}
					if (!n) return this;
					if (a.length === 0) return null;
					let o = null;
					return (
						a.map(function (c) {
							return o === null ? c : Y.orContext(o, c);
						}),
						o
					);
				}
				toString() {
					let e = this.opnds.map(i => i.toString());
					return (e.length > 3 ? e.slice(3) : e).join('||');
				}
			});
	});
function K4(u, e) {
	if (u === null) {
		let i = { state: null, alt: null, context: null, semanticContext: null };
		return e && (i.reachesIntoOuterContext = 0), i;
	} else {
		let i = {};
		return (
			(i.state = u.state || null),
			(i.alt = u.alt === void 0 ? null : u.alt),
			(i.context = u.context || null),
			(i.semanticContext = u.semanticContext || null),
			e &&
				((i.reachesIntoOuterContext = u.reachesIntoOuterContext || 0),
				(i.precedenceFilterSuppressed = u.precedenceFilterSuppressed || !1)),
			i
		);
	}
}
var r0,
	ql = K(() => {
		oh();
		ns();
		r0 = class {
			constructor(e, i) {
				this.checkContext(e, i),
					(e = K4(e)),
					(i = K4(i, !0)),
					(this.state = e.state !== null ? e.state : i.state),
					(this.alt = e.alt !== null ? e.alt : i.alt),
					(this.context = e.context !== null ? e.context : i.context),
					(this.semanticContext =
						e.semanticContext !== null
							? e.semanticContext
							: i.semanticContext !== null
							? i.semanticContext
							: Y.NONE),
					(this.reachesIntoOuterContext = i.reachesIntoOuterContext),
					(this.precedenceFilterSuppressed = i.precedenceFilterSuppressed);
			}
			checkContext(e, i) {
				(e.context === null || e.context === void 0) &&
					(i === null || i.context === null || i.context === void 0) &&
					(this.context = null);
			}
			hashCode() {
				let e = new d0();
				return this.updateHashCode(e), e.finish();
			}
			updateHashCode(e) {
				e.update(this.state.stateNumber, this.alt, this.context, this.semanticContext);
			}
			equals(e) {
				return this === e
					? !0
					: e instanceof r0
					? this.state.stateNumber === e.state.stateNumber &&
					  this.alt === e.alt &&
					  (this.context === null ? e.context === null : this.context.equals(e.context)) &&
					  this.semanticContext.equals(e.semanticContext) &&
					  this.precedenceFilterSuppressed === e.precedenceFilterSuppressed
					: !1;
			}
			hashCodeForConfigSet() {
				let e = new d0();
				return e.update(this.state.stateNumber, this.alt, this.semanticContext), e.finish();
			}
			equalsForConfigSet(e) {
				return this === e
					? !0
					: e instanceof r0
					? this.state.stateNumber === e.state.stateNumber &&
					  this.alt === e.alt &&
					  this.semanticContext.equals(e.semanticContext)
					: !1;
			}
			toString() {
				return (
					'(' +
					this.state +
					',' +
					this.alt +
					(this.context !== null ? ',[' + this.context.toString() + ']' : '') +
					(this.semanticContext !== Y.NONE ? ',' + this.semanticContext.toString() : '') +
					(this.reachesIntoOuterContext > 0 ? ',up=' + this.reachesIntoOuterContext : '') +
					')'
				);
			}
		};
	});
var k,
	ss = K(() => {
		k = class {
			constructor(e, i) {
				(this.start = e), (this.stop = i);
			}
			clone() {
				return new k(this.start, this.stop);
			}
			contains(e) {
				return e >= this.start && e < this.stop;
			}
			toString() {
				return this.start === this.stop - 1
					? this.start.toString()
					: this.start.toString() + '..' + (this.stop - 1).toString();
			}
			get length() {
				return this.stop - this.start;
			}
		};
		k.INVALID_INTERVAL = new k(-1, -2);
	});
var A0,
	P1 = K(() => {
		cu();
		ss();
		A0 = class {
			constructor() {
				(this.intervals = null), (this.readOnly = !1);
			}
			first(e) {
				return this.intervals === null || this.intervals.length === 0
					? L.INVALID_TYPE
					: this.intervals[0].start;
			}
			addOne(e) {
				this.addInterval(new k(e, e + 1));
			}
			addRange(e, i) {
				this.addInterval(new k(e, i + 1));
			}
			addInterval(e) {
				if (this.intervals === null) (this.intervals = []), this.intervals.push(e.clone());
				else {
					for (let i = 0; i < this.intervals.length; i++) {
						let n = this.intervals[i];
						if (e.stop < n.start) {
							this.intervals.splice(i, 0, e);
							return;
						} else if (e.stop === n.start) {
							this.intervals[i] = new k(e.start, n.stop);
							return;
						} else if (e.start <= n.stop) {
							(this.intervals[i] = new k(Math.min(n.start, e.start), Math.max(n.stop, e.stop))),
								this.reduce(i);
							return;
						}
					}
					this.intervals.push(e.clone());
				}
			}
			addSet(e) {
				return e.intervals !== null && e.intervals.forEach(i => this.addInterval(i), this), this;
			}
			reduce(e) {
				if (e < this.intervals.length - 1) {
					let i = this.intervals[e],
						n = this.intervals[e + 1];
					i.stop >= n.stop
						? (this.intervals.splice(e + 1, 1), this.reduce(e))
						: i.stop >= n.start &&
						  ((this.intervals[e] = new k(i.start, n.stop)), this.intervals.splice(e + 1, 1));
				}
			}
			complement(e, i) {
				let n = new A0();
				return (
					n.addInterval(new k(e, i + 1)),
					this.intervals !== null && this.intervals.forEach(a => n.removeRange(a)),
					n
				);
			}
			contains(e) {
				if (this.intervals === null) return !1;
				for (let i = 0; i < this.intervals.length; i++) if (this.intervals[i].contains(e)) return !0;
				return !1;
			}
			removeRange(e) {
				if (e.start === e.stop - 1) this.removeOne(e.start);
				else if (this.intervals !== null) {
					let i = 0;
					for (let n = 0; n < this.intervals.length; n++) {
						let a = this.intervals[i];
						if (e.stop <= a.start) return;
						if (e.start > a.start && e.stop < a.stop) {
							this.intervals[i] = new k(a.start, e.start);
							let o = new k(e.stop, a.stop);
							this.intervals.splice(i, 0, o);
							return;
						} else
							e.start <= a.start && e.stop >= a.stop
								? (this.intervals.splice(i, 1), (i = i - 1))
								: e.start < a.stop
								? (this.intervals[i] = new k(a.start, e.start))
								: e.stop < a.stop && (this.intervals[i] = new k(e.stop, a.stop));
						i += 1;
					}
				}
			}
			removeOne(e) {
				if (this.intervals !== null)
					for (let i = 0; i < this.intervals.length; i++) {
						let n = this.intervals[i];
						if (e < n.start) return;
						if (e === n.start && e === n.stop - 1) {
							this.intervals.splice(i, 1);
							return;
						} else if (e === n.start) {
							this.intervals[i] = new k(n.start + 1, n.stop);
							return;
						} else if (e === n.stop - 1) {
							this.intervals[i] = new k(n.start, n.stop - 1);
							return;
						} else if (e < n.stop - 1) {
							let a = new k(n.start, e);
							(n.start = e + 1), this.intervals.splice(i, 0, a);
							return;
						}
					}
			}
			toString(e, i, n) {
				return (
					(e = e || null),
					(i = i || null),
					(n = n || !1),
					this.intervals === null
						? '{}'
						: e !== null || i !== null
						? this.toTokenString(e, i)
						: n
						? this.toCharString()
						: this.toIndexString()
				);
			}
			toCharString() {
				let e = [];
				for (let i = 0; i < this.intervals.length; i++) {
					let n = this.intervals[i];
					n.stop === n.start + 1
						? n.start === L.EOF
							? e.push('<EOF>')
							: e.push("'" + String.fromCharCode(n.start) + "'")
						: e.push("'" + String.fromCharCode(n.start) + "'..'" + String.fromCharCode(n.stop - 1) + "'");
				}
				return e.length > 1 ? '{' + e.join(', ') + '}' : e[0];
			}
			toIndexString() {
				let e = [];
				for (let i = 0; i < this.intervals.length; i++) {
					let n = this.intervals[i];
					n.stop === n.start + 1
						? n.start === L.EOF
							? e.push('<EOF>')
							: e.push(n.start.toString())
						: e.push(n.start.toString() + '..' + (n.stop - 1).toString());
				}
				return e.length > 1 ? '{' + e.join(', ') + '}' : e[0];
			}
			toTokenString(e, i) {
				let n = [];
				for (let a = 0; a < this.intervals.length; a++) {
					let o = this.intervals[a];
					for (let c = o.start; c < o.stop; c++) n.push(this.elementName(e, i, c));
				}
				return n.length > 1 ? '{' + n.join(', ') + '}' : n[0];
			}
			elementName(e, i, n) {
				return n === L.EOF ? '<EOF>' : n === L.EPSILON ? '<EPSILON>' : e[n] || i[n];
			}
			get length() {
				return this.intervals.map(e => e.length).reduce((e, i) => e + i);
			}
		};
	});
var N,
	Bu = K(() => {
		N = class {
			constructor() {
				(this.atn = null),
					(this.stateNumber = N.INVALID_STATE_NUMBER),
					(this.stateType = null),
					(this.ruleIndex = 0),
					(this.epsilonOnlyTransitions = !1),
					(this.transitions = []),
					(this.nextTokenWithinRule = null);
			}
			toString() {
				return this.stateNumber;
			}
			equals(e) {
				return e instanceof N ? this.stateNumber === e.stateNumber : !1;
			}
			isNonGreedyExitState() {
				return !1;
			}
			addTransition(e, i) {
				i === void 0 && (i = -1),
					this.transitions.length === 0
						? (this.epsilonOnlyTransitions = e.isEpsilon)
						: this.epsilonOnlyTransitions !== e.isEpsilon && (this.epsilonOnlyTransitions = !1),
					i === -1 ? this.transitions.push(e) : this.transitions.splice(i, 1, e);
			}
		};
		N.INVALID_TYPE = 0;
		N.BASIC = 1;
		N.RULE_START = 2;
		N.BLOCK_START = 3;
		N.PLUS_BLOCK_START = 4;
		N.STAR_BLOCK_START = 5;
		N.TOKEN_START = 6;
		N.RULE_STOP = 7;
		N.BLOCK_END = 8;
		N.STAR_LOOP_BACK = 9;
		N.STAR_LOOP_ENTRY = 10;
		N.PLUS_LOOP_BACK = 11;
		N.LOOP_END = 12;
		N.serializationNames = [
			'INVALID',
			'BASIC',
			'RULE_START',
			'BLOCK_START',
			'PLUS_BLOCK_START',
			'STAR_BLOCK_START',
			'TOKEN_START',
			'RULE_STOP',
			'BLOCK_END',
			'STAR_LOOP_BACK',
			'STAR_LOOP_ENTRY',
			'PLUS_LOOP_BACK',
			'LOOP_END',
		];
		N.INVALID_STATE_NUMBER = -1;
	});
var W0,
	bl = K(() => {
		Bu();
		W0 = class extends N {
			constructor() {
				return super(), (this.stateType = N.RULE_STOP), this;
			}
		};
	});
var I,
	Ft = K(() => {
		I = class {
			constructor(e) {
				if (e == null) throw 'target cannot be null.';
				(this.target = e), (this.isEpsilon = !1), (this.label = null);
			}
		};
		I.EPSILON = 1;
		I.RANGE = 2;
		I.RULE = 3;
		I.PREDICATE = 4;
		I.ATOM = 5;
		I.ACTION = 6;
		I.SET = 7;
		I.NOT_SET = 8;
		I.WILDCARD = 9;
		I.PRECEDENCE = 10;
		I.serializationNames = [
			'INVALID',
			'EPSILON',
			'RANGE',
			'RULE',
			'PREDICATE',
			'ATOM',
			'ACTION',
			'SET',
			'NOT_SET',
			'WILDCARD',
			'PRECEDENCE',
		];
		I.serializationTypes = {
			EpsilonTransition: I.EPSILON,
			RangeTransition: I.RANGE,
			RuleTransition: I.RULE,
			PredicateTransition: I.PREDICATE,
			AtomTransition: I.ATOM,
			ActionTransition: I.ACTION,
			SetTransition: I.SET,
			NotSetTransition: I.NOT_SET,
			WildcardTransition: I.WILDCARD,
			PrecedencePredicateTransition: I.PRECEDENCE,
		};
	});
var ha,
	Ud = K(() => {
		Ft();
		ha = class extends I {
			constructor(e, i, n, a) {
				super(e),
					(this.ruleIndex = i),
					(this.precedence = n),
					(this.followState = a),
					(this.serializationType = I.RULE),
					(this.isEpsilon = !0);
			}
			matches(e, i, n) {
				return !1;
			}
		};
	});
var g1,
	vd = K(() => {
		P1();
		cu();
		Ft();
		g1 = class extends I {
			constructor(e, i) {
				super(e),
					(this.serializationType = I.SET),
					i != null ? (this.label = i) : ((this.label = new A0()), this.label.addOne(L.INVALID_TYPE));
			}
			matches(e, i, n) {
				return this.label.contains(e);
			}
			toString() {
				return this.label.toString();
			}
		};
	});
var D1,
	wd = K(() => {
		Ft();
		vd();
		D1 = class extends g1 {
			constructor(e, i) {
				super(e, i), (this.serializationType = I.NOT_SET);
			}
			matches(e, i, n) {
				return e >= i && e <= n && !super.matches(e, i, n);
			}
			toString() {
				return '~' + super.toString();
			}
		};
	});
var ch,
	Kf = K(() => {
		Ft();
		ch = class extends I {
			constructor(e) {
				super(e), (this.serializationType = I.WILDCARD);
			}
			matches(e, i, n) {
				return e >= i && e <= n;
			}
			toString() {
				return '.';
			}
		};
	});
var U1,
	Md = K(() => {
		Ft();
		U1 = class extends I {
			constructor(e) {
				super(e);
			}
		};
	});
var Zl,
	x4 = K(() => {
		Zl = class {};
	});
var Jl,
	O4 = K(() => {
		x4();
		Jl = class extends Zl {};
	});
var ph,
	xf = K(() => {
		O4();
		ph = class extends Jl {};
	});
var la,
	Hd = K(() => {
		xf();
		la = class extends ph {
			getRuleContext() {
				throw new Error('missing interface implementation');
			}
		};
	});
var pu,
	Bp = K(() => {
		xf();
		pu = class extends ph {};
	});
var as,
	zl = K(() => {
		Bp();
		as = class extends pu {};
	});
function Of(u, e) {
	return (
		(u = u.replace(/\t/g, '\\t').replace(/\n/g, '\\n').replace(/\r/g, '\\r')), e && (u = u.replace(/ /g, '\xB7')), u
	);
}
var L4 = K(() => {});
var v1,
	Fd,
	Lf = K(() => {
		cu();
		zl();
		Bp();
		Hd();
		L4();
		(v1 = {
			toStringTree: function (u, e, i) {
				(e = e || null), (i = i || null), i !== null && (e = i.ruleNames);
				let n = v1.getNodeText(u, e);
				n = Of(n, !1);
				let a = u.getChildCount();
				if (a === 0) return n;
				let o = '(' + n + ' ';
				a > 0 && ((n = v1.toStringTree(u.getChild(0), e)), (o = o.concat(n)));
				for (let c = 1; c < a; c++) (n = v1.toStringTree(u.getChild(c), e)), (o = o.concat(' ' + n));
				return (o = o.concat(')')), o;
			},
			getNodeText: function (u, e, i) {
				if (((e = e || null), (i = i || null), i !== null && (e = i.ruleNames), e !== null))
					if (u instanceof la) {
						let o = u.getRuleContext().getAltNumber();
						return o != 0 ? e[u.ruleIndex] + ':' + o : e[u.ruleIndex];
					} else {
						if (u instanceof as) return u.toString();
						if (u instanceof pu && u.symbol !== null) return u.symbol.text;
					}
				let n = u.getPayload();
				return n instanceof L ? n.text : u.getPayload().toString();
			},
			getChildren: function (u) {
				let e = [];
				for (let i = 0; i < u.getChildCount(); i++) e.push(u.getChild(i));
				return e;
			},
			getAncestors: function (u) {
				let e = [];
				for (u = u.getParent(); u !== null; ) (e = [u].concat(e)), (u = u.getParent());
				return e;
			},
			findAllTokenNodes: function (u, e) {
				return v1.findAllNodes(u, e, !0);
			},
			findAllRuleNodes: function (u, e) {
				return v1.findAllNodes(u, e, !1);
			},
			findAllNodes: function (u, e, i) {
				let n = [];
				return v1._findAllNodes(u, e, i, n), n;
			},
			_findAllNodes: function (u, e, i, n) {
				i && u instanceof pu
					? u.symbol.type === e && n.push(u)
					: !i && u instanceof la && u.ruleIndex === e && n.push(u);
				for (let a = 0; a < u.getChildCount(); a++) v1._findAllNodes(u.getChild(a), e, i, n);
			},
			descendants: function (u) {
				let e = [u];
				for (let i = 0; i < u.getChildCount(); i++) e = e.concat(v1.descendants(u.getChild(i)));
				return e;
			},
		}),
			(Fd = v1);
	});
var xr,
	kd = K(() => {
		Hd();
		ss();
		Lf();
		xr = class extends la {
			constructor(e, i) {
				super(), (this.parentCtx = e || null), (this.invokingState = i || -1);
			}
			depth() {
				let e = 0,
					i = this;
				for (; i !== null; ) (i = i.parentCtx), (e += 1);
				return e;
			}
			isEmpty() {
				return this.invokingState === -1;
			}
			getSourceInterval() {
				return k.INVALID_INTERVAL;
			}
			getRuleContext() {
				return this;
			}
			getPayload() {
				return this;
			}
			getText() {
				return this.getChildCount() === 0
					? ''
					: this.children
							.map(function (e) {
								return e.getText();
							})
							.join('');
			}
			getAltNumber() {
				return 0;
			}
			setAltNumber(e) {}
			getChild(e) {
				return null;
			}
			getChildCount() {
				return 0;
			}
			accept(e) {
				return e.visitChildren(this);
			}
			toStringTree(e, i) {
				return Fd.toStringTree(this, e, i);
			}
			toString(e, i) {
				(e = e || null), (i = i || null);
				let n = this,
					a = '[';
				for (; n !== null && n !== i; ) {
					if (e === null) n.isEmpty() || (a += n.invokingState);
					else {
						let o = n.ruleIndex;
						a += o >= 0 && o < e.length ? e[o] : '' + o;
					}
					n.parentCtx !== null && (e !== null || !n.parentCtx.isEmpty()) && (a += ' '), (n = n.parentCtx);
				}
				return (a += ']'), a;
			}
		};
	});
var M,
	w1 = K(() => {
		M = class {
			constructor(e) {
				this.cachedHashCode = e;
			}
			isEmpty() {
				return this === M.EMPTY;
			}
			hasEmptyPath() {
				return this.getReturnState(this.length - 1) === M.EMPTY_RETURN_STATE;
			}
			hashCode() {
				return this.cachedHashCode;
			}
			updateHashCode(e) {
				e.update(this.cachedHashCode);
			}
		};
		M.EMPTY = null;
		M.EMPTY_RETURN_STATE = 2147483647;
		M.globalNodeCount = 1;
		M.id = M.globalNodeCount;
	});
var Ke,
	S4 = K(() => {
		w1();
		jl();
		ns();
		Ke = class extends M {
			constructor(e, i) {
				let n = new d0();
				n.update(e, i);
				let a = n.finish();
				return super(a), (this.parents = e), (this.returnStates = i), this;
			}
			isEmpty() {
				return this.returnStates[0] === M.EMPTY_RETURN_STATE;
			}
			getParent(e) {
				return this.parents[e];
			}
			getReturnState(e) {
				return this.returnStates[e];
			}
			equals(e) {
				return this === e
					? !0
					: e instanceof Ke
					? this.hashCode() !== e.hashCode()
						? !1
						: rs(this.returnStates, e.returnStates) && rs(this.parents, e.parents)
					: !1;
			}
			toString() {
				if (this.isEmpty()) return '[]';
				{
					let e = '[';
					for (let i = 0; i < this.returnStates.length; i++) {
						if ((i > 0 && (e = e + ', '), this.returnStates[i] === M.EMPTY_RETURN_STATE)) {
							e = e + '$';
							continue;
						}
						(e = e + this.returnStates[i]),
							this.parents[i] !== null ? (e = e + ' ' + this.parents[i]) : (e = e + 'null');
					}
					return e + ']';
				}
			}
			get length() {
				return this.returnStates.length;
			}
		};
	});
var K0,
	Al = K(() => {
		w1();
		ns();
		K0 = class extends M {
			constructor(e, i) {
				let n = 0,
					a = new d0();
				e !== null ? a.update(e, i) : a.update(1),
					(n = a.finish()),
					super(n),
					(this.parentCtx = e),
					(this.returnState = i);
			}
			getParent(e) {
				return this.parentCtx;
			}
			getReturnState(e) {
				return this.returnState;
			}
			equals(e) {
				return this === e
					? !0
					: e instanceof K0
					? this.hashCode() !== e.hashCode() || this.returnState !== e.returnState
						? !1
						: this.parentCtx == null
						? e.parentCtx == null
						: this.parentCtx.equals(e.parentCtx)
					: !1;
			}
			toString() {
				let e = this.parentCtx === null ? '' : this.parentCtx.toString();
				return e.length === 0
					? this.returnState === M.EMPTY_RETURN_STATE
						? '$'
						: '' + this.returnState
					: '' + this.returnState + ' ' + e;
			}
			get length() {
				return 1;
			}
			static create(e, i) {
				return i === M.EMPTY_RETURN_STATE && e === null ? M.EMPTY : new K0(e, i);
			}
		};
	});
var hh,
	I4 = K(() => {
		w1();
		Al();
		hh = class extends K0 {
			constructor() {
				super(null, M.EMPTY_RETURN_STATE);
			}
			isEmpty() {
				return !0;
			}
			getParent(e) {
				return null;
			}
			getReturnState(e) {
				return this.returnState;
			}
			equals(e) {
				return this === e;
			}
			toString() {
				return '$';
			}
		};
		M.EMPTY = new hh();
	});
var $l,
	mi,
	Wl = K(() => {
		Af();
		bf();
		($l = 'h-'),
			(mi = class {
				constructor(e, i) {
					(this.data = {}), (this.hashFunction = e || Xl), (this.equalsFunction = i || Ql);
				}
				set(e, i) {
					let n = $l + this.hashFunction(e);
					if (n in this.data) {
						let a = this.data[n];
						for (let o = 0; o < a.length; o++) {
							let c = a[o];
							if (this.equalsFunction(e, c.key)) {
								let h = c.value;
								return (c.value = i), h;
							}
						}
						return a.push({ key: e, value: i }), i;
					} else return (this.data[n] = [{ key: e, value: i }]), i;
				}
				containsKey(e) {
					let i = $l + this.hashFunction(e);
					if (i in this.data) {
						let n = this.data[i];
						for (let a = 0; a < n.length; a++) {
							let o = n[a];
							if (this.equalsFunction(e, o.key)) return !0;
						}
					}
					return !1;
				}
				get(e) {
					let i = $l + this.hashFunction(e);
					if (i in this.data) {
						let n = this.data[i];
						for (let a = 0; a < n.length; a++) {
							let o = n[a];
							if (this.equalsFunction(e, o.key)) return o.value;
						}
					}
					return null;
				}
				entries() {
					return Object.keys(this.data)
						.filter(e => e.startsWith($l))
						.flatMap(e => this.data[e], this);
				}
				getKeys() {
					return this.entries().map(e => e.key);
				}
				getValues() {
					return this.entries().map(e => e.value);
				}
				toString() {
					let e = this.entries().map(i => '{' + i.key + ':' + i.value + '}');
					return '[' + e.join(', ') + ']';
				}
				get length() {
					return Object.keys(this.data)
						.filter(e => e.startsWith($l))
						.map(e => this.data[e].length, this)
						.reduce((e, i) => e + i, 0);
				}
			});
	});
function ud(u, e) {
	if ((e == null && (e = xr.EMPTY), e.parentCtx === null || e === xr.EMPTY)) return M.EMPTY;
	let i = ud(u, e.parentCtx),
		a = u.states[e.invokingState].transitions[0];
	return K0.create(i, a.followState.stateNumber);
}
function Sf(u, e, i) {
	if (u.isEmpty()) return u;
	let n = i.get(u) || null;
	if (n !== null) return n;
	if (((n = e.get(u)), n !== null)) return i.set(u, n), n;
	let a = !1,
		o = [];
	for (let h = 0; h < o.length; h++) {
		let _ = Sf(u.getParent(h), e, i);
		if (a || _ !== u.getParent(h)) {
			if (!a) {
				o = [];
				for (let y = 0; y < u.length; y++) o[y] = u.getParent(y);
				a = !0;
			}
			o[h] = _;
		}
	}
	if (!a) return e.add(u), i.set(u, u), u;
	let c = null;
	return (
		o.length === 0
			? (c = M.EMPTY)
			: o.length === 1
			? (c = K0.create(o[0], u.getReturnState(0)))
			: (c = new Ke(o, u.returnStates)),
		e.add(c),
		i.set(c, c),
		i.set(u, c),
		c
	);
}
function Vd(u, e, i, n) {
	if (u === e) return u;
	if (u instanceof K0 && e instanceof K0) return C9(u, e, i, n);
	if (i) {
		if (u instanceof hh) return u;
		if (e instanceof hh) return e;
	}
	return (
		u instanceof K0 && (u = new Ke([u.getParent()], [u.returnState])),
		e instanceof K0 && (e = new Ke([e.getParent()], [e.returnState])),
		m9(u, e, i, n)
	);
}
function m9(u, e, i, n) {
	if (n !== null) {
		let W = n.get(u, e);
		if (W !== null || ((W = n.get(e, u)), W !== null)) return W;
	}
	let a = 0,
		o = 0,
		c = 0,
		h = [],
		_ = [];
	for (; a < u.returnStates.length && o < e.returnStates.length; ) {
		let W = u.parents[a],
			O = e.parents[o];
		if (u.returnStates[a] === e.returnStates[o]) {
			let S = u.returnStates[a];
			(S === M.EMPTY_RETURN_STATE && W === null && O === null) || (W !== null && O !== null && W === O)
				? ((_[c] = W), (h[c] = S))
				: ((_[c] = Vd(W, O, i, n)), (h[c] = S)),
				(a += 1),
				(o += 1);
		} else
			u.returnStates[a] < e.returnStates[o]
				? ((_[c] = W), (h[c] = u.returnStates[a]), (a += 1))
				: ((_[c] = O), (h[c] = e.returnStates[o]), (o += 1));
		c += 1;
	}
	if (a < u.returnStates.length)
		for (let W = a; W < u.returnStates.length; W++) (_[c] = u.parents[W]), (h[c] = u.returnStates[W]), (c += 1);
	else for (let W = o; W < e.returnStates.length; W++) (_[c] = e.parents[W]), (h[c] = e.returnStates[W]), (c += 1);
	if (c < _.length) {
		if (c === 1) {
			let W = K0.create(_[0], h[0]);
			return n !== null && n.set(u, e, W), W;
		}
		(_ = _.slice(0, c)), (h = h.slice(0, c));
	}
	let y = new Ke(_, h);
	return y === u
		? (n !== null && n.set(u, e, u), u)
		: y === e
		? (n !== null && n.set(u, e, e), e)
		: (y9(_), n !== null && n.set(u, e, y), y);
}
function y9(u) {
	let e = new mi();
	for (let i = 0; i < u.length; i++) {
		let n = u[i];
		e.containsKey(n) || e.set(n, n);
	}
	for (let i = 0; i < u.length; i++) u[i] = e.get(u[i]);
}
function C9(u, e, i, n) {
	if (n !== null) {
		let o = n.get(u, e);
		if (o !== null || ((o = n.get(e, u)), o !== null)) return o;
	}
	let a = b9(u, e, i);
	if (a !== null) return n !== null && n.set(u, e, a), a;
	if (u.returnState === e.returnState) {
		let o = Vd(u.parentCtx, e.parentCtx, i, n);
		if (o === u.parentCtx) return u;
		if (o === e.parentCtx) return e;
		let c = K0.create(o, u.returnState);
		return n !== null && n.set(u, e, c), c;
	} else {
		let o = null;
		if (((u === e || (u.parentCtx !== null && u.parentCtx === e.parentCtx)) && (o = u.parentCtx), o !== null)) {
			let y = [u.returnState, e.returnState];
			u.returnState > e.returnState && ((y[0] = e.returnState), (y[1] = u.returnState));
			let W = [o, o],
				O = new Ke(W, y);
			return n !== null && n.set(u, e, O), O;
		}
		let c = [u.returnState, e.returnState],
			h = [u.parentCtx, e.parentCtx];
		u.returnState > e.returnState &&
			((c[0] = e.returnState), (c[1] = u.returnState), (h = [e.parentCtx, u.parentCtx]));
		let _ = new Ke(h, c);
		return n !== null && n.set(u, e, _), _;
	}
}
function b9(u, e, i) {
	if (i) {
		if (u === M.EMPTY) return M.EMPTY;
		if (e === M.EMPTY) return M.EMPTY;
	} else {
		if (u === M.EMPTY && e === M.EMPTY) return M.EMPTY;
		if (u === M.EMPTY) {
			let n = [e.returnState, M.EMPTY_RETURN_STATE],
				a = [e.parentCtx, null];
			return new Ke(a, n);
		} else if (e === M.EMPTY) {
			let n = [u.returnState, M.EMPTY_RETURN_STATE],
				a = [u.parentCtx, null];
			return new Ke(a, n);
		}
	}
	return null;
}
var td = K(() => {
	kd();
	w1();
	S4();
	Al();
	I4();
	Wl();
});
var Yu,
	ed = K(() => {
		ns();
		jl();
		Yu = class {
			constructor() {
				this.data = [];
			}
			add(e) {
				this.data[e] = !0;
			}
			or(e) {
				Object.keys(e.data).map(i => this.add(i), this);
			}
			remove(e) {
				delete this.data[e];
			}
			has(e) {
				return this.data[e] === !0;
			}
			values() {
				return Object.keys(this.data);
			}
			minValue() {
				return Math.min.apply(null, this.values());
			}
			hashCode() {
				return d0.hashStuff(this.values());
			}
			equals(e) {
				return e instanceof Yu && rs(this.data, e.data);
			}
			toString() {
				return '{' + this.values().join(', ') + '}';
			}
			get length() {
				return this.values().length;
			}
		};
	});
var os,
	If = K(() => {
		cu();
		ql();
		P1();
		bl();
		Ud();
		wd();
		Kf();
		Md();
		td();
		w1();
		Al();
		ed();
		Vp();
		os = class {
			constructor(e) {
				this.atn = e;
			}
			getDecisionLookahead(e) {
				if (e === null) return null;
				let i = e.transitions.length,
					n = [];
				for (let a = 0; a < i; a++) {
					n[a] = new A0();
					let o = new b0(),
						c = !1;
					this._LOOK(e.transition(a).target, null, M.EMPTY, n[a], o, new Yu(), c, !1),
						(n[a].length === 0 || n[a].contains(os.HIT_PRED)) && (n[a] = null);
				}
				return n;
			}
			LOOK(e, i, n) {
				let a = new A0(),
					o = !0;
				n = n || null;
				let c = n !== null ? ud(e.atn, n) : null;
				return this._LOOK(e, i, c, a, new b0(), new Yu(), o, !0), a;
			}
			_LOOK(e, i, n, a, o, c, h, _) {
				let y = new r0({ state: e, alt: 0, context: n }, null);
				if (!o.has(y)) {
					if ((o.add(y), e === i)) {
						if (n === null) {
							a.addOne(L.EPSILON);
							return;
						} else if (n.isEmpty() && _) {
							a.addOne(L.EOF);
							return;
						}
					}
					if (e instanceof W0) {
						if (n === null) {
							a.addOne(L.EPSILON);
							return;
						} else if (n.isEmpty() && _) {
							a.addOne(L.EOF);
							return;
						}
						if (n !== M.EMPTY) {
							let W = c.has(e.ruleIndex);
							try {
								c.remove(e.ruleIndex);
								for (let O = 0; O < n.length; O++) {
									let S = this.atn.states[n.getReturnState(O)];
									this._LOOK(S, i, n.getParent(O), a, o, c, h, _);
								}
							} finally {
								W && c.add(e.ruleIndex);
							}
							return;
						}
					}
					for (let W = 0; W < e.transitions.length; W++) {
						let O = e.transitions[W];
						if (O.constructor === ha) {
							if (c.has(O.target.ruleIndex)) continue;
							let S = K0.create(n, O.followState.stateNumber);
							try {
								c.add(O.target.ruleIndex), this._LOOK(O.target, i, S, a, o, c, h, _);
							} finally {
								c.remove(O.target.ruleIndex);
							}
						} else if (O instanceof U1)
							h ? this._LOOK(O.target, i, n, a, o, c, h, _) : a.addOne(os.HIT_PRED);
						else if (O.isEpsilon) this._LOOK(O.target, i, n, a, o, c, h, _);
						else if (O.constructor === ch) a.addRange(L.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType);
						else {
							let S = O.label;
							S !== null &&
								(O instanceof D1 && (S = S.complement(L.MIN_USER_TOKEN_TYPE, this.atn.maxTokenType)),
								a.addSet(S));
						}
					}
				}
			}
		};
		os.HIT_PRED = L.INVALID_TYPE;
	});
var z,
	lh = K(() => {
		If();
		P1();
		cu();
		z = class {
			constructor(e, i) {
				(this.grammarType = e),
					(this.maxTokenType = i),
					(this.states = []),
					(this.decisionToState = []),
					(this.ruleToStartState = []),
					(this.ruleToStopState = null),
					(this.modeNameToStartState = {}),
					(this.ruleToTokenType = null),
					(this.lexerActions = null),
					(this.modeToStartState = []);
			}
			nextTokensInContext(e, i) {
				return new os(this).LOOK(e, null, i);
			}
			nextTokensNoContext(e) {
				return (
					e.nextTokenWithinRule !== null ||
						((e.nextTokenWithinRule = this.nextTokensInContext(e, null)),
						(e.nextTokenWithinRule.readOnly = !0)),
					e.nextTokenWithinRule
				);
			}
			nextTokens(e, i) {
				return i === void 0 ? this.nextTokensNoContext(e) : this.nextTokensInContext(e, i);
			}
			addState(e) {
				e !== null && ((e.atn = this), (e.stateNumber = this.states.length)), this.states.push(e);
			}
			removeState(e) {
				this.states[e.stateNumber] = null;
			}
			defineDecisionState(e) {
				return this.decisionToState.push(e), (e.decision = this.decisionToState.length - 1), e.decision;
			}
			getDecisionState(e) {
				return this.decisionToState.length === 0 ? null : this.decisionToState[e];
			}
			getExpectedTokens(e, i) {
				if (e < 0 || e >= this.states.length) throw 'Invalid state number.';
				let n = this.states[e],
					a = this.nextTokens(n);
				if (!a.contains(L.EPSILON)) return a;
				let o = new A0();
				for (
					o.addSet(a), o.removeOne(L.EPSILON);
					i !== null && i.invokingState >= 0 && a.contains(L.EPSILON);

				) {
					let h = this.states[i.invokingState].transitions[0];
					(a = this.nextTokens(h.followState)), o.addSet(a), o.removeOne(L.EPSILON), (i = i.parentCtx);
				}
				return a.contains(L.EPSILON) && o.addOne(L.EOF), o;
			}
		};
		z.INVALID_ALT_NUMBER = 0;
	});
var id,
	N4 = K(() => {
		id = { LEXER: 0, PARSER: 1 };
	});
var Kl,
	P4 = K(() => {
		Bu();
		Kl = class extends N {
			constructor() {
				super(), (this.stateType = N.BASIC);
			}
		};
	});
var kt,
	dh = K(() => {
		Bu();
		kt = class extends N {
			constructor() {
				return super(), (this.decision = -1), (this.nonGreedy = !1), this;
			}
		};
	});
var yi,
	rd = K(() => {
		dh();
		yi = class extends kt {
			constructor() {
				return super(), (this.endState = null), this;
			}
		};
	});
var fh,
	g4 = K(() => {
		Bu();
		fh = class extends N {
			constructor() {
				return super(), (this.stateType = N.BLOCK_END), (this.startState = null), this;
			}
		};
	});
var da,
	D4 = K(() => {
		Bu();
		da = class extends N {
			constructor() {
				return super(), (this.stateType = N.LOOP_END), (this.loopBackState = null), this;
			}
		};
	});
var xl,
	U4 = K(() => {
		Bu();
		xl = class extends N {
			constructor() {
				return (
					super(),
					(this.stateType = N.RULE_START),
					(this.stopState = null),
					(this.isPrecedenceRule = !1),
					this
				);
			}
		};
	});
var nd,
	v4 = K(() => {
		dh();
		Bu();
		nd = class extends kt {
			constructor() {
				return super(), (this.stateType = N.TOKEN_START), this;
			}
		};
	});
var Ol,
	w4 = K(() => {
		dh();
		Bu();
		Ol = class extends kt {
			constructor() {
				return super(), (this.stateType = N.PLUS_LOOP_BACK), this;
			}
		};
	});
var _h,
	M4 = K(() => {
		Bu();
		_h = class extends N {
			constructor() {
				return super(), (this.stateType = N.STAR_LOOP_BACK), this;
			}
		};
	});
var Or,
	Nf = K(() => {
		dh();
		Bu();
		Or = class extends kt {
			constructor() {
				return (
					super(),
					(this.stateType = N.STAR_LOOP_ENTRY),
					(this.loopBackState = null),
					(this.isPrecedenceDecision = null),
					this
				);
			}
		};
	});
var Eh,
	H4 = K(() => {
		rd();
		Bu();
		Eh = class extends yi {
			constructor() {
				return super(), (this.stateType = N.PLUS_BLOCK_START), (this.loopBackState = null), this;
			}
		};
	});
var Th,
	F4 = K(() => {
		rd();
		Bu();
		Th = class extends yi {
			constructor() {
				return super(), (this.stateType = N.STAR_BLOCK_START), this;
			}
		};
	});
var Ll,
	k4 = K(() => {
		Bu();
		rd();
		Ll = class extends yi {
			constructor() {
				return super(), (this.stateType = N.BLOCK_START), this;
			}
		};
	});
var M1,
	Pf = K(() => {
		P1();
		Ft();
		M1 = class extends I {
			constructor(e, i) {
				super(e), (this.label_ = i), (this.label = this.makeLabel()), (this.serializationType = I.ATOM);
			}
			makeLabel() {
				let e = new A0();
				return e.addOne(this.label_), e;
			}
			matches(e, i, n) {
				return this.label_ === e;
			}
			toString() {
				return this.label_;
			}
		};
	});
var Sl,
	V4 = K(() => {
		P1();
		Ft();
		Sl = class extends I {
			constructor(e, i, n) {
				super(e),
					(this.serializationType = I.RANGE),
					(this.start = i),
					(this.stop = n),
					(this.label = this.makeLabel());
			}
			makeLabel() {
				let e = new A0();
				return e.addRange(this.start, this.stop), e;
			}
			matches(e, i, n) {
				return e >= this.start && e <= this.stop;
			}
			toString() {
				return "'" + String.fromCharCode(this.start) + "'..'" + String.fromCharCode(this.stop) + "'";
			}
		};
	});
var Rh,
	gf = K(() => {
		Ft();
		Rh = class extends I {
			constructor(e, i, n, a) {
				super(e),
					(this.serializationType = I.ACTION),
					(this.ruleIndex = i),
					(this.actionIndex = n === void 0 ? -1 : n),
					(this.isCtxDependent = a === void 0 ? !1 : a),
					(this.isEpsilon = !0);
			}
			matches(e, i, n) {
				return !1;
			}
			toString() {
				return 'action_' + this.ruleIndex + ':' + this.actionIndex;
			}
		};
	});
var H1,
	B4 = K(() => {
		Ft();
		H1 = class extends I {
			constructor(e, i) {
				super(e),
					(this.serializationType = I.EPSILON),
					(this.isEpsilon = !0),
					(this.outermostPrecedenceReturn = i);
			}
			matches(e, i, n) {
				return !1;
			}
			toString() {
				return 'epsilon';
			}
		};
	});
var Yp,
	Y4 = K(() => {
		oh();
		Yp = class extends Y {
			constructor(e, i, n) {
				super(),
					(this.ruleIndex = e === void 0 ? -1 : e),
					(this.predIndex = i === void 0 ? -1 : i),
					(this.isCtxDependent = n === void 0 ? !1 : n);
			}
			evaluate(e, i) {
				let n = this.isCtxDependent ? i : null;
				return e.sempred(n, this.ruleIndex, this.predIndex);
			}
			updateHashCode(e) {
				e.update(this.ruleIndex, this.predIndex, this.isCtxDependent);
			}
			equals(e) {
				return this === e
					? !0
					: e instanceof Yp
					? this.ruleIndex === e.ruleIndex &&
					  this.predIndex === e.predIndex &&
					  this.isCtxDependent === e.isCtxDependent
					: !1;
			}
			toString() {
				return '{' + this.ruleIndex + ':' + this.predIndex + '}?';
			}
		};
		Y.NONE = new Yp();
	});
var mh,
	Df = K(() => {
		Y4();
		Ft();
		Md();
		mh = class extends U1 {
			constructor(e, i, n, a) {
				super(e),
					(this.serializationType = I.PREDICATE),
					(this.ruleIndex = i),
					(this.predIndex = n),
					(this.isCtxDependent = a),
					(this.isEpsilon = !0);
			}
			matches(e, i, n) {
				return !1;
			}
			getPredicate() {
				return new Yp(this.ruleIndex, this.predIndex, this.isCtxDependent);
			}
			toString() {
				return 'pred_' + this.ruleIndex + ':' + this.predIndex;
			}
		};
	});
var Gp,
	G4 = K(() => {
		oh();
		Gp = class extends Y {
			constructor(e) {
				super(), (this.precedence = e === void 0 ? 0 : e);
			}
			evaluate(e, i) {
				return e.precpred(i, this.precedence);
			}
			evalPrecedence(e, i) {
				return e.precpred(i, this.precedence) ? Y.NONE : null;
			}
			compareTo(e) {
				return this.precedence - e.precedence;
			}
			updateHashCode(e) {
				e.update(this.precedence);
			}
			equals(e) {
				return this === e ? !0 : e instanceof Gp ? this.precedence === e.precedence : !1;
			}
			toString() {
				return '{' + this.precedence + '>=prec}?';
			}
		};
		Y.PrecedencePredicate = Gp;
	});
var sd,
	j4 = K(() => {
		G4();
		Ft();
		Md();
		sd = class extends U1 {
			constructor(e, i) {
				super(e), (this.serializationType = I.PRECEDENCE), (this.precedence = i), (this.isEpsilon = !0);
			}
			matches(e, i, n) {
				return !1;
			}
			getPredicate() {
				return new Gp(this.precedence);
			}
			toString() {
				return this.precedence + ' >= _p';
			}
		};
	});
var fa,
	Uf = K(() => {
		fa = class {
			constructor(e) {
				e === void 0 && (e = null),
					(this.readOnly = !1),
					(this.verifyATN = e === null ? !0 : e.verifyATN),
					(this.generateRuleBypassTransitions = e === null ? !1 : e.generateRuleBypassTransitions);
			}
		};
		fa.defaultOptions = new fa();
		fa.defaultOptions.readOnly = !0;
	});
var _0,
	_a = K(() => {
		_0 = { CHANNEL: 0, CUSTOM: 1, MODE: 2, MORE: 3, POP_MODE: 4, PUSH_MODE: 5, SKIP: 6, TYPE: 7 };
	});
var V0,
	Ea = K(() => {
		ns();
		V0 = class {
			constructor(e) {
				(this.actionType = e), (this.isPositionDependent = !1);
			}
			hashCode() {
				let e = new d0();
				return this.updateHashCode(e), e.finish();
			}
			updateHashCode(e) {
				e.update(this.actionType);
			}
			equals(e) {
				return this === e;
			}
		};
	});
var yh,
	X4 = K(() => {
		_a();
		Ea();
		yh = class extends V0 {
			constructor() {
				super(_0.SKIP);
			}
			execute(e) {
				e.skip();
			}
			toString() {
				return 'skip';
			}
		};
		yh.INSTANCE = new yh();
	});
var Ch,
	Q4 = K(() => {
		_a();
		Ea();
		Ch = class extends V0 {
			constructor(e) {
				super(_0.CHANNEL), (this.channel = e);
			}
			execute(e) {
				e._channel = this.channel;
			}
			updateHashCode(e) {
				e.update(this.actionType, this.channel);
			}
			equals(e) {
				return this === e ? !0 : e instanceof Ch ? this.channel === e.channel : !1;
			}
			toString() {
				return 'channel(' + this.channel + ')';
			}
		};
	});
var bh,
	q4 = K(() => {
		_a();
		Ea();
		bh = class extends V0 {
			constructor(e, i) {
				super(_0.CUSTOM), (this.ruleIndex = e), (this.actionIndex = i), (this.isPositionDependent = !0);
			}
			execute(e) {
				e.action(null, this.ruleIndex, this.actionIndex);
			}
			updateHashCode(e) {
				e.update(this.actionType, this.ruleIndex, this.actionIndex);
			}
			equals(e) {
				return this === e
					? !0
					: e instanceof bh
					? this.ruleIndex === e.ruleIndex && this.actionIndex === e.actionIndex
					: !1;
			}
		};
	});
var Ah,
	Z4 = K(() => {
		_a();
		Ea();
		Ah = class extends V0 {
			constructor() {
				super(_0.MORE);
			}
			execute(e) {
				e.more();
			}
			toString() {
				return 'more';
			}
		};
		Ah.INSTANCE = new Ah();
	});
var Wh,
	J4 = K(() => {
		_a();
		Ea();
		Wh = class extends V0 {
			constructor(e) {
				super(_0.TYPE), (this.type = e);
			}
			execute(e) {
				e.type = this.type;
			}
			updateHashCode(e) {
				e.update(this.actionType, this.type);
			}
			equals(e) {
				return this === e ? !0 : e instanceof Wh ? this.type === e.type : !1;
			}
			toString() {
				return 'type(' + this.type + ')';
			}
		};
	});
var Kh,
	z4 = K(() => {
		_a();
		Ea();
		Kh = class extends V0 {
			constructor(e) {
				super(_0.PUSH_MODE), (this.mode = e);
			}
			execute(e) {
				e.pushMode(this.mode);
			}
			updateHashCode(e) {
				e.update(this.actionType, this.mode);
			}
			equals(e) {
				return this === e ? !0 : e instanceof Kh ? this.mode === e.mode : !1;
			}
			toString() {
				return 'pushMode(' + this.mode + ')';
			}
		};
	});
var xh,
	$4 = K(() => {
		_a();
		Ea();
		xh = class extends V0 {
			constructor() {
				super(_0.POP_MODE);
			}
			execute(e) {
				e.popMode();
			}
			toString() {
				return 'popMode';
			}
		};
		xh.INSTANCE = new xh();
	});
var Oh,
	u7 = K(() => {
		_a();
		Ea();
		Oh = class extends V0 {
			constructor(e) {
				super(_0.MODE), (this.mode = e);
			}
			execute(e) {
				e.mode(this.mode);
			}
			updateHashCode(e) {
				e.update(this.actionType, this.mode);
			}
			equals(e) {
				return this === e ? !0 : e instanceof Oh ? this.mode === e.mode : !1;
			}
			toString() {
				return 'mode(' + this.mode + ')';
			}
		};
	});
function Bd(u, e) {
	let i = [];
	return (
		(i[u - 1] = e),
		i.map(function (n) {
			return e;
		})
	);
}
var vf,
	Lh,
	wf = K(() => {
		cu();
		lh();
		N4();
		Bu();
		P4();
		dh();
		rd();
		g4();
		D4();
		U4();
		bl();
		v4();
		w4();
		M4();
		Nf();
		H4();
		F4();
		k4();
		Ft();
		Pf();
		vd();
		wd();
		Ud();
		V4();
		gf();
		B4();
		Kf();
		Df();
		j4();
		P1();
		Uf();
		_a();
		X4();
		Q4();
		q4();
		Z4();
		J4();
		z4();
		$4();
		u7();
		vf = 4;
		Lh = class {
			constructor(e) {
				e == null && (e = fa.defaultOptions),
					(this.deserializationOptions = e),
					(this.stateFactories = null),
					(this.actionFactories = null);
			}
			deserialize(e) {
				let i = this.reset(e);
				this.checkVersion(i), i && this.skipUUID();
				let n = this.readATN();
				this.readStates(n, i), this.readRules(n, i), this.readModes(n);
				let a = [];
				return (
					this.readSets(n, a, this.readInt.bind(this)),
					i && this.readSets(n, a, this.readInt32.bind(this)),
					this.readEdges(n, a),
					this.readDecisions(n),
					this.readLexerActions(n, i),
					this.markPrecedenceDecisions(n),
					this.verifyATN(n),
					this.deserializationOptions.generateRuleBypassTransitions &&
						n.grammarType === id.PARSER &&
						(this.generateRuleBypassTransitions(n), this.verifyATN(n)),
					n
				);
			}
			reset(e) {
				if ((e.charCodeAt ? e.charCodeAt(0) : e[0]) === vf - 1) {
					let n = function (o) {
							let c = o.charCodeAt(0);
							return c > 1 ? c - 2 : c + 65534;
						},
						a = e.split('').map(n);
					return (a[0] = e.charCodeAt(0)), (this.data = a), (this.pos = 0), !0;
				} else return (this.data = e), (this.pos = 0), !1;
			}
			skipUUID() {
				let e = 0;
				for (; e++ < 8; ) this.readInt();
			}
			checkVersion(e) {
				let i = this.readInt();
				if (!e && i !== vf) throw 'Could not deserialize ATN with version ' + i + ' (expected ' + vf + ').';
			}
			readATN() {
				let e = this.readInt(),
					i = this.readInt();
				return new z(e, i);
			}
			readStates(e, i) {
				let n,
					a,
					o,
					c = [],
					h = [],
					_ = this.readInt();
				for (let O = 0; O < _; O++) {
					let S = this.readInt();
					if (S === N.INVALID_TYPE) {
						e.addState(null);
						continue;
					}
					let w = this.readInt();
					i && w === 65535 && (w = -1);
					let U = this.stateFactory(S, w);
					if (S === N.LOOP_END) {
						let u0 = this.readInt();
						c.push([U, u0]);
					} else if (U instanceof yi) {
						let u0 = this.readInt();
						h.push([U, u0]);
					}
					e.addState(U);
				}
				for (n = 0; n < c.length; n++) (a = c[n]), (a[0].loopBackState = e.states[a[1]]);
				for (n = 0; n < h.length; n++) (a = h[n]), (a[0].endState = e.states[a[1]]);
				let y = this.readInt();
				for (n = 0; n < y; n++) (o = this.readInt()), (e.states[o].nonGreedy = !0);
				let W = this.readInt();
				for (n = 0; n < W; n++) (o = this.readInt()), (e.states[o].isPrecedenceRule = !0);
			}
			readRules(e, i) {
				let n,
					a = this.readInt();
				for (
					e.grammarType === id.LEXER && (e.ruleToTokenType = Bd(a, 0)), e.ruleToStartState = Bd(a, 0), n = 0;
					n < a;
					n++
				) {
					let o = this.readInt();
					if (((e.ruleToStartState[n] = e.states[o]), e.grammarType === id.LEXER)) {
						let c = this.readInt();
						i && c === 65535 && (c = L.EOF), (e.ruleToTokenType[n] = c);
					}
				}
				for (e.ruleToStopState = Bd(a, 0), n = 0; n < e.states.length; n++) {
					let o = e.states[n];
					o instanceof W0 &&
						((e.ruleToStopState[o.ruleIndex] = o), (e.ruleToStartState[o.ruleIndex].stopState = o));
				}
			}
			readModes(e) {
				let i = this.readInt();
				for (let n = 0; n < i; n++) {
					let a = this.readInt();
					e.modeToStartState.push(e.states[a]);
				}
			}
			readSets(e, i, n) {
				let a = this.readInt();
				for (let o = 0; o < a; o++) {
					let c = new A0();
					i.push(c);
					let h = this.readInt();
					this.readInt() !== 0 && c.addOne(-1);
					for (let y = 0; y < h; y++) {
						let W = n(),
							O = n();
						c.addRange(W, O);
					}
				}
			}
			readEdges(e, i) {
				let n,
					a,
					o,
					c,
					h,
					_ = this.readInt();
				for (n = 0; n < _; n++) {
					let y = this.readInt(),
						W = this.readInt(),
						O = this.readInt(),
						S = this.readInt(),
						w = this.readInt(),
						U = this.readInt();
					(c = this.edgeFactory(e, O, y, W, S, w, U, i)), e.states[y].addTransition(c);
				}
				for (n = 0; n < e.states.length; n++)
					for (o = e.states[n], a = 0; a < o.transitions.length; a++) {
						let y = o.transitions[a];
						if (!(y instanceof ha)) continue;
						let W = -1;
						e.ruleToStartState[y.target.ruleIndex].isPrecedenceRule &&
							y.precedence === 0 &&
							(W = y.target.ruleIndex),
							(c = new H1(y.followState, W)),
							e.ruleToStopState[y.target.ruleIndex].addTransition(c);
					}
				for (n = 0; n < e.states.length; n++) {
					if (((o = e.states[n]), o instanceof yi)) {
						if (o.endState === null || o.endState.startState !== null) throw 'IllegalState';
						o.endState.startState = o;
					}
					if (o instanceof Ol)
						for (a = 0; a < o.transitions.length; a++)
							(h = o.transitions[a].target), h instanceof Eh && (h.loopBackState = o);
					else if (o instanceof _h)
						for (a = 0; a < o.transitions.length; a++)
							(h = o.transitions[a].target), h instanceof Or && (h.loopBackState = o);
				}
			}
			readDecisions(e) {
				let i = this.readInt();
				for (let n = 0; n < i; n++) {
					let a = this.readInt(),
						o = e.states[a];
					e.decisionToState.push(o), (o.decision = n);
				}
			}
			readLexerActions(e, i) {
				if (e.grammarType === id.LEXER) {
					let n = this.readInt();
					e.lexerActions = Bd(n, null);
					for (let a = 0; a < n; a++) {
						let o = this.readInt(),
							c = this.readInt();
						i && c === 65535 && (c = -1);
						let h = this.readInt();
						i && h === 65535 && (h = -1), (e.lexerActions[a] = this.lexerActionFactory(o, c, h));
					}
				}
			}
			generateRuleBypassTransitions(e) {
				let i,
					n = e.ruleToStartState.length;
				for (i = 0; i < n; i++) e.ruleToTokenType[i] = e.maxTokenType + i + 1;
				for (i = 0; i < n; i++) this.generateRuleBypassTransition(e, i);
			}
			generateRuleBypassTransition(e, i) {
				let n,
					a,
					o = new Ll();
				(o.ruleIndex = i), e.addState(o);
				let c = new fh();
				(c.ruleIndex = i), e.addState(c), (o.endState = c), e.defineDecisionState(o), (c.startState = o);
				let h = null,
					_ = null;
				if (e.ruleToStartState[i].isPrecedenceRule) {
					for (_ = null, n = 0; n < e.states.length; n++)
						if (((a = e.states[n]), this.stateIsEndStateFor(a, i))) {
							(_ = a), (h = a.loopBackState.transitions[0]);
							break;
						}
					if (h === null) throw "Couldn't identify final state of the precedence rule prefix section.";
				} else _ = e.ruleToStopState[i];
				for (n = 0; n < e.states.length; n++) {
					a = e.states[n];
					for (let S = 0; S < a.transitions.length; S++) {
						let w = a.transitions[S];
						w !== h && w.target === _ && (w.target = c);
					}
				}
				let y = e.ruleToStartState[i],
					W = y.transitions.length;
				for (; W > 0; ) o.addTransition(y.transitions[W - 1]), (y.transitions = y.transitions.slice(-1));
				e.ruleToStartState[i].addTransition(new H1(o)), c.addTransition(new H1(_));
				let O = new Kl();
				e.addState(O), O.addTransition(new M1(c, e.ruleToTokenType[i])), o.addTransition(new H1(O));
			}
			stateIsEndStateFor(e, i) {
				if (e.ruleIndex !== i || !(e instanceof Or)) return null;
				let n = e.transitions[e.transitions.length - 1].target;
				return n instanceof da && n.epsilonOnlyTransitions && n.transitions[0].target instanceof W0 ? e : null;
			}
			markPrecedenceDecisions(e) {
				for (let i = 0; i < e.states.length; i++) {
					let n = e.states[i];
					if (n instanceof Or && e.ruleToStartState[n.ruleIndex].isPrecedenceRule) {
						let a = n.transitions[n.transitions.length - 1].target;
						a instanceof da &&
							a.epsilonOnlyTransitions &&
							a.transitions[0].target instanceof W0 &&
							(n.isPrecedenceDecision = !0);
					}
				}
			}
			verifyATN(e) {
				if (!!this.deserializationOptions.verifyATN)
					for (let i = 0; i < e.states.length; i++) {
						let n = e.states[i];
						if (n !== null)
							if (
								(this.checkCondition(n.epsilonOnlyTransitions || n.transitions.length <= 1),
								n instanceof Eh)
							)
								this.checkCondition(n.loopBackState !== null);
							else if (n instanceof Or)
								if (
									(this.checkCondition(n.loopBackState !== null),
									this.checkCondition(n.transitions.length === 2),
									n.transitions[0].target instanceof Th)
								)
									this.checkCondition(n.transitions[1].target instanceof da),
										this.checkCondition(!n.nonGreedy);
								else if (n.transitions[0].target instanceof da)
									this.checkCondition(n.transitions[1].target instanceof Th),
										this.checkCondition(n.nonGreedy);
								else throw 'IllegalState';
							else
								n instanceof _h
									? (this.checkCondition(n.transitions.length === 1),
									  this.checkCondition(n.transitions[0].target instanceof Or))
									: n instanceof da
									? this.checkCondition(n.loopBackState !== null)
									: n instanceof xl
									? this.checkCondition(n.stopState !== null)
									: n instanceof yi
									? this.checkCondition(n.endState !== null)
									: n instanceof fh
									? this.checkCondition(n.startState !== null)
									: n instanceof kt
									? this.checkCondition(n.transitions.length <= 1 || n.decision >= 0)
									: this.checkCondition(n.transitions.length <= 1 || n instanceof W0);
					}
			}
			checkCondition(e, i) {
				if (!e) throw (i == null && (i = 'IllegalState'), i);
			}
			readInt() {
				return this.data[this.pos++];
			}
			readInt32() {
				let e = this.readInt(),
					i = this.readInt();
				return e | (i << 16);
			}
			edgeFactory(e, i, n, a, o, c, h, _) {
				let y = e.states[a];
				switch (i) {
					case I.EPSILON:
						return new H1(y);
					case I.RANGE:
						return h !== 0 ? new Sl(y, L.EOF, c) : new Sl(y, o, c);
					case I.RULE:
						return new ha(e.states[o], c, h, y);
					case I.PREDICATE:
						return new mh(y, o, c, h !== 0);
					case I.PRECEDENCE:
						return new sd(y, o);
					case I.ATOM:
						return h !== 0 ? new M1(y, L.EOF) : new M1(y, o);
					case I.ACTION:
						return new Rh(y, o, c, h !== 0);
					case I.SET:
						return new g1(y, _[o]);
					case I.NOT_SET:
						return new D1(y, _[o]);
					case I.WILDCARD:
						return new ch(y);
					default:
						throw 'The specified transition type: ' + i + ' is not valid.';
				}
			}
			stateFactory(e, i) {
				if (this.stateFactories === null) {
					let n = [];
					(n[N.INVALID_TYPE] = null),
						(n[N.BASIC] = () => new Kl()),
						(n[N.RULE_START] = () => new xl()),
						(n[N.BLOCK_START] = () => new Ll()),
						(n[N.PLUS_BLOCK_START] = () => new Eh()),
						(n[N.STAR_BLOCK_START] = () => new Th()),
						(n[N.TOKEN_START] = () => new nd()),
						(n[N.RULE_STOP] = () => new W0()),
						(n[N.BLOCK_END] = () => new fh()),
						(n[N.STAR_LOOP_BACK] = () => new _h()),
						(n[N.STAR_LOOP_ENTRY] = () => new Or()),
						(n[N.PLUS_LOOP_BACK] = () => new Ol()),
						(n[N.LOOP_END] = () => new da()),
						(this.stateFactories = n);
				}
				if (e > this.stateFactories.length || this.stateFactories[e] === null)
					throw 'The specified state type ' + e + ' is not valid.';
				{
					let n = this.stateFactories[e]();
					if (n !== null) return (n.ruleIndex = i), n;
				}
			}
			lexerActionFactory(e, i, n) {
				if (this.actionFactories === null) {
					let a = [];
					(a[_0.CHANNEL] = (o, c) => new Ch(o)),
						(a[_0.CUSTOM] = (o, c) => new bh(o, c)),
						(a[_0.MODE] = (o, c) => new Oh(o)),
						(a[_0.MORE] = (o, c) => Ah.INSTANCE),
						(a[_0.POP_MODE] = (o, c) => xh.INSTANCE),
						(a[_0.PUSH_MODE] = (o, c) => new Kh(o)),
						(a[_0.SKIP] = (o, c) => yh.INSTANCE),
						(a[_0.TYPE] = (o, c) => new Wh(o)),
						(this.actionFactories = a);
				}
				if (e > this.actionFactories.length || this.actionFactories[e] === null)
					throw 'The specified lexer action type ' + e + ' is not valid.';
				return this.actionFactories[e](i, n);
			}
		};
	});
var cs,
	ad = K(() => {
		cs = class {
			syntaxError(e, i, n, a, o, c) {}
			reportAmbiguity(e, i, n, a, o, c, h) {}
			reportAttemptingFullContext(e, i, n, a, o, c) {}
			reportContextSensitivity(e, i, n, a, o, c) {}
		};
	});
var Sh,
	t7 = K(() => {
		ad();
		Sh = class extends cs {
			constructor() {
				super();
			}
			syntaxError(e, i, n, a, o, c) {
				console.error('line ' + n + ':' + a + ' ' + o);
			}
		};
		Sh.INSTANCE = new Sh();
	});
var od,
	e7 = K(() => {
		ad();
		od = class extends cs {
			constructor(e) {
				if ((super(), e === null)) throw 'delegates';
				return (this.delegates = e), this;
			}
			syntaxError(e, i, n, a, o, c) {
				this.delegates.map(h => h.syntaxError(e, i, n, a, o, c));
			}
			reportAmbiguity(e, i, n, a, o, c, h) {
				this.delegates.map(_ => _.reportAmbiguity(e, i, n, a, o, c, h));
			}
			reportAttemptingFullContext(e, i, n, a, o, c) {
				this.delegates.map(h => h.reportAttemptingFullContext(e, i, n, a, o, c));
			}
			reportContextSensitivity(e, i, n, a, o, c) {
				this.delegates.map(h => h.reportContextSensitivity(e, i, n, a, o, c));
			}
		};
	});
var F1,
	Mf = K(() => {
		cu();
		t7();
		e7();
		F1 = class {
			constructor() {
				(this._listeners = [Sh.INSTANCE]), (this._interp = null), (this._stateNumber = -1);
			}
			checkVersion(e) {
				let i = '4.10.1';
				i !== e && console.log('ANTLR runtime and generated code versions disagree: ' + i + '!=' + e);
			}
			addErrorListener(e) {
				this._listeners.push(e);
			}
			removeErrorListeners() {
				this._listeners = [];
			}
			getLiteralNames() {
				return Object.getPrototypeOf(this).constructor.literalNames || [];
			}
			getSymbolicNames() {
				return Object.getPrototypeOf(this).constructor.symbolicNames || [];
			}
			getTokenNames() {
				if (!this.tokenNames) {
					let e = this.getLiteralNames(),
						i = this.getSymbolicNames(),
						n = e.length > i.length ? e.length : i.length;
					this.tokenNames = [];
					for (let a = 0; a < n; a++) this.tokenNames[a] = e[a] || i[a] || '<INVALID';
				}
				return this.tokenNames;
			}
			getTokenTypeMap() {
				let e = this.getTokenNames();
				if (e === null) throw 'The current recognizer does not provide a list of token names.';
				let i = this.tokenTypeMapCache[e];
				return (
					i === void 0 &&
						((i = e.reduce(function (n, a, o) {
							n[a] = o;
						})),
						(i.EOF = L.EOF),
						(this.tokenTypeMapCache[e] = i)),
					i
				);
			}
			getRuleIndexMap() {
				let e = this.ruleNames;
				if (e === null) throw 'The current recognizer does not provide a list of rule names.';
				let i = this.ruleIndexMapCache[e];
				return (
					i === void 0 &&
						((i = e.reduce(function (n, a, o) {
							n[a] = o;
						})),
						(this.ruleIndexMapCache[e] = i)),
					i
				);
			}
			getTokenType(e) {
				let i = this.getTokenTypeMap()[e];
				return i !== void 0 ? i : L.INVALID_TYPE;
			}
			getErrorHeader(e) {
				let i = e.getOffendingToken().line,
					n = e.getOffendingToken().column;
				return 'line ' + i + ':' + n;
			}
			getTokenErrorDisplay(e) {
				if (e === null) return '<no token>';
				let i = e.text;
				return (
					i === null && (e.type === L.EOF ? (i = '<EOF>') : (i = '<' + e.type + '>')),
					(i = i
						.replace(
							`
`,
							'\\n',
						)
						.replace('\r', '\\r')
						.replace('	', '\\t')),
					"'" + i + "'"
				);
			}
			getErrorListenerDispatch() {
				return new od(this._listeners);
			}
			sempred(e, i, n) {
				return !0;
			}
			precpred(e, i) {
				return !0;
			}
			get state() {
				return this._stateNumber;
			}
			set state(e) {
				this._stateNumber = e;
			}
		};
		F1.tokenTypeMapCache = {};
		F1.ruleIndexMapCache = {};
	});
var Lr,
	Hf = K(() => {
		cu();
		Lr = class extends L {
			constructor(e, i, n, a, o) {
				super(),
					(this.source = e !== void 0 ? e : Lr.EMPTY_SOURCE),
					(this.type = i !== void 0 ? i : null),
					(this.channel = n !== void 0 ? n : L.DEFAULT_CHANNEL),
					(this.start = a !== void 0 ? a : -1),
					(this.stop = o !== void 0 ? o : -1),
					(this.tokenIndex = -1),
					this.source[0] !== null
						? ((this.line = e[0].line), (this.column = e[0].column))
						: (this.column = -1);
			}
			clone() {
				let e = new Lr(this.source, this.type, this.channel, this.start, this.stop);
				return (
					(e.tokenIndex = this.tokenIndex),
					(e.line = this.line),
					(e.column = this.column),
					(e.text = this.text),
					e
				);
			}
			toString() {
				let e = this.text;
				return (
					e !== null
						? (e = e.replace(/\n/g, '\\n').replace(/\r/g, '\\r').replace(/\t/g, '\\t'))
						: (e = '<no text>'),
					'[@' +
						this.tokenIndex +
						',' +
						this.start +
						':' +
						this.stop +
						"='" +
						e +
						"',<" +
						this.type +
						'>' +
						(this.channel > 0 ? ',channel=' + this.channel : '') +
						',' +
						this.line +
						':' +
						this.column +
						']'
				);
			}
			get text() {
				if (this._text !== null) return this._text;
				let e = this.getInputStream();
				if (e === null) return null;
				let i = e.size;
				return this.start < i && this.stop < i ? e.getText(this.start, this.stop) : '<EOF>';
			}
			set text(e) {
				this._text = e;
			}
		};
		Lr.EMPTY_SOURCE = [null, null];
	});
var Ff,
	Ih,
	i7 = K(() => {
		Hf();
		(Ff = class {}),
			(Ih = class extends Ff {
				constructor(e) {
					super(), (this.copyText = e === void 0 ? !1 : e);
				}
				create(e, i, n, a, o, c, h, _) {
					let y = new Lr(e, i, a, o, c);
					return (
						(y.line = h),
						(y.column = _),
						n !== null ? (y.text = n) : this.copyText && e[1] !== null && (y.text = e[1].getText(o, c)),
						y
					);
				}
				createThin(e, i) {
					let n = new Lr(null, e);
					return (n.text = i), n;
				}
			});
		Ih.DEFAULT = new Ih();
	});
var Gu,
	Nh = K(() => {
		Gu = class extends Error {
			constructor(e) {
				super(e.message),
					Error.captureStackTrace && Error.captureStackTrace(this, Gu),
					(this.message = e.message),
					(this.recognizer = e.recognizer),
					(this.input = e.input),
					(this.ctx = e.ctx),
					(this.offendingToken = null),
					(this.offendingState = -1),
					this.recognizer !== null && (this.offendingState = this.recognizer.state);
			}
			getExpectedTokens() {
				return this.recognizer !== null
					? this.recognizer.atn.getExpectedTokens(this.offendingState, this.ctx)
					: null;
			}
			toString() {
				return this.message;
			}
		};
	});
var k1,
	Yd = K(() => {
		ss();
		Nh();
		k1 = class extends Gu {
			constructor(e, i, n, a) {
				super({ message: '', recognizer: e, input: i, ctx: null }),
					(this.startIndex = n),
					(this.deadEndConfigs = a);
			}
			toString() {
				let e = '';
				return (
					this.startIndex >= 0 &&
						this.startIndex < this.input.size &&
						(e = this.input.getText(new k(this.startIndex, this.startIndex))),
					'LexerNoViableAltException' + e
				);
			}
		};
	});
var n0,
	Gd = K(() => {
		cu();
		Mf();
		i7();
		Nh();
		Yd();
		n0 = class extends F1 {
			constructor(e) {
				super(),
					(this._input = e),
					(this._factory = Ih.DEFAULT),
					(this._tokenFactorySourcePair = [this, e]),
					(this._interp = null),
					(this._token = null),
					(this._tokenStartCharIndex = -1),
					(this._tokenStartLine = -1),
					(this._tokenStartColumn = -1),
					(this._hitEOF = !1),
					(this._channel = L.DEFAULT_CHANNEL),
					(this._type = L.INVALID_TYPE),
					(this._modeStack = []),
					(this._mode = n0.DEFAULT_MODE),
					(this._text = null);
			}
			reset() {
				this._input !== null && this._input.seek(0),
					(this._token = null),
					(this._type = L.INVALID_TYPE),
					(this._channel = L.DEFAULT_CHANNEL),
					(this._tokenStartCharIndex = -1),
					(this._tokenStartColumn = -1),
					(this._tokenStartLine = -1),
					(this._text = null),
					(this._hitEOF = !1),
					(this._mode = n0.DEFAULT_MODE),
					(this._modeStack = []),
					this._interp.reset();
			}
			nextToken() {
				if (this._input === null) throw 'nextToken requires a non-null input stream.';
				let e = this._input.mark();
				try {
					for (;;) {
						if (this._hitEOF) return this.emitEOF(), this._token;
						(this._token = null),
							(this._channel = L.DEFAULT_CHANNEL),
							(this._tokenStartCharIndex = this._input.index),
							(this._tokenStartColumn = this._interp.column),
							(this._tokenStartLine = this._interp.line),
							(this._text = null);
						let i = !1;
						for (;;) {
							this._type = L.INVALID_TYPE;
							let n = n0.SKIP;
							try {
								n = this._interp.match(this._input, this._mode);
							} catch (a) {
								if (a instanceof Gu) this.notifyListeners(a), this.recover(a);
								else throw (console.log(a.stack), a);
							}
							if (
								(this._input.LA(1) === L.EOF && (this._hitEOF = !0),
								this._type === L.INVALID_TYPE && (this._type = n),
								this._type === n0.SKIP)
							) {
								i = !0;
								break;
							}
							if (this._type !== n0.MORE) break;
						}
						if (!i) return this._token === null && this.emit(), this._token;
					}
				} finally {
					this._input.release(e);
				}
			}
			skip() {
				this._type = n0.SKIP;
			}
			more() {
				this._type = n0.MORE;
			}
			mode(e) {
				this._mode = e;
			}
			pushMode(e) {
				this._interp.debug && console.log('pushMode ' + e), this._modeStack.push(this._mode), this.mode(e);
			}
			popMode() {
				if (this._modeStack.length === 0) throw 'Empty Stack';
				return (
					this._interp.debug && console.log('popMode back to ' + this._modeStack.slice(0, -1)),
					this.mode(this._modeStack.pop()),
					this._mode
				);
			}
			emitToken(e) {
				this._token = e;
			}
			emit() {
				let e = this._factory.create(
					this._tokenFactorySourcePair,
					this._type,
					this._text,
					this._channel,
					this._tokenStartCharIndex,
					this.getCharIndex() - 1,
					this._tokenStartLine,
					this._tokenStartColumn,
				);
				return this.emitToken(e), e;
			}
			emitEOF() {
				let e = this.column,
					i = this.line,
					n = this._factory.create(
						this._tokenFactorySourcePair,
						L.EOF,
						null,
						L.DEFAULT_CHANNEL,
						this._input.index,
						this._input.index - 1,
						i,
						e,
					);
				return this.emitToken(n), n;
			}
			getCharIndex() {
				return this._input.index;
			}
			getAllTokens() {
				let e = [],
					i = this.nextToken();
				for (; i.type !== L.EOF; ) e.push(i), (i = this.nextToken());
				return e;
			}
			notifyListeners(e) {
				let i = this._tokenStartCharIndex,
					n = this._input.index,
					a = this._input.getText(i, n),
					o = "token recognition error at: '" + this.getErrorDisplay(a) + "'";
				this.getErrorListenerDispatch().syntaxError(
					this,
					null,
					this._tokenStartLine,
					this._tokenStartColumn,
					o,
					e,
				);
			}
			getErrorDisplay(e) {
				let i = [];
				for (let n = 0; n < e.length; n++) i.push(e[n]);
				return i.join('');
			}
			getErrorDisplayForChar(e) {
				return e.charCodeAt(0) === L.EOF
					? '<EOF>'
					: e ===
					  `
`
					? '\\n'
					: e === '	'
					? '\\t'
					: e === '\r'
					? '\\r'
					: e;
			}
			getCharErrorDisplay(e) {
				return "'" + this.getErrorDisplayForChar(e) + "'";
			}
			recover(e) {
				this._input.LA(1) !== L.EOF &&
					(e instanceof k1 ? this._interp.consume(this._input) : this._input.consume());
			}
			get inputStream() {
				return this._input;
			}
			set inputStream(e) {
				(this._input = null),
					(this._tokenFactorySourcePair = [this, this._input]),
					this.reset(),
					(this._input = e),
					(this._tokenFactorySourcePair = [this, this._input]);
			}
			get sourceName() {
				return this._input.sourceName;
			}
			get type() {
				return this._type;
			}
			set type(e) {
				this._type = e;
			}
			get line() {
				return this._interp.line;
			}
			set line(e) {
				this._interp.line = e;
			}
			get column() {
				return this._interp.column;
			}
			set column(e) {
				this._interp.column = e;
			}
			get text() {
				return this._text !== null ? this._text : this._interp.getText(this._input);
			}
			set text(e) {
				this._text = e;
			}
		};
		n0.DEFAULT_MODE = 0;
		n0.MORE = -2;
		n0.SKIP = -3;
		n0.DEFAULT_TOKEN_CHANNEL = L.DEFAULT_CHANNEL;
		n0.HIDDEN = L.HIDDEN_CHANNEL;
		n0.MIN_CHAR_VALUE = 0;
		n0.MAX_CHAR_VALUE = 1114111;
	});
function A9(u) {
	return u.hashCodeForConfigSet();
}
function W9(u, e) {
	return u === e ? !0 : u === null || e === null ? !1 : u.equalsForConfigSet(e);
}
var R0,
	Ph = K(() => {
		lh();
		oh();
		td();
		Cl();
		Vp();
		jl();
		ns();
		R0 = class {
			constructor(e) {
				(this.configLookup = new b0(A9, W9)),
					(this.fullCtx = e === void 0 ? !0 : e),
					(this.readOnly = !1),
					(this.configs = []),
					(this.uniqueAlt = 0),
					(this.conflictingAlts = null),
					(this.hasSemanticContext = !1),
					(this.dipsIntoOuterContext = !1),
					(this.cachedHashCode = -1);
			}
			add(e, i) {
				if ((i === void 0 && (i = null), this.readOnly)) throw 'This set is readonly';
				e.semanticContext !== Y.NONE && (this.hasSemanticContext = !0),
					e.reachesIntoOuterContext > 0 && (this.dipsIntoOuterContext = !0);
				let n = this.configLookup.add(e);
				if (n === e) return (this.cachedHashCode = -1), this.configs.push(e), !0;
				let a = !this.fullCtx,
					o = Vd(n.context, e.context, a, i);
				return (
					(n.reachesIntoOuterContext = Math.max(n.reachesIntoOuterContext, e.reachesIntoOuterContext)),
					e.precedenceFilterSuppressed && (n.precedenceFilterSuppressed = !0),
					(n.context = o),
					!0
				);
			}
			getStates() {
				let e = new b0();
				for (let i = 0; i < this.configs.length; i++) e.add(this.configs[i].state);
				return e;
			}
			getPredicates() {
				let e = [];
				for (let i = 0; i < this.configs.length; i++) {
					let n = this.configs[i].semanticContext;
					n !== Y.NONE && e.push(n.semanticContext);
				}
				return e;
			}
			optimizeConfigs(e) {
				if (this.readOnly) throw 'This set is readonly';
				if (this.configLookup.length !== 0)
					for (let i = 0; i < this.configs.length; i++) {
						let n = this.configs[i];
						n.context = e.getCachedContext(n.context);
					}
			}
			addAll(e) {
				for (let i = 0; i < e.length; i++) this.add(e[i]);
				return !1;
			}
			equals(e) {
				return (
					this === e ||
					(e instanceof R0 &&
						rs(this.configs, e.configs) &&
						this.fullCtx === e.fullCtx &&
						this.uniqueAlt === e.uniqueAlt &&
						this.conflictingAlts === e.conflictingAlts &&
						this.hasSemanticContext === e.hasSemanticContext &&
						this.dipsIntoOuterContext === e.dipsIntoOuterContext)
				);
			}
			hashCode() {
				let e = new d0();
				return e.update(this.configs), e.finish();
			}
			updateHashCode(e) {
				this.readOnly
					? (this.cachedHashCode === -1 && (this.cachedHashCode = this.hashCode()),
					  e.update(this.cachedHashCode))
					: e.update(this.hashCode());
			}
			isEmpty() {
				return this.configs.length === 0;
			}
			contains(e) {
				if (this.configLookup === null) throw 'This method is not implemented for readonly sets.';
				return this.configLookup.contains(e);
			}
			containsFast(e) {
				if (this.configLookup === null) throw 'This method is not implemented for readonly sets.';
				return this.configLookup.containsFast(e);
			}
			clear() {
				if (this.readOnly) throw 'This set is readonly';
				(this.configs = []), (this.cachedHashCode = -1), (this.configLookup = new b0());
			}
			setReadonly(e) {
				(this.readOnly = e), e && (this.configLookup = null);
			}
			toString() {
				return (
					We(this.configs) +
					(this.hasSemanticContext ? ',hasSemanticContext=' + this.hasSemanticContext : '') +
					(this.uniqueAlt !== z.INVALID_ALT_NUMBER ? ',uniqueAlt=' + this.uniqueAlt : '') +
					(this.conflictingAlts !== null ? ',conflictingAlts=' + this.conflictingAlts : '') +
					(this.dipsIntoOuterContext ? ',dipsIntoOuterContext' : '')
				);
			}
			get items() {
				return this.configs;
			}
			get length() {
				return this.configs.length;
			}
		};
	});
var Rt,
	cd = K(() => {
		Ph();
		ns();
		Vp();
		Rt = class {
			constructor(e, i) {
				return (
					e === null && (e = -1),
					i === null && (i = new R0()),
					(this.stateNumber = e),
					(this.configs = i),
					(this.edges = null),
					(this.isAcceptState = !1),
					(this.prediction = 0),
					(this.lexerActionExecutor = null),
					(this.requiresFullContext = !1),
					(this.predicates = null),
					this
				);
			}
			getAltSet() {
				let e = new b0();
				if (this.configs !== null)
					for (let i = 0; i < this.configs.length; i++) {
						let n = this.configs[i];
						e.add(n.alt);
					}
				return e.length === 0 ? null : e;
			}
			equals(e) {
				return this === e || (e instanceof Rt && this.configs.equals(e.configs));
			}
			toString() {
				let e = '' + this.stateNumber + ':' + this.configs;
				return (
					this.isAcceptState &&
						((e = e + '=>'),
						this.predicates !== null ? (e = e + this.predicates) : (e = e + this.prediction)),
					e
				);
			}
			hashCode() {
				let e = new d0();
				return e.update(this.configs), e.finish();
			}
		};
	});
var Vt,
	kf = K(() => {
		cd();
		Ph();
		td();
		Wl();
		Vt = class {
			constructor(e, i) {
				return (this.atn = e), (this.sharedContextCache = i), this;
			}
			getCachedContext(e) {
				if (this.sharedContextCache === null) return e;
				let i = new mi();
				return Sf(e, this.sharedContextCache, i);
			}
		};
		Vt.ERROR = new Rt(2147483647, new R0());
	});
var Il,
	r7 = K(() => {
		Ph();
		Vp();
		Il = class extends R0 {
			constructor() {
				super(), (this.configLookup = new b0());
			}
		};
	});
var Ku,
	n7 = K(() => {
		dh();
		ql();
		Ku = class extends r0 {
			constructor(e, i) {
				super(e, i);
				let n = e.lexerActionExecutor || null;
				return (
					(this.lexerActionExecutor = n || (i !== null ? i.lexerActionExecutor : null)),
					(this.passedThroughNonGreedyDecision =
						i !== null ? this.checkNonGreedyDecision(i, this.state) : !1),
					(this.hashCodeForConfigSet = Ku.prototype.hashCode),
					(this.equalsForConfigSet = Ku.prototype.equals),
					this
				);
			}
			updateHashCode(e) {
				e.update(
					this.state.stateNumber,
					this.alt,
					this.context,
					this.semanticContext,
					this.passedThroughNonGreedyDecision,
					this.lexerActionExecutor,
				);
			}
			equals(e) {
				return (
					this === e ||
					(e instanceof Ku &&
						this.passedThroughNonGreedyDecision === e.passedThroughNonGreedyDecision &&
						(this.lexerActionExecutor
							? this.lexerActionExecutor.equals(e.lexerActionExecutor)
							: !e.lexerActionExecutor) &&
						super.equals(e))
				);
			}
			checkNonGreedyDecision(e, i) {
				return e.passedThroughNonGreedyDecision || (i instanceof kt && i.nonGreedy);
			}
		};
	});
var V1,
	s7 = K(() => {
		Ea();
		V1 = class extends V0 {
			constructor(e, i) {
				super(i.actionType), (this.offset = e), (this.action = i), (this.isPositionDependent = !0);
			}
			execute(e) {
				this.action.execute(e);
			}
			updateHashCode(e) {
				e.update(this.actionType, this.offset, this.action);
			}
			equals(e) {
				return this === e ? !0 : e instanceof V1 ? this.offset === e.offset && this.action === e.action : !1;
			}
		};
	});
var Ta,
	a7 = K(() => {
		s7();
		ns();
		Ta = class {
			constructor(e) {
				return (this.lexerActions = e === null ? [] : e), (this.cachedHashCode = d0.hashStuff(e)), this;
			}
			fixOffsetBeforeMatch(e) {
				let i = null;
				for (let n = 0; n < this.lexerActions.length; n++)
					this.lexerActions[n].isPositionDependent &&
						!(this.lexerActions[n] instanceof V1) &&
						(i === null && (i = this.lexerActions.concat([])), (i[n] = new V1(e, this.lexerActions[n])));
				return i === null ? this : new Ta(i);
			}
			execute(e, i, n) {
				let a = !1,
					o = i.index;
				try {
					for (let c = 0; c < this.lexerActions.length; c++) {
						let h = this.lexerActions[c];
						if (h instanceof V1) {
							let _ = h.offset;
							i.seek(n + _), (h = h.action), (a = n + _ !== o);
						} else h.isPositionDependent && (i.seek(o), (a = !1));
						h.execute(e);
					}
				} finally {
					a && i.seek(o);
				}
			}
			hashCode() {
				return this.cachedHashCode;
			}
			updateHashCode(e) {
				e.update(this.cachedHashCode);
			}
			equals(e) {
				if (this === e) return !0;
				if (e instanceof Ta) {
					if (this.cachedHashCode != e.cachedHashCode) return !1;
					if (this.lexerActions.length != e.lexerActions.length) return !1;
					{
						let i = this.lexerActions.length;
						for (let n = 0; n < i; ++n) if (!this.lexerActions[n].equals(e.lexerActions[n])) return !1;
						return !0;
					}
				} else return !1;
			}
			static append(e, i) {
				if (e === null) return new Ta([i]);
				let n = e.lexerActions.concat([i]);
				return new Ta(n);
			}
		};
	});
function o7(u) {
	(u.index = -1), (u.line = 0), (u.column = -1), (u.dfaState = null);
}
var Vf,
	h0,
	c7 = K(() => {
		cu();
		Gd();
		lh();
		kf();
		cd();
		r7();
		w1();
		Al();
		bl();
		n7();
		Ft();
		a7();
		Yd();
		(Vf = class {
			constructor() {
				o7(this);
			}
			reset() {
				o7(this);
			}
		}),
			(h0 = class extends Vt {
				constructor(e, i, n, a) {
					super(i, a),
						(this.decisionToDFA = n),
						(this.recog = e),
						(this.startIndex = -1),
						(this.line = 1),
						(this.column = 0),
						(this.mode = n0.DEFAULT_MODE),
						(this.prevAccept = new Vf());
				}
				copyState(e) {
					(this.column = e.column),
						(this.line = e.line),
						(this.mode = e.mode),
						(this.startIndex = e.startIndex);
				}
				match(e, i) {
					this.mode = i;
					let n = e.mark();
					try {
						(this.startIndex = e.index), this.prevAccept.reset();
						let a = this.decisionToDFA[i];
						return a.s0 === null ? this.matchATN(e) : this.execATN(e, a.s0);
					} finally {
						e.release(n);
					}
				}
				reset() {
					this.prevAccept.reset(),
						(this.startIndex = -1),
						(this.line = 1),
						(this.column = 0),
						(this.mode = n0.DEFAULT_MODE);
				}
				matchATN(e) {
					let i = this.atn.modeToStartState[this.mode];
					h0.debug && console.log('matchATN mode ' + this.mode + ' start: ' + i);
					let n = this.mode,
						a = this.computeStartState(e, i),
						o = a.hasSemanticContext;
					a.hasSemanticContext = !1;
					let c = this.addDFAState(a);
					o || (this.decisionToDFA[this.mode].s0 = c);
					let h = this.execATN(e, c);
					return h0.debug && console.log('DFA after matchATN: ' + this.decisionToDFA[n].toLexerString()), h;
				}
				execATN(e, i) {
					h0.debug && console.log('start state closure=' + i.configs),
						i.isAcceptState && this.captureSimState(this.prevAccept, e, i);
					let n = e.LA(1),
						a = i;
					for (;;) {
						h0.debug && console.log('execATN loop starting closure: ' + a.configs);
						let o = this.getExistingTargetState(a, n);
						if (
							(o === null && (o = this.computeTargetState(e, a, n)),
							o === Vt.ERROR ||
								(n !== L.EOF && this.consume(e),
								o.isAcceptState && (this.captureSimState(this.prevAccept, e, o), n === L.EOF)))
						)
							break;
						(n = e.LA(1)), (a = o);
					}
					return this.failOrAccept(this.prevAccept, e, a.configs, n);
				}
				getExistingTargetState(e, i) {
					if (e.edges === null || i < h0.MIN_DFA_EDGE || i > h0.MAX_DFA_EDGE) return null;
					let n = e.edges[i - h0.MIN_DFA_EDGE];
					return (
						n === void 0 && (n = null),
						h0.debug &&
							n !== null &&
							console.log('reuse state ' + e.stateNumber + ' edge to ' + n.stateNumber),
						n
					);
				}
				computeTargetState(e, i, n) {
					let a = new Il();
					return (
						this.getReachableConfigSet(e, i.configs, a, n),
						a.items.length === 0
							? (a.hasSemanticContext || this.addDFAEdge(i, n, Vt.ERROR), Vt.ERROR)
							: this.addDFAEdge(i, n, null, a)
					);
				}
				failOrAccept(e, i, n, a) {
					if (this.prevAccept.dfaState !== null) {
						let o = e.dfaState.lexerActionExecutor;
						return this.accept(i, o, this.startIndex, e.index, e.line, e.column), e.dfaState.prediction;
					} else {
						if (a === L.EOF && i.index === this.startIndex) return L.EOF;
						throw new k1(this.recog, i, this.startIndex, n);
					}
				}
				getReachableConfigSet(e, i, n, a) {
					let o = z.INVALID_ALT_NUMBER;
					for (let c = 0; c < i.items.length; c++) {
						let h = i.items[c],
							_ = h.alt === o;
						if (!(_ && h.passedThroughNonGreedyDecision)) {
							h0.debug &&
								console.log(
									`testing %s at %s
`,
									this.getTokenName(a),
									h.toString(this.recog, !0),
								);
							for (let y = 0; y < h.state.transitions.length; y++) {
								let W = h.state.transitions[y],
									O = this.getReachableTarget(W, a);
								if (O !== null) {
									let S = h.lexerActionExecutor;
									S !== null && (S = S.fixOffsetBeforeMatch(e.index - this.startIndex));
									let w = a === L.EOF,
										U = new Ku({ state: O, lexerActionExecutor: S }, h);
									this.closure(e, U, n, _, !0, w) && (o = h.alt);
								}
							}
						}
					}
				}
				accept(e, i, n, a, o, c) {
					h0.debug &&
						console.log(
							`ACTION %s
`,
							i,
						),
						e.seek(a),
						(this.line = o),
						(this.column = c),
						i !== null && this.recog !== null && i.execute(this.recog, e, n);
				}
				getReachableTarget(e, i) {
					return e.matches(i, 0, n0.MAX_CHAR_VALUE) ? e.target : null;
				}
				computeStartState(e, i) {
					let n = M.EMPTY,
						a = new Il();
					for (let o = 0; o < i.transitions.length; o++) {
						let c = i.transitions[o].target,
							h = new Ku({ state: c, alt: o + 1, context: n }, null);
						this.closure(e, h, a, !1, !1, !1);
					}
					return a;
				}
				closure(e, i, n, a, o, c) {
					let h = null;
					if (
						(h0.debug && console.log('closure(' + i.toString(this.recog, !0) + ')'), i.state instanceof W0)
					) {
						if (
							(h0.debug &&
								(this.recog !== null
									? console.log(
											`closure at %s rule stop %s
`,
											this.recog.ruleNames[i.state.ruleIndex],
											i,
									  )
									: console.log(
											`closure at rule stop %s
`,
											i,
									  )),
							i.context === null || i.context.hasEmptyPath())
						) {
							if (i.context === null || i.context.isEmpty()) return n.add(i), !0;
							n.add(new Ku({ state: i.state, context: M.EMPTY }, i)), (a = !0);
						}
						if (i.context !== null && !i.context.isEmpty()) {
							for (let _ = 0; _ < i.context.length; _++)
								if (i.context.getReturnState(_) !== M.EMPTY_RETURN_STATE) {
									let y = i.context.getParent(_),
										W = this.atn.states[i.context.getReturnState(_)];
									(h = new Ku({ state: W, context: y }, i)), (a = this.closure(e, h, n, a, o, c));
								}
						}
						return a;
					}
					i.state.epsilonOnlyTransitions || ((!a || !i.passedThroughNonGreedyDecision) && n.add(i));
					for (let _ = 0; _ < i.state.transitions.length; _++) {
						let y = i.state.transitions[_];
						(h = this.getEpsilonTarget(e, i, y, n, o, c)),
							h !== null && (a = this.closure(e, h, n, a, o, c));
					}
					return a;
				}
				getEpsilonTarget(e, i, n, a, o, c) {
					let h = null;
					if (n.serializationType === I.RULE) {
						let _ = K0.create(i.context, n.followState.stateNumber);
						h = new Ku({ state: n.target, context: _ }, i);
					} else {
						if (n.serializationType === I.PRECEDENCE)
							throw 'Precedence predicates are not supported in lexers.';
						if (n.serializationType === I.PREDICATE)
							h0.debug && console.log('EVAL rule ' + n.ruleIndex + ':' + n.predIndex),
								(a.hasSemanticContext = !0),
								this.evaluatePredicate(e, n.ruleIndex, n.predIndex, o) &&
									(h = new Ku({ state: n.target }, i));
						else if (n.serializationType === I.ACTION)
							if (i.context === null || i.context.hasEmptyPath()) {
								let _ = Ta.append(i.lexerActionExecutor, this.atn.lexerActions[n.actionIndex]);
								h = new Ku({ state: n.target, lexerActionExecutor: _ }, i);
							} else h = new Ku({ state: n.target }, i);
						else
							n.serializationType === I.EPSILON
								? (h = new Ku({ state: n.target }, i))
								: (n.serializationType === I.ATOM ||
										n.serializationType === I.RANGE ||
										n.serializationType === I.SET) &&
								  c &&
								  n.matches(L.EOF, 0, n0.MAX_CHAR_VALUE) &&
								  (h = new Ku({ state: n.target }, i));
					}
					return h;
				}
				evaluatePredicate(e, i, n, a) {
					if (this.recog === null) return !0;
					if (!a) return this.recog.sempred(null, i, n);
					let o = this.column,
						c = this.line,
						h = e.index,
						_ = e.mark();
					try {
						return this.consume(e), this.recog.sempred(null, i, n);
					} finally {
						(this.column = o), (this.line = c), e.seek(h), e.release(_);
					}
				}
				captureSimState(e, i, n) {
					(e.index = i.index), (e.line = this.line), (e.column = this.column), (e.dfaState = n);
				}
				addDFAEdge(e, i, n, a) {
					if ((n === void 0 && (n = null), a === void 0 && (a = null), n === null && a !== null)) {
						let o = a.hasSemanticContext;
						if (((a.hasSemanticContext = !1), (n = this.addDFAState(a)), o)) return n;
					}
					return (
						i < h0.MIN_DFA_EDGE ||
							i > h0.MAX_DFA_EDGE ||
							(h0.debug && console.log('EDGE ' + e + ' -> ' + n + ' upon ' + i),
							e.edges === null && (e.edges = []),
							(e.edges[i - h0.MIN_DFA_EDGE] = n)),
						n
					);
				}
				addDFAState(e) {
					let i = new Rt(null, e),
						n = null;
					for (let h = 0; h < e.items.length; h++) {
						let _ = e.items[h];
						if (_.state instanceof W0) {
							n = _;
							break;
						}
					}
					n !== null &&
						((i.isAcceptState = !0),
						(i.lexerActionExecutor = n.lexerActionExecutor),
						(i.prediction = this.atn.ruleToTokenType[n.state.ruleIndex]));
					let a = this.decisionToDFA[this.mode],
						o = a.states.get(i);
					if (o !== null) return o;
					let c = i;
					return (c.stateNumber = a.states.length), e.setReadonly(!0), (c.configs = e), a.states.add(c), c;
				}
				getDFA(e) {
					return this.decisionToDFA[e];
				}
				getText(e) {
					return e.getText(this.startIndex, e.index - 1);
				}
				consume(e) {
					e.LA(1) ===
					`
`.charCodeAt(0)
						? ((this.line += 1), (this.column = 0))
						: (this.column += 1),
						e.consume();
				}
				getTokenName(e) {
					return e === -1 ? 'EOF' : "'" + String.fromCharCode(e) + "'";
				}
			});
		h0.debug = !1;
		h0.dfa_debug = !1;
		h0.MIN_DFA_EDGE = 0;
		h0.MAX_DFA_EDGE = 127;
	});
var gh,
	Bf = K(() => {
		gh = class {
			constructor(e, i) {
				(this.alt = i), (this.pred = e);
			}
			toString() {
				return '(' + this.pred + ', ' + this.alt + ')';
			}
		};
	});
var pd,
	p7 = K(() => {
		pd = class {
			constructor() {
				this.data = {};
			}
			get(e) {
				return this.data['k-' + e] || null;
			}
			set(e, i) {
				this.data['k-' + e] = i;
			}
			values() {
				return Object.keys(this.data)
					.filter(e => e.startsWith('k-'))
					.map(e => this.data[e], this);
			}
		};
	});
var Ra,
	J0,
	Yf = K(() => {
		lh();
		bl();
		Ph();
		ql();
		oh();
		ed();
		p7();
		ns();
		Wl();
		(Ra = {
			SLL: 0,
			LL: 1,
			LL_EXACT_AMBIG_DETECTION: 2,
			hasSLLConflictTerminatingPrediction: function (u, e) {
				if (Ra.allConfigsInRuleStopStates(e)) return !0;
				if (u === Ra.SLL && e.hasSemanticContext) {
					let n = new R0();
					for (let a = 0; a < e.items.length; a++) {
						let o = e.items[a];
						(o = new r0({ semanticContext: Y.NONE }, o)), n.add(o);
					}
					e = n;
				}
				let i = Ra.getConflictingAltSubsets(e);
				return Ra.hasConflictingAltSet(i) && !Ra.hasStateAssociatedWithOneAlt(e);
			},
			hasConfigInRuleStopState: function (u) {
				for (let e = 0; e < u.items.length; e++) if (u.items[e].state instanceof W0) return !0;
				return !1;
			},
			allConfigsInRuleStopStates: function (u) {
				for (let e = 0; e < u.items.length; e++) if (!(u.items[e].state instanceof W0)) return !1;
				return !0;
			},
			resolvesToJustOneViableAlt: function (u) {
				return Ra.getSingleViableAlt(u);
			},
			allSubsetsConflict: function (u) {
				return !Ra.hasNonConflictingAltSet(u);
			},
			hasNonConflictingAltSet: function (u) {
				for (let e = 0; e < u.length; e++) if (u[e].length === 1) return !0;
				return !1;
			},
			hasConflictingAltSet: function (u) {
				for (let e = 0; e < u.length; e++) if (u[e].length > 1) return !0;
				return !1;
			},
			allSubsetsEqual: function (u) {
				let e = null;
				for (let i = 0; i < u.length; i++) {
					let n = u[i];
					if (e === null) e = n;
					else if (n !== e) return !1;
				}
				return !0;
			},
			getUniqueAlt: function (u) {
				let e = Ra.getAlts(u);
				return e.length === 1 ? e.minValue() : z.INVALID_ALT_NUMBER;
			},
			getAlts: function (u) {
				let e = new Yu();
				return (
					u.map(function (i) {
						e.or(i);
					}),
					e
				);
			},
			getConflictingAltSubsets: function (u) {
				let e = new mi();
				return (
					(e.hashFunction = function (i) {
						d0.hashStuff(i.state.stateNumber, i.context);
					}),
					(e.equalsFunction = function (i, n) {
						return i.state.stateNumber === n.state.stateNumber && i.context.equals(n.context);
					}),
					u.items.map(function (i) {
						let n = e.get(i);
						n === null && ((n = new Yu()), e.set(i, n)), n.add(i.alt);
					}),
					e.getValues()
				);
			},
			getStateToAltMap: function (u) {
				let e = new pd();
				return (
					u.items.map(function (i) {
						let n = e.get(i.state);
						n === null && ((n = new Yu()), e.set(i.state, n)), n.add(i.alt);
					}),
					e
				);
			},
			hasStateAssociatedWithOneAlt: function (u) {
				let e = Ra.getStateToAltMap(u).values();
				for (let i = 0; i < e.length; i++) if (e[i].length === 1) return !0;
				return !1;
			},
			getSingleViableAlt: function (u) {
				let e = null;
				for (let i = 0; i < u.length; i++) {
					let a = u[i].minValue();
					if (e === null) e = a;
					else if (e !== a) return z.INVALID_ALT_NUMBER;
				}
				return e;
			},
		}),
			(J0 = Ra);
	});
var B1,
	jd = K(() => {
		Nh();
		B1 = class extends Gu {
			constructor(e, i, n, a, o, c) {
				(c = c || e._ctx),
					(a = a || e.getCurrentToken()),
					(n = n || e.getCurrentToken()),
					(i = i || e.getInputStream()),
					super({ message: '', recognizer: e, input: i, ctx: c }),
					(this.deadEndConfigs = o),
					(this.startToken = n),
					(this.offendingToken = a);
			}
		};
	});
var hd,
	h7 = K(() => {
		Wl();
		hd = class {
			constructor(e) {
				(this.defaultMapCtor = e || mi), (this.cacheMap = new this.defaultMapCtor());
			}
			get(e, i) {
				let n = this.cacheMap.get(e) || null;
				return n === null ? null : n.get(i) || null;
			}
			set(e, i, n) {
				let a = this.cacheMap.get(e) || null;
				a === null && ((a = new this.defaultMapCtor()), this.cacheMap.set(e, a)), a.set(i, n);
			}
		};
	});
var ld,
	l7 = K(() => {
		lh();
		Bu();
		bl();
		ql();
		Ph();
		cu();
		cd();
		Bf();
		kf();
		Yf();
		kd();
		oh();
		w1();
		ss();
		Ft();
		vd();
		wd();
		Ud();
		gf();
		jd();
		Al();
		td();
		Pf();
		Cl();
		ed();
		h7();
		Vp();
		ld = class extends Vt {
			constructor(e, i, n, a) {
				super(i, a),
					(this.parser = e),
					(this.decisionToDFA = n),
					(this.predictionMode = J0.LL),
					(this._input = null),
					(this._startIndex = 0),
					(this._outerContext = null),
					(this._dfa = null),
					(this.mergeCache = null),
					(this.debug = !1),
					(this.debug_closure = !1),
					(this.debug_add = !1),
					(this.debug_list_atn_decisions = !1),
					(this.dfa_debug = !1),
					(this.retry_debug = !1);
			}
			reset() {}
			adaptivePredict(e, i, n) {
				(this.debug || this.debug_list_atn_decisions) &&
					console.log(
						'adaptivePredict decision ' +
							i +
							' exec LA(1)==' +
							this.getLookaheadName(e) +
							' line ' +
							e.LT(1).line +
							':' +
							e.LT(1).column,
					),
					(this._input = e),
					(this._startIndex = e.index),
					(this._outerContext = n);
				let a = this.decisionToDFA[i];
				this._dfa = a;
				let o = e.mark(),
					c = e.index;
				try {
					let h;
					if (
						(a.precedenceDfa ? (h = a.getPrecedenceStartState(this.parser.getPrecedence())) : (h = a.s0),
						h === null)
					) {
						n === null && (n = xr.EMPTY),
							(this.debug || this.debug_list_atn_decisions) &&
								console.log(
									'predictATN decision ' +
										a.decision +
										' exec LA(1)==' +
										this.getLookaheadName(e) +
										', outerContext=' +
										n.toString(this.parser.ruleNames),
								);
						let y = !1,
							W = this.computeStartState(a.atnStartState, xr.EMPTY, y);
						a.precedenceDfa
							? ((a.s0.configs = W),
							  (W = this.applyPrecedenceFilter(W)),
							  (h = this.addDFAState(a, new Rt(null, W))),
							  a.setPrecedenceStartState(this.parser.getPrecedence(), h))
							: ((h = this.addDFAState(a, new Rt(null, W))), (a.s0 = h));
					}
					let _ = this.execATN(a, h, e, c, n);
					return (
						this.debug &&
							console.log(
								'DFA after predictATN: ' +
									a.toString(this.parser.literalNames, this.parser.symbolicNames),
							),
						_
					);
				} finally {
					(this._dfa = null), (this.mergeCache = null), e.seek(c), e.release(o);
				}
			}
			execATN(e, i, n, a, o) {
				(this.debug || this.debug_list_atn_decisions) &&
					console.log(
						'execATN decision ' +
							e.decision +
							' exec LA(1)==' +
							this.getLookaheadName(n) +
							' line ' +
							n.LT(1).line +
							':' +
							n.LT(1).column,
					);
				let c,
					h = i;
				this.debug && console.log('s0 = ' + i);
				let _ = n.LA(1);
				for (;;) {
					let y = this.getExistingTargetState(h, _);
					if ((y === null && (y = this.computeTargetState(e, h, _)), y === Vt.ERROR)) {
						let W = this.noViableAlt(n, o, h.configs, a);
						if (
							(n.seek(a),
							(c = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(h.configs, o)),
							c !== z.INVALID_ALT_NUMBER)
						)
							return c;
						throw W;
					}
					if (y.requiresFullContext && this.predictionMode !== J0.SLL) {
						let W = null;
						if (y.predicates !== null) {
							this.debug && console.log('DFA state has preds in DFA sim LL failover');
							let w = n.index;
							if (
								(w !== a && n.seek(a),
								(W = this.evalSemanticContext(y.predicates, o, !0)),
								W.length === 1)
							)
								return this.debug && console.log('Full LL avoided'), W.minValue();
							w !== a && n.seek(w);
						}
						this.dfa_debug && console.log('ctx sensitive state ' + o + ' in ' + y);
						let O = !0,
							S = this.computeStartState(e.atnStartState, o, O);
						return (
							this.reportAttemptingFullContext(e, W, y.configs, a, n.index),
							(c = this.execATNWithFullContext(e, y, S, n, a, o)),
							c
						);
					}
					if (y.isAcceptState) {
						if (y.predicates === null) return y.prediction;
						let W = n.index;
						n.seek(a);
						let O = this.evalSemanticContext(y.predicates, o, !0);
						if (O.length === 0) throw this.noViableAlt(n, o, y.configs, a);
						return O.length === 1 || this.reportAmbiguity(e, y, a, W, !1, O, y.configs), O.minValue();
					}
					(h = y), _ !== L.EOF && (n.consume(), (_ = n.LA(1)));
				}
			}
			getExistingTargetState(e, i) {
				let n = e.edges;
				return n === null ? null : n[i + 1] || null;
			}
			computeTargetState(e, i, n) {
				let a = this.computeReachSet(i.configs, n, !1);
				if (a === null) return this.addDFAEdge(e, i, n, Vt.ERROR), Vt.ERROR;
				let o = new Rt(null, a),
					c = this.getUniqueAlt(a);
				if (this.debug) {
					let h = J0.getConflictingAltSubsets(a);
					console.log(
						'SLL altSubSets=' +
							We(h) +
							', configs=' +
							a +
							', predict=' +
							c +
							', allSubsetsConflict=' +
							J0.allSubsetsConflict(h) +
							', conflictingAlts=' +
							this.getConflictingAlts(a),
					);
				}
				return (
					c !== z.INVALID_ALT_NUMBER
						? ((o.isAcceptState = !0), (o.configs.uniqueAlt = c), (o.prediction = c))
						: J0.hasSLLConflictTerminatingPrediction(this.predictionMode, a) &&
						  ((o.configs.conflictingAlts = this.getConflictingAlts(a)),
						  (o.requiresFullContext = !0),
						  (o.isAcceptState = !0),
						  (o.prediction = o.configs.conflictingAlts.minValue())),
					o.isAcceptState &&
						o.configs.hasSemanticContext &&
						(this.predicateDFAState(o, this.atn.getDecisionState(e.decision)),
						o.predicates !== null && (o.prediction = z.INVALID_ALT_NUMBER)),
					(o = this.addDFAEdge(e, i, n, o)),
					o
				);
			}
			predicateDFAState(e, i) {
				let n = i.transitions.length,
					a = this.getConflictingAltsOrUniqueAlt(e.configs),
					o = this.getPredsForAmbigAlts(a, e.configs, n);
				o !== null
					? ((e.predicates = this.getPredicatePredictions(a, o)), (e.prediction = z.INVALID_ALT_NUMBER))
					: (e.prediction = a.minValue());
			}
			execATNWithFullContext(e, i, n, a, o, c) {
				(this.debug || this.debug_list_atn_decisions) && console.log('execATNWithFullContext ' + n);
				let h = !0,
					_ = !1,
					y,
					W = n;
				a.seek(o);
				let O = a.LA(1),
					S = -1;
				for (;;) {
					if (((y = this.computeReachSet(W, O, h)), y === null)) {
						let U = this.noViableAlt(a, c, W, o);
						a.seek(o);
						let u0 = this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(W, c);
						if (u0 !== z.INVALID_ALT_NUMBER) return u0;
						throw U;
					}
					let w = J0.getConflictingAltSubsets(y);
					if (
						(this.debug &&
							console.log(
								'LL altSubSets=' +
									w +
									', predict=' +
									J0.getUniqueAlt(w) +
									', resolvesToJustOneViableAlt=' +
									J0.resolvesToJustOneViableAlt(w),
							),
						(y.uniqueAlt = this.getUniqueAlt(y)),
						y.uniqueAlt !== z.INVALID_ALT_NUMBER)
					) {
						S = y.uniqueAlt;
						break;
					} else if (this.predictionMode !== J0.LL_EXACT_AMBIG_DETECTION) {
						if (((S = J0.resolvesToJustOneViableAlt(w)), S !== z.INVALID_ALT_NUMBER)) break;
					} else if (J0.allSubsetsConflict(w) && J0.allSubsetsEqual(w)) {
						(_ = !0), (S = J0.getSingleViableAlt(w));
						break;
					}
					(W = y), O !== L.EOF && (a.consume(), (O = a.LA(1)));
				}
				return y.uniqueAlt !== z.INVALID_ALT_NUMBER
					? (this.reportContextSensitivity(e, S, y, o, a.index), S)
					: (this.reportAmbiguity(e, i, o, a.index, _, null, y), S);
			}
			computeReachSet(e, i, n) {
				this.debug && console.log('in computeReachSet, starting closure: ' + e),
					this.mergeCache === null && (this.mergeCache = new hd());
				let a = new R0(n),
					o = null;
				for (let h = 0; h < e.items.length; h++) {
					let _ = e.items[h];
					if (
						(this.debug && console.log('testing ' + this.getTokenName(i) + ' at ' + _),
						_.state instanceof W0)
					) {
						(n || i === L.EOF) &&
							(o === null && (o = []),
							o.push(_),
							this.debug_add && console.log('added ' + _ + ' to skippedStopStates'));
						continue;
					}
					for (let y = 0; y < _.state.transitions.length; y++) {
						let W = _.state.transitions[y],
							O = this.getReachableTarget(W, i);
						if (O !== null) {
							let S = new r0({ state: O }, _);
							a.add(S, this.mergeCache), this.debug_add && console.log('added ' + S + ' to intermediate');
						}
					}
				}
				let c = null;
				if (
					(o === null &&
						i !== L.EOF &&
						(a.items.length === 1 || this.getUniqueAlt(a) !== z.INVALID_ALT_NUMBER) &&
						(c = a),
					c === null)
				) {
					c = new R0(n);
					let h = new b0(),
						_ = i === L.EOF;
					for (let y = 0; y < a.items.length; y++) this.closure(a.items[y], c, h, !1, n, _);
				}
				if (
					(i === L.EOF && (c = this.removeAllConfigsNotInRuleStopState(c, c === a)),
					o !== null && (!n || !J0.hasConfigInRuleStopState(c)))
				)
					for (let h = 0; h < o.length; h++) c.add(o[h], this.mergeCache);
				return c.items.length === 0 ? null : c;
			}
			removeAllConfigsNotInRuleStopState(e, i) {
				if (J0.allConfigsInRuleStopStates(e)) return e;
				let n = new R0(e.fullCtx);
				for (let a = 0; a < e.items.length; a++) {
					let o = e.items[a];
					if (o.state instanceof W0) {
						n.add(o, this.mergeCache);
						continue;
					}
					if (i && o.state.epsilonOnlyTransitions && this.atn.nextTokens(o.state).contains(L.EPSILON)) {
						let h = this.atn.ruleToStopState[o.state.ruleIndex];
						n.add(new r0({ state: h }, o), this.mergeCache);
					}
				}
				return n;
			}
			computeStartState(e, i, n) {
				let a = ud(this.atn, i),
					o = new R0(n);
				for (let c = 0; c < e.transitions.length; c++) {
					let h = e.transitions[c].target,
						_ = new r0({ state: h, alt: c + 1, context: a }, null),
						y = new b0();
					this.closure(_, o, y, !0, n, !1);
				}
				return o;
			}
			applyPrecedenceFilter(e) {
				let i,
					n = [],
					a = new R0(e.fullCtx);
				for (let o = 0; o < e.items.length; o++) {
					if (((i = e.items[o]), i.alt !== 1)) continue;
					let c = i.semanticContext.evalPrecedence(this.parser, this._outerContext);
					c !== null &&
						((n[i.state.stateNumber] = i.context),
						c !== i.semanticContext
							? a.add(new r0({ semanticContext: c }, i), this.mergeCache)
							: a.add(i, this.mergeCache));
				}
				for (let o = 0; o < e.items.length; o++)
					if (((i = e.items[o]), i.alt !== 1)) {
						if (!i.precedenceFilterSuppressed) {
							let c = n[i.state.stateNumber] || null;
							if (c !== null && c.equals(i.context)) continue;
						}
						a.add(i, this.mergeCache);
					}
				return a;
			}
			getReachableTarget(e, i) {
				return e.matches(i, 0, this.atn.maxTokenType) ? e.target : null;
			}
			getPredsForAmbigAlts(e, i, n) {
				let a = [];
				for (let c = 0; c < i.items.length; c++) {
					let h = i.items[c];
					e.has(h.alt) && (a[h.alt] = Y.orContext(a[h.alt] || null, h.semanticContext));
				}
				let o = 0;
				for (let c = 1; c < n + 1; c++) {
					let h = a[c] || null;
					h === null ? (a[c] = Y.NONE) : h !== Y.NONE && (o += 1);
				}
				return o === 0 && (a = null), this.debug && console.log('getPredsForAmbigAlts result ' + We(a)), a;
			}
			getPredicatePredictions(e, i) {
				let n = [],
					a = !1;
				for (let o = 1; o < i.length; o++) {
					let c = i[o];
					e !== null && e.has(o) && n.push(new gh(c, o)), c !== Y.NONE && (a = !0);
				}
				return a ? n : null;
			}
			getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(e, i) {
				let n = this.splitAccordingToSemanticValidity(e, i),
					a = n[0],
					o = n[1],
					c = this.getAltThatFinishedDecisionEntryRule(a);
				return c !== z.INVALID_ALT_NUMBER ||
					(o.items.length > 0 &&
						((c = this.getAltThatFinishedDecisionEntryRule(o)), c !== z.INVALID_ALT_NUMBER))
					? c
					: z.INVALID_ALT_NUMBER;
			}
			getAltThatFinishedDecisionEntryRule(e) {
				let i = [];
				for (let n = 0; n < e.items.length; n++) {
					let a = e.items[n];
					(a.reachesIntoOuterContext > 0 || (a.state instanceof W0 && a.context.hasEmptyPath())) &&
						i.indexOf(a.alt) < 0 &&
						i.push(a.alt);
				}
				return i.length === 0 ? z.INVALID_ALT_NUMBER : Math.min.apply(null, i);
			}
			splitAccordingToSemanticValidity(e, i) {
				let n = new R0(e.fullCtx),
					a = new R0(e.fullCtx);
				for (let o = 0; o < e.items.length; o++) {
					let c = e.items[o];
					c.semanticContext !== Y.NONE
						? c.semanticContext.evaluate(this.parser, i)
							? n.add(c)
							: a.add(c)
						: n.add(c);
				}
				return [n, a];
			}
			evalSemanticContext(e, i, n) {
				let a = new Yu();
				for (let o = 0; o < e.length; o++) {
					let c = e[o];
					if (c.pred === Y.NONE) {
						if ((a.add(c.alt), !n)) break;
						continue;
					}
					let h = c.pred.evaluate(this.parser, i);
					if (
						((this.debug || this.dfa_debug) && console.log('eval pred ' + c + '=' + h),
						h && ((this.debug || this.dfa_debug) && console.log('PREDICT ' + c.alt), a.add(c.alt), !n))
					)
						break;
				}
				return a;
			}
			closure(e, i, n, a, o, c) {
				this.closureCheckingStopState(e, i, n, a, o, 0, c);
			}
			closureCheckingStopState(e, i, n, a, o, c, h) {
				if (
					(this.debug || this.debug_closure) &&
					(console.log('closure(' + e.toString(this.parser, !0) + ')'), e.reachesIntoOuterContext > 50)
				)
					throw 'problem';
				if (e.state instanceof W0)
					if (e.context.isEmpty())
						if (o) {
							i.add(e, this.mergeCache);
							return;
						} else this.debug && console.log('FALLING off rule ' + this.getRuleName(e.state.ruleIndex));
					else {
						for (let _ = 0; _ < e.context.length; _++) {
							if (e.context.getReturnState(_) === M.EMPTY_RETURN_STATE) {
								if (o) {
									i.add(new r0({ state: e.state, context: M.EMPTY }, e), this.mergeCache);
									continue;
								} else
									this.debug &&
										console.log('FALLING off rule ' + this.getRuleName(e.state.ruleIndex)),
										this.closure_(e, i, n, a, o, c, h);
								continue;
							}
							let y = this.atn.states[e.context.getReturnState(_)],
								W = e.context.getParent(_),
								O = { state: y, alt: e.alt, context: W, semanticContext: e.semanticContext },
								S = new r0(O, null);
							(S.reachesIntoOuterContext = e.reachesIntoOuterContext),
								this.closureCheckingStopState(S, i, n, a, o, c - 1, h);
						}
						return;
					}
				this.closure_(e, i, n, a, o, c, h);
			}
			closure_(e, i, n, a, o, c, h) {
				let _ = e.state;
				_.epsilonOnlyTransitions || i.add(e, this.mergeCache);
				for (let y = 0; y < _.transitions.length; y++) {
					if (y === 0 && this.canDropLoopEntryEdgeInLeftRecursiveRule(e)) continue;
					let W = _.transitions[y],
						O = a && !(W instanceof Rh),
						S = this.getEpsilonTarget(e, W, O, c === 0, o, h);
					if (S !== null) {
						let w = c;
						if (e.state instanceof W0) {
							if (
								(this._dfa !== null &&
									this._dfa.precedenceDfa &&
									W.outermostPrecedenceReturn === this._dfa.atnStartState.ruleIndex &&
									(S.precedenceFilterSuppressed = !0),
								(S.reachesIntoOuterContext += 1),
								n.add(S) !== S)
							)
								continue;
							(i.dipsIntoOuterContext = !0),
								(w -= 1),
								this.debug && console.log('dips into outer ctx: ' + S);
						} else {
							if (!W.isEpsilon && n.add(S) !== S) continue;
							W instanceof ha && w >= 0 && (w += 1);
						}
						this.closureCheckingStopState(S, i, n, O, o, w, h);
					}
				}
			}
			canDropLoopEntryEdgeInLeftRecursiveRule(e) {
				let i = e.state;
				if (
					i.stateType !== N.STAR_LOOP_ENTRY ||
					i.stateType !== N.STAR_LOOP_ENTRY ||
					!i.isPrecedenceDecision ||
					e.context.isEmpty() ||
					e.context.hasEmptyPath()
				)
					return !1;
				let n = e.context.length;
				for (let h = 0; h < n; h++)
					if (this.atn.states[e.context.getReturnState(h)].ruleIndex !== i.ruleIndex) return !1;
				let o = i.transitions[0].target.endState.stateNumber,
					c = this.atn.states[o];
				for (let h = 0; h < n; h++) {
					let _ = e.context.getReturnState(h),
						y = this.atn.states[_];
					if (y.transitions.length !== 1 || !y.transitions[0].isEpsilon) return !1;
					let W = y.transitions[0].target;
					if (
						!(y.stateType === N.BLOCK_END && W === i) &&
						y !== c &&
						W !== c &&
						!(
							W.stateType === N.BLOCK_END &&
							W.transitions.length === 1 &&
							W.transitions[0].isEpsilon &&
							W.transitions[0].target === i
						)
					)
						return !1;
				}
				return !0;
			}
			getRuleName(e) {
				return this.parser !== null && e >= 0 ? this.parser.ruleNames[e] : '<rule ' + e + '>';
			}
			getEpsilonTarget(e, i, n, a, o, c) {
				switch (i.serializationType) {
					case I.RULE:
						return this.ruleTransition(e, i);
					case I.PRECEDENCE:
						return this.precedenceTransition(e, i, n, a, o);
					case I.PREDICATE:
						return this.predTransition(e, i, n, a, o);
					case I.ACTION:
						return this.actionTransition(e, i);
					case I.EPSILON:
						return new r0({ state: i.target }, e);
					case I.ATOM:
					case I.RANGE:
					case I.SET:
						return c && i.matches(L.EOF, 0, 1) ? new r0({ state: i.target }, e) : null;
					default:
						return null;
				}
			}
			actionTransition(e, i) {
				if (this.debug) {
					let n = i.actionIndex === -1 ? 65535 : i.actionIndex;
					console.log('ACTION edge ' + i.ruleIndex + ':' + n);
				}
				return new r0({ state: i.target }, e);
			}
			precedenceTransition(e, i, n, a, o) {
				this.debug &&
					(console.log('PRED (collectPredicates=' + n + ') ' + i.precedence + '>=_p, ctx dependent=true'),
					this.parser !== null &&
						console.log('context surrounding pred is ' + We(this.parser.getRuleInvocationStack())));
				let c = null;
				if (n && a)
					if (o) {
						let h = this._input.index;
						this._input.seek(this._startIndex);
						let _ = i.getPredicate().evaluate(this.parser, this._outerContext);
						this._input.seek(h), _ && (c = new r0({ state: i.target }, e));
					} else {
						let h = Y.andContext(e.semanticContext, i.getPredicate());
						c = new r0({ state: i.target, semanticContext: h }, e);
					}
				else c = new r0({ state: i.target }, e);
				return this.debug && console.log('config from pred transition=' + c), c;
			}
			predTransition(e, i, n, a, o) {
				this.debug &&
					(console.log(
						'PRED (collectPredicates=' +
							n +
							') ' +
							i.ruleIndex +
							':' +
							i.predIndex +
							', ctx dependent=' +
							i.isCtxDependent,
					),
					this.parser !== null &&
						console.log('context surrounding pred is ' + We(this.parser.getRuleInvocationStack())));
				let c = null;
				if (n && ((i.isCtxDependent && a) || !i.isCtxDependent))
					if (o) {
						let h = this._input.index;
						this._input.seek(this._startIndex);
						let _ = i.getPredicate().evaluate(this.parser, this._outerContext);
						this._input.seek(h), _ && (c = new r0({ state: i.target }, e));
					} else {
						let h = Y.andContext(e.semanticContext, i.getPredicate());
						c = new r0({ state: i.target, semanticContext: h }, e);
					}
				else c = new r0({ state: i.target }, e);
				return this.debug && console.log('config from pred transition=' + c), c;
			}
			ruleTransition(e, i) {
				this.debug && console.log('CALL rule ' + this.getRuleName(i.target.ruleIndex) + ', ctx=' + e.context);
				let n = i.followState,
					a = K0.create(e.context, n.stateNumber);
				return new r0({ state: i.target, context: a }, e);
			}
			getConflictingAlts(e) {
				let i = J0.getConflictingAltSubsets(e);
				return J0.getAlts(i);
			}
			getConflictingAltsOrUniqueAlt(e) {
				let i = null;
				return (
					e.uniqueAlt !== z.INVALID_ALT_NUMBER
						? ((i = new Yu()), i.add(e.uniqueAlt))
						: (i = e.conflictingAlts),
					i
				);
			}
			getTokenName(e) {
				if (e === L.EOF) return 'EOF';
				if (this.parser !== null && this.parser.literalNames !== null)
					if (e >= this.parser.literalNames.length && e >= this.parser.symbolicNames.length)
						console.log('' + e + ' ttype out of range: ' + this.parser.literalNames),
							console.log('' + this.parser.getInputStream().getTokens());
					else return (this.parser.literalNames[e] || this.parser.symbolicNames[e]) + '<' + e + '>';
				return '' + e;
			}
			getLookaheadName(e) {
				return this.getTokenName(e.LA(1));
			}
			dumpDeadEndConfigs(e) {
				console.log('dead end configs: ');
				let i = e.getDeadEndConfigs();
				for (let n = 0; n < i.length; n++) {
					let a = i[n],
						o = 'no edges';
					if (a.state.transitions.length > 0) {
						let c = a.state.transitions[0];
						c instanceof M1
							? (o = 'Atom ' + this.getTokenName(c.label))
							: c instanceof g1 && (o = (c instanceof D1 ? '~' : '') + 'Set ' + c.set);
					}
					console.error(a.toString(this.parser, !0) + ':' + o);
				}
			}
			noViableAlt(e, i, n, a) {
				return new B1(this.parser, e, e.get(a), e.LT(1), n, i);
			}
			getUniqueAlt(e) {
				let i = z.INVALID_ALT_NUMBER;
				for (let n = 0; n < e.items.length; n++) {
					let a = e.items[n];
					if (i === z.INVALID_ALT_NUMBER) i = a.alt;
					else if (a.alt !== i) return z.INVALID_ALT_NUMBER;
				}
				return i;
			}
			addDFAEdge(e, i, n, a) {
				if ((this.debug && console.log('EDGE ' + i + ' -> ' + a + ' upon ' + this.getTokenName(n)), a === null))
					return null;
				if (((a = this.addDFAState(e, a)), i === null || n < -1 || n > this.atn.maxTokenType)) return a;
				if ((i.edges === null && (i.edges = []), (i.edges[n + 1] = a), this.debug)) {
					let o = this.parser === null ? null : this.parser.literalNames,
						c = this.parser === null ? null : this.parser.symbolicNames;
					console.log(
						`DFA=
` + e.toString(o, c),
					);
				}
				return a;
			}
			addDFAState(e, i) {
				if (i === Vt.ERROR) return i;
				let n = e.states.get(i);
				return n !== null
					? n
					: ((i.stateNumber = e.states.length),
					  i.configs.readOnly || (i.configs.optimizeConfigs(this), i.configs.setReadonly(!0)),
					  e.states.add(i),
					  this.debug && console.log('adding new DFA state: ' + i),
					  i);
			}
			reportAttemptingFullContext(e, i, n, a, o) {
				if (this.debug || this.retry_debug) {
					let c = new k(a, o + 1);
					console.log(
						'reportAttemptingFullContext decision=' +
							e.decision +
							':' +
							n +
							', input=' +
							this.parser.getTokenStream().getText(c),
					);
				}
				this.parser !== null &&
					this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser, e, a, o, i, n);
			}
			reportContextSensitivity(e, i, n, a, o) {
				if (this.debug || this.retry_debug) {
					let c = new k(a, o + 1);
					console.log(
						'reportContextSensitivity decision=' +
							e.decision +
							':' +
							n +
							', input=' +
							this.parser.getTokenStream().getText(c),
					);
				}
				this.parser !== null &&
					this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser, e, a, o, i, n);
			}
			reportAmbiguity(e, i, n, a, o, c, h) {
				if (this.debug || this.retry_debug) {
					let _ = new k(n, a + 1);
					console.log(
						'reportAmbiguity ' + c + ':' + h + ', input=' + this.parser.getTokenStream().getText(_),
					);
				}
				this.parser !== null &&
					this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser, e, n, a, o, c, h);
			}
		};
	});
var d7,
	f7 = K(() => {
		lh();
		wf();
		c7();
		l7();
		Yf();
		d7 = { ATN: z, ATNDeserializer: Lh, LexerATNSimulator: h0, ParserATNSimulator: ld, PredictionMode: J0 };
	});
var Y1,
	Xd = K(() => {
		Cl();
		Y1 = class {
			constructor(e, i, n) {
				(this.dfa = e), (this.literalNames = i || []), (this.symbolicNames = n || []);
			}
			toString() {
				if (this.dfa.s0 === null) return null;
				let e = '',
					i = this.dfa.sortedStates();
				for (let n = 0; n < i.length; n++) {
					let a = i[n];
					if (a.edges !== null) {
						let o = a.edges.length;
						for (let c = 0; c < o; c++) {
							let h = a.edges[c] || null;
							h !== null &&
								h.stateNumber !== 2147483647 &&
								((e = e.concat(this.getStateString(a))),
								(e = e.concat('-')),
								(e = e.concat(this.getEdgeLabel(c))),
								(e = e.concat('->')),
								(e = e.concat(this.getStateString(h))),
								(e = e.concat(`
`)));
						}
					}
				}
				return e.length === 0 ? null : e;
			}
			getEdgeLabel(e) {
				return e === 0
					? 'EOF'
					: this.literalNames !== null || this.symbolicNames !== null
					? this.literalNames[e - 1] || this.symbolicNames[e - 1]
					: String.fromCharCode(e - 1);
			}
			getStateString(e) {
				let i = (e.isAcceptState ? ':' : '') + 's' + e.stateNumber + (e.requiresFullContext ? '^' : '');
				return e.isAcceptState
					? e.predicates !== null
						? i + '=>' + We(e.predicates)
						: i + '=>' + e.prediction.toString()
					: i;
			}
		};
	});
var Dh,
	Gf = K(() => {
		Xd();
		Dh = class extends Y1 {
			constructor(e) {
				super(e, null);
			}
			getEdgeLabel(e) {
				return "'" + String.fromCharCode(e) + "'";
			}
		};
	});
var dd,
	_7 = K(() => {
		cd();
		Nf();
		Ph();
		Xd();
		Gf();
		Vp();
		dd = class {
			constructor(e, i) {
				if (
					(i === void 0 && (i = 0),
					(this.atnStartState = e),
					(this.decision = i),
					(this._states = new b0()),
					(this.s0 = null),
					(this.precedenceDfa = !1),
					e instanceof Or && e.isPrecedenceDecision)
				) {
					this.precedenceDfa = !0;
					let n = new Rt(null, new R0());
					(n.edges = []), (n.isAcceptState = !1), (n.requiresFullContext = !1), (this.s0 = n);
				}
			}
			getPrecedenceStartState(e) {
				if (!this.precedenceDfa) throw 'Only precedence DFAs may contain a precedence start state.';
				return e < 0 || e >= this.s0.edges.length ? null : this.s0.edges[e] || null;
			}
			setPrecedenceStartState(e, i) {
				if (!this.precedenceDfa) throw 'Only precedence DFAs may contain a precedence start state.';
				e < 0 || (this.s0.edges[e] = i);
			}
			setPrecedenceDfa(e) {
				if (this.precedenceDfa !== e) {
					if (((this._states = new b0()), e)) {
						let i = new Rt(null, new R0());
						(i.edges = []), (i.isAcceptState = !1), (i.requiresFullContext = !1), (this.s0 = i);
					} else this.s0 = null;
					this.precedenceDfa = e;
				}
			}
			sortedStates() {
				return this._states.values().sort(function (i, n) {
					return i.stateNumber - n.stateNumber;
				});
			}
			toString(e, i) {
				return (e = e || null), (i = i || null), this.s0 === null ? '' : new Y1(this, e, i).toString();
			}
			toLexerString() {
				return this.s0 === null ? '' : new Dh(this).toString();
			}
			get states() {
				return this._states;
			}
		};
	});
var E7,
	T7 = K(() => {
		_7();
		Xd();
		Gf();
		Bf();
		E7 = { DFA: dd, DFASerializer: Y1, LexerDFASerializer: Dh, PredPrediction: gh };
	});
var Uh,
	jf = K(() => {
		Uh = class {
			visitTerminal(e) {}
			visitErrorNode(e) {}
			enterEveryRule(e) {}
			exitEveryRule(e) {}
		};
	});
var fd,
	R7 = K(() => {
		fd = class {
			visit(e) {
				return Array.isArray(e)
					? e.map(function (i) {
							return i.accept(this);
					  }, this)
					: e.accept(this);
			}
			visitChildren(e) {
				return e.children ? this.visit(e.children) : null;
			}
			visitTerminal(e) {}
			visitErrorNode(e) {}
		};
	});
var vh,
	m7 = K(() => {
		Bp();
		zl();
		vh = class {
			walk(e, i) {
				if (i instanceof as || (i.isErrorNode !== void 0 && i.isErrorNode())) e.visitErrorNode(i);
				else if (i instanceof pu) e.visitTerminal(i);
				else {
					this.enterRule(e, i);
					for (let a = 0; a < i.getChildCount(); a++) {
						let o = i.getChild(a);
						this.walk(e, o);
					}
					this.exitRule(e, i);
				}
			}
			enterRule(e, i) {
				let n = i.getRuleContext();
				e.enterEveryRule(n), n.enterRule(e);
			}
			exitRule(e, i) {
				let n = i.getRuleContext();
				n.exitRule(e), e.exitEveryRule(n);
			}
		};
		vh.DEFAULT = new vh();
	});
var y7,
	C7 = K(() => {
		Hd();
		zl();
		Bp();
		jf();
		R7();
		m7();
		Lf();
		y7 = {
			Trees: Fd,
			RuleNode: la,
			ErrorNode: as,
			TerminalNode: pu,
			ParseTreeListener: Uh,
			ParseTreeVisitor: fd,
			ParseTreeWalker: vh,
		};
	});
var ps,
	Qd = K(() => {
		Nh();
		ps = class extends Gu {
			constructor(e) {
				super({ message: '', recognizer: e, input: e.getInputStream(), ctx: e._ctx }),
					(this.offendingToken = e.getCurrentToken());
			}
		};
	});
function K9(u, e) {
	return e !== null ? e : 'failed predicate: {' + u + '}?';
}
var wh,
	Xf = K(() => {
		Df();
		Nh();
		wh = class extends Gu {
			constructor(e, i, n) {
				super({ message: K9(i, n || null), recognizer: e, input: e.getInputStream(), ctx: e._ctx });
				let o = e._interp.atn.states[e.state].transitions[0];
				o instanceof mh
					? ((this.ruleIndex = o.ruleIndex), (this.predicateIndex = o.predIndex))
					: ((this.ruleIndex = 0), (this.predicateIndex = 0)),
					(this.predicate = i),
					(this.offendingToken = e.getCurrentToken());
			}
		};
	});
var _d,
	b7 = K(() => {
		ad();
		ss();
		ed();
		_d = class extends cs {
			constructor(e) {
				super(), (e = e || !0), (this.exactOnly = e);
			}
			reportAmbiguity(e, i, n, a, o, c, h) {
				if (this.exactOnly && !o) return;
				let _ =
					'reportAmbiguity d=' +
					this.getDecisionDescription(e, i) +
					': ambigAlts=' +
					this.getConflictingAlts(c, h) +
					", input='" +
					e.getTokenStream().getText(new k(n, a)) +
					"'";
				e.notifyErrorListeners(_);
			}
			reportAttemptingFullContext(e, i, n, a, o, c) {
				let h =
					'reportAttemptingFullContext d=' +
					this.getDecisionDescription(e, i) +
					", input='" +
					e.getTokenStream().getText(new k(n, a)) +
					"'";
				e.notifyErrorListeners(h);
			}
			reportContextSensitivity(e, i, n, a, o, c) {
				let h =
					'reportContextSensitivity d=' +
					this.getDecisionDescription(e, i) +
					", input='" +
					e.getTokenStream().getText(new k(n, a)) +
					"'";
				e.notifyErrorListeners(h);
			}
			getDecisionDescription(e, i) {
				let n = i.decision,
					a = i.atnStartState.ruleIndex,
					o = e.ruleNames;
				if (a < 0 || a >= o.length) return '' + n;
				let c = o[a] || null;
				return c === null || c.length === 0 ? '' + n : `${n} (${c})`;
			}
			getConflictingAlts(e, i) {
				if (e !== null) return e;
				let n = new Yu();
				for (let a = 0; a < i.items.length; a++) n.add(i.items[a].alt);
				return `{${n.values().join(', ')}}`;
			}
		};
	});
var Mh,
	A7 = K(() => {
		Mh = class extends Error {
			constructor() {
				super(), Error.captureStackTrace(this, Mh);
			}
		};
	});
var Ed,
	W7 = K(() => {
		Ed = class {
			reset(e) {}
			recoverInline(e) {}
			recover(e, i) {}
			sync(e) {}
			inErrorRecoveryMode(e) {}
			reportError(e) {}
		};
	});
var G1,
	qd = K(() => {
		Xf();
		Qd();
		jd();
		Bu();
		cu();
		ss();
		P1();
		W7();
		G1 = class extends Ed {
			constructor() {
				super(),
					(this.errorRecoveryMode = !1),
					(this.lastErrorIndex = -1),
					(this.lastErrorStates = null),
					(this.nextTokensContext = null),
					(this.nextTokenState = 0);
			}
			reset(e) {
				this.endErrorCondition(e);
			}
			beginErrorCondition(e) {
				this.errorRecoveryMode = !0;
			}
			inErrorRecoveryMode(e) {
				return this.errorRecoveryMode;
			}
			endErrorCondition(e) {
				(this.errorRecoveryMode = !1), (this.lastErrorStates = null), (this.lastErrorIndex = -1);
			}
			reportMatch(e) {
				this.endErrorCondition(e);
			}
			reportError(e, i) {
				this.inErrorRecoveryMode(e) ||
					(this.beginErrorCondition(e),
					i instanceof B1
						? this.reportNoViableAlternative(e, i)
						: i instanceof ps
						? this.reportInputMismatch(e, i)
						: i instanceof wh
						? this.reportFailedPredicate(e, i)
						: (console.log('unknown recognition error type: ' + i.constructor.name),
						  console.log(i.stack),
						  e.notifyErrorListeners(i.getOffendingToken(), i.getMessage(), i)));
			}
			recover(e, i) {
				this.lastErrorIndex === e.getInputStream().index &&
					this.lastErrorStates !== null &&
					this.lastErrorStates.indexOf(e.state) >= 0 &&
					e.consume(),
					(this.lastErrorIndex = e._input.index),
					this.lastErrorStates === null && (this.lastErrorStates = []),
					this.lastErrorStates.push(e.state);
				let n = this.getErrorRecoverySet(e);
				this.consumeUntil(e, n);
			}
			sync(e) {
				if (this.inErrorRecoveryMode(e)) return;
				let i = e._interp.atn.states[e.state],
					n = e.getTokenStream().LA(1),
					a = e.atn.nextTokens(i);
				if (a.contains(n)) {
					(this.nextTokensContext = null), (this.nextTokenState = N.INVALID_STATE_NUMBER);
					return;
				} else if (a.contains(L.EPSILON)) {
					this.nextTokensContext === null &&
						((this.nextTokensContext = e._ctx), (this.nextTokensState = e._stateNumber));
					return;
				}
				switch (i.stateType) {
					case N.BLOCK_START:
					case N.STAR_BLOCK_START:
					case N.PLUS_BLOCK_START:
					case N.STAR_LOOP_ENTRY:
						if (this.singleTokenDeletion(e) !== null) return;
						throw new ps(e);
					case N.PLUS_LOOP_BACK:
					case N.STAR_LOOP_BACK:
						{
							this.reportUnwantedToken(e);
							let o = new A0();
							o.addSet(e.getExpectedTokens());
							let c = o.addSet(this.getErrorRecoverySet(e));
							this.consumeUntil(e, c);
						}
						break;
					default:
				}
			}
			reportNoViableAlternative(e, i) {
				let n = e.getTokenStream(),
					a;
				n !== null
					? i.startToken.type === L.EOF
						? (a = '<EOF>')
						: (a = n.getText(new k(i.startToken.tokenIndex, i.offendingToken.tokenIndex)))
					: (a = '<unknown input>');
				let o = 'no viable alternative at input ' + this.escapeWSAndQuote(a);
				e.notifyErrorListeners(o, i.offendingToken, i);
			}
			reportInputMismatch(e, i) {
				let n =
					'mismatched input ' +
					this.getTokenErrorDisplay(i.offendingToken) +
					' expecting ' +
					i.getExpectedTokens().toString(e.literalNames, e.symbolicNames);
				e.notifyErrorListeners(n, i.offendingToken, i);
			}
			reportFailedPredicate(e, i) {
				let n = e.ruleNames[e._ctx.ruleIndex],
					a = 'rule ' + n + ' ' + i.message;
				e.notifyErrorListeners(a, i.offendingToken, i);
			}
			reportUnwantedToken(e) {
				if (this.inErrorRecoveryMode(e)) return;
				this.beginErrorCondition(e);
				let i = e.getCurrentToken(),
					n = this.getTokenErrorDisplay(i),
					a = this.getExpectedTokens(e),
					o = 'extraneous input ' + n + ' expecting ' + a.toString(e.literalNames, e.symbolicNames);
				e.notifyErrorListeners(o, i, null);
			}
			reportMissingToken(e) {
				if (this.inErrorRecoveryMode(e)) return;
				this.beginErrorCondition(e);
				let i = e.getCurrentToken(),
					n = this.getExpectedTokens(e),
					a =
						'missing ' +
						n.toString(e.literalNames, e.symbolicNames) +
						' at ' +
						this.getTokenErrorDisplay(i);
				e.notifyErrorListeners(a, i, null);
			}
			recoverInline(e) {
				let i = this.singleTokenDeletion(e);
				if (i !== null) return e.consume(), i;
				if (this.singleTokenInsertion(e)) return this.getMissingSymbol(e);
				throw new ps(e);
			}
			singleTokenInsertion(e) {
				let i = e.getTokenStream().LA(1),
					n = e._interp.atn,
					o = n.states[e.state].transitions[0].target;
				return n.nextTokens(o, e._ctx).contains(i) ? (this.reportMissingToken(e), !0) : !1;
			}
			singleTokenDeletion(e) {
				let i = e.getTokenStream().LA(2);
				if (this.getExpectedTokens(e).contains(i)) {
					this.reportUnwantedToken(e), e.consume();
					let a = e.getCurrentToken();
					return this.reportMatch(e), a;
				} else return null;
			}
			getMissingSymbol(e) {
				let i = e.getCurrentToken(),
					a = this.getExpectedTokens(e).first(),
					o;
				a === L.EOF ? (o = '<missing EOF>') : (o = '<missing ' + e.literalNames[a] + '>');
				let c = i,
					h = e.getTokenStream().LT(-1);
				return (
					c.type === L.EOF && h !== null && (c = h),
					e.getTokenFactory().create(c.source, a, o, L.DEFAULT_CHANNEL, -1, -1, c.line, c.column)
				);
			}
			getExpectedTokens(e) {
				return e.getExpectedTokens();
			}
			getTokenErrorDisplay(e) {
				if (e === null) return '<no token>';
				let i = e.text;
				return (
					i === null && (e.type === L.EOF ? (i = '<EOF>') : (i = '<' + e.type + '>')),
					this.escapeWSAndQuote(i)
				);
			}
			escapeWSAndQuote(e) {
				return (
					(e = e.replace(/\n/g, '\\n')),
					(e = e.replace(/\r/g, '\\r')),
					(e = e.replace(/\t/g, '\\t')),
					"'" + e + "'"
				);
			}
			getErrorRecoverySet(e) {
				let i = e._interp.atn,
					n = e._ctx,
					a = new A0();
				for (; n !== null && n.invokingState >= 0; ) {
					let c = i.states[n.invokingState].transitions[0],
						h = i.nextTokens(c.followState);
					a.addSet(h), (n = n.parentCtx);
				}
				return a.removeOne(L.EPSILON), a;
			}
			consumeUntil(e, i) {
				let n = e.getTokenStream().LA(1);
				for (; n !== L.EOF && !i.contains(n); ) e.consume(), (n = e.getTokenStream().LA(1));
			}
		};
	});
var Td,
	K7 = K(() => {
		Qd();
		A7();
		qd();
		Td = class extends G1 {
			constructor() {
				super();
			}
			recover(e, i) {
				let n = e._ctx;
				for (; n !== null; ) (n.exception = i), (n = n.parentCtx);
				throw new Mh(i);
			}
			recoverInline(e) {
				this.recover(e, new ps(e));
			}
			sync(e) {}
		};
	});
var x7,
	O7 = K(() => {
		Nh();
		jd();
		Yd();
		Qd();
		Xf();
		b7();
		K7();
		qd();
		ad();
		x7 = {
			RecognitionException: Gu,
			NoViableAltException: B1,
			LexerNoViableAltException: k1,
			InputMismatchException: ps,
			FailedPredicateException: wh,
			DiagnosticErrorListener: _d,
			BailErrorStrategy: Td,
			DefaultErrorStrategy: G1,
			ErrorListener: cs,
		};
	});
var Ci,
	Zd = K(() => {
		cu();
		yf();
		Cf();
		Ci = class {
			constructor(e, i) {
				if (
					((this.name = '<empty>'),
					(this.strdata = e),
					(this.decodeToUnicodeCodePoints = i || !1),
					(this._index = 0),
					(this.data = []),
					this.decodeToUnicodeCodePoints)
				)
					for (let n = 0; n < this.strdata.length; ) {
						let a = this.strdata.codePointAt(n);
						this.data.push(a), (n += a <= 65535 ? 1 : 2);
					}
				else {
					this.data = new Array(this.strdata.length);
					for (let n = 0; n < this.strdata.length; n++) {
						let a = this.strdata.charCodeAt(n);
						this.data[n] = a;
					}
				}
				this._size = this.data.length;
			}
			reset() {
				this._index = 0;
			}
			consume() {
				if (this._index >= this._size) throw 'cannot consume EOF';
				this._index += 1;
			}
			LA(e) {
				if (e === 0) return 0;
				e < 0 && (e += 1);
				let i = this._index + e - 1;
				return i < 0 || i >= this._size ? L.EOF : this.data[i];
			}
			LT(e) {
				return this.LA(e);
			}
			mark() {
				return -1;
			}
			release(e) {}
			seek(e) {
				if (e <= this._index) {
					this._index = e;
					return;
				}
				this._index = Math.min(e, this._size);
			}
			getText(e, i) {
				if ((i >= this._size && (i = this._size - 1), e >= this._size)) return '';
				if (this.decodeToUnicodeCodePoints) {
					let n = '';
					for (let a = e; a <= i; a++) n += String.fromCodePoint(this.data[a]);
					return n;
				} else return this.strdata.slice(e, i + 1);
			}
			toString() {
				return this.strdata;
			}
			get index() {
				return this._index;
			}
			get size() {
				return this._size;
			}
		};
	});
var Qf,
	L7,
	S7 = K(() => {
		Zd();
		(Qf = y5(require('fs'), 1)),
			(L7 = {
				fromString: function (u) {
					return new Ci(u, !0);
				},
				fromBlob: function (u, e, i, n) {
					let a = new window.FileReader();
					(a.onload = function (o) {
						let c = new Ci(o.target.result, !0);
						i(c);
					}),
						(a.onerror = n),
						a.readAsText(u, e);
				},
				fromBuffer: function (u, e) {
					return new Ci(u.toString(e), !0);
				},
				fromPath: function (u, e, i) {
					Qf.default.readFile(u, e, function (n, a) {
						let o = null;
						a !== null && (o = new Ci(a, !0)), i(n, o);
					});
				},
				fromPathSync: function (u, e) {
					let i = Qf.default.readFileSync(u, e);
					return new Ci(i, !0);
				},
			});
	});
var I7,
	Rd,
	N7 = K(() => {
		Zd();
		(I7 = y5(require('fs'), 1)),
			(Rd = class extends Ci {
				constructor(e, i) {
					let n = I7.default.readFileSync(e, 'utf8');
					super(n, i), (this.fileName = e);
				}
			});
	});
var md,
	P7 = K(() => {
		md = class {};
	});
var yd,
	g7 = K(() => {
		cu();
		Gd();
		ss();
		P7();
		yd = class extends md {
			constructor(e) {
				super(), (this.tokenSource = e), (this.tokens = []), (this.index = -1), (this.fetchedEOF = !1);
			}
			mark() {
				return 0;
			}
			release(e) {}
			reset() {
				this.seek(0);
			}
			seek(e) {
				this.lazyInit(), (this.index = this.adjustSeekIndex(e));
			}
			get(e) {
				return this.lazyInit(), this.tokens[e];
			}
			consume() {
				let e = !1;
				if (
					(this.index >= 0
						? this.fetchedEOF
							? (e = this.index < this.tokens.length - 1)
							: (e = this.index < this.tokens.length)
						: (e = !1),
					!e && this.LA(1) === L.EOF)
				)
					throw 'cannot consume EOF';
				this.sync(this.index + 1) && (this.index = this.adjustSeekIndex(this.index + 1));
			}
			sync(e) {
				let i = e - this.tokens.length + 1;
				return i > 0 ? this.fetch(i) >= i : !0;
			}
			fetch(e) {
				if (this.fetchedEOF) return 0;
				for (let i = 0; i < e; i++) {
					let n = this.tokenSource.nextToken();
					if (((n.tokenIndex = this.tokens.length), this.tokens.push(n), n.type === L.EOF))
						return (this.fetchedEOF = !0), i + 1;
				}
				return e;
			}
			getTokens(e, i, n) {
				if ((n === void 0 && (n = null), e < 0 || i < 0)) return null;
				this.lazyInit();
				let a = [];
				i >= this.tokens.length && (i = this.tokens.length - 1);
				for (let o = e; o < i; o++) {
					let c = this.tokens[o];
					if (c.type === L.EOF) break;
					(n === null || n.contains(c.type)) && a.push(c);
				}
				return a;
			}
			LA(e) {
				return this.LT(e).type;
			}
			LB(e) {
				return this.index - e < 0 ? null : this.tokens[this.index - e];
			}
			LT(e) {
				if ((this.lazyInit(), e === 0)) return null;
				if (e < 0) return this.LB(-e);
				let i = this.index + e - 1;
				return this.sync(i), i >= this.tokens.length ? this.tokens[this.tokens.length - 1] : this.tokens[i];
			}
			adjustSeekIndex(e) {
				return e;
			}
			lazyInit() {
				this.index === -1 && this.setup();
			}
			setup() {
				this.sync(0), (this.index = this.adjustSeekIndex(0));
			}
			setTokenSource(e) {
				(this.tokenSource = e), (this.tokens = []), (this.index = -1), (this.fetchedEOF = !1);
			}
			nextTokenOnChannel(e, i) {
				if ((this.sync(e), e >= this.tokens.length)) return -1;
				let n = this.tokens[e];
				for (; n.channel !== this.channel; ) {
					if (n.type === L.EOF) return -1;
					(e += 1), this.sync(e), (n = this.tokens[e]);
				}
				return e;
			}
			previousTokenOnChannel(e, i) {
				for (; e >= 0 && this.tokens[e].channel !== i; ) e -= 1;
				return e;
			}
			getHiddenTokensToRight(e, i) {
				if ((i === void 0 && (i = -1), this.lazyInit(), e < 0 || e >= this.tokens.length))
					throw '' + e + ' not in 0..' + this.tokens.length - 1;
				let n = this.nextTokenOnChannel(e + 1, n0.DEFAULT_TOKEN_CHANNEL),
					a = e + 1,
					o = n === -1 ? this.tokens.length - 1 : n;
				return this.filterForChannel(a, o, i);
			}
			getHiddenTokensToLeft(e, i) {
				if ((i === void 0 && (i = -1), this.lazyInit(), e < 0 || e >= this.tokens.length))
					throw '' + e + ' not in 0..' + this.tokens.length - 1;
				let n = this.previousTokenOnChannel(e - 1, n0.DEFAULT_TOKEN_CHANNEL);
				if (n === e - 1) return null;
				let a = n + 1,
					o = e - 1;
				return this.filterForChannel(a, o, i);
			}
			filterForChannel(e, i, n) {
				let a = [];
				for (let o = e; o < i + 1; o++) {
					let c = this.tokens[o];
					n === -1 ? c.channel !== n0.DEFAULT_TOKEN_CHANNEL && a.push(c) : c.channel === n && a.push(c);
				}
				return a.length === 0 ? null : a;
			}
			getSourceName() {
				return this.tokenSource.getSourceName();
			}
			getText(e) {
				this.lazyInit(), this.fill(), e == null && (e = new k(0, this.tokens.length - 1));
				let i = e.start;
				i instanceof L && (i = i.tokenIndex);
				let n = e.stop;
				if ((n instanceof L && (n = n.tokenIndex), i === null || n === null || i < 0 || n < 0)) return '';
				n >= this.tokens.length && (n = this.tokens.length - 1);
				let a = '';
				for (let o = i; o < n + 1; o++) {
					let c = this.tokens[o];
					if (c.type === L.EOF) break;
					a = a + c.text;
				}
				return a;
			}
			fill() {
				for (this.lazyInit(); this.fetch(1e3) === 1e3; );
			}
		};
	});
var Cd,
	D7 = K(() => {
		cu();
		g7();
		Cd = class extends yd {
			constructor(e, i) {
				super(e), (this.channel = i === void 0 ? L.DEFAULT_CHANNEL : i);
			}
			adjustSeekIndex(e) {
				return this.nextTokenOnChannel(e, this.channel);
			}
			LB(e) {
				if (e === 0 || this.index - e < 0) return null;
				let i = this.index,
					n = 1;
				for (; n <= e; ) (i = this.previousTokenOnChannel(i - 1, this.channel)), (n += 1);
				return i < 0 ? null : this.tokens[i];
			}
			LT(e) {
				if ((this.lazyInit(), e === 0)) return null;
				if (e < 0) return this.LB(-e);
				let i = this.index,
					n = 1;
				for (; n < e; ) this.sync(i + 1) && (i = this.nextTokenOnChannel(i + 1, this.channel)), (n += 1);
				return this.tokens[i];
			}
			getNumberOfOnChannelTokens() {
				let e = 0;
				this.fill();
				for (let i = 0; i < this.tokens.length; i++) {
					let n = this.tokens[i];
					if ((n.channel === this.channel && (e += 1), n.type === L.EOF)) break;
				}
				return e;
			}
		};
	});
var bd,
	U7 = K(() => {
		jf();
		bd = class extends Uh {
			constructor(e) {
				super(), (this.parser = e);
			}
			enterEveryRule(e) {
				console.log(
					'enter   ' + this.parser.ruleNames[e.ruleIndex] + ', LT(1)=' + this.parser._input.LT(1).text,
				);
			}
			visitTerminal(e) {
				console.log('consume ' + e.symbol + ' rule ' + this.parser.ruleNames[this.parser._ctx.ruleIndex]);
			}
			exitEveryRule(e) {
				console.log(
					'exit    ' + this.parser.ruleNames[e.ruleIndex] + ', LT(1)=' + this.parser._input.LT(1).text,
				);
			}
		};
	});
var Nl,
	v7 = K(() => {
		cu();
		Bp();
		zl();
		Mf();
		qd();
		wf();
		Uf();
		U7();
		Nl = class extends F1 {
			constructor(e) {
				super(),
					(this._input = null),
					(this._errHandler = new G1()),
					(this._precedenceStack = []),
					this._precedenceStack.push(0),
					(this._ctx = null),
					(this.buildParseTrees = !0),
					(this._tracer = null),
					(this._parseListeners = null),
					(this._syntaxErrors = 0),
					this.setInputStream(e);
			}
			reset() {
				this._input !== null && this._input.seek(0),
					this._errHandler.reset(this),
					(this._ctx = null),
					(this._syntaxErrors = 0),
					this.setTrace(!1),
					(this._precedenceStack = []),
					this._precedenceStack.push(0),
					this._interp !== null && this._interp.reset();
			}
			match(e) {
				let i = this.getCurrentToken();
				return (
					i.type === e
						? (this._errHandler.reportMatch(this), this.consume())
						: ((i = this._errHandler.recoverInline(this)),
						  this.buildParseTrees && i.tokenIndex === -1 && this._ctx.addErrorNode(i)),
					i
				);
			}
			matchWildcard() {
				let e = this.getCurrentToken();
				return (
					e.type > 0
						? (this._errHandler.reportMatch(this), this.consume())
						: ((e = this._errHandler.recoverInline(this)),
						  this._buildParseTrees && e.tokenIndex === -1 && this._ctx.addErrorNode(e)),
					e
				);
			}
			getParseListeners() {
				return this._parseListeners || [];
			}
			addParseListener(e) {
				if (e === null) throw 'listener';
				this._parseListeners === null && (this._parseListeners = []), this._parseListeners.push(e);
			}
			removeParseListener(e) {
				if (this._parseListeners !== null) {
					let i = this._parseListeners.indexOf(e);
					i >= 0 && this._parseListeners.splice(i, 1),
						this._parseListeners.length === 0 && (this._parseListeners = null);
				}
			}
			removeParseListeners() {
				this._parseListeners = null;
			}
			triggerEnterRuleEvent() {
				if (this._parseListeners !== null) {
					let e = this._ctx;
					this._parseListeners.forEach(function (i) {
						i.enterEveryRule(e), e.enterRule(i);
					});
				}
			}
			triggerExitRuleEvent() {
				if (this._parseListeners !== null) {
					let e = this._ctx;
					this._parseListeners
						.slice(0)
						.reverse()
						.forEach(function (i) {
							e.exitRule(i), i.exitEveryRule(e);
						});
				}
			}
			getTokenFactory() {
				return this._input.tokenSource._factory;
			}
			setTokenFactory(e) {
				this._input.tokenSource._factory = e;
			}
			getATNWithBypassAlts() {
				let e = this.getSerializedATN();
				if (e === null) throw 'The current parser does not support an ATN with bypass alternatives.';
				let i = this.bypassAltsAtnCache[e];
				if (i === null) {
					let n = new fa();
					(n.generateRuleBypassTransitions = !0),
						(i = new Lh(n).deserialize(e)),
						(this.bypassAltsAtnCache[e] = i);
				}
				return i;
			}
			getInputStream() {
				return this.getTokenStream();
			}
			setInputStream(e) {
				this.setTokenStream(e);
			}
			getTokenStream() {
				return this._input;
			}
			setTokenStream(e) {
				(this._input = null), this.reset(), (this._input = e);
			}
			getCurrentToken() {
				return this._input.LT(1);
			}
			notifyErrorListeners(e, i, n) {
				(i = i || null), (n = n || null), i === null && (i = this.getCurrentToken()), (this._syntaxErrors += 1);
				let a = i.line,
					o = i.column;
				this.getErrorListenerDispatch().syntaxError(this, i, a, o, e, n);
			}
			consume() {
				let e = this.getCurrentToken();
				e.type !== L.EOF && this.getInputStream().consume();
				let i = this._parseListeners !== null && this._parseListeners.length > 0;
				if (this.buildParseTrees || i) {
					let n;
					this._errHandler.inErrorRecoveryMode(this)
						? (n = this._ctx.addErrorNode(e))
						: (n = this._ctx.addTokenNode(e)),
						(n.invokingState = this.state),
						i &&
							this._parseListeners.forEach(function (a) {
								n instanceof as || (n.isErrorNode !== void 0 && n.isErrorNode())
									? a.visitErrorNode(n)
									: n instanceof pu && a.visitTerminal(n);
							});
				}
				return e;
			}
			addContextToParseTree() {
				this._ctx.parentCtx !== null && this._ctx.parentCtx.addChild(this._ctx);
			}
			enterRule(e, i, n) {
				(this.state = i),
					(this._ctx = e),
					(this._ctx.start = this._input.LT(1)),
					this.buildParseTrees && this.addContextToParseTree(),
					this.triggerEnterRuleEvent();
			}
			exitRule() {
				(this._ctx.stop = this._input.LT(-1)),
					this.triggerExitRuleEvent(),
					(this.state = this._ctx.invokingState),
					(this._ctx = this._ctx.parentCtx);
			}
			enterOuterAlt(e, i) {
				e.setAltNumber(i),
					this.buildParseTrees &&
						this._ctx !== e &&
						this._ctx.parentCtx !== null &&
						(this._ctx.parentCtx.removeLastChild(), this._ctx.parentCtx.addChild(e)),
					(this._ctx = e);
			}
			getPrecedence() {
				return this._precedenceStack.length === 0
					? -1
					: this._precedenceStack[this._precedenceStack.length - 1];
			}
			enterRecursionRule(e, i, n, a) {
				(this.state = i),
					this._precedenceStack.push(a),
					(this._ctx = e),
					(this._ctx.start = this._input.LT(1)),
					this.triggerEnterRuleEvent();
			}
			pushNewRecursionContext(e, i, n) {
				let a = this._ctx;
				(a.parentCtx = e),
					(a.invokingState = i),
					(a.stop = this._input.LT(-1)),
					(this._ctx = e),
					(this._ctx.start = a.start),
					this.buildParseTrees && this._ctx.addChild(a),
					this.triggerEnterRuleEvent();
			}
			unrollRecursionContexts(e) {
				this._precedenceStack.pop(), (this._ctx.stop = this._input.LT(-1));
				let i = this._ctx,
					n = this.getParseListeners();
				if (n !== null && n.length > 0)
					for (; this._ctx !== e; ) this.triggerExitRuleEvent(), (this._ctx = this._ctx.parentCtx);
				else this._ctx = e;
				(i.parentCtx = e), this.buildParseTrees && e !== null && e.addChild(i);
			}
			getInvokingContext(e) {
				let i = this._ctx;
				for (; i !== null; ) {
					if (i.ruleIndex === e) return i;
					i = i.parentCtx;
				}
				return null;
			}
			precpred(e, i) {
				return i >= this._precedenceStack[this._precedenceStack.length - 1];
			}
			inContext(e) {
				return !1;
			}
			isExpectedToken(e) {
				let i = this._interp.atn,
					n = this._ctx,
					a = i.states[this.state],
					o = i.nextTokens(a);
				if (o.contains(e)) return !0;
				if (!o.contains(L.EPSILON)) return !1;
				for (; n !== null && n.invokingState >= 0 && o.contains(L.EPSILON); ) {
					let h = i.states[n.invokingState].transitions[0];
					if (((o = i.nextTokens(h.followState)), o.contains(e))) return !0;
					n = n.parentCtx;
				}
				return !!(o.contains(L.EPSILON) && e === L.EOF);
			}
			getExpectedTokens() {
				return this._interp.atn.getExpectedTokens(this.state, this._ctx);
			}
			getExpectedTokensWithinCurrentRule() {
				let e = this._interp.atn,
					i = e.states[this.state];
				return e.nextTokens(i);
			}
			getRuleIndex(e) {
				let i = this.getRuleIndexMap()[e];
				return i !== null ? i : -1;
			}
			getRuleInvocationStack(e) {
				(e = e || null), e === null && (e = this._ctx);
				let i = [];
				for (; e !== null; ) {
					let n = e.ruleIndex;
					n < 0 ? i.push('n/a') : i.push(this.ruleNames[n]), (e = e.parentCtx);
				}
				return i;
			}
			getDFAStrings() {
				return this._interp.decisionToDFA.toString();
			}
			dumpDFA() {
				let e = !1;
				for (let i = 0; i < this._interp.decisionToDFA.length; i++) {
					let n = this._interp.decisionToDFA[i];
					n.states.length > 0 &&
						(e && console.log(),
						this.printer.println('Decision ' + n.decision + ':'),
						this.printer.print(n.toString(this.literalNames, this.symbolicNames)),
						(e = !0));
				}
			}
			getSourceName() {
				return this._input.sourceName;
			}
			setTrace(e) {
				e
					? (this._tracer !== null && this.removeParseListener(this._tracer),
					  (this._tracer = new bd(this)),
					  this.addParseListener(this._tracer))
					: (this.removeParseListener(this._tracer), (this._tracer = null));
			}
		};
		Nl.bypassAltsAtnCache = {};
	});
var Ad,
	w7 = K(() => {
		w1();
		Wl();
		Ad = class {
			constructor() {
				this.cache = new mi();
			}
			add(e) {
				if (e === M.EMPTY) return M.EMPTY;
				let i = this.cache.get(e) || null;
				return i !== null ? i : (this.cache.set(e, e), e);
			}
			get(e) {
				return this.cache.get(e) || null;
			}
			get length() {
				return this.cache.length;
			}
		};
	});
var Hh,
	qf = K(() => {
		ss();
		cu();
		Bp();
		Hh = class extends pu {
			constructor(e) {
				super(), (this.parentCtx = null), (this.symbol = e);
			}
			getChild(e) {
				return null;
			}
			getSymbol() {
				return this.symbol;
			}
			getParent() {
				return this.parentCtx;
			}
			getPayload() {
				return this.symbol;
			}
			getSourceInterval() {
				if (this.symbol === null) return k.INVALID_INTERVAL;
				let e = this.symbol.tokenIndex;
				return new k(e, e);
			}
			getChildCount() {
				return 0;
			}
			accept(e) {
				return e.visitTerminal(this);
			}
			getText() {
				return this.symbol.text;
			}
			toString() {
				return this.symbol.type === L.EOF ? '<EOF>' : this.symbol.text;
			}
		};
	});
var Pl,
	M7 = K(() => {
		qf();
		Pl = class extends Hh {
			constructor(e) {
				super(e);
			}
			isErrorNode() {
				return !0;
			}
			accept(e) {
				return e.visitErrorNode(this);
			}
		};
	});
var gl,
	H7 = K(() => {
		kd();
		Bp();
		qf();
		M7();
		ss();
		gl = class extends xr {
			constructor(e, i) {
				(e = e || null),
					(i = i || null),
					super(e, i),
					(this.ruleIndex = -1),
					(this.children = null),
					(this.start = null),
					(this.stop = null),
					(this.exception = null);
			}
			copyFrom(e) {
				(this.parentCtx = e.parentCtx),
					(this.invokingState = e.invokingState),
					(this.children = null),
					(this.start = e.start),
					(this.stop = e.stop),
					e.children &&
						((this.children = []),
						e.children.map(function (i) {
							i instanceof Pl && (this.children.push(i), (i.parentCtx = this));
						}, this));
			}
			enterRule(e) {}
			exitRule(e) {}
			addChild(e) {
				return this.children === null && (this.children = []), this.children.push(e), e;
			}
			removeLastChild() {
				this.children !== null && this.children.pop();
			}
			addTokenNode(e) {
				let i = new Hh(e);
				return this.addChild(i), (i.parentCtx = this), i;
			}
			addErrorNode(e) {
				let i = new Pl(e);
				return this.addChild(i), (i.parentCtx = this), i;
			}
			getChild(e, i) {
				if (((i = i || null), this.children === null || e < 0 || e >= this.children.length)) return null;
				if (i === null) return this.children[e];
				for (let n = 0; n < this.children.length; n++) {
					let a = this.children[n];
					if (a instanceof i) {
						if (e === 0) return a;
						e -= 1;
					}
				}
				return null;
			}
			getToken(e, i) {
				if (this.children === null || i < 0 || i >= this.children.length) return null;
				for (let n = 0; n < this.children.length; n++) {
					let a = this.children[n];
					if (a instanceof pu && a.symbol.type === e) {
						if (i === 0) return a;
						i -= 1;
					}
				}
				return null;
			}
			getTokens(e) {
				if (this.children === null) return [];
				{
					let i = [];
					for (let n = 0; n < this.children.length; n++) {
						let a = this.children[n];
						a instanceof pu && a.symbol.type === e && i.push(a);
					}
					return i;
				}
			}
			getTypedRuleContext(e, i) {
				return this.getChild(i, e);
			}
			getTypedRuleContexts(e) {
				if (this.children === null) return [];
				{
					let i = [];
					for (let n = 0; n < this.children.length; n++) {
						let a = this.children[n];
						a instanceof e && i.push(a);
					}
					return i;
				}
			}
			getChildCount() {
				return this.children === null ? 0 : this.children.length;
			}
			getSourceInterval() {
				return this.start === null || this.stop === null
					? k.INVALID_INTERVAL
					: new k(this.start.tokenIndex, this.stop.tokenIndex);
			}
		};
		xr.EMPTY = new gl();
	});
var F7,
	k7 = K(() => {
		Cl();
		F7 = { arrayToString: We };
	});
var hs = {};
M8(hs, { default: () => O9 });
var x9,
	O9,
	ls = K(() => {
		b4();
		yf();
		Cf();
		f7();
		T7();
		C7();
		O7();
		cu();
		Hf();
		S7();
		Zd();
		N7();
		D7();
		Gd();
		v7();
		w7();
		H7();
		ss();
		P1();
		If();
		k7();
		(x9 = {
			atn: d7,
			dfa: E7,
			tree: y7,
			error: x7,
			Token: L,
			CommonToken: Lr,
			CharStreams: L7,
			InputStream: Ci,
			FileStream: Rd,
			CommonTokenStream: Cd,
			Lexer: n0,
			Parser: Nl,
			PredictionContextCache: Ad,
			ParserRuleContext: gl,
			Interval: k,
			IntervalSet: A0,
			LL1Analyzer: os,
			Utils: F7,
		}),
			(O9 = x9);
	});
var Jf = Z(V7 => {
	var Fh = (ls(), ra(hs));
	function Wd() {
		let u = _input.LA(1);
		return !((u >= 'A' && u <= 'Z') || (u >= '0' && u <= '9') || u == '_');
	}
	function L9() {
		return _input.LA(1) == '+';
	}
	var S9 = [
			'\u608B\uA72A\u8133\uB9ED\u417C\u3BE7\u7786\u5964',
			'\u012B\u0B3E\b		',
			'			\x07	',
			`\x07\b	\b			
	
\v	\v`,
			'\f	\f\r	\r		',
			'				',
			'			',
			'				',
			'\x1B	\x1B		',
			'		 	 !	!"	"#',
			"	#$	$%	%&	&'	'(	()	)",
			'*	*+	+,	,-	-.	./	/0	0',
			'1	12	23	34	45	56	67	7',
			'8	89	9:	:;	;<	<=	=>	>',
			'?	?@	@A	AB	BC	CD	DE	E',
			'F	FG	GH	HI	IJ	JK	KL	L',
			'M	MN	NO	OP	PQ	QR	RS	S',
			'T	TU	UV	VW	WX	XY	YZ	Z',
			'[	[\\	\\]	]^	^_	_`	`a	a',
			'b	bc	cd	de	ef	fg	gh	h',
			'i	ij	jk	kl	lm	mn	no	o',
			'p	pq	qr	rs	st	tu	uv	v',
			'w	wx	xy	yz	z{	{|	|}	}',
			'~	~\x7F	\x7F\x80	\x80\x81	\x81',
			'\x82	\x82\x83	\x83\x84	\x84\x85	',
			'\x85\x86	\x86\x87	\x87\x88	\x88',
			'\x89	\x89\x8A	\x8A\x8B	\x8B\x8C	',
			'\x8C\x8D	\x8D\x8E	\x8E\x8F	\x8F',
			'\x90	\x90\x91	\x91\x92	\x92\x93	',
			'\x93\x94	\x94\x95	\x95\x96	\x96',
			'\x97	\x97\x98	\x98\x99	\x99\x9A	',
			'\x9A\x9B	\x9B\x9C	\x9C\x9D	\x9D',
			'\x9E	\x9E\x9F	\x9F\xA0	\xA0\xA1	',
			'\xA1\xA2	\xA2\xA3	\xA3\xA4	\xA4',
			'\xA5	\xA5\xA6	\xA6\xA7	\xA7\xA8	',
			'\xA8\xA9	\xA9\xAA	\xAA\xAB	\xAB',
			'\xAC	\xAC\xAD	\xAD\xAE	\xAE\xAF	',
			'\xAF\xB0	\xB0\xB1	\xB1\xB2	\xB2',
			'\xB3	\xB3\xB4	\xB4\xB5	\xB5\xB6	',
			'\xB6\xB7	\xB7\xB8	\xB8\xB9	\xB9',
			'\xBA	\xBA\xBB	\xBB\xBC	\xBC\xBD	',
			'\xBD\xBE	\xBE\xBF	\xBF\xC0	\xC0',
			'\xC1	\xC1\xC2	\xC2\xC3	\xC3\xC4	',
			'\xC4\xC5	\xC5\xC6	\xC6\xC7	\xC7',
			'\xC8	\xC8\xC9	\xC9\xCA	\xCA\xCB	',
			'\xCB\xCC	\xCC\xCD	\xCD\xCE	\xCE',
			'\xCF	\xCF\xD0	\xD0\xD1	\xD1\xD2	',
			'\xD2\xD3	\xD3\xD4	\xD4\xD5	\xD5',
			'\xD6	\xD6\xD7	\xD7\xD8	\xD8\xD9	',
			'\xD9\xDA	\xDA\xDB	\xDB\xDC	\xDC',
			'\xDD	\xDD\xDE	\xDE\xDF	\xDF\xE0	',
			'\xE0\xE1	\xE1\xE2	\xE2\xE3	\xE3',
			'\xE4	\xE4\xE5	\xE5\xE6	\xE6\xE7	',
			'\xE7\xE8	\xE8\xE9	\xE9\xEA	\xEA',
			'\xEB	\xEB\xEC	\xEC\xED	\xED\xEE	',
			'\xEE\xEF	\xEF\xF0	\xF0\xF1	\xF1',
			'\xF2	\xF2\xF3	\xF3\xF4	\xF4\xF5	',
			'\xF5\xF6	\xF6\xF7	\xF7\xF8	\xF8',
			'\xF9	\xF9\xFA	\xFA\xFB	\xFB\xFC	',
			'\xFC\xFD	\xFD\xFE	\xFE\xFF	\xFF',
			'\u0100	\u0100\u0101	\u0101\u0102	\u0102\u0103	',
			'\u0103\u0104	\u0104\u0105	\u0105\u0106	\u0106',
			'\u0107	\u0107\u0108	\u0108\u0109	\u0109\u010A	',
			'\u010A\u010B	\u010B\u010C	\u010C\u010D	\u010D',
			'\u010E	\u010E\u010F	\u010F\u0110	\u0110\u0111	',
			'\u0111\u0112	\u0112\u0113	\u0113\u0114	\u0114',
			'\u0115	\u0115\u0116	\u0116\u0117	\u0117\u0118	',
			'\u0118\u0119	\u0119\u011A	\u011A\u011B	\u011B',
			'\u011C	\u011C\u011D	\u011D\u011E	\u011E\u011F	',
			'\u011F\u0120	\u0120\u0121	\u0121\u0122	\u0122',
			'\u0123	\u0123\u0124	\u0124\u0125	\u0125\u0126	',
			'\u0126\u0127	\u0127\u0128	\u0128\u0129	\u0129',
			'\u012A	\u012A\u012B	\u012B\u012C	\u012C\u012D	',
			'\u012D\u012E	\u012E\u012F	\u012F\u0130	\u0130',
			'\u0131	\u0131\u0132	\u0132\u0133	\u0133\u0134	',
			'\u0134\u0135	\u0135\u0136	\u0136\u0137	\u0137',
			'\u0138	\u0138\u0139	\u0139\u013A	\u013A\u013B	',
			'\u013B\u013C	\u013C\u013D	\u013D\u013E	\u013E',
			'\u013F	\u013F\u0140	\u0140\u0141	\u0141\u0142	',
			'\u0142\u0143	\u0143\u0144	\u0144\u0145	\u0145',
			'\u0146	\u0146\u0147	\u0147\u0148	\u0148',
			'',
			'\x07\x07\x07',
			`\x07\b\b\b			
`,
			`
\v\v\f\f\r\r\r`,
			'\r',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'\x1B\x1B',
			'\x1B\x1B\x1B\x1B\x1B\x1B',
			'',
			'',
			'',
			' ',
			'     !!!!!',
			'!!!"""""#',
			'####$$$$$$',
			'$%%%%%%&&&',
			"&&&''''''",
			"''((((((((",
			'(())))))))',
			'********++',
			'+++++++++,',
			',,,,,,----',
			'----......',
			'..///////0',
			'0000000111',
			'1111111112',
			'2222222333',
			'3333333334',
			'4444444444',
			'5555566666',
			'6677777788',
			'8889999999',
			'9:::::::::',
			'::::;;;;;;',
			';;;;;;;<<<',
			'<<<<<<<<<<',
			'<<<<<=====',
			'========>>',
			'>>>???????',
			'??@@@@@@@@',
			'@@@@@@@@@@',
			`@\u043B
@AAAAAAAA`,
			'AAAAABBBBB',
			'BBBCCCCCCC',
			'DDDDDDDDDD',
			'EEEEEFFFFF',
			'FFFFGGGGHH',
			'HHHHHHHHHH',
			'IIIIIIIIII',
			'JJJJJJJJJK',
			'KKKKKKKKKK',
			'LLLLMMMMMN',
			'NNNNOOOOPP',
			'PPPPPQQQQQ',
			'QQQRRRRRRR',
			'SSSSSSSSST',
			'TTTTTTUUUU',
			'UUUUVVVVVV',
			'VWWWWWWWWW',
			'XXXXXXXXXY',
			'YYYYYYYZZZ',
			'ZZZ[[[[[[\\',
			'\\\\\\\\\\\\]]]',
			']]]]^^^^^^',
			'^^^^^_____',
			'_`````````',
			'`aaaabbbbb',
			'bbbccccccc',
			'dddddddddd',
			'eeeeefffff',
			'gggggggggh',
			'hhhhhhhhhi',
			'iiiiiijjjj',
			'jjkkkkkkll',
			'lllllllmmm',
			'mmmmnnnooo',
			'oooopppppp',
			'pqqqrrrrrr',
			'sssssssstt',
			'ttttuuuuuu',
			'uvvvvvvvvv',
			'vvvwwwwwww',
			'xxxxxxxxxx',
			'yyyyyyyyyz',
			'zzzz{{{|||',
			'|||}}}}}~~',
			'~~~\x7F\x7F\x7F\x7F',
			'\x7F\x80\x80\x80\x80\x80',
			'\x80\x80\x80\x81\x81\x81',
			'\x81\x81\x82\x82\x82\x82',
			'\x82\x82\x82\x82\x83\x83',
			'\x83\x83\x83\x84\x84\x84',
			'\x84\x84\x85\x85\x85\x85',
			'\x85\x85\x86\x86\x86\x86',
			'\x86\x86\x87\x87\x87\x87',
			'\x87\x88\x88\x88\x88\x88',
			'\x89\x89\x89\x89\x89\x89',
			'\x8A\x8A\x8A\x8A\x8A\x8A',
			'\x8A\x8A\x8A\x8B\x8B\x8B',
			'\x8B\x8B\x8C\x8C\x8C\x8C',
			'\x8C\x8C\x8D\x8D\x8D\x8D',
			'\x8D\x8D\x8D\x8D\x8E\x8E',
			'\x8E\x8E\x8E\x8E\x8F\x8F',
			'\x8F\x8F\x90\x90\x90\x90',
			'\x90\x90\x90\x90\x91\x91',
			'\x91\x91\x91\x91\x92\x92',
			'\x92\x92\x92\x93\x93\x93',
			'\x93\x93\x93\x93\x93\x93',
			'\x93\x94\x94\x94\x94\x94',
			'\x94\x94\x94\x94\x94\x94',
			'\x95\x95\x95\x95\x95\x95',
			'\x95\x95\x96\x96\x96\x97',
			`\x97\x97\x97\x97\x97\u069D
\x97`,
			'\x98\x98\x98\x98\x98\x99',
			'\x99\x99\x99\x99\x99\x9A',
			'\x9A\x9A\x9B\x9B\x9B\x9C',
			'\x9C\x9C\x9C\x9C\x9D\x9D',
			'\x9D\x9D\x9D\x9D\x9D\x9E',
			'\x9E\x9E\x9E\x9E\x9E\x9E',
			'\x9E\x9F\x9F\x9F\xA0\xA0',
			'\xA0\xA0\xA0\xA0\xA1\xA1',
			'\xA1\xA1\xA2\xA2\xA2\xA2',
			'\xA2\xA2\xA3\xA3\xA3\xA3',
			'\xA3\xA3\xA3\xA3\xA3\xA3',
			'\xA3\xA3\xA3\xA4\xA4\xA4',
			'\xA4\xA4\xA5\xA5\xA5\xA5',
			'\xA5\xA5\xA5\xA5\xA5\xA6',
			'\xA6\xA6\xA6\xA6\xA6\xA6',
			'\xA6\xA7\xA7\xA7\xA7\xA7',
			'\xA7\xA7\xA7\xA7\xA7\xA8',
			'\xA8\xA8\xA8\xA8\xA8\xA8',
			'\xA8\xA8\xA8\xA9\xA9\xA9',
			'\xA9\xA9\xA9\xA9\xA9\xA9',
			'\xA9\xA9\xA9\xAA\xAA\xAA',
			'\xAA\xAA\xAA\xAA\xAA\xAA',
			'\xAA\xAA\xAB\xAB\xAB\xAB',
			'\xAB\xAB\xAB\xAB\xAB\xAB',
			'\xAB\xAC\xAC\xAC\xAC\xAC',
			'\xAC\xAD\xAD\xAD\xAD\xAD',
			'\xAD\xAD\xAD\xAE\xAE\xAE',
			'\xAE\xAE\xAE\xAE\xAE\xAE',
			'\xAF\xAF\xAF\xAF\xAF\xAF',
			'\xAF\xAF\xAF\xAF\xB0\xB0',
			'\xB0\xB0\xB0\xB0\xB0\xB0',
			'\xB1\xB1\xB1\xB1\xB1\xB1',
			'\xB1\xB1\xB1\xB1\xB1\xB2',
			'\xB2\xB2\xB2\xB2\xB2\xB2',
			'\xB2\xB2\xB2\xB2\xB3\xB3',
			'\xB3\xB3\xB3\xB3\xB4\xB4',
			'\xB4\xB4\xB4\xB4\xB5\xB5',
			'\xB5\xB5\xB5\xB5\xB6\xB6',
			'\xB6\xB6\xB6\xB6\xB6\xB6',
			'\xB6\xB6\xB6\xB6\xB6\xB7',
			'\xB7\xB7\xB7\xB7\xB7\xB7',
			'\xB7\xB7\xB7\xB7\xB7\xB7',
			'\xB8\xB8\xB8\xB8\xB8\xB8',
			'\xB8\xB8\xB9\xB9\xB9\xB9',
			'\xB9\xB9\xB9\xBA\xBA\xBA',
			'\xBA\xBA\xBA\xBA\xBA\xBA',
			'\xBA\xBA\xBB\xBB\xBB\xBB',
			'\xBB\xBB\xBB\xBB\xBC\xBC',
			'\xBC\xBC\xBC\xBC\xBC\xBD',
			'\xBD\xBD\xBD\xBD\xBD\xBD',
			'\xBE\xBE\xBE\xBE\xBE\xBE',
			'\xBE\xBE\xBF\xBF\xBF\xBF',
			'\xBF\xBF\xC0\xC0\xC0\xC0',
			'\xC0\xC0\xC0\xC0\xC1\xC1',
			'\xC1\xC1\xC1\xC1\xC1\xC1',
			'\xC1\xC2\xC2\xC2\xC2\xC2',
			'\xC2\xC2\xC3\xC3\xC3\xC3',
			'\xC3\xC3\xC4\xC4\xC4\xC4',
			'\xC4\xC4\xC4\xC4\xC4\xC4',
			`\xC4\xC4\xC4\xC4\u0804
\xC4`,
			'\xC5\xC5\xC5\xC5\xC5\xC6',
			'\xC6\xC6\xC6\xC6\xC6\xC7',
			'\xC7\xC7\xC7\xC7\xC7\xC7',
			'\xC7\xC7\xC8\xC8\xC8\xC8',
			'\xC8\xC8\xC8\xC9\xC9\xC9',
			'\xC9\xCA\xCA\xCA\xCA\xCA',
			'\xCB\xCB\xCB\xCB\xCB\xCB',
			'\xCB\xCC\xCC\xCC\xCC\xCC',
			'\xCC\xCC\xCD\xCD\xCD\xCD',
			'\xCD\xCE\xCE\xCE\xCE\xCE',
			'\xCE\xCE\xCE\xCE\xCE\xCF',
			'\xCF\xCF\xCF\xCF\xCF\xD0',
			'\xD0\xD0\xD0\xD0\xD0\xD0',
			'\xD0\xD0\xD0\xD0\xD0\xD0',
			'\xD0\xD0\xD0\xD1\xD1\xD1',
			'\xD1\xD1\xD1\xD1\xD1\xD1',
			'\xD1\xD1\xD1\xD1\xD2\xD2',
			'\xD2\xD2\xD3\xD3\xD3\xD3',
			'\xD3\xD3\xD3\xD3\xD3\xD4',
			'\xD4\xD4\xD4\xD4\xD5\xD5',
			'\xD5\xD5\xD5\xD6\xD6\xD6',
			'\xD6\xD6\xD6\xD6\xD7\xD7',
			'\xD7\xD7\xD7\xD8\xD8\xD8',
			'\xD8\xD8\xD9\xD9\xD9\xD9',
			'\xD9\xD9\xD9\xDA\xDA\xDA',
			'\xDA\xDA\xDA\xDB\xDB\xDB',
			'\xDB\xDB\xDB\xDB\xDB\xDB',
			'\xDB\xDB\xDC\xDC\xDC\xDC',
			'\xDC\xDC\xDC\xDD\xDD\xDD',
			'\xDD\xDD\xDD\xDD\xDD\xDD',
			'\xDE\xDE\xDE\xDE\xDE\xDE',
			'\xDE\xDF\xDF\xDF\xDF\xDF',
			'\xDF\xDF\xE0\xE0\xE0\xE0',
			'\xE0\xE0\xE0\xE0\xE0\xE0',
			'\xE1\xE1\xE1\xE1\xE1\xE2',
			'\xE2\xE2\xE2\xE2\xE2\xE3',
			'\xE3\xE3\xE3\xE3\xE3\xE3',
			'\xE4\xE4\xE4\xE4\xE4\xE4',
			'\xE4\xE4\xE4\xE4\xE4\xE4',
			'\xE5\xE5\xE5\xE5\xE5\xE5',
			'\xE5\xE5\xE5\xE5\xE5\xE5',
			'\xE5\xE5\xE6\xE6\xE6\xE6',
			'\xE6\xE6\xE6\xE6\xE6\xE6',
			'\xE6\xE6\xE6\xE6\xE6\xE6\u090D',
			`
\xE6\xE7\xE7\xE7\xE7\xE7`,
			'\xE7\xE7\xE7\xE7\xE7\xE7',
			'\xE8\xE8\xE8\xE8\xE8\xE9',
			'\xE9\xE9\xE9\xE9\xEA\xEA',
			'\xEA\xEB\xEB\xEB\xEB\xEB',
			'\xEB\xEC\xEC\xEC\xEC\xEC',
			'\xEC\xEC\xEC\xEC\xED\xED',
			'\xED\xED\xED\xED\xED\xED',
			'\xED\xED\xED\xED\xEE\xEE',
			'\xEE\xEE\xEE\xEE\xEE\xEE',
			'\xEE\xEE\xEE\xEE\xEE\xEF',
			'\xEF\xEF\xEF\xEF\xEF\xEF',
			'\xEF\xEF\xEF\xF0\xF0\xF0',
			'\xF0\xF0\xF1\xF1\xF1\xF1',
			'\xF1\xF2\xF2\xF2\xF2\xF2',
			'\xF2\xF2\xF2\xF2\xF3\xF3',
			'\xF3\xF3\xF3\xF3\xF3\xF3',
			'\xF3\xF4\xF4\xF4\xF4\xF4',
			'\xF5\xF5\xF5\xF5\xF5\xF5',
			'\xF5\xF5\xF5\xF5\xF6\xF6',
			'\xF6\xF6\xF6\xF6\xF6\xF6',
			'\xF6\xF6\xF7\xF7\xF7\xF7',
			'\xF7\xF7\xF7\xF7\xF8\xF8',
			'\xF8\xF8\xF8\xF8\xF9\xF9',
			'\xF9\xF9\xF9\xF9\xF9\xFA',
			'\xFA\xFA\xFA\xFA\xFA\xFA',
			'\xFA\xFB\xFB\xFB\xFB\xFB',
			'\xFB\xFB\xFC\xFC\xFC\xFC',
			'\xFC\xFC\xFD\xFD\xFD\xFD',
			'\xFD\xFD\xFD\xFE\xFE\xFE',
			'\xFE\xFF\xFF\xFF\xFF\xFF',
			'\u0100\u0100\u0100\u0100\u0100\u0100',
			'\u0101\u0101\u0101\u0101\u0101\u0101',
			'\u0101\u0102\u0102\u0102\u0102\u0102',
			'\u0103\u0103\u0103\u0103\u0103\u0103',
			'\u0104\u0104\u0104\u0104\u0104\u0105',
			'\u0105\u0105\u0105\u0105\u0105\u0106',
			'\u0106\u0106\u0106\u0106\u0106\u0106',
			'\u0107\u0107\u0107\u0107\u0107\u0108',
			'\u0108\u0108\u0108\u0108\u0109\u0109',
			`\u0109\u0109\u09FF
\u0109\u010A\u010A`,
			'\u010A\u010A\u010B\u010B\u010B\u010C',
			'\u010C\u010C\u010D\u010D\u010E\u010E',
			`\u010E\u010E\u010E\u0A11
\u010E\u010F\u010F`,
			`\u0110\u0110\u0110\u0110\u0110\u0A19
`,
			'\u0110\u0111\u0111\u0112\u0112\u0113',
			'\u0113\u0114\u0114\u0115\u0115\u0116',
			'\u0116\u0117\u0117\u0118\u0118\u0119',
			'\u0119\u0119\u011A\u011A\u011B\u011B',
			`\u011B\u011B\x07\u011B\u0A34
\u011B\f\u011B\u011B\u0A37`,
			'\v\u011B\u011B\u011B\u011B\u011B\u011B',
			`\x07\u011B\u0A3E
\u011B\f\u011B\u011B\u0A41\v\u011B`,
			`\u011B\u011B\u0A44
\u011B\u011C\u011C\u0A47
\u011C`,
			'\r\u011C\u011C\u0A48\u011C\u011C\u011D',
			`\u011D\u0A4E
\u011D\r\u011D\u011D\u0A4F\u011D\u011D`,
			`\u011E\u011E\u0A55
\u011E\r\u011E\u011E\u0A56`,
			`\u011E\u011E\u011F\u011F\u0A5C
\u011F\r\u011F`,
			`\u011F\u0A5D\u0120\u0120\u0A61
\u0120\r\u0120\u0120`,
			'\u0A62\u0120\u0120\u0120\u0120\u0120',
			`\u0120\u0120\u0A6B
\u0120\u0121\u0121\u0121`,
			`\u0122\u0122\u0A71
\u0122\r\u0122\u0122\u0A72`,
			`\u0122\u0122\u0A76
\u0122\u0122\u0122\u0122`,
			`\u0122\u0122\u0A7C
\u0122\u0122\u0122`,
			`\u0122\u0122\u0A81
\u0122\u0123\u0123\u0A84
\u0123`,
			`\r\u0123\u0123\u0A85\u0123\u0123\u0A89
\u0123`,
			`\u0123\u0123\u0123\u0123\u0123\u0A8F
\u0123`,
			`\u0123\u0123\u0123\u0123\u0A94
\u0123`,
			`\u0124\u0124\u0A97
\u0124\r\u0124\u0124\u0A98\u0124`,
			`\u0124\u0A9C
\u0124\u0124\u0124\u0124`,
			`\u0124\u0124\u0124\u0AA3
\u0124\u0124\u0124`,
			`\u0124\u0124\u0124\u0124\u0AAA
\u0124`,
			`\u0125\u0125\u0125\u0125\u0AAF
\u0125\r\u0125`,
			'\u0125\u0AB0\u0126\u0126\u0126\u0126\x07\u0126',
			`\u0AB7
\u0126\f\u0126\u0126\u0ABA\v\u0126\u0126`,
			'\u0126\u0127\u0127\u0128\u0128\u0129',
			'\u0129\u012A\u012A\u012B\u012B\u012C',
			'\u012C\u012D\u012D\u012E\u012E\u012F',
			'\u012F\u0130\u0130\u0131\u0131\u0132',
			'\u0132\u0133\u0133\u0134\u0134\u0135',
			'\u0135\u0136\u0136\u0137\u0137\u0138',
			'\u0138\u0139\u0139\u013A\u013A\u013B',
			'\u013B\u013C\u013C\u013D\u013D\u013E',
			'\u013E\u013F\u013F\u0140\u0140\u0141',
			`\u0141\u0AF3
\u0141\r\u0141\u0141\u0AF4\u0141\u0141`,
			`\x07\u0141\u0AF9
\u0141\f\u0141\u0141\u0AFC\v\u0141`,
			`\u0141\u0141\u0141\u0B00
\u0141\r\u0141\u0141\u0B01`,
			`\u0141\u0B04
\u0141\u0142\u0142\u0142\u0B08`,
			`
\u0142\u0142\u0142\u0B0B
\u0142\r\u0142\u0142\u0B0C`,
			'\u0143\u0143\u0144\u0144\u0145\u0145',
			`\u0145\u0145\u0145\u0145\x07\u0145\u0B19
`,
			'\u0145\f\u0145\u0145\u0B1C\v\u0145\u0145\u0145',
			`\u0B1F
\u0145\u0145\u0145\u0B22
\u0145\u0145`,
			'\u0145\u0146\u0146\u0146\u0146\u0146',
			`\u0146\x07\u0146\u0B2C
\u0146\f\u0146\u0146\u0B2F\v\u0146`,
			'\u0146\u0146\u0146\u0146\u0146\u0147',
			`\u0147\u0B37
\u0147\r\u0147\u0147\u0B38\u0147`,
			'\u0147\u0148\u0148\u0B2D\u0149',
			`\x07	\v\x07\r\b	
\v`,
			'\f\r\x1B!',
			"#%')+-/13\x1B5",
			`79;= ?!A"C#E$G%I&K'M(O)Q*S+U,W-Y.[/]0_1a2c3e4g5`,
			'i6k7m8o9q:s;u<w=y>{?}@\x7FA\x81B\x83C\x85D\x87E\x89F\x8B',
			'G\x8DH\x8FI\x91J\x93K\x95L\x97M\x99N\x9BO\x9DP\x9F',
			'Q\xA1R\xA3S\xA5T\xA7U\xA9V\xABW\xADX\xAFY\xB1Z\xB3',
			'[\xB5\\\xB7]\xB9^\xBB_\xBD`\xBFa\xC1b\xC3c\xC5d\xC7',
			'e\xC9f\xCBg\xCDh\xCFi\xD1j\xD3k\xD5l\xD7m\xD9n\xDB',
			'o\xDDp\xDFq\xE1r\xE3s\xE5t\xE7u\xE9v\xEBw\xEDx\xEF',
			'y\xF1z\xF3{\xF5|\xF7}\xF9~\xFB\x7F\xFD\x80\xFF\x81',
			'\u0101\x82\u0103\x83\u0105\x84\u0107\x85\u0109\x86\u010B\x87',
			'\u010D\x88\u010F\x89\u0111\x8A\u0113\x8B\u0115\x8C\u0117\x8D',
			'\u0119\x8E\u011B\x8F\u011D\x90\u011F\x91\u0121\x92\u0123\x93',
			'\u0125\x94\u0127\x95\u0129\x96\u012B\x97\u012D\x98\u012F\x99',
			'\u0131\x9A\u0133\x9B\u0135\x9C\u0137\x9D\u0139\x9E\u013B\x9F',
			'\u013D\xA0\u013F\xA1\u0141\xA2\u0143\xA3\u0145\xA4\u0147\xA5',
			'\u0149\xA6\u014B\xA7\u014D\xA8\u014F\xA9\u0151\xAA\u0153\xAB',
			'\u0155\xAC\u0157\xAD\u0159\xAE\u015B\xAF\u015D\xB0\u015F\xB1',
			'\u0161\xB2\u0163\xB3\u0165\xB4\u0167\xB5\u0169\xB6\u016B\xB7',
			'\u016D\xB8\u016F\xB9\u0171\xBA\u0173\xBB\u0175\xBC\u0177\xBD',
			'\u0179\xBE\u017B\xBF\u017D\xC0\u017F\xC1\u0181\xC2\u0183\xC3',
			'\u0185\xC4\u0187\xC5\u0189\xC6\u018B\xC7\u018D\xC8\u018F\xC9',
			'\u0191\xCA\u0193\xCB\u0195\xCC\u0197\xCD\u0199\xCE\u019B\xCF',
			'\u019D\xD0\u019F\xD1\u01A1\xD2\u01A3\xD3\u01A5\xD4\u01A7\xD5',
			'\u01A9\xD6\u01AB\xD7\u01AD\xD8\u01AF\xD9\u01B1\xDA\u01B3\xDB',
			'\u01B5\xDC\u01B7\xDD\u01B9\xDE\u01BB\xDF\u01BD\xE0\u01BF\xE1',
			'\u01C1\xE2\u01C3\xE3\u01C5\xE4\u01C7\xE5\u01C9\xE6\u01CB\xE7',
			'\u01CD\xE8\u01CF\xE9\u01D1\xEA\u01D3\xEB\u01D5\xEC\u01D7\xED',
			'\u01D9\xEE\u01DB\xEF\u01DD\xF0\u01DF\xF1\u01E1\xF2\u01E3\xF3',
			'\u01E5\xF4\u01E7\xF5\u01E9\xF6\u01EB\xF7\u01ED\xF8\u01EF\xF9',
			'\u01F1\xFA\u01F3\xFB\u01F5\xFC\u01F7\xFD\u01F9\xFE\u01FB\xFF',
			'\u01FD\u0100\u01FF\u0101\u0201\u0102\u0203\u0103\u0205\u0104\u0207\u0105',
			'\u0209\u0106\u020B\u0107\u020D\u0108\u020F\u0109\u0211\u010A\u0213\u010B',
			'\u0215\u010C\u0217\u010D\u0219\u010E\u021B\u010F\u021D\u0110\u021F\u0111',
			'\u0221\u0112\u0223\u0113\u0225\u0114\u0227\u0115\u0229\u0116\u022B\u0117',
			'\u022D\u0118\u022F\u0119\u0231\u011A\u0233\u011B\u0235\u011C\u0237\u011D',
			'\u0239\u011E\u023B\u011F\u023D\u0120\u023F\u0121\u0241\u0122\u0243\u0123',
			'\u0245\u0124\u0247\u0125\u0249\u0126\u024B\u0127\u024D\u024F',
			'\u0251\u0253\u0255\u0257\u0259\u025B',
			'\u025D\u025F\u0261\u0263\u0265\u0267',
			'\u0269\u026B\u026D\u026F\u0271\u0273',
			'\u0275\u0277\u0279\u027B\u027D\u027F',
			'\u0281\u0283\u0285\u0287\u0289\u0128\u028B\u0129',
			'\u028D\u012A\u028F\u012B$))^^$$',
			'^^bbCCccDDddEEee',
			'FFffGGggHHhhIIii',
			'JJjjKKkkLLllMMmmNNn',
			'nOOooPPppQQqqRRrr',
			'SSssTTttUUuuVVvv',
			'WWwwXXxxYYyyZZzz[[{',
			'{\\\\||--//2;C\\c|',
			'\f\f\v\f""\u0B4F',
			'',
			'\x07	',
			'\v\r',
			'',
			'',
			'',
			'\x1B',
			'!',
			'#%',
			"')+",
			'-/',
			'13',
			'57',
			'9;',
			'=?A',
			'CE',
			'GI',
			'KM',
			'OQ',
			'SUW',
			'Y[',
			']_',
			'ac',
			'eg',
			'ikm',
			'oq',
			'su',
			'wy',
			'{}',
			'\x7F\x81',
			'\x83\x85',
			'\x87\x89',
			'\x8B\x8D',
			'\x8F\x91',
			'\x93\x95',
			'\x97\x99',
			'\x9B\x9D',
			'\x9F\xA1',
			'\xA3\xA5',
			'\xA7\xA9',
			'\xAB\xAD',
			'\xAF\xB1',
			'\xB3\xB5',
			'\xB7\xB9',
			'\xBB\xBD',
			'\xBF\xC1',
			'\xC3\xC5',
			'\xC7\xC9',
			'\xCB\xCD',
			'\xCF\xD1',
			'\xD3\xD5',
			'\xD7\xD9',
			'\xDB\xDD',
			'\xDF\xE1',
			'\xE3\xE5',
			'\xE7\xE9',
			'\xEB\xED',
			'\xEF\xF1',
			'\xF3\xF5',
			'\xF7\xF9',
			'\xFB\xFD',
			'\xFF\u0101',
			'\u0103\u0105',
			'\u0107\u0109',
			'\u010B\u010D',
			'\u010F\u0111',
			'\u0113\u0115',
			'\u0117\u0119',
			'\u011B\u011D',
			'\u011F\u0121',
			'\u0123\u0125',
			'\u0127\u0129',
			'\u012B\u012D',
			'\u012F\u0131',
			'\u0133\u0135',
			'\u0137\u0139',
			'\u013B\u013D',
			'\u013F\u0141',
			'\u0143\u0145',
			'\u0147\u0149',
			'\u014B\u014D',
			'\u014F\u0151',
			'\u0153\u0155',
			'\u0157\u0159',
			'\u015B\u015D',
			'\u015F\u0161',
			'\u0163\u0165',
			'\u0167\u0169',
			'\u016B\u016D',
			'\u016F\u0171',
			'\u0173\u0175',
			'\u0177\u0179',
			'\u017B\u017D',
			'\u017F\u0181',
			'\u0183\u0185',
			'\u0187\u0189',
			'\u018B\u018D',
			'\u018F\u0191',
			'\u0193\u0195',
			'\u0197\u0199',
			'\u019B\u019D',
			'\u019F\u01A1',
			'\u01A3\u01A5',
			'\u01A7\u01A9',
			'\u01AB\u01AD',
			'\u01AF\u01B1',
			'\u01B3\u01B5',
			'\u01B7\u01B9',
			'\u01BB\u01BD',
			'\u01BF\u01C1',
			'\u01C3\u01C5',
			'\u01C7\u01C9',
			'\u01CB\u01CD',
			'\u01CF\u01D1',
			'\u01D3\u01D5',
			'\u01D7\u01D9',
			'\u01DB\u01DD',
			'\u01DF\u01E1',
			'\u01E3\u01E5',
			'\u01E7\u01E9',
			'\u01EB\u01ED',
			'\u01EF\u01F1',
			'\u01F3\u01F5',
			'\u01F7\u01F9',
			'\u01FB\u01FD',
			'\u01FF\u0201',
			'\u0203\u0205',
			'\u0207\u0209',
			'\u020B\u020D',
			'\u020F\u0211',
			'\u0213\u0215',
			'\u0217\u0219',
			'\u021B\u021D',
			'\u021F\u0221',
			'\u0223\u0225',
			'\u0227\u0229',
			'\u022B\u022D',
			'\u022F\u0231',
			'\u0233\u0235',
			'\u0237\u0239',
			'\u023B\u023D',
			'\u023F\u0241',
			'\u0243\u0245',
			'\u0247\u0249',
			'\u024B\u0289',
			'\u028B\u028D',
			'\u028F\u0291',
			'\u0293\x07\u0295	',
			'\u0297\v\u0299\r',
			'\u029B\u029F',
			'\u02A2\u02A5',
			'\u02A7\u02A9',
			'\u02AB\x1B\u02AF',
			'\u02B5\u02B9!',
			'\u02BF#\u02C7%\u02CB',
			"'\u02D0)\u02D4",
			'+\u02DC-\u02E2',
			'/\u02E51\u02E9',
			'3\u02EC5\u02FA',
			'7\u03029\u0307;\u030E',
			'=\u0316?\u0319',
			'A\u031FC\u0327',
			'E\u032CG\u0331',
			'I\u0338K\u033E',
			'M\u0344O\u034CQ\u0356',
			'S\u035EU\u0366',
			'W\u0371Y\u0378',
			'[\u0380]\u0388',
			'_\u038Fa\u0397',
			'c\u03A3e\u03ABg\u03B7',
			'i\u03C2k\u03C7',
			'm\u03CEo\u03D4',
			'q\u03D9s\u03E1',
			'u\u03EEw\u03FB',
			'y\u040D{\u041A}\u041F',
			'\x7F\u043A\x81\u043C',
			'\x83\u0449\x85\u0451',
			'\x87\u0458\x89\u0462',
			'\x8B\u0467\x8D\u0470',
			'\x8F\u0474\x91\u0480',
			'\x93\u048A\x95\u0493',
			'\x97\u049E\x99\u04A2',
			'\x9B\u04A7\x9D\u04AC',
			'\x9F\u04B0\xA1\u04B7',
			'\xA3\u04BF\xA5\u04C6',
			'\xA7\u04CF\xA9\u04D6',
			'\xAB\u04DE\xAD\u04E5',
			'\xAF\u04EE\xB1\u04F7',
			'\xB3\u04FF\xB5\u0505',
			'\xB7\u050B\xB9\u0512',
			'\xBB\u0519\xBD\u0524',
			'\xBF\u052A\xC1\u0534',
			'\xC3\u0538\xC5\u0540',
			'\xC7\u0547\xC9\u0551',
			'\xCB\u0556\xCD\u055B',
			'\xCF\u0564\xD1\u056E',
			'\xD3\u0575\xD5\u057B',
			'\xD7\u0581\xD9\u058A',
			'\xDB\u0591\xDD\u0594',
			'\xDF\u059B\xE1\u05A2',
			'\xE3\u05A5\xE5\u05AB',
			'\xE7\u05B3\xE9\u05B9',
			'\xEB\u05C0\xED\u05CC',
			'\xEF\u05D3\xF1\u05DD',
			'\xF3\u05E6\xF5\u05EB',
			'\xF7\u05EE\xF9\u05F4',
			'\xFB\u05F9\xFD\u05FE',
			'\xFF\u0603\u0101\u060B',
			'\u0103\u0610\u0105\u0618',
			'\u0107\u061D\u0109\u0622',
			'\u010B\u0628\u010D\u062E',
			'\u010F\u0633\u0111\u0638',
			'\u0113\u063E\u0115\u0647',
			'\u0117\u064C\u0119\u0652',
			'\u011B\u065A\u011D\u0660',
			'\u011F\u0664\u0121\u066C',
			'\u0123\u0672\u0125\u0677',
			'\u0127\u0681\u0129\u068C',
			'\u012B\u0694\u012D\u069C',
			'\u012F\u069E\u0131\u06A3',
			'\u0133\u06A9\u0135\u06AC',
			'\u0137\u06AF\u0139\u06B4',
			'\u013B\u06BB\u013D\u06C3',
			'\u013F\u06C6\u0141\u06CC',
			'\u0143\u06D0\u0145\u06D6',
			'\u0147\u06E3\u0149\u06E8',
			'\u014B\u06F1\u014D\u06F9',
			'\u014F\u0703\u0151\u070D',
			'\u0153\u0719\u0155\u0724',
			'\u0157\u072F\u0159\u0735',
			'\u015B\u073D\u015D\u0746',
			'\u015F\u0750\u0161\u0758',
			'\u0163\u0763\u0165\u076E',
			'\u0167\u0774\u0169\u077A',
			'\u016B\u0780\u016D\u078D',
			'\u016F\u079A\u0171\u07A2',
			'\u0173\u07A9\u0175\u07B4',
			'\u0177\u07BC\u0179\u07C3',
			'\u017B\u07CA\u017D\u07D2',
			'\u017F\u07D8\u0181\u07E0',
			'\u0183\u07E9\u0185\u07F0',
			'\u0187\u0803\u0189\u0805',
			'\u018B\u080A\u018D\u0810',
			'\u018F\u0819\u0191\u0820',
			'\u0193\u0824\u0195\u0829',
			'\u0197\u0830\u0199\u0837',
			'\u019B\u083C\u019D\u0846',
			'\u019F\u084C\u01A1\u085C',
			'\u01A3\u0869\u01A5\u086D',
			'\u01A7\u0876\u01A9\u087B',
			'\u01AB\u0880\u01AD\u0887',
			'\u01AF\u088C\u01B1\u0891',
			'\u01B3\u0898\u01B5\u089E',
			'\u01B7\u08A9\u01B9\u08B0',
			'\u01BB\u08B9\u01BD\u08C0',
			'\u01BF\u08C7\u01C1\u08D1',
			'\u01C3\u08D6\u01C5\u08DC',
			'\u01C7\u08E3\u01C9\u08EF',
			'\u01CB\u090C\u01CD\u090E',
			'\u01CF\u0919\u01D1\u091E',
			'\u01D3\u0923\u01D5\u0926',
			'\u01D7\u092C\u01D9\u0935',
			'\u01DB\u0941\u01DD\u094E',
			'\u01DF\u0958\u01E1\u095D',
			'\u01E3\u0962\u01E5\u096B',
			'\u01E7\u0974\u01E9\u0979',
			'\u01EB\u0983\u01ED\u098D',
			'\u01EF\u0995\u01F1\u099B',
			'\u01F3\u09A2\u01F5\u09AA',
			'\u01F7\u09B1\u01F9\u09B7',
			'\u01FB\u09BE\u01FD\u09C2',
			'\u01FF\u09C7\u0201\u09CD',
			'\u0203\u09D4\u0205\u09D9',
			'\u0207\u09DF\u0209\u09E4',
			'\u020B\u09EA\u020D\u09F1',
			'\u020F\u09F6\u0211\u09FE',
			'\u0213\u0A00\u0215\u0A04',
			'\u0217\u0A07\u0219\u0A0A',
			'\u021B\u0A10\u021D\u0A12',
			'\u021F\u0A18\u0221\u0A1A',
			'\u0223\u0A1C\u0225\u0A1E',
			'\u0227\u0A20\u0229\u0A22',
			'\u022B\u0A24\u022D\u0A26',
			'\u022F\u0A28\u0231\u0A2A',
			'\u0233\u0A2D\u0235\u0A43',
			'\u0237\u0A46\u0239\u0A4D',
			'\u023B\u0A54\u023D\u0A5B',
			'\u023F\u0A6A\u0241\u0A6C',
			'\u0243\u0A80\u0245\u0A93',
			'\u0247\u0AA9\u0249\u0AAE',
			'\u024B\u0AB2\u024D\u0ABD',
			'\u024F\u0ABF\u0251\u0AC1',
			'\u0253\u0AC3\u0255\u0AC5',
			'\u0257\u0AC7\u0259\u0AC9',
			'\u025B\u0ACB\u025D\u0ACD',
			'\u025F\u0ACF\u0261\u0AD1',
			'\u0263\u0AD3\u0265\u0AD5',
			'\u0267\u0AD7\u0269\u0AD9',
			'\u026B\u0ADB\u026D\u0ADD',
			'\u026F\u0ADF\u0271\u0AE1',
			'\u0273\u0AE3\u0275\u0AE5',
			'\u0277\u0AE7\u0279\u0AE9',
			'\u027B\u0AEB\u027D\u0AED',
			'\u027F\u0AEF\u0281\u0B03',
			'\u0283\u0B05\u0285\u0B0E',
			'\u0287\u0B10\u0289\u0B12',
			'\u028B\u0B25\u028D\u0B36',
			'\u028F\u0B3C\u0291\u0292',
			'\x07=\u0292\u0293\u0294',
			'\x07*\u0294\u0295\u0296',
			'\x07+\u0296\b\u0297\u0298\x07',
			`.\u0298
\u0299\u029A\x070`,
			'\u029A\f\u029B\u029C\x071',
			'\u029C\u029D\x07,\u029D\u029E\x07-\u029E',
			'\u029F\u02A0\x07,\u02A0',
			'\u02A1\x071\u02A1\u02A2',
			'\u02A3\x07/\u02A3\u02A4\x07@\u02A4',
			'\u02A5\u02A6\x07]\u02A6',
			'\u02A7\u02A8\x07_\u02A8',
			'\u02A9\u02AA\x07<\u02AA',
			'\u02AB\u02AC\u024D\u0127\u02AC\u02AD',
			'\u0253\u012A\u02AD\u02AE\u0253\u012A\u02AE',
			'\u02AF\u02B0\u024D\u0127\u02B0\u02B1',
			'\u0257\u012C\u02B1\u02B2\u0273\u013A\u02B2\u02B3',
			'\u0255\u012B\u02B3\u02B4\u026F\u0138\u02B4',
			'\u02B5\u02B6\u024D\u0127\u02B6\u02B7',
			'\u0263\u0132\u02B7\u02B8\u0263\u0132\u02B8',
			'\u02B9\u02BA\u024D\u0127\u02BA\u02BB',
			'\u0263\u0132\u02BB\u02BC\u0273\u013A\u02BC\u02BD',
			'\u0255\u012B\u02BD\u02BE\u026F\u0138\u02BE ',
			'\u02BF\u02C0\u024D\u0127\u02C0\u02C1',
			'\u0267\u0134\u02C1\u02C2\u024D\u0127\u02C2\u02C3',
			'\u0263\u0132\u02C3\u02C4\u027D\u013F\u02C4\u02C5',
			'\u027F\u0140\u02C5\u02C6\u0255\u012B\u02C6"',
			'\u02C7\u02C8\u024D\u0127\u02C8\u02C9',
			'\u0267\u0134\u02C9\u02CA\u0253\u012A\u02CA$',
			'\u02CB\u02CC\u024D\u0127\u02CC\u02CD',
			'\u0267\u0134\u02CD\u02CE\u0273\u013A\u02CE\u02CF',
			'\u025D\u012F\u02CF&\u02D0\u02D1',
			'\u024D\u0127\u02D1\u02D2\u0267\u0134\u02D2\u02D3',
			'\u027D\u013F\u02D3(\u02D4\u02D5',
			'\u024D\u0127\u02D5\u02D6\u026F\u0138\u02D6\u02D7',
			'\u0251\u0129\u02D7\u02D8\u025B\u012E\u02D8\u02D9',
			'\u025D\u012F\u02D9\u02DA\u0277\u013C\u02DA\u02DB',
			'\u0255\u012B\u02DB*\u02DC\u02DD',
			'\u024D\u0127\u02DD\u02DE\u026F\u0138\u02DE\u02DF',
			'\u026F\u0138\u02DF\u02E0\u024D\u0127\u02E0\u02E1',
			'\u027D\u013F\u02E1,\u02E2\u02E3',
			'\u024D\u0127\u02E3\u02E4\u0271\u0139\u02E4.',
			'\u02E5\u02E6\u024D\u0127\u02E6\u02E7',
			'\u0271\u0139\u02E7\u02E8\u0251\u0129\u02E80',
			'\u02E9\u02EA\u024D\u0127\u02EA\u02EB',
			'\u0273\u013A\u02EB2\u02EC\u02ED',
			'\u024D\u0127\u02ED\u02EE\u0275\u013B\u02EE\u02EF',
			'\u0273\u013A\u02EF\u02F0\u025B\u012E\u02F0\u02F1',
			'\u0269\u0135\u02F1\u02F2\u026F\u0138\u02F2\u02F3',
			'\u025D\u012F\u02F3\u02F4\u027F\u0140\u02F4\u02F5',
			'\u024D\u0127\u02F5\u02F6\u0273\u013A\u02F6\u02F7',
			'\u025D\u012F\u02F7\u02F8\u0269\u0135\u02F8\u02F9',
			'\u0267\u0134\u02F94\u02FA\u02FB',
			'\u024F\u0128\u02FB\u02FC\u0255\u012B\u02FC\u02FD',
			'\u0273\u013A\u02FD\u02FE\u0279\u013D\u02FE\u02FF',
			'\u0255\u012B\u02FF\u0300\u0255\u012B\u0300\u0301',
			'\u0267\u0134\u03016\u0302\u0303',
			'\u024F\u0128\u0303\u0304\u0269\u0135\u0304\u0305',
			'\u0273\u013A\u0305\u0306\u025B\u012E\u03068',
			'\u0307\u0308\u024F\u0128\u0308\u0309',
			'\u0275\u013B\u0309\u030A\u0251\u0129\u030A\u030B',
			'\u0261\u0131\u030B\u030C\u0255\u012B\u030C\u030D',
			'\u0273\u013A\u030D:\u030E\u030F',
			'\u024F\u0128\u030F\u0310\u0275\u013B\u0310\u0311',
			'\u0251\u0129\u0311\u0312\u0261\u0131\u0312\u0313',
			'\u0255\u012B\u0313\u0314\u0273\u013A\u0314\u0315',
			'\u0271\u0139\u0315<\u0316\u0317',
			'\u024F\u0128\u0317\u0318\u027D\u013F\u0318>',
			'\u0319\u031A\u0251\u0129\u031A\u031B',
			'\u024D\u0127\u031B\u031C\u0251\u0129\u031C\u031D',
			'\u025B\u012E\u031D\u031E\u0255\u012B\u031E@',
			'\u031F\u0320\u0251\u0129\u0320\u0321',
			'\u024D\u0127\u0321\u0322\u0271\u0139\u0322\u0323',
			'\u0251\u0129\u0323\u0324\u024D\u0127\u0324\u0325',
			'\u0253\u012A\u0325\u0326\u0255\u012B\u0326B',
			'\u0327\u0328\u0251\u0129\u0328\u0329',
			'\u024D\u0127\u0329\u032A\u0271\u0139\u032A\u032B',
			'\u0255\u012B\u032BD\u032C\u032D',
			'\u0251\u0129\u032D\u032E\u024D\u0127\u032E\u032F',
			'\u0271\u0139\u032F\u0330\u0273\u013A\u0330F',
			'\u0331\u0332\u0251\u0129\u0332\u0333',
			'\u025B\u012E\u0333\u0334\u024D\u0127\u0334\u0335',
			'\u0267\u0134\u0335\u0336\u0259\u012D\u0336\u0337',
			'\u0255\u012B\u0337H\u0338\u0339',
			'\u0251\u0129\u0339\u033A\u025B\u012E\u033A\u033B',
			'\u0255\u012B\u033B\u033C\u0251\u0129\u033C\u033D',
			'\u0261\u0131\u033DJ\u033E\u033F',
			'\u0251\u0129\u033F\u0340\u0263\u0132\u0340\u0341',
			'\u0255\u012B\u0341\u0342\u024D\u0127\u0342\u0343',
			'\u026F\u0138\u0343L\u0344\u0345',
			'\u0251\u0129\u0345\u0346\u0263\u0132\u0346\u0347',
			'\u0275\u013B\u0347\u0348\u0271\u0139\u0348\u0349',
			'\u0273\u013A\u0349\u034A\u0255\u012B\u034A\u034B',
			'\u026F\u0138\u034BN\u034C\u034D',
			'\u0251\u0129\u034D\u034E\u0263\u0132\u034E\u034F',
			'\u0275\u013B\u034F\u0350\u0271\u0139\u0350\u0351',
			'\u0273\u013A\u0351\u0352\u0255\u012B\u0352\u0353',
			'\u026F\u0138\u0353\u0354\u0255\u012B\u0354\u0355',
			'\u0253\u012A\u0355P\u0356\u0357',
			'\u0251\u0129\u0357\u0358\u0269\u0135\u0358\u0359',
			'\u0253\u012A\u0359\u035A\u0255\u012B\u035A\u035B',
			'\u0259\u012D\u035B\u035C\u0255\u012B\u035C\u035D',
			'\u0267\u0134\u035DR\u035E\u035F',
			'\u0251\u0129\u035F\u0360\u0269\u0135\u0360\u0361',
			'\u0263\u0132\u0361\u0362\u0263\u0132\u0362\u0363',
			'\u024D\u0127\u0363\u0364\u0273\u013A\u0364\u0365',
			'\u0255\u012B\u0365T\u0366\u0367',
			'\u0251\u0129\u0367\u0368\u0269\u0135\u0368\u0369',
			'\u0263\u0132\u0369\u036A\u0263\u0132\u036A\u036B',
			'\u0255\u012B\u036B\u036C\u0251\u0129\u036C\u036D',
			'\u0273\u013A\u036D\u036E\u025D\u012F\u036E\u036F',
			'\u0269\u0135\u036F\u0370\u0267\u0134\u0370V',
			'\u0371\u0372\u0251\u0129\u0372\u0373',
			'\u0269\u0135\u0373\u0374\u0263\u0132\u0374\u0375',
			'\u0275\u013B\u0375\u0376\u0265\u0133\u0376\u0377',
			'\u0267\u0134\u0377X\u0378\u0379',
			'\u0251\u0129\u0379\u037A\u0269\u0135\u037A\u037B',
			'\u0263\u0132\u037B\u037C\u0275\u013B\u037C\u037D',
			'\u0265\u0133\u037D\u037E\u0267\u0134\u037E\u037F',
			'\u0271\u0139\u037FZ\u0380\u0381',
			'\u0251\u0129\u0381\u0382\u0269\u0135\u0382\u0383',
			'\u0265\u0133\u0383\u0384\u0265\u0133\u0384\u0385',
			'\u0255\u012B\u0385\u0386\u0267\u0134\u0386\u0387',
			'\u0273\u013A\u0387\\\u0388\u0389',
			'\u0251\u0129\u0389\u038A\u0269\u0135\u038A\u038B',
			'\u0265\u0133\u038B\u038C\u0265\u0133\u038C\u038D',
			'\u025D\u012F\u038D\u038E\u0273\u013A\u038E^',
			'\u038F\u0390\u0251\u0129\u0390\u0391',
			'\u0269\u0135\u0391\u0392\u0265\u0133\u0392\u0393',
			'\u026B\u0136\u0393\u0394\u024D\u0127\u0394\u0395',
			'\u0251\u0129\u0395\u0396\u0273\u013A\u0396`',
			'\u0397\u0398\u0251\u0129\u0398\u0399',
			'\u0269\u0135\u0399\u039A\u0265\u0133\u039A\u039B',
			'\u026B\u0136\u039B\u039C\u024D\u0127\u039C\u039D',
			'\u0251\u0129\u039D\u039E\u0273\u013A\u039E\u039F',
			'\u025D\u012F\u039F\u03A0\u0269\u0135\u03A0\u03A1',
			'\u0267\u0134\u03A1\u03A2\u0271\u0139\u03A2b',
			'\u03A3\u03A4\u0251\u0129\u03A4\u03A5',
			'\u0269\u0135\u03A5\u03A6\u0265\u0133\u03A6\u03A7',
			'\u026B\u0136\u03A7\u03A8\u0275\u013B\u03A8\u03A9',
			'\u0273\u013A\u03A9\u03AA\u0255\u012B\u03AAd',
			'\u03AB\u03AC\u0251\u0129\u03AC\u03AD',
			'\u0269\u0135\u03AD\u03AE\u0267\u0134\u03AE\u03AF',
			'\u0251\u0129\u03AF\u03B0\u024D\u0127\u03B0\u03B1',
			'\u0273\u013A\u03B1\u03B2\u0255\u012B\u03B2\u03B3',
			'\u0267\u0134\u03B3\u03B4\u024D\u0127\u03B4\u03B5',
			'\u0273\u013A\u03B5\u03B6\u0255\u012B\u03B6f',
			'\u03B7\u03B8\u0251\u0129\u03B8\u03B9',
			'\u0269\u0135\u03B9\u03BA\u0267\u0134\u03BA\u03BB',
			'\u0271\u0139\u03BB\u03BC\u0273\u013A\u03BC\u03BD',
			'\u026F\u0138\u03BD\u03BE\u024D\u0127\u03BE\u03BF',
			'\u025D\u012F\u03BF\u03C0\u0267\u0134\u03C0\u03C1',
			'\u0273\u013A\u03C1h\u03C2\u03C3',
			'\u0251\u0129\u03C3\u03C4\u0269\u0135\u03C4\u03C5',
			'\u0271\u0139\u03C5\u03C6\u0273\u013A\u03C6j',
			'\u03C7\u03C8\u0251\u0129\u03C8\u03C9',
			'\u026F\u0138\u03C9\u03CA\u0255\u012B\u03CA\u03CB',
			'\u024D\u0127\u03CB\u03CC\u0273\u013A\u03CC\u03CD',
			'\u0255\u012B\u03CDl\u03CE\u03CF',
			'\u0251\u0129\u03CF\u03D0\u026F\u0138\u03D0\u03D1',
			'\u0269\u0135\u03D1\u03D2\u0271\u0139\u03D2\u03D3',
			'\u0271\u0139\u03D3n\u03D4\u03D5',
			'\u0251\u0129\u03D5\u03D6\u0275\u013B\u03D6\u03D7',
			'\u024F\u0128\u03D7\u03D8\u0255\u012B\u03D8p',
			'\u03D9\u03DA\u0251\u0129\u03DA\u03DB',
			'\u0275\u013B\u03DB\u03DC\u026F\u0138\u03DC\u03DD',
			'\u026F\u0138\u03DD\u03DE\u0255\u012B\u03DE\u03DF',
			'\u0267\u0134\u03DF\u03E0\u0273\u013A\u03E0r',
			'\u03E1\u03E2\u0251\u0129\u03E2\u03E3',
			'\u0275\u013B\u03E3\u03E4\u026F\u0138\u03E4\u03E5',
			'\u026F\u0138\u03E5\u03E6\u0255\u012B\u03E6\u03E7',
			'\u0267\u0134\u03E7\u03E8\u0273\u013A\u03E8\u03E9',
			'\x07a\u03E9\u03EA\u0253\u012A\u03EA\u03EB',
			'\u024D\u0127\u03EB\u03EC\u0273\u013A\u03EC\u03ED',
			'\u0255\u012B\u03EDt\u03EE\u03EF',
			'\u0251\u0129\u03EF\u03F0\u0275\u013B\u03F0\u03F1',
			'\u026F\u0138\u03F1\u03F2\u026F\u0138\u03F2\u03F3',
			'\u0255\u012B\u03F3\u03F4\u0267\u0134\u03F4\u03F5',
			'\u0273\u013A\u03F5\u03F6\x07a\u03F6\u03F7',
			'\u0273\u013A\u03F7\u03F8\u025D\u012F\u03F8\u03F9',
			'\u0265\u0133\u03F9\u03FA\u0255\u012B\u03FAv',
			'\u03FB\u03FC\u0251\u0129\u03FC\u03FD',
			'\u0275\u013B\u03FD\u03FE\u026F\u0138\u03FE\u03FF',
			'\u026F\u0138\u03FF\u0400\u0255\u012B\u0400\u0401',
			'\u0267\u0134\u0401\u0402\u0273\u013A\u0402\u0403',
			'\x07a\u0403\u0404\u0273\u013A\u0404\u0405',
			'\u025D\u012F\u0405\u0406\u0265\u0133\u0406\u0407',
			'\u0255\u012B\u0407\u0408\u0271\u0139\u0408\u0409',
			'\u0273\u013A\u0409\u040A\u024D\u0127\u040A\u040B',
			'\u0265\u0133\u040B\u040C\u026B\u0136\u040Cx',
			'\u040D\u040E\u0251\u0129\u040E\u040F',
			'\u0275\u013B\u040F\u0410\u026F\u0138\u0410\u0411',
			'\u026F\u0138\u0411\u0412\u0255\u012B\u0412\u0413',
			'\u0267\u0134\u0413\u0414\u0273\u013A\u0414\u0415',
			'\x07a\u0415\u0416\u0275\u013B\u0416\u0417',
			'\u0271\u0139\u0417\u0418\u0255\u012B\u0418\u0419',
			'\u026F\u0138\u0419z\u041A\u041B',
			'\u0253\u012A\u041B\u041C\u024D\u0127\u041C\u041D',
			'\u0273\u013A\u041D\u041E\u024D\u0127\u041E|',
			'\u041F\u0420\u0253\u012A\u0420\u0421',
			'\u024D\u0127\u0421\u0422\u0273\u013A\u0422\u0423',
			'\u024D\u0127\u0423\u0424\u024F\u0128\u0424\u0425',
			'\u024D\u0127\u0425\u0426\u0271\u0139\u0426\u0427',
			'\u0255\u012B\u0427~\u0428\u0429',
			'\u0253\u012A\u0429\u042A\u024D\u0127\u042A\u042B',
			'\u0273\u013A\u042B\u042C\u024D\u0127\u042C\u042D',
			'\u024F\u0128\u042D\u042E\u024D\u0127\u042E\u042F',
			'\u0271\u0139\u042F\u0430\u0255\u012B\u0430\u0431',
			'\u0271\u0139\u0431\u043B\u0432\u0433',
			'\u0271\u0139\u0433\u0434\u0251\u0129\u0434\u0435',
			'\u025B\u012E\u0435\u0436\u0255\u012B\u0436\u0437',
			'\u0265\u0133\u0437\u0438\u024D\u0127\u0438\u0439',
			'\u0271\u0139\u0439\u043B\u043A\u0428',
			'\u043A\u0432\u043B\x80',
			'\u043C\u043D\u0253\u012A\u043D\u043E',
			'\u024F\u0128\u043E\u043F\u026B\u0136\u043F\u0440',
			'\u026F\u0138\u0440\u0441\u0269\u0135\u0441\u0442',
			'\u026B\u0136\u0442\u0443\u0255\u012B\u0443\u0444',
			'\u026F\u0138\u0444\u0445\u0273\u013A\u0445\u0446',
			'\u025D\u012F\u0446\u0447\u0255\u012B\u0447\u0448',
			'\u0271\u0139\u0448\x82\u0449\u044A',
			'\u0253\u012A\u044A\u044B\u0255\u012B\u044B\u044C',
			'\u0257\u012C\u044C\u044D\u025D\u012F\u044D\u044E',
			'\u0267\u0134\u044E\u044F\u0255\u012B\u044F\u0450',
			'\u0253\u012A\u0450\x84\u0451\u0452',
			'\u0253\u012A\u0452\u0453\u0255\u012B\u0453\u0454',
			'\u0263\u0132\u0454\u0455\u0255\u012B\u0455\u0456',
			'\u0273\u013A\u0456\u0457\u0255\u012B\u0457\x86',
			'\u0458\u0459\u0253\u012A\u0459\u045A',
			'\u0255\u012B\u045A\u045B\u0263\u0132\u045B\u045C',
			'\u025D\u012F\u045C\u045D\u0265\u0133\u045D\u045E',
			'\u025D\u012F\u045E\u045F\u0273\u013A\u045F\u0460',
			'\u0255\u012B\u0460\u0461\u0253\u012A\u0461\x88',
			'\u0462\u0463\u0253\u012A\u0463\u0464',
			'\u0255\u012B\u0464\u0465\u0271\u0139\u0465\u0466',
			'\u0251\u0129\u0466\x8A\u0467\u0468',
			'\u0253\u012A\u0468\u0469\u0255\u012B\u0469\u046A',
			'\u0271\u0139\u046A\u046B\u0251\u0129\u046B\u046C',
			'\u026F\u0138\u046C\u046D\u025D\u012F\u046D\u046E',
			'\u024F\u0128\u046E\u046F\u0255\u012B\u046F\x8C',
			'\u0470\u0471\u0253\u012A\u0471\u0472',
			'\u0257\u012C\u0472\u0473\u0271\u0139\u0473\x8E',
			'\u0474\u0475\u0253\u012A\u0475\u0476',
			'\u025D\u012F\u0476\u0477\u026F\u0138\u0477\u0478',
			'\u0255\u012B\u0478\u0479\u0251\u0129\u0479\u047A',
			'\u0273\u013A\u047A\u047B\u0269\u0135\u047B\u047C',
			'\u026F\u0138\u047C\u047D\u025D\u012F\u047D\u047E',
			'\u0255\u012B\u047E\u047F\u0271\u0139\u047F\x90',
			'\u0480\u0481\u0253\u012A\u0481\u0482',
			'\u025D\u012F\u0482\u0483\u026F\u0138\u0483\u0484',
			'\u0255\u012B\u0484\u0485\u0251\u0129\u0485\u0486',
			'\u0273\u013A\u0486\u0487\u0269\u0135\u0487\u0488',
			'\u026F\u0138\u0488\u0489\u027D\u013F\u0489\x92',
			'\u048A\u048B\u0253\u012A\u048B\u048C',
			'\u025D\u012F\u048C\u048D\u0271\u0139\u048D\u048E',
			'\u0273\u013A\u048E\u048F\u025D\u012F\u048F\u0490',
			'\u0267\u0134\u0490\u0491\u0251\u0129\u0491\u0492',
			'\u0273\u013A\u0492\x94\u0493\u0494',
			'\u0253\u012A\u0494\u0495\u025D\u012F\u0495\u0496',
			'\u0271\u0139\u0496\u0497\u0273\u013A\u0497\u0498',
			'\u026F\u0138\u0498\u0499\u025D\u012F\u0499\u049A',
			'\u024F\u0128\u049A\u049B\u0275\u013B\u049B\u049C',
			'\u0273\u013A\u049C\u049D\u0255\u012B\u049D\x96',
			'\u049E\u049F\u0253\u012A\u049F\u04A0',
			'\u025D\u012F\u04A0\u04A1\u0277\u013C\u04A1\x98',
			'\u04A2\u04A3\u0253\u012A\u04A3\u04A4',
			'\u026F\u0138\u04A4\u04A5\u0269\u0135\u04A5\u04A6',
			'\u026B\u0136\u04A6\x9A\u04A7\u04A8',
			'\u0255\u012B\u04A8\u04A9\u0263\u0132\u04A9\u04AA',
			'\u0271\u0139\u04AA\u04AB\u0255\u012B\u04AB\x9C',
			'\u04AC\u04AD\u0255\u012B\u04AD\u04AE',
			'\u0267\u0134\u04AE\u04AF\u0253\u012A\u04AF\x9E',
			'\u04B0\u04B1\u0255\u012B\u04B1\u04B2',
			'\u0271\u0139\u04B2\u04B3\u0251\u0129\u04B3\u04B4',
			'\u024D\u0127\u04B4\u04B5\u026B\u0136\u04B5\u04B6',
			'\u0255\u012B\u04B6\xA0\u04B7\u04B8',
			'\u0255\u012B\u04B8\u04B9\u0271\u0139\u04B9\u04BA',
			'\u0251\u0129\u04BA\u04BB\u024D\u0127\u04BB\u04BC',
			'\u026B\u0136\u04BC\u04BD\u0255\u012B\u04BD\u04BE',
			'\u0253\u012A\u04BE\xA2\u04BF\u04C0',
			'\u0255\u012B\u04C0\u04C1\u027B\u013E\u04C1\u04C2',
			'\u0251\u0129\u04C2\u04C3\u0255\u012B\u04C3\u04C4',
			'\u026B\u0136\u04C4\u04C5\u0273\u013A\u04C5\xA4',
			'\u04C6\u04C7\u0255\u012B\u04C7\u04C8',
			'\u027B\u013E\u04C8\u04C9\u0251\u0129\u04C9\u04CA',
			'\u025B\u012E\u04CA\u04CB\u024D\u0127\u04CB\u04CC',
			'\u0267\u0134\u04CC\u04CD\u0259\u012D\u04CD\u04CE',
			'\u0255\u012B\u04CE\xA6\u04CF\u04D0',
			'\u0255\u012B\u04D0\u04D1\u027B\u013E\u04D1\u04D2',
			'\u025D\u012F\u04D2\u04D3\u0271\u0139\u04D3\u04D4',
			'\u0273\u013A\u04D4\u04D5\u0271\u0139\u04D5\xA8',
			'\u04D6\u04D7\u0255\u012B\u04D7\u04D8',
			'\u027B\u013E\u04D8\u04D9\u026B\u0136\u04D9\u04DA',
			'\u0263\u0132\u04DA\u04DB\u024D\u0127\u04DB\u04DC',
			'\u025D\u012F\u04DC\u04DD\u0267\u0134\u04DD\xAA',
			'\u04DE\u04DF\u0255\u012B\u04DF\u04E0',
			'\u027B\u013E\u04E0\u04E1\u026B\u0136\u04E1\u04E2',
			'\u0269\u0135\u04E2\u04E3\u026F\u0138\u04E3\u04E4',
			'\u0273\u013A\u04E4\xAC\u04E5\u04E6',
			'\u0255\u012B\u04E6\u04E7\u027B\u013E\u04E7\u04E8',
			'\u0273\u013A\u04E8\u04E9\u0255\u012B\u04E9\u04EA',
			'\u0267\u0134\u04EA\u04EB\u0253\u012A\u04EB\u04EC',
			'\u0255\u012B\u04EC\u04ED\u0253\u012A\u04ED\xAE',
			'\u04EE\u04EF\u0255\u012B\u04EF\u04F0',
			'\u027B\u013E\u04F0\u04F1\u0273\u013A\u04F1\u04F2',
			'\u0255\u012B\u04F2\u04F3\u026F\u0138\u04F3\u04F4',
			'\u0267\u0134\u04F4\u04F5\u024D\u0127\u04F5\u04F6',
			'\u0263\u0132\u04F6\xB0\u04F7\u04F8',
			'\u0255\u012B\u04F8\u04F9\u027B\u013E\u04F9\u04FA',
			'\u0273\u013A\u04FA\u04FB\u026F\u0138\u04FB\u04FC',
			'\u024D\u0127\u04FC\u04FD\u0251\u0129\u04FD\u04FE',
			'\u0273\u013A\u04FE\xB2\u04FF\u0500',
			'\u0257\u012C\u0500\u0501\u024D\u0127\u0501\u0502',
			'\u0263\u0132\u0502\u0503\u0271\u0139\u0503\u0504',
			'\u0255\u012B\u0504\xB4\u0505\u0506',
			'\u0257\u012C\u0506\u0507\u0255\u012B\u0507\u0508',
			'\u0273\u013A\u0508\u0509\u0251\u0129\u0509\u050A',
			'\u025B\u012E\u050A\xB6\u050B\u050C',
			'\u0257\u012C\u050C\u050D\u025D\u012F\u050D\u050E',
			'\u0255\u012B\u050E\u050F\u0263\u0132\u050F\u0510',
			'\u0253\u012A\u0510\u0511\u0271\u0139\u0511\xB8',
			'\u0512\u0513\u0257\u012C\u0513\u0514',
			'\u025D\u012F\u0514\u0515\u0263\u0132\u0515\u0516',
			'\u0273\u013A\u0516\u0517\u0255\u012B\u0517\u0518',
			'\u026F\u0138\u0518\xBA\u0519\u051A',
			'\u0257\u012C\u051A\u051B\u025D\u012F\u051B\u051C',
			'\u0263\u0132\u051C\u051D\u0255\u012B\u051D\u051E',
			'\u0257\u012C\u051E\u051F\u0269\u0135\u051F\u0520',
			'\u026F\u0138\u0520\u0521\u0265\u0133\u0521\u0522',
			'\u024D\u0127\u0522\u0523\u0273\u013A\u0523\xBC',
			'\u0524\u0525\u0257\u012C\u0525\u0526',
			'\u025D\u012F\u0526\u0527\u026F\u0138\u0527\u0528',
			'\u0271\u0139\u0528\u0529\u0273\u013A\u0529\xBE',
			'\u052A\u052B\u0257\u012C\u052B\u052C',
			'\u0269\u0135\u052C\u052D\u0263\u0132\u052D\u052E',
			'\u0263\u0132\u052E\u052F\u0269\u0135\u052F\u0530',
			'\u0279\u013D\u0530\u0531\u025D\u012F\u0531\u0532',
			'\u0267\u0134\u0532\u0533\u0259\u012D\u0533\xC0',
			'\u0534\u0535\u0257\u012C\u0535\u0536',
			'\u0269\u0135\u0536\u0537\u026F\u0138\u0537\xC2',
			'\u0538\u0539\u0257\u012C\u0539\u053A',
			'\u0269\u0135\u053A\u053B\u026F\u0138\u053B\u053C',
			'\u0255\u012B\u053C\u053D\u025D\u012F\u053D\u053E',
			'\u0259\u012D\u053E\u053F\u0267\u0134\u053F\xC4',
			'\u0540\u0541\u0257\u012C\u0541\u0542',
			'\u0269\u0135\u0542\u0543\u026F\u0138\u0543\u0544',
			'\u0265\u0133\u0544\u0545\u024D\u0127\u0545\u0546',
			'\u0273\u013A\u0546\xC6\u0547\u0548',
			'\u0257\u012C\u0548\u0549\u0269\u0135\u0549\u054A',
			'\u026F\u0138\u054A\u054B\u0265\u0133\u054B\u054C',
			'\u024D\u0127\u054C\u054D\u0273\u013A\u054D\u054E',
			'\u0273\u013A\u054E\u054F\u0255\u012B\u054F\u0550',
			'\u0253\u012A\u0550\xC8\u0551\u0552',
			'\u0257\u012C\u0552\u0553\u026F\u0138\u0553\u0554',
			'\u0269\u0135\u0554\u0555\u0265\u0133\u0555\xCA',
			'\u0556\u0557\u0257\u012C\u0557\u0558',
			'\u0275\u013B\u0558\u0559\u0263\u0132\u0559\u055A',
			'\u0263\u0132\u055A\xCC\u055B\u055C',
			'\u0257\u012C\u055C\u055D\u0275\u013B\u055D\u055E',
			'\u0267\u0134\u055E\u055F\u0251\u0129\u055F\u0560',
			'\u0273\u013A\u0560\u0561\u025D\u012F\u0561\u0562',
			'\u0269\u0135\u0562\u0563\u0267\u0134\u0563\xCE',
			'\u0564\u0565\u0257\u012C\u0565\u0566',
			'\u0275\u013B\u0566\u0567\u0267\u0134\u0567\u0568',
			'\u0251\u0129\u0568\u0569\u0273\u013A\u0569\u056A',
			'\u025D\u012F\u056A\u056B\u0269\u0135\u056B\u056C',
			'\u0267\u0134\u056C\u056D\u0271\u0139\u056D\xD0',
			'\u056E\u056F\u0259\u012D\u056F\u0570',
			'\u0263\u0132\u0570\u0571\u0269\u0135\u0571\u0572',
			'\u024F\u0128\u0572\u0573\u024D\u0127\u0573\u0574',
			'\u0263\u0132\u0574\xD2\u0575\u0576',
			'\u0259\u012D\u0576\u0577\u026F\u0138\u0577\u0578',
			'\u024D\u0127\u0578\u0579\u0267\u0134\u0579\u057A',
			'\u0273\u013A\u057A\xD4\u057B\u057C',
			'\u0259\u012D\u057C\u057D\u026F\u0138\u057D\u057E',
			'\u0269\u0135\u057E\u057F\u0275\u013B\u057F\u0580',
			'\u026B\u0136\u0580\xD6\u0581\u0582',
			'\u0259\u012D\u0582\u0583\u026F\u0138\u0583\u0584',
			'\u0269\u0135\u0584\u0585\u0275\u013B\u0585\u0586',
			'\u026B\u0136\u0586\u0587\u025D\u012F\u0587\u0588',
			'\u0267\u0134\u0588\u0589\u0259\u012D\u0589\xD8',
			'\u058A\u058B\u025B\u012E\u058B\u058C',
			'\u024D\u0127\u058C\u058D\u0277\u013C\u058D\u058E',
			'\u025D\u012F\u058E\u058F\u0267\u0134\u058F\u0590',
			'\u0259\u012D\u0590\xDA\u0591\u0592',
			'\u025D\u012F\u0592\u0593\u0257\u012C\u0593\xDC',
			'\u0594\u0595\u025D\u012F\u0595\u0596',
			'\u0259\u012D\u0596\u0597\u0267\u0134\u0597\u0598',
			'\u0269\u0135\u0598\u0599\u026F\u0138\u0599\u059A',
			'\u0255\u012B\u059A\xDE\u059B\u059C',
			'\u025D\u012F\u059C\u059D\u0265\u0133\u059D\u059E',
			'\u026B\u0136\u059E\u059F\u0269\u0135\u059F\u05A0',
			'\u026F\u0138\u05A0\u05A1\u0273\u013A\u05A1\xE0',
			'\u05A2\u05A3\u025D\u012F\u05A3\u05A4',
			'\u0267\u0134\u05A4\xE2\u05A5\u05A6',
			'\u025D\u012F\u05A6\u05A7\u0267\u0134\u05A7\u05A8',
			'\u0253\u012A\u05A8\u05A9\u0255\u012B\u05A9\u05AA',
			'\u027B\u013E\u05AA\xE4\u05AB\u05AC',
			'\u025D\u012F\u05AC\u05AD\u0267\u0134\u05AD\u05AE',
			'\u0253\u012A\u05AE\u05AF\u0255\u012B\u05AF\u05B0',
			'\u027B\u013E\u05B0\u05B1\u0255\u012B\u05B1\u05B2',
			'\u0271\u0139\u05B2\xE6\u05B3\u05B4',
			'\u025D\u012F\u05B4\u05B5\u0267\u0134\u05B5\u05B6',
			'\u0267\u0134\u05B6\u05B7\u0255\u012B\u05B7\u05B8',
			'\u026F\u0138\u05B8\xE8\u05B9\u05BA',
			'\u025D\u012F\u05BA\u05BB\u0267\u0134\u05BB\u05BC',
			'\u026B\u0136\u05BC\u05BD\u024D\u0127\u05BD\u05BE',
			'\u0273\u013A\u05BE\u05BF\u025B\u012E\u05BF\xEA',
			'\u05C0\u05C1\u025D\u012F\u05C1\u05C2',
			'\u0267\u0134\u05C2\u05C3\u026B\u0136\u05C3\u05C4',
			'\u0275\u013B\u05C4\u05C5\u0273\u013A\u05C5\u05C6',
			'\u0257\u012C\u05C6\u05C7\u0269\u0135\u05C7\u05C8',
			'\u026F\u0138\u05C8\u05C9\u0265\u0133\u05C9\u05CA',
			'\u024D\u0127\u05CA\u05CB\u0273\u013A\u05CB\xEC',
			'\u05CC\u05CD\u025D\u012F\u05CD\u05CE',
			'\u0267\u0134\u05CE\u05CF\u0271\u0139\u05CF\u05D0',
			'\u0255\u012B\u05D0\u05D1\u026F\u0138\u05D1\u05D2',
			'\u0273\u013A\u05D2\xEE\u05D3\u05D4',
			'\u025D\u012F\u05D4\u05D5\u0267\u0134\u05D5\u05D6',
			'\u0273\u013A\u05D6\u05D7\u0255\u012B\u05D7\u05D8',
			'\u026F\u0138\u05D8\u05D9\u0271\u0139\u05D9\u05DA',
			'\u0255\u012B\u05DA\u05DB\u0251\u0129\u05DB\u05DC',
			'\u0273\u013A\u05DC\xF0\u05DD\u05DE',
			'\u025D\u012F\u05DE\u05DF\u0267\u0134\u05DF\u05E0',
			'\u0273\u013A\u05E0\u05E1\u0255\u012B\u05E1\u05E2',
			'\u026F\u0138\u05E2\u05E3\u0277\u013C\u05E3\u05E4',
			'\u024D\u0127\u05E4\u05E5\u0263\u0132\u05E5\xF2',
			'\u05E6\u05E7\u025D\u012F\u05E7\u05E8',
			'\u0267\u0134\u05E8\u05E9\u0273\u013A\u05E9\u05EA',
			'\u0269\u0135\u05EA\xF4\u05EB\u05EC',
			'\u025D\u012F\u05EC\u05ED\u0271\u0139\u05ED\xF6',
			'\u05EE\u05EF\u025D\u012F\u05EF\u05F0',
			'\u0273\u013A\u05F0\u05F1\u0255\u012B\u05F1\u05F2',
			'\u0265\u0133\u05F2\u05F3\u0271\u0139\u05F3\xF8',
			'\u05F4\u05F5\u025F\u0130\u05F5\u05F6',
			'\u0269\u0135\u05F6\u05F7\u025D\u012F\u05F7\u05F8',
			'\u0267\u0134\u05F8\xFA\u05F9\u05FA',
			'\u0261\u0131\u05FA\u05FB\u0255\u012B\u05FB\u05FC',
			'\u027D\u013F\u05FC\u05FD\u0271\u0139\u05FD\xFC',
			'\u05FE\u05FF\u0263\u0132\u05FF\u0600',
			'\u024D\u0127\u0600\u0601\u0271\u0139\u0601\u0602',
			'\u0273\u013A\u0602\xFE\u0603\u0604',
			'\u0263\u0132\u0604\u0605\u024D\u0127\u0605\u0606',
			'\u0273\u013A\u0606\u0607\u0255\u012B\u0607\u0608',
			'\u026F\u0138\u0608\u0609\u024D\u0127\u0609\u060A',
			'\u0263\u0132\u060A\u0100\u060B\u060C',
			'\u0263\u0132\u060C\u060D\u024D\u0127\u060D\u060E',
			'\u027F\u0140\u060E\u060F\u027D\u013F\u060F\u0102',
			'\u0610\u0611\u0263\u0132\u0611\u0612',
			'\u0255\u012B\u0612\u0613\u024D\u0127\u0613\u0614',
			'\u0253\u012A\u0614\u0615\u025D\u012F\u0615\u0616',
			'\u0267\u0134\u0616\u0617\u0259\u012D\u0617\u0104',
			'\u0618\u0619\u0263\u0132\u0619\u061A',
			'\u0255\u012B\u061A\u061B\u0257\u012C\u061B\u061C',
			'\u0273\u013A\u061C\u0106\u061D\u061E',
			'\u0263\u0132\u061E\u061F\u025D\u012F\u061F\u0620',
			'\u0261\u0131\u0620\u0621\u0255\u012B\u0621\u0108',
			'\u0622\u0623\u0263\u0132\u0623\u0624',
			'\u025D\u012F\u0624\u0625\u0265\u0133\u0625\u0626',
			'\u025D\u012F\u0626\u0627\u0273\u013A\u0627\u010A',
			'\u0628\u0629\u0263\u0132\u0629\u062A',
			'\u025D\u012F\u062A\u062B\u0267\u0134\u062B\u062C',
			'\u0255\u012B\u062C\u062D\u0271\u0139\u062D\u010C',
			'\u062E\u062F\u0263\u0132\u062F\u0630',
			'\u025D\u012F\u0630\u0631\u0271\u0139\u0631\u0632',
			'\u0273\u013A\u0632\u010E\u0633\u0634',
			'\u0263\u0132\u0634\u0635\u0269\u0135\u0635\u0636',
			'\u024D\u0127\u0636\u0637\u0253\u012A\u0637\u0110',
			'\u0638\u0639\u0263\u0132\u0639\u063A',
			'\u0269\u0135\u063A\u063B\u0251\u0129\u063B\u063C',
			'\u024D\u0127\u063C\u063D\u0263\u0132\u063D\u0112',
			'\u063E\u063F\u0263\u0132\u063F\u0640',
			'\u0269\u0135\u0640\u0641\u0251\u0129\u0641\u0642',
			'\u024D\u0127\u0642\u0643\u0273\u013A\u0643\u0644',
			'\u025D\u012F\u0644\u0645\u0269\u0135\u0645\u0646',
			'\u0267\u0134\u0646\u0114\u0647\u0648',
			'\u0263\u0132\u0648\u0649\u0269\u0135\u0649\u064A',
			'\u0251\u0129\u064A\u064B\u0261\u0131\u064B\u0116',
			'\u064C\u064D\u0263\u0132\u064D\u064E',
			'\u0269\u0135\u064E\u064F\u0251\u0129\u064F\u0650',
			'\u0261\u0131\u0650\u0651\u0271\u0139\u0651\u0118',
			'\u0652\u0653\u0263\u0132\u0653\u0654',
			'\u0269\u0135\u0654\u0655\u0259\u012D\u0655\u0656',
			'\u025D\u012F\u0656\u0657\u0251\u0129\u0657\u0658',
			'\u024D\u0127\u0658\u0659\u0263\u0132\u0659\u011A',
			'\u065A\u065B\u0265\u0133\u065B\u065C',
			'\u024D\u0127\u065C\u065D\u0251\u0129\u065D\u065E',
			'\u026F\u0138\u065E\u065F\u0269\u0135\u065F\u011C',
			'\u0660\u0661\u0265\u0133\u0661\u0662',
			'\u024D\u0127\u0662\u0663\u026B\u0136\u0663\u011E',
			'\u0664\u0665\u0265\u0133\u0665\u0666',
			'\u024D\u0127\u0666\u0667\u0273\u013A\u0667\u0668',
			'\u0251\u0129\u0668\u0669\u025B\u012E\u0669\u066A',
			'\u0255\u012B\u066A\u066B\u0253\u012A\u066B\u0120',
			'\u066C\u066D\u0265\u0133\u066D\u066E',
			'\u0255\u012B\u066E\u066F\u026F\u0138\u066F\u0670',
			'\u0259\u012D\u0670\u0671\u0255\u012B\u0671\u0122',
			'\u0672\u0673\u0265\u0133\u0673\u0674',
			'\u0271\u0139\u0674\u0675\u0251\u0129\u0675\u0676',
			'\u0261\u0131\u0676\u0124\u0677\u0678',
			'\u0267\u0134\u0678\u0679\u024D\u0127\u0679\u067A',
			'\u0265\u0133\u067A\u067B\u0255\u012B\u067B\u067C',
			'\u0271\u0139\u067C\u067D\u026B\u0136\u067D\u067E',
			'\u024D\u0127\u067E\u067F\u0251\u0129\u067F\u0680',
			'\u0255\u012B\u0680\u0126\u0681\u0682',
			'\u0267\u0134\u0682\u0683\u024D\u0127\u0683\u0684',
			'\u0265\u0133\u0684\u0685\u0255\u012B\u0685\u0686',
			'\u0271\u0139\u0686\u0687\u026B\u0136\u0687\u0688',
			'\u024D\u0127\u0688\u0689\u0251\u0129\u0689\u068A',
			'\u0255\u012B\u068A\u068B\u0271\u0139\u068B\u0128',
			'\u068C\u068D\u0267\u0134\u068D\u068E',
			'\u024D\u0127\u068E\u068F\u0273\u013A\u068F\u0690',
			'\u0275\u013B\u0690\u0691\u026F\u0138\u0691\u0692',
			'\u024D\u0127\u0692\u0693\u0263\u0132\u0693\u012A',
			'\u0694\u0695\u0267\u0134\u0695\u0696',
			'\u0269\u0135\u0696\u012C\u0697\u0698',
			'\u0267\u0134\u0698\u0699\u0269\u0135\u0699\u069A',
			'\u0273\u013A\u069A\u069D\u069B\u069D',
			'\x07#\u069C\u0697\u069C\u069B',
			'\u069D\u012E\u069E\u069F',
			'\u0267\u0134\u069F\u06A0\u0275\u013B\u06A0\u06A1',
			'\u0263\u0132\u06A1\u06A2\u0263\u0132\u06A2\u0130',
			'\u06A3\u06A4\u0267\u0134\u06A4\u06A5',
			'\u0275\u013B\u06A5\u06A6\u0263\u0132\u06A6\u06A7',
			'\u0263\u0132\u06A7\u06A8\u0271\u0139\u06A8\u0132',
			'\u06A9\u06AA\u0269\u0135\u06AA\u06AB',
			'\u0257\u012C\u06AB\u0134\u06AC\u06AD',
			'\u0269\u0135\u06AD\u06AE\u0267\u0134\u06AE\u0136',
			'\u06AF\u06B0\u0269\u0135\u06B0\u06B1',
			'\u0267\u0134\u06B1\u06B2\u0263\u0132\u06B2\u06B3',
			'\u027D\u013F\u06B3\u0138\u06B4\u06B5',
			'\u0269\u0135\u06B5\u06B6\u026B\u0136\u06B6\u06B7',
			'\u0273\u013A\u06B7\u06B8\u025D\u012F\u06B8\u06B9',
			'\u0269\u0135\u06B9\u06BA\u0267\u0134\u06BA\u013A',
			'\u06BB\u06BC\u0269\u0135\u06BC\u06BD',
			'\u026B\u0136\u06BD\u06BE\u0273\u013A\u06BE\u06BF',
			'\u025D\u012F\u06BF\u06C0\u0269\u0135\u06C0\u06C1',
			'\u0267\u0134\u06C1\u06C2\u0271\u0139\u06C2\u013C',
			'\u06C3\u06C4\u0269\u0135\u06C4\u06C5',
			'\u026F\u0138\u06C5\u013E\u06C6\u06C7',
			'\u0269\u0135\u06C7\u06C8\u026F\u0138\u06C8\u06C9',
			'\u0253\u012A\u06C9\u06CA\u0255\u012B\u06CA\u06CB',
			'\u026F\u0138\u06CB\u0140\u06CC\u06CD',
			'\u0269\u0135\u06CD\u06CE\u0275\u013B\u06CE\u06CF',
			'\u0273\u013A\u06CF\u0142\u06D0\u06D1',
			'\u0269\u0135\u06D1\u06D2\u0275\u013B\u06D2\u06D3',
			'\u0273\u013A\u06D3\u06D4\u0255\u012B\u06D4\u06D5',
			'\u026F\u0138\u06D5\u0144\u06D6\u06D7',
			'\u0269\u0135\u06D7\u06D8\u0275\u013B\u06D8\u06D9',
			'\u0273\u013A\u06D9\u06DA\u026B\u0136\u06DA\u06DB',
			'\u0275\u013B\u06DB\u06DC\u0273\u013A\u06DC\u06DD',
			'\u0257\u012C\u06DD\u06DE\u0269\u0135\u06DE\u06DF',
			'\u026F\u0138\u06DF\u06E0\u0265\u0133\u06E0\u06E1',
			'\u024D\u0127\u06E1\u06E2\u0273\u013A\u06E2\u0146',
			'\u06E3\u06E4\u0269\u0135\u06E4\u06E5',
			'\u0277\u013C\u06E5\u06E6\u0255\u012B\u06E6\u06E7',
			'\u026F\u0138\u06E7\u0148\u06E8\u06E9',
			'\u0269\u0135\u06E9\u06EA\u0277\u013C\u06EA\u06EB',
			'\u0255\u012B\u06EB\u06EC\u026F\u0138\u06EC\u06ED',
			'\u0263\u0132\u06ED\u06EE\u024D\u0127\u06EE\u06EF',
			'\u026B\u0136\u06EF\u06F0\u0271\u0139\u06F0\u014A',
			'\u06F1\u06F2\u0269\u0135\u06F2\u06F3',
			'\u0277\u013C\u06F3\u06F4\u0255\u012B\u06F4\u06F5',
			'\u026F\u0138\u06F5\u06F6\u0263\u0132\u06F6\u06F7',
			'\u024D\u0127\u06F7\u06F8\u027D\u013F\u06F8\u014C',
			'\u06F9\u06FA\u0269\u0135\u06FA\u06FB',
			'\u0277\u013C\u06FB\u06FC\u0255\u012B\u06FC\u06FD',
			'\u026F\u0138\u06FD\u06FE\u0279\u013D\u06FE\u06FF',
			'\u026F\u0138\u06FF\u0700\u025D\u012F\u0700\u0701',
			'\u0273\u013A\u0701\u0702\u0255\u012B\u0702\u014E',
			'\u0703\u0704\u026B\u0136\u0704\u0705',
			'\u024D\u0127\u0705\u0706\u026F\u0138\u0706\u0707',
			'\u0273\u013A\u0707\u0708\u025D\u012F\u0708\u0709',
			'\u0273\u013A\u0709\u070A\u025D\u012F\u070A\u070B',
			'\u0269\u0135\u070B\u070C\u0267\u0134\u070C\u0150',
			'\u070D\u070E\u026B\u0136\u070E\u070F',
			'\u024D\u0127\u070F\u0710\u026F\u0138\u0710\u0711',
			'\u0273\u013A\u0711\u0712\u025D\u012F\u0712\u0713',
			'\u0273\u013A\u0713\u0714\u025D\u012F\u0714\u0715',
			'\u0269\u0135\u0715\u0716\u0267\u0134\u0716\u0717',
			'\u0255\u012B\u0717\u0718\u0253\u012A\u0718\u0152',
			'\u0719\u071A\u026B\u0136\u071A\u071B',
			'\u024D\u0127\u071B\u071C\u026F\u0138\u071C\u071D',
			'\u0273\u013A\u071D\u071E\u025D\u012F\u071E\u071F',
			'\u0273\u013A\u071F\u0720\u025D\u012F\u0720\u0721',
			'\u0269\u0135\u0721\u0722\u0267\u0134\u0722\u0723',
			'\u0271\u0139\u0723\u0154\u0724\u0725',
			'\u026B\u0136\u0725\u0726\u0255\u012B\u0726\u0727',
			'\u026F\u0138\u0727\u0728\u0251\u0129\u0728\u0729',
			'\u0255\u012B\u0729\u072A\u0267\u0134\u072A\u072B',
			'\u0273\u013A\u072B\u072C\u0263\u0132\u072C\u072D',
			'\u025D\u012F\u072D\u072E\u0273\u013A\u072E\u0156',
			'\u072F\u0730\u026B\u0136\u0730\u0731',
			'\u025D\u012F\u0731\u0732\u0277\u013C\u0732\u0733',
			'\u0269\u0135\u0733\u0734\u0273\u013A\u0734\u0158',
			'\u0735\u0736\u026B\u0136\u0736\u0737',
			'\u0263\u0132\u0737\u0738\u024D\u0127\u0738\u0739',
			'\u0251\u0129\u0739\u073A\u025D\u012F\u073A\u073B',
			'\u0267\u0134\u073B\u073C\u0259\u012D\u073C\u015A',
			'\u073D\u073E\u026B\u0136\u073E\u073F',
			'\u0269\u0135\u073F\u0740\u0271\u0139\u0740\u0741',
			'\u025D\u012F\u0741\u0742\u0273\u013A\u0742\u0743',
			'\u025D\u012F\u0743\u0744\u0269\u0135\u0744\u0745',
			'\u0267\u0134\u0745\u015C\u0746\u0747',
			'\u026B\u0136\u0747\u0748\u026F\u0138\u0748\u0749',
			'\u0255\u012B\u0749\u074A\u0251\u0129\u074A\u074B',
			'\u0255\u012B\u074B\u074C\u0253\u012A\u074C\u074D',
			'\u025D\u012F\u074D\u074E\u0267\u0134\u074E\u074F',
			'\u0259\u012D\u074F\u015E\u0750\u0751',
			'\u026B\u0136\u0751\u0752\u026F\u0138\u0752\u0753',
			'\u025D\u012F\u0753\u0754\u0265\u0133\u0754\u0755',
			'\u024D\u0127\u0755\u0756\u026F\u0138\u0756\u0757',
			'\u027D\u013F\u0757\u0160\u0758\u0759',
			'\u026B\u0136\u0759\u075A\u026F\u0138\u075A\u075B',
			'\u025D\u012F\u075B\u075C\u0267\u0134\u075C\u075D',
			'\u0251\u0129\u075D\u075E\u025D\u012F\u075E\u075F',
			'\u026B\u0136\u075F\u0760\u024D\u0127\u0760\u0761',
			'\u0263\u0132\u0761\u0762\u0271\u0139\u0762\u0162',
			'\u0763\u0764\u026B\u0136\u0764\u0765',
			'\u026F\u0138\u0765\u0766\u0269\u0135\u0766\u0767',
			'\u026B\u0136\u0767\u0768\u0255\u012B\u0768\u0769',
			'\u026F\u0138\u0769\u076A\u0273\u013A\u076A\u076B',
			'\u025D\u012F\u076B\u076C\u0255\u012B\u076C\u076D',
			'\u0271\u0139\u076D\u0164\u076E\u076F',
			'\u026B\u0136\u076F\u0770\u0275\u013B\u0770\u0771',
			'\u026F\u0138\u0771\u0772\u0259\u012D\u0772\u0773',
			'\u0255\u012B\u0773\u0166\u0774\u0775',
			'\u026D\u0137\u0775\u0776\u0275\u013B\u0776\u0777',
			'\u0255\u012B\u0777\u0778\u026F\u0138\u0778\u0779',
			'\u027D\u013F\u0779\u0168\u077A\u077B',
			'\u026F\u0138\u077B\u077C\u024D\u0127\u077C\u077D',
			'\u0267\u0134\u077D\u077E\u0259\u012D\u077E\u077F',
			'\u0255\u012B\u077F\u016A\u0780\u0781',
			'\u026F\u0138\u0781\u0782\u0255\u012B\u0782\u0783',
			'\u0251\u0129\u0783\u0784\u0269\u0135\u0784\u0785',
			'\u026F\u0138\u0785\u0786\u0253\u012A\u0786\u0787',
			'\u026F\u0138\u0787\u0788\u0255\u012B\u0788\u0789',
			'\u024D\u0127\u0789\u078A\u0253\u012A\u078A\u078B',
			'\u0255\u012B\u078B\u078C\u026F\u0138\u078C\u016C',
			'\u078D\u078E\u026F\u0138\u078E\u078F',
			'\u0255\u012B\u078F\u0790\u0251\u0129\u0790\u0791',
			'\u0269\u0135\u0791\u0792\u026F\u0138\u0792\u0793',
			'\u0253\u012A\u0793\u0794\u0279\u013D\u0794\u0795',
			'\u026F\u0138\u0795\u0796\u025D\u012F\u0796\u0797',
			'\u0273\u013A\u0797\u0798\u0255\u012B\u0798\u0799',
			'\u026F\u0138\u0799\u016E\u079A\u079B',
			'\u026F\u0138\u079B\u079C\u0255\u012B\u079C\u079D',
			'\u0251\u0129\u079D\u079E\u0269\u0135\u079E\u079F',
			'\u0277\u013C\u079F\u07A0\u0255\u012B\u07A0\u07A1',
			'\u026F\u0138\u07A1\u0170\u07A2\u07A3',
			'\u026F\u0138\u07A3\u07A4\u0255\u012B\u07A4\u07A5',
			'\u0253\u012A\u07A5\u07A6\u0275\u013B\u07A6\u07A7',
			'\u0251\u0129\u07A7\u07A8\u0255\u012B\u07A8\u0172',
			'\u07A9\u07AA\u026F\u0138\u07AA\u07AB',
			'\u0255\u012B\u07AB\u07AC\u0257\u012C\u07AC\u07AD',
			'\u0255\u012B\u07AD\u07AE\u026F\u0138\u07AE\u07AF',
			'\u0255\u012B\u07AF\u07B0\u0267\u0134\u07B0\u07B1',
			'\u0251\u0129\u07B1\u07B2\u0255\u012B\u07B2\u07B3',
			'\u0271\u0139\u07B3\u0174\u07B4\u07B5',
			'\u026F\u0138\u07B5\u07B6\u0255\u012B\u07B6\u07B7',
			'\u0257\u012C\u07B7\u07B8\u026F\u0138\u07B8\u07B9',
			'\u0255\u012B\u07B9\u07BA\u0271\u0139\u07BA\u07BB',
			'\u025B\u012E\u07BB\u0176\u07BC\u07BD',
			'\u026F\u0138\u07BD\u07BE\u0255\u012B\u07BE\u07BF',
			'\u0267\u0134\u07BF\u07C0\u024D\u0127\u07C0\u07C1',
			'\u0265\u0133\u07C1\u07C2\u0255\u012B\u07C2\u0178',
			'\u07C3\u07C4\u026F\u0138\u07C4\u07C5',
			'\u0255\u012B\u07C5\u07C6\u026B\u0136\u07C6\u07C7',
			'\u024D\u0127\u07C7\u07C8\u025D\u012F\u07C8\u07C9',
			'\u026F\u0138\u07C9\u017A\u07CA\u07CB',
			'\u026F\u0138\u07CB\u07CC\u0255\u012B\u07CC\u07CD',
			'\u026B\u0136\u07CD\u07CE\u0263\u0132\u07CE\u07CF',
			'\u024D\u0127\u07CF\u07D0\u0251\u0129\u07D0\u07D1',
			'\u0255\u012B\u07D1\u017C\u07D2\u07D3',
			'\u026F\u0138\u07D3\u07D4\u0255\u012B\u07D4\u07D5',
			'\u0271\u0139\u07D5\u07D6\u0255\u012B\u07D6\u07D7',
			'\u0273\u013A\u07D7\u017E\u07D8\u07D9',
			'\u026F\u0138\u07D9\u07DA\u0255\u012B\u07DA\u07DB',
			'\u0271\u0139\u07DB\u07DC\u026B\u0136\u07DC\u07DD',
			'\u0255\u012B\u07DD\u07DE\u0251\u0129\u07DE\u07DF',
			'\u0273\u013A\u07DF\u0180\u07E0\u07E1',
			'\u026F\u0138\u07E1\u07E2\u0255\u012B\u07E2\u07E3',
			'\u0271\u0139\u07E3\u07E4\u0273\u013A\u07E4\u07E5',
			'\u026F\u0138\u07E5\u07E6\u025D\u012F\u07E6\u07E7',
			'\u0251\u0129\u07E7\u07E8\u0273\u013A\u07E8\u0182',
			'\u07E9\u07EA\u026F\u0138\u07EA\u07EB',
			'\u0255\u012B\u07EB\u07EC\u0277\u013C\u07EC\u07ED',
			'\u0269\u0135\u07ED\u07EE\u0261\u0131\u07EE\u07EF',
			'\u0255\u012B\u07EF\u0184\u07F0\u07F1',
			'\u026F\u0138\u07F1\u07F2\u025D\u012F\u07F2\u07F3',
			'\u0259\u012D\u07F3\u07F4\u025B\u012E\u07F4\u07F5',
			'\u0273\u013A\u07F5\u0186\u07F6\u07F7',
			'\u026F\u0138\u07F7\u07F8\u0263\u0132\u07F8\u07F9',
			'\u025D\u012F\u07F9\u07FA\u0261\u0131\u07FA\u07FB',
			'\u0255\u012B\u07FB\u0804\u07FC\u07FD',
			'\u026F\u0138\u07FD\u07FE\u0255\u012B\u07FE\u07FF',
			'\u0259\u012D\u07FF\u0800\u0255\u012B\u0800\u0801',
			'\u027B\u013E\u0801\u0802\u026B\u0136\u0802\u0804',
			'\u0803\u07F6\u0803\u07FC',
			'\u0804\u0188\u0805\u0806',
			'\u026F\u0138\u0806\u0807\u0269\u0135\u0807\u0808',
			'\u0263\u0132\u0808\u0809\u0255\u012B\u0809\u018A',
			'\u080A\u080B\u026F\u0138\u080B\u080C',
			'\u0269\u0135\u080C\u080D\u0263\u0132\u080D\u080E',
			'\u0255\u012B\u080E\u080F\u0271\u0139\u080F\u018C',
			'\u0810\u0811\u026F\u0138\u0811\u0812',
			'\u0269\u0135\u0812\u0813\u0263\u0132\u0813\u0814',
			'\u0263\u0132\u0814\u0815\u024F\u0128\u0815\u0816',
			'\u024D\u0127\u0816\u0817\u0251\u0129\u0817\u0818',
			'\u0261\u0131\u0818\u018E\u0819\u081A',
			'\u026F\u0138\u081A\u081B\u0269\u0135\u081B\u081C',
			'\u0263\u0132\u081C\u081D\u0263\u0132\u081D\u081E',
			'\u0275\u013B\u081E\u081F\u026B\u0136\u081F\u0190',
			'\u0820\u0821\u026F\u0138\u0821\u0822',
			'\u0269\u0135\u0822\u0823\u0279\u013D\u0823\u0192',
			'\u0824\u0825\u026F\u0138\u0825\u0826',
			'\u0269\u0135\u0826\u0827\u0279\u013D\u0827\u0828',
			'\u0271\u0139\u0828\u0194\u0829\u082A',
			'\u0271\u0139\u082A\u082B\u0251\u0129\u082B\u082C',
			'\u025B\u012E\u082C\u082D\u0255\u012B\u082D\u082E',
			'\u0265\u0133\u082E\u082F\u024D\u0127\u082F\u0196',
			'\u0830\u0831\u0271\u0139\u0831\u0832',
			'\u0255\u012B\u0832\u0833\u0263\u0132\u0833\u0834',
			'\u0255\u012B\u0834\u0835\u0251\u0129\u0835\u0836',
			'\u0273\u013A\u0836\u0198\u0837\u0838',
			'\u0271\u0139\u0838\u0839\u0255\u012B\u0839\u083A',
			'\u0265\u0133\u083A\u083B\u025D\u012F\u083B\u019A',
			'\u083C\u083D\u0271\u0139\u083D\u083E',
			'\u0255\u012B\u083E\u083F\u026B\u0136\u083F\u0840',
			'\u024D\u0127\u0840\u0841\u026F\u0138\u0841\u0842',
			'\u024D\u0127\u0842\u0843\u0273\u013A\u0843\u0844',
			'\u0255\u012B\u0844\u0845\u0253\u012A\u0845\u019C',
			'\u0846\u0847\u0271\u0139\u0847\u0848',
			'\u0255\u012B\u0848\u0849\u026F\u0138\u0849\u084A',
			'\u0253\u012A\u084A\u084B\u0255\u012B\u084B\u019E',
			'\u084C\u084D\u0271\u0139\u084D\u084E',
			'\u0255\u012B\u084E\u084F\u026F\u0138\u084F\u0850',
			'\u0253\u012A\u0850\u0851\u0255\u012B\u0851\u0852',
			'\u026B\u0136\u0852\u0853\u026F\u0138\u0853\u0854',
			'\u0269\u0135\u0854\u0855\u026B\u0136\u0855\u0856',
			'\u0255\u012B\u0856\u0857\u026F\u0138\u0857\u0858',
			'\u0273\u013A\u0858\u0859\u025D\u012F\u0859\u085A',
			'\u0255\u012B\u085A\u085B\u0271\u0139\u085B\u01A0',
			'\u085C\u085D\u0271\u0139\u085D\u085E',
			'\u0255\u012B\u085E\u085F\u0271\u0139\u085F\u0860',
			'\u0271\u0139\u0860\u0861\u025D\u012F\u0861\u0862',
			'\u0269\u0135\u0862\u0863\u0267\u0134\u0863\u0864',
			'\x07a\u0864\u0865\u0275\u013B\u0865\u0866',
			'\u0271\u0139\u0866\u0867\u0255\u012B\u0867\u0868',
			'\u026F\u0138\u0868\u01A2\u0869\u086A',
			'\u0271\u0139\u086A\u086B\u0255\u012B\u086B\u086C',
			'\u0273\u013A\u086C\u01A4\u086D\u086E',
			'\u0271\u0139\u086E\u086F\u0255\u012B\u086F\u0870',
			'\u0273\u013A\u0870\u0871\u0265\u0133\u0871\u0872',
			'\u025D\u012F\u0872\u0873\u0267\u0134\u0873\u0874',
			'\u0275\u013B\u0874\u0875\u0271\u0139\u0875\u01A6',
			'\u0876\u0877\u0271\u0139\u0877\u0878',
			'\u0255\u012B\u0878\u0879\u0273\u013A\u0879\u087A',
			'\u0271\u0139\u087A\u01A8\u087B\u087C',
			'\u0271\u0139\u087C\u087D\u025B\u012E\u087D\u087E',
			'\u0269\u0135\u087E\u087F\u0279\u013D\u087F\u01AA',
			'\u0880\u0881\u0271\u0139\u0881\u0882',
			'\u0261\u0131\u0882\u0883\u0255\u012B\u0883\u0884',
			'\u0279\u013D\u0884\u0885\u0255\u012B\u0885\u0886',
			'\u0253\u012A\u0886\u01AC\u0887\u0888',
			'\u0271\u0139\u0888\u0889\u0269\u0135\u0889\u088A',
			'\u0265\u0133\u088A\u088B\u0255\u012B\u088B\u01AE',
			'\u088C\u088D\u0271\u0139\u088D\u088E',
			'\u0269\u0135\u088E\u088F\u026F\u0138\u088F\u0890',
			'\u0273\u013A\u0890\u01B0\u0891\u0892',
			'\u0271\u0139\u0892\u0893\u0269\u0135\u0893\u0894',
			'\u026F\u0138\u0894\u0895\u0273\u013A\u0895\u0896',
			'\u0255\u012B\u0896\u0897\u0253\u012A\u0897\u01B2',
			'\u0898\u0899\u0271\u0139\u0899\u089A',
			'\u0273\u013A\u089A\u089B\u024D\u0127\u089B\u089C',
			'\u026F\u0138\u089C\u089D\u0273\u013A\u089D\u01B4',
			'\u089E\u089F\u0271\u0139\u089F\u08A0',
			'\u0273\u013A\u08A0\u08A1\u024D\u0127\u08A1\u08A2',
			'\u0273\u013A\u08A2\u08A3\u025D\u012F\u08A3\u08A4',
			'\u0271\u0139\u08A4\u08A5\u0273\u013A\u08A5\u08A6',
			'\u025D\u012F\u08A6\u08A7\u0251\u0129\u08A7\u08A8',
			'\u0271\u0139\u08A8\u01B6\u08A9\u08AA',
			'\u0271\u0139\u08AA\u08AB\u0273\u013A\u08AB\u08AC',
			'\u0269\u0135\u08AC\u08AD\u026F\u0138\u08AD\u08AE',
			'\u0255\u012B\u08AE\u08AF\u0253\u012A\u08AF\u01B8',
			'\u08B0\u08B1\u0271\u0139\u08B1\u08B2',
			'\u0273\u013A\u08B2\u08B3\u026F\u0138\u08B3\u08B4',
			'\u024D\u0127\u08B4\u08B5\u0273\u013A\u08B5\u08B6',
			'\u025D\u012F\u08B6\u08B7\u0257\u012C\u08B7\u08B8',
			'\u027D\u013F\u08B8\u01BA\u08B9\u08BA',
			'\u0271\u0139\u08BA\u08BB\u0273\u013A\u08BB\u08BC',
			'\u026F\u0138\u08BC\u08BD\u0275\u013B\u08BD\u08BE',
			'\u0251\u0129\u08BE\u08BF\u0273\u013A\u08BF\u01BC',
			'\u08C0\u08C1\u0271\u0139\u08C1\u08C2',
			'\u0275\u013B\u08C2\u08C3\u024F\u0128\u08C3\u08C4',
			'\u0271\u0139\u08C4\u08C5\u0273\u013A\u08C5\u08C6',
			'\u026F\u0138\u08C6\u01BE\u08C7\u08C8',
			'\u0271\u0139\u08C8\u08C9\u0275\u013B\u08C9\u08CA',
			'\u024F\u0128\u08CA\u08CB\u0271\u0139\u08CB\u08CC',
			'\u0273\u013A\u08CC\u08CD\u026F\u0138\u08CD\u08CE',
			'\u025D\u012F\u08CE\u08CF\u0267\u0134\u08CF\u08D0',
			'\u0259\u012D\u08D0\u01C0\u08D1\u08D2',
			'\u0271\u0139\u08D2\u08D3\u027D\u013F\u08D3\u08D4',
			'\u0267\u0134\u08D4\u08D5\u0251\u0129\u08D5\u01C2',
			'\u08D6\u08D7\u0273\u013A\u08D7\u08D8',
			'\u024D\u0127\u08D8\u08D9\u024F\u0128\u08D9\u08DA',
			'\u0263\u0132\u08DA\u08DB\u0255\u012B\u08DB\u01C4',
			'\u08DC\u08DD\u0273\u013A\u08DD\u08DE',
			'\u024D\u0127\u08DE\u08DF\u024F\u0128\u08DF\u08E0',
			'\u0263\u0132\u08E0\u08E1\u0255\u012B\u08E1\u08E2',
			'\u0271\u0139\u08E2\u01C6\u08E3\u08E4',
			'\u0273\u013A\u08E4\u08E5\u024D\u0127\u08E5\u08E6',
			'\u024F\u0128\u08E6\u08E7\u0263\u0132\u08E7\u08E8',
			'\u0255\u012B\u08E8\u08E9\u0271\u0139\u08E9\u08EA',
			'\u024D\u0127\u08EA\u08EB\u0265\u0133\u08EB\u08EC',
			'\u026B\u0136\u08EC\u08ED\u0263\u0132\u08ED\u08EE',
			'\u0255\u012B\u08EE\u01C8\u08EF\u08F0',
			'\u0273\u013A\u08F0\u08F1\u024F\u0128\u08F1\u08F2',
			'\u0263\u0132\u08F2\u08F3\u026B\u0136\u08F3\u08F4',
			'\u026F\u0138\u08F4\u08F5\u0269\u0135\u08F5\u08F6',
			'\u026B\u0136\u08F6\u08F7\u0255\u012B\u08F7\u08F8',
			'\u026F\u0138\u08F8\u08F9\u0273\u013A\u08F9\u08FA',
			'\u025D\u012F\u08FA\u08FB\u0255\u012B\u08FB\u08FC',
			'\u0271\u0139\u08FC\u01CA\u08FD\u08FE',
			'\u0273\u013A\u08FE\u08FF\u0255\u012B\u08FF\u0900',
			'\u0265\u0133\u0900\u0901\u026B\u0136\u0901\u0902',
			'\u0269\u0135\u0902\u0903\u026F\u0138\u0903\u0904',
			'\u024D\u0127\u0904\u0905\u026F\u0138\u0905\u0906',
			'\u027D\u013F\u0906\u090D\u0907\u0908',
			'\u0273\u013A\u0908\u0909\u0255\u012B\u0909\u090A',
			'\u0265\u0133\u090A\u090B\u026B\u0136\u090B\u090D',
			'\u090C\u08FD\u090C\u0907',
			'\u090D\u01CC\u090E\u090F',
			'\u0273\u013A\u090F\u0910\u0255\u012B\u0910\u0911',
			'\u026F\u0138\u0911\u0912\u0265\u0133\u0912\u0913',
			'\u025D\u012F\u0913\u0914\u0267\u0134\u0914\u0915',
			'\u024D\u0127\u0915\u0916\u0273\u013A\u0916\u0917',
			'\u0255\u012B\u0917\u0918\u0253\u012A\u0918\u01CE',
			'\u0919\u091A\u0273\u013A\u091A\u091B',
			'\u025B\u012E\u091B\u091C\u0255\u012B\u091C\u091D',
			'\u0267\u0134\u091D\u01D0\u091E\u091F',
			'\u0273\u013A\u091F\u0920\u025D\u012F\u0920\u0921',
			'\u0265\u0133\u0921\u0922\u0255\u012B\u0922\u01D2',
			'\u0923\u0924\u0273\u013A\u0924\u0925',
			'\u0269\u0135\u0925\u01D4\u0926\u0927',
			'\u0273\u013A\u0927\u0928\u0269\u0135\u0928\u0929',
			'\u0275\u013B\u0929\u092A\u0251\u0129\u092A\u092B',
			'\u025B\u012E\u092B\u01D6\u092C\u092D',
			'\u0273\u013A\u092D\u092E\u026F\u0138\u092E\u092F',
			'\u024D\u0127\u092F\u0930\u025D\u012F\u0930\u0931',
			'\u0263\u0132\u0931\u0932\u025D\u012F\u0932\u0933',
			'\u0267\u0134\u0933\u0934\u0259\u012D\u0934\u01D8',
			'\u0935\u0936\u0273\u013A\u0936\u0937',
			'\u026F\u0138\u0937\u0938\u024D\u0127\u0938\u0939',
			'\u0267\u0134\u0939\u093A\u0271\u0139\u093A\u093B',
			'\u024D\u0127\u093B\u093C\u0251\u0129\u093C\u093D',
			'\u0273\u013A\u093D\u093E\u025D\u012F\u093E\u093F',
			'\u0269\u0135\u093F\u0940\u0267\u0134\u0940\u01DA',
			'\u0941\u0942\u0273\u013A\u0942\u0943',
			'\u026F\u0138\u0943\u0944\u024D\u0127\u0944\u0945',
			'\u0267\u0134\u0945\u0946\u0271\u0139\u0946\u0947',
			'\u024D\u0127\u0947\u0948\u0251\u0129\u0948\u0949',
			'\u0273\u013A\u0949\u094A\u025D\u012F\u094A\u094B',
			'\u0269\u0135\u094B\u094C\u0267\u0134\u094C\u094D',
			'\u0271\u0139\u094D\u01DC\u094E\u094F',
			'\u0273\u013A\u094F\u0950\u026F\u0138\u0950\u0951',
			'\u024D\u0127\u0951\u0952\u0267\u0134\u0952\u0953',
			'\u0271\u0139\u0953\u0954\u0257\u012C\u0954\u0955',
			'\u0269\u0135\u0955\u0956\u026F\u0138\u0956\u0957',
			'\u0265\u0133\u0957\u01DE\u0958\u0959',
			'\u0273\u013A\u0959\u095A\u026F\u0138\u095A\u095B',
			'\u025D\u012F\u095B\u095C\u0265\u0133\u095C\u01E0',
			'\u095D\u095E\u0273\u013A\u095E\u095F',
			'\u026F\u0138\u095F\u0960\u0275\u013B\u0960\u0961',
			'\u0255\u012B\u0961\u01E2\u0962\u0963',
			'\u0273\u013A\u0963\u0964\u026F\u0138\u0964\u0965',
			'\u0275\u013B\u0965\u0966\u0267\u0134\u0966\u0967',
			'\u0251\u0129\u0967\u0968\u024D\u0127\u0968\u0969',
			'\u0273\u013A\u0969\u096A\u0255\u012B\u096A\u01E4',
			'\u096B\u096C\u0273\u013A\u096C\u096D',
			'\u026F\u0138\u096D\u096E\u027D\u013F\u096E\u096F',
			'\x07a\u096F\u0970\u0251\u0129\u0970\u0971',
			'\u024D\u0127\u0971\u0972\u0271\u0139\u0972\u0973',
			'\u0273\u013A\u0973\u01E6\u0974\u0975',
			'\u0273\u013A\u0975\u0976\u027D\u013F\u0976\u0977',
			'\u026B\u0136\u0977\u0978\u0255\u012B\u0978\u01E8',
			'\u0979\u097A\u0275\u013B\u097A\u097B',
			'\u0267\u0134\u097B\u097C\u024D\u0127\u097C\u097D',
			'\u026F\u0138\u097D\u097E\u0251\u0129\u097E\u097F',
			'\u025B\u012E\u097F\u0980\u025D\u012F\u0980\u0981',
			'\u0277\u013C\u0981\u0982\u0255\u012B\u0982\u01EA',
			'\u0983\u0984\u0275\u013B\u0984\u0985',
			'\u0267\u0134\u0985\u0986\u024F\u0128\u0986\u0987',
			'\u0269\u0135\u0987\u0988\u0275\u013B\u0988\u0989',
			'\u0267\u0134\u0989\u098A\u0253\u012A\u098A\u098B',
			'\u0255\u012B\u098B\u098C\u0253\u012A\u098C\u01EC',
			'\u098D\u098E\u0275\u013B\u098E\u098F',
			'\u0267\u0134\u098F\u0990\u0251\u0129\u0990\u0991',
			'\u024D\u0127\u0991\u0992\u0251\u0129\u0992\u0993',
			'\u025B\u012E\u0993\u0994\u0255\u012B\u0994\u01EE',
			'\u0995\u0996\u0275\u013B\u0996\u0997',
			'\u0267\u0134\u0997\u0998\u025D\u012F\u0998\u0999',
			'\u0269\u0135\u0999\u099A\u0267\u0134\u099A\u01F0',
			'\u099B\u099C\u0275\u013B\u099C\u099D',
			'\u0267\u0134\u099D\u099E\u025D\u012F\u099E\u099F',
			'\u026D\u0137\u099F\u09A0\u0275\u013B\u09A0\u09A1',
			'\u0255\u012B\u09A1\u01F2\u09A2\u09A3',
			'\u0275\u013B\u09A3\u09A4\u0267\u0134\u09A4\u09A5',
			'\u0261\u0131\u09A5\u09A6\u0267\u0134\u09A6\u09A7',
			'\u0269\u0135\u09A7\u09A8\u0279\u013D\u09A8\u09A9',
			'\u0267\u0134\u09A9\u01F4\u09AA\u09AB',
			'\u0275\u013B\u09AB\u09AC\u0267\u0134\u09AC\u09AD',
			'\u0263\u0132\u09AD\u09AE\u0269\u0135\u09AE\u09AF',
			'\u0251\u0129\u09AF\u09B0\u0261\u0131\u09B0\u01F6',
			'\u09B1\u09B2\u0275\u013B\u09B2\u09B3',
			'\u0267\u0134\u09B3\u09B4\u0271\u0139\u09B4\u09B5',
			'\u0255\u012B\u09B5\u09B6\u0273\u013A\u09B6\u01F8',
			'\u09B7\u09B8\u0275\u013B\u09B8\u09B9',
			'\u026B\u0136\u09B9\u09BA\u0253\u012A\u09BA\u09BB',
			'\u024D\u0127\u09BB\u09BC\u0273\u013A\u09BC\u09BD',
			'\u0255\u012B\u09BD\u01FA\u09BE\u09BF',
			'\u0275\u013B\u09BF\u09C0\u0271\u0139\u09C0\u09C1',
			'\u0255\u012B\u09C1\u01FC\u09C2\u09C3',
			'\u0275\u013B\u09C3\u09C4\u0271\u0139\u09C4\u09C5',
			'\u0255\u012B\u09C5\u09C6\u026F\u0138\u09C6\u01FE',
			'\u09C7\u09C8\u0275\u013B\u09C8\u09C9',
			'\u0271\u0139\u09C9\u09CA\u025D\u012F\u09CA\u09CB',
			'\u0267\u0134\u09CB\u09CC\u0259\u012D\u09CC\u0200',
			'\u09CD\u09CE\u0277\u013C\u09CE\u09CF',
			'\u024D\u0127\u09CF\u09D0\u0263\u0132\u09D0\u09D1',
			'\u0275\u013B\u09D1\u09D2\u0255\u012B\u09D2\u09D3',
			'\u0271\u0139\u09D3\u0202\u09D4\u09D5',
			'\u0277\u013C\u09D5\u09D6\u025D\u012F\u09D6\u09D7',
			'\u0255\u012B\u09D7\u09D8\u0279\u013D\u09D8\u0204',
			'\u09D9\u09DA\u0277\u013C\u09DA\u09DB',
			'\u025D\u012F\u09DB\u09DC\u0255\u012B\u09DC\u09DD',
			'\u0279\u013D\u09DD\u09DE\u0271\u0139\u09DE\u0206',
			'\u09DF\u09E0\u0279\u013D\u09E0\u09E1',
			'\u025B\u012E\u09E1\u09E2\u0255\u012B\u09E2\u09E3',
			'\u0267\u0134\u09E3\u0208\u09E4\u09E5',
			'\u0279\u013D\u09E5\u09E6\u025B\u012E\u09E6\u09E7',
			'\u0255\u012B\u09E7\u09E8\u026F\u0138\u09E8\u09E9',
			'\u0255\u012B\u09E9\u020A\u09EA\u09EB',
			'\u0279\u013D\u09EB\u09EC\u025D\u012F\u09EC\u09ED',
			'\u0267\u0134\u09ED\u09EE\u0253\u012A\u09EE\u09EF',
			'\u0269\u0135\u09EF\u09F0\u0279\u013D\u09F0\u020C',
			'\u09F1\u09F2\u0279\u013D\u09F2\u09F3',
			'\u025D\u012F\u09F3\u09F4\u0273\u013A\u09F4\u09F5',
			'\u025B\u012E\u09F5\u020E\u09F6\u09F7',
			'\u027F\u0140\u09F7\u09F8\u0269\u0135\u09F8\u09F9',
			'\u0267\u0134\u09F9\u09FA\u0255\u012B\u09FA\u0210',
			'\u09FB\u09FF\x07?\u09FC\u09FD',
			'\x07?\u09FD\u09FF\x07?\u09FE\u09FB',
			'\u09FE\u09FC\u09FF\u0212',
			'\u0A00\u0A01\x07>\u0A01\u0A02\x07',
			'?\u0A02\u0A03\x07@\u0A03\u0214',
			'\u0A04\u0A05\x07>\u0A05\u0A06\x07@',
			'\u0A06\u0216\u0A07\u0A08\x07#',
			'\u0A08\u0A09\x07?\u0A09\u0218',
			'\u0A0A\u0A0B\x07>\u0A0B\u021A',
			'\u0A0C\u0A0D\x07>\u0A0D\u0A11\x07?',
			'\u0A0E\u0A0F\x07#\u0A0F\u0A11\x07@\u0A10',
			'\u0A0C\u0A10\u0A0E\u0A11',
			'\u021C\u0A12\u0A13\x07@\u0A13',
			'\u021E\u0A14\u0A15\x07@\u0A15',
			'\u0A19\x07?\u0A16\u0A17\x07#\u0A17\u0A19',
			'\x07>\u0A18\u0A14\u0A18\u0A16',
			'\u0A19\u0220\u0A1A\u0A1B',
			'\x07-\u0A1B\u0222\u0A1C\u0A1D',
			'\x07/\u0A1D\u0224\u0A1E\u0A1F',
			'\x07,\u0A1F\u0226\u0A20\u0A21',
			'\x071\u0A21\u0228\u0A22\u0A23',
			"\x07'\u0A23\u022A\u0A24\u0A25",
			'\x07\x80\u0A25\u022C\u0A26\u0A27',
			'\x07(\u0A27\u022E\u0A28\u0A29',
			'\x07~\u0A29\u0230\u0A2A\u0A2B',
			'\x07~\u0A2B\u0A2C\x07~\u0A2C\u0232',
			'\u0A2D\u0A2E\x07`\u0A2E\u0234',
			`\u0A2F\u0A35\x07)\u0A30\u0A34
`,
			'\u0A31\u0A32\x07^\u0A32\u0A34\v',
			'\u0A33\u0A30\u0A33\u0A31',
			'\u0A34\u0A37\u0A35\u0A33',
			'\u0A35\u0A36\u0A36\u0A38',
			'\u0A37\u0A35\u0A38\u0A44\x07)',
			`\u0A39\u0A3F\x07$\u0A3A\u0A3E
`,
			'\u0A3B\u0A3C\x07^\u0A3C\u0A3E\v',
			'\u0A3D\u0A3A\u0A3D\u0A3B',
			'\u0A3E\u0A41\u0A3F\u0A3D',
			'\u0A3F\u0A40\u0A40\u0A42',
			'\u0A41\u0A3F\u0A42\u0A44\x07$',
			'\u0A43\u0A2F\u0A43\u0A39',
			'\u0A44\u0236\u0A45\u0A47\u0285\u0143',
			'\u0A46\u0A45\u0A47\u0A48',
			'\u0A48\u0A46\u0A48\u0A49',
			'\u0A49\u0A4A\u0A4A\u0A4B\x07N',
			'\u0A4B\u0238\u0A4C\u0A4E\u0285\u0143',
			'\u0A4D\u0A4C\u0A4E\u0A4F',
			'\u0A4F\u0A4D\u0A4F\u0A50',
			'\u0A50\u0A51\u0A51\u0A52\x07U',
			'\u0A52\u023A\u0A53\u0A55\u0285\u0143',
			'\u0A54\u0A53\u0A55\u0A56',
			'\u0A56\u0A54\u0A56\u0A57',
			'\u0A57\u0A58\u0A58\u0A59\x07[',
			'\u0A59\u023C\u0A5A\u0A5C\u0285\u0143',
			'\u0A5B\u0A5A\u0A5C\u0A5D',
			'\u0A5D\u0A5B\u0A5D\u0A5E',
			'\u0A5E\u023E\u0A5F\u0A61\u0285\u0143',
			'\u0A60\u0A5F\u0A61\u0A62',
			'\u0A62\u0A60\u0A62\u0A63',
			'\u0A63\u0A64\u0A64\u0A65\u0283\u0142',
			'\u0A65\u0A6B\u0A66\u0A67\u0281\u0141',
			'\u0A67\u0A68\u0283\u0142\u0A68\u0A69\u0120',
			'\u0A69\u0A6B\u0A6A\u0A60',
			'\u0A6A\u0A66\u0A6B\u0240',
			'\u0A6C\u0A6D\u0281\u0141\u0A6D\u0A6E\u0121',
			'\u0A6E\u0242\u0A6F\u0A71\u0285\u0143',
			'\u0A70\u0A6F\u0A71\u0A72',
			'\u0A72\u0A70\u0A72\u0A73',
			'\u0A73\u0A75\u0A74\u0A76\u0283\u0142',
			'\u0A75\u0A74\u0A75\u0A76',
			'\u0A76\u0A77\u0A77\u0A78\x07H',
			'\u0A78\u0A81\u0A79\u0A7B\u0281\u0141',
			'\u0A7A\u0A7C\u0283\u0142\u0A7B\u0A7A',
			'\u0A7B\u0A7C\u0A7C\u0A7D',
			'\u0A7D\u0A7E\x07H\u0A7E\u0A7F\u0122',
			'\u0A7F\u0A81\u0A80\u0A70',
			'\u0A80\u0A79\u0A81\u0244',
			'\u0A82\u0A84\u0285\u0143\u0A83\u0A82',
			'\u0A84\u0A85\u0A85\u0A83',
			'\u0A85\u0A86\u0A86\u0A88',
			'\u0A87\u0A89\u0283\u0142\u0A88\u0A87',
			'\u0A88\u0A89\u0A89\u0A8A',
			'\u0A8A\u0A8B\x07F\u0A8B\u0A94',
			'\u0A8C\u0A8E\u0281\u0141\u0A8D\u0A8F\u0283\u0142',
			'\u0A8E\u0A8D\u0A8E\u0A8F',
			'\u0A8F\u0A90\u0A90\u0A91\x07F',
			'\u0A91\u0A92\u0123\u0A92\u0A94',
			'\u0A93\u0A83\u0A93\u0A8C',
			'\u0A94\u0246\u0A95\u0A97\u0285\u0143',
			'\u0A96\u0A95\u0A97\u0A98',
			'\u0A98\u0A96\u0A98\u0A99',
			'\u0A99\u0A9B\u0A9A\u0A9C\u0283\u0142',
			'\u0A9B\u0A9A\u0A9B\u0A9C',
			'\u0A9C\u0A9D\u0A9D\u0A9E\x07D',
			'\u0A9E\u0A9F\x07F\u0A9F\u0AAA',
			'\u0AA0\u0AA2\u0281\u0141\u0AA1\u0AA3\u0283\u0142',
			'\u0AA2\u0AA1\u0AA2\u0AA3',
			'\u0AA3\u0AA4\u0AA4\u0AA5\x07D',
			'\u0AA5\u0AA6\x07F\u0AA6\u0AA7',
			'\u0AA7\u0AA8\u0124\u0AA8\u0AAA',
			'\u0AA9\u0A96\u0AA9\u0AA0',
			'\u0AAA\u0248\u0AAB\u0AAF\u0287\u0144',
			'\u0AAC\u0AAF\u0285\u0143\u0AAD\u0AAF\x07a',
			'\u0AAE\u0AAB\u0AAE\u0AAC',
			'\u0AAE\u0AAD\u0AAF\u0AB0',
			'\u0AB0\u0AAE\u0AB0\u0AB1',
			'\u0AB1\u024A\u0AB2\u0AB8\x07b',
			`\u0AB3\u0AB7
\u0AB4\u0AB5\x07b`,
			'\u0AB5\u0AB7\x07b\u0AB6\u0AB3',
			'\u0AB6\u0AB4\u0AB7\u0ABA',
			'\u0AB8\u0AB6\u0AB8\u0AB9',
			'\u0AB9\u0ABB\u0ABA\u0AB8',
			'\u0ABB\u0ABC\x07b\u0ABC\u024C',
			'\u0ABD\u0ABE	\u0ABE\u024E',
			'\u0ABF\u0AC0	\u0AC0\u0250',
			'\u0AC1\u0AC2	\x07\u0AC2\u0252',
			'\u0AC3\u0AC4	\b\u0AC4\u0254\u0AC5',
			'\u0AC6		\u0AC6\u0256\u0AC7\u0AC8',
			`	
\u0AC8\u0258\u0AC9\u0ACA	\v`,
			'\u0ACA\u025A\u0ACB\u0ACC	\f',
			'\u0ACC\u025C\u0ACD\u0ACE	\r',
			'\u0ACE\u025E\u0ACF\u0AD0	',
			'\u0AD0\u0260\u0AD1\u0AD2	',
			'\u0AD2\u0262\u0AD3\u0AD4	',
			'\u0AD4\u0264\u0AD5\u0AD6	',
			'\u0AD6\u0266\u0AD7\u0AD8	',
			'\u0AD8\u0268\u0AD9\u0ADA	',
			'\u0ADA\u026A\u0ADB\u0ADC	',
			'\u0ADC\u026C\u0ADD\u0ADE	',
			'\u0ADE\u026E\u0ADF\u0AE0	',
			'\u0AE0\u0270\u0AE1\u0AE2	',
			'\u0AE2\u0272\u0AE3\u0AE4	',
			'\u0AE4\u0274\u0AE5\u0AE6	',
			'\u0AE6\u0276\u0AE7\u0AE8	',
			'\u0AE8\u0278\u0AE9\u0AEA	\x1B',
			'\u0AEA\u027A\u0AEB\u0AEC	',
			'\u0AEC\u027C\u0AED\u0AEE	',
			'\u0AEE\u027E\u0AEF\u0AF0	',
			'\u0AF0\u0280\u0AF1\u0AF3\u0285\u0143',
			'\u0AF2\u0AF1\u0AF3\u0AF4',
			'\u0AF4\u0AF2\u0AF4\u0AF5',
			'\u0AF5\u0AF6\u0AF6\u0AFA\x070',
			'\u0AF7\u0AF9\u0285\u0143\u0AF8\u0AF7',
			'\u0AF9\u0AFC\u0AFA\u0AF8',
			'\u0AFA\u0AFB\u0AFB\u0B04',
			'\u0AFC\u0AFA\u0AFD\u0AFF\x070',
			'\u0AFE\u0B00\u0285\u0143\u0AFF\u0AFE',
			'\u0B00\u0B01\u0B01\u0AFF',
			'\u0B01\u0B02\u0B02\u0B04',
			'\u0B03\u0AF2\u0B03\u0AFD',
			'\u0B04\u0282\u0B05\u0B07\x07G',
			'\u0B06\u0B08	\u0B07\u0B06',
			'\u0B07\u0B08\u0B08\u0B0A',
			'\u0B09\u0B0B\u0285\u0143\u0B0A\u0B09',
			'\u0B0B\u0B0C\u0B0C\u0B0A',
			'\u0B0C\u0B0D\u0B0D\u0284',
			'\u0B0E\u0B0F	 \u0B0F\u0286\u0B10',
			'\u0B11	!\u0B11\u0288\u0B12\u0B13',
			'\x07/\u0B13\u0B14\x07/\u0B14\u0B1A',
			'\u0B15\u0B16\x07^\u0B16\u0B19\x07',
			`\f\u0B17\u0B19
"\u0B18\u0B15`,
			'\u0B18\u0B17\u0B19\u0B1C',
			'\u0B1A\u0B18\u0B1A\u0B1B',
			'\u0B1B\u0B1E\u0B1C\u0B1A',
			'\u0B1D\u0B1F\x07\u0B1E\u0B1D',
			'\u0B1E\u0B1F\u0B1F\u0B21',
			'\u0B20\u0B22\x07\f\u0B21\u0B20',
			'\u0B21\u0B22\u0B22\u0B23',
			'\u0B23\u0B24\b\u0145\u0B24\u028A',
			'\u0B25\u0B26\x071\u0B26\u0B27\x07,',
			'\u0B27\u0B28\u0B28\u0B2D\u0146\x07',
			'\u0B29\u0B2C\u028B\u0146\u0B2A\u0B2C\v',
			'\u0B2B\u0B29\u0B2B\u0B2A',
			'\u0B2C\u0B2F\u0B2D\u0B2E',
			'\u0B2D\u0B2B\u0B2E\u0B30',
			'\u0B2F\u0B2D\u0B30\u0B31\x07,',
			'\u0B31\u0B32\x071\u0B32\u0B33',
			'\u0B33\u0B34\b\u0146\u0B34\u028C',
			'\u0B35\u0B37	#\u0B36\u0B35\u0B37',
			'\u0B38\u0B38\u0B36\u0B38',
			'\u0B39\u0B39\u0B3A\u0B3A',
			'\u0B3B\b\u0147\u0B3B\u028E\u0B3C',
			'\u0B3D\v\u0B3D\u02902',
			'\u043A\u069C\u0803\u090C\u09FE\u0A10\u0A18\u0A33\u0A35\u0A3D\u0A3F',
			'\u0A43\u0A48\u0A4F\u0A56\u0A5D\u0A62\u0A6A\u0A72\u0A75\u0A7B\u0A80\u0A85',
			'\u0A88\u0A8E\u0A93\u0A98\u0A9B\u0AA2\u0AA9\u0AAE\u0AB0\u0AB6\u0AB8\u0AF4',
			'\u0AFA\u0B01\u0B03\u0B07\u0B0C\u0B18\u0B1A\u0B1E\u0B21\u0B2B\u0B2D\u0B38',
			'',
		].join(''),
		Zf = new Fh.atn.ATNDeserializer().deserialize(S9),
		I9 = Zf.decisionToState.map(function (u, e) {
			return new Fh.dfa.DFA(u, e);
		});
	function E(u) {
		return (
			Fh.Lexer.call(this, u),
			(this._interp = new Fh.atn.LexerATNSimulator(this, Zf, I9, new Fh.PredictionContextCache())),
			this
		);
	}
	E.prototype = Object.create(Fh.Lexer.prototype);
	E.prototype.constructor = E;
	Object.defineProperty(E.prototype, 'atn', {
		get: function () {
			return Zf;
		},
	});
	E.EOF = Fh.Token.EOF;
	E.T__0 = 1;
	E.T__1 = 2;
	E.T__2 = 3;
	E.T__3 = 4;
	E.T__4 = 5;
	E.T__5 = 6;
	E.T__6 = 7;
	E.T__7 = 8;
	E.T__8 = 9;
	E.T__9 = 10;
	E.T__10 = 11;
	E.ADD = 12;
	E.AFTER = 13;
	E.ALL = 14;
	E.ALTER = 15;
	E.ANALYZE = 16;
	E.AND = 17;
	E.ANTI = 18;
	E.ANY = 19;
	E.ARCHIVE = 20;
	E.ARRAY = 21;
	E.AS = 22;
	E.ASC = 23;
	E.AT = 24;
	E.AUTHORIZATION = 25;
	E.BETWEEN = 26;
	E.BOTH = 27;
	E.BUCKET = 28;
	E.BUCKETS = 29;
	E.BY = 30;
	E.CACHE = 31;
	E.CASCADE = 32;
	E.CASE = 33;
	E.CAST = 34;
	E.CHANGE = 35;
	E.CHECK = 36;
	E.CLEAR = 37;
	E.CLUSTER = 38;
	E.CLUSTERED = 39;
	E.CODEGEN = 40;
	E.COLLATE = 41;
	E.COLLECTION = 42;
	E.COLUMN = 43;
	E.COLUMNS = 44;
	E.COMMENT = 45;
	E.COMMIT = 46;
	E.COMPACT = 47;
	E.COMPACTIONS = 48;
	E.COMPUTE = 49;
	E.CONCATENATE = 50;
	E.CONSTRAINT = 51;
	E.COST = 52;
	E.CREATE = 53;
	E.CROSS = 54;
	E.CUBE = 55;
	E.CURRENT = 56;
	E.CURRENT_DATE = 57;
	E.CURRENT_TIME = 58;
	E.CURRENT_TIMESTAMP = 59;
	E.CURRENT_USER = 60;
	E.DATA = 61;
	E.DATABASE = 62;
	E.DATABASES = 63;
	E.DBPROPERTIES = 64;
	E.DEFINED = 65;
	E.DELETE = 66;
	E.DELIMITED = 67;
	E.DESC = 68;
	E.DESCRIBE = 69;
	E.DFS = 70;
	E.DIRECTORIES = 71;
	E.DIRECTORY = 72;
	E.DISTINCT = 73;
	E.DISTRIBUTE = 74;
	E.DIV = 75;
	E.DROP = 76;
	E.ELSE = 77;
	E.END = 78;
	E.ESCAPE = 79;
	E.ESCAPED = 80;
	E.EXCEPT = 81;
	E.EXCHANGE = 82;
	E.EXISTS = 83;
	E.EXPLAIN = 84;
	E.EXPORT = 85;
	E.EXTENDED = 86;
	E.EXTERNAL = 87;
	E.EXTRACT = 88;
	E.FALSE = 89;
	E.FETCH = 90;
	E.FIELDS = 91;
	E.FILTER = 92;
	E.FILEFORMAT = 93;
	E.FIRST = 94;
	E.FOLLOWING = 95;
	E.FOR = 96;
	E.FOREIGN = 97;
	E.FORMAT = 98;
	E.FORMATTED = 99;
	E.FROM = 100;
	E.FULL = 101;
	E.FUNCTION = 102;
	E.FUNCTIONS = 103;
	E.GLOBAL = 104;
	E.GRANT = 105;
	E.GROUP = 106;
	E.GROUPING = 107;
	E.HAVING = 108;
	E.IF = 109;
	E.IGNORE = 110;
	E.IMPORT = 111;
	E.IN = 112;
	E.INDEX = 113;
	E.INDEXES = 114;
	E.INNER = 115;
	E.INPATH = 116;
	E.INPUTFORMAT = 117;
	E.INSERT = 118;
	E.INTERSECT = 119;
	E.INTERVAL = 120;
	E.INTO = 121;
	E.IS = 122;
	E.ITEMS = 123;
	E.JOIN = 124;
	E.KEYS = 125;
	E.LAST = 126;
	E.LATERAL = 127;
	E.LAZY = 128;
	E.LEADING = 129;
	E.LEFT = 130;
	E.LIKE = 131;
	E.LIMIT = 132;
	E.LINES = 133;
	E.LIST = 134;
	E.LOAD = 135;
	E.LOCAL = 136;
	E.LOCATION = 137;
	E.LOCK = 138;
	E.LOCKS = 139;
	E.LOGICAL = 140;
	E.MACRO = 141;
	E.MAP = 142;
	E.MATCHED = 143;
	E.MERGE = 144;
	E.MSCK = 145;
	E.NAMESPACE = 146;
	E.NAMESPACES = 147;
	E.NATURAL = 148;
	E.NO = 149;
	E.NOT = 150;
	E.NULL = 151;
	E.NULLS = 152;
	E.OF = 153;
	E.ON = 154;
	E.ONLY = 155;
	E.OPTION = 156;
	E.OPTIONS = 157;
	E.OR = 158;
	E.ORDER = 159;
	E.OUT = 160;
	E.OUTER = 161;
	E.OUTPUTFORMAT = 162;
	E.OVER = 163;
	E.OVERLAPS = 164;
	E.OVERLAY = 165;
	E.OVERWRITE = 166;
	E.PARTITION = 167;
	E.PARTITIONED = 168;
	E.PARTITIONS = 169;
	E.PERCENTLIT = 170;
	E.PIVOT = 171;
	E.PLACING = 172;
	E.POSITION = 173;
	E.PRECEDING = 174;
	E.PRIMARY = 175;
	E.PRINCIPALS = 176;
	E.PROPERTIES = 177;
	E.PURGE = 178;
	E.QUERY = 179;
	E.RANGE = 180;
	E.RECORDREADER = 181;
	E.RECORDWRITER = 182;
	E.RECOVER = 183;
	E.REDUCE = 184;
	E.REFERENCES = 185;
	E.REFRESH = 186;
	E.RENAME = 187;
	E.REPAIR = 188;
	E.REPLACE = 189;
	E.RESET = 190;
	E.RESPECT = 191;
	E.RESTRICT = 192;
	E.REVOKE = 193;
	E.RIGHT = 194;
	E.RLIKE = 195;
	E.ROLE = 196;
	E.ROLES = 197;
	E.ROLLBACK = 198;
	E.ROLLUP = 199;
	E.ROW = 200;
	E.ROWS = 201;
	E.SCHEMA = 202;
	E.SELECT = 203;
	E.SEMI = 204;
	E.SEPARATED = 205;
	E.SERDE = 206;
	E.SERDEPROPERTIES = 207;
	E.SESSION_USER = 208;
	E.SET = 209;
	E.SETMINUS = 210;
	E.SETS = 211;
	E.SHOW = 212;
	E.SKEWED = 213;
	E.SOME = 214;
	E.SORT = 215;
	E.SORTED = 216;
	E.START = 217;
	E.STATISTICS = 218;
	E.STORED = 219;
	E.STRATIFY = 220;
	E.STRUCT = 221;
	E.SUBSTR = 222;
	E.SUBSTRING = 223;
	E.SYNC = 224;
	E.TABLE = 225;
	E.TABLES = 226;
	E.TABLESAMPLE = 227;
	E.TBLPROPERTIES = 228;
	E.TEMPORARY = 229;
	E.TERMINATED = 230;
	E.THEN = 231;
	E.TIME = 232;
	E.TO = 233;
	E.TOUCH = 234;
	E.TRAILING = 235;
	E.TRANSACTION = 236;
	E.TRANSACTIONS = 237;
	E.TRANSFORM = 238;
	E.TRIM = 239;
	E.TRUE = 240;
	E.TRUNCATE = 241;
	E.TRY_CAST = 242;
	E.TYPE = 243;
	E.UNARCHIVE = 244;
	E.UNBOUNDED = 245;
	E.UNCACHE = 246;
	E.UNION = 247;
	E.UNIQUE = 248;
	E.UNKNOWN = 249;
	E.UNLOCK = 250;
	E.UNSET = 251;
	E.UPDATE = 252;
	E.USE = 253;
	E.USER = 254;
	E.USING = 255;
	E.VALUES = 256;
	E.VIEW = 257;
	E.VIEWS = 258;
	E.WHEN = 259;
	E.WHERE = 260;
	E.WINDOW = 261;
	E.WITH = 262;
	E.ZONE = 263;
	E.EQ = 264;
	E.NSEQ = 265;
	E.NEQ = 266;
	E.NEQJ = 267;
	E.LT = 268;
	E.LTE = 269;
	E.GT = 270;
	E.GTE = 271;
	E.PLUS = 272;
	E.MINUS = 273;
	E.ASTERISK = 274;
	E.SLASH = 275;
	E.PERCENT = 276;
	E.TILDE = 277;
	E.AMPERSAND = 278;
	E.PIPE = 279;
	E.CONCAT_PIPE = 280;
	E.HAT = 281;
	E.STRING = 282;
	E.BIGINT_LITERAL = 283;
	E.SMALLINT_LITERAL = 284;
	E.TINYINT_LITERAL = 285;
	E.INTEGER_VALUE = 286;
	E.EXPONENT_VALUE = 287;
	E.DECIMAL_VALUE = 288;
	E.FLOAT_LITERAL = 289;
	E.DOUBLE_LITERAL = 290;
	E.BIGDECIMAL_LITERAL = 291;
	E.IDENTIFIER = 292;
	E.BACKQUOTED_IDENTIFIER = 293;
	E.SIMPLE_COMMENT = 294;
	E.BRACKETED_COMMENT = 295;
	E.WS = 296;
	E.UNRECOGNIZED = 297;
	E.prototype.channelNames = ['DEFAULT_TOKEN_CHANNEL', 'HIDDEN'];
	E.prototype.modeNames = ['DEFAULT_MODE'];
	E.prototype.literalNames = [
		null,
		"';'",
		"'('",
		"')'",
		"','",
		"'.'",
		"'/*+'",
		"'*/'",
		"'->'",
		"'['",
		"']'",
		"':'",
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		"'<=>'",
		"'<>'",
		"'!='",
		"'<'",
		null,
		"'>'",
		null,
		"'+'",
		"'-'",
		"'*'",
		"'/'",
		"'%'",
		"'~'",
		"'&'",
		"'|'",
		"'||'",
		"'^'",
	];
	E.prototype.symbolicNames = [
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		'ADD',
		'AFTER',
		'ALL',
		'ALTER',
		'ANALYZE',
		'AND',
		'ANTI',
		'ANY',
		'ARCHIVE',
		'ARRAY',
		'AS',
		'ASC',
		'AT',
		'AUTHORIZATION',
		'BETWEEN',
		'BOTH',
		'BUCKET',
		'BUCKETS',
		'BY',
		'CACHE',
		'CASCADE',
		'CASE',
		'CAST',
		'CHANGE',
		'CHECK',
		'CLEAR',
		'CLUSTER',
		'CLUSTERED',
		'CODEGEN',
		'COLLATE',
		'COLLECTION',
		'COLUMN',
		'COLUMNS',
		'COMMENT',
		'COMMIT',
		'COMPACT',
		'COMPACTIONS',
		'COMPUTE',
		'CONCATENATE',
		'CONSTRAINT',
		'COST',
		'CREATE',
		'CROSS',
		'CUBE',
		'CURRENT',
		'CURRENT_DATE',
		'CURRENT_TIME',
		'CURRENT_TIMESTAMP',
		'CURRENT_USER',
		'DATA',
		'DATABASE',
		'DATABASES',
		'DBPROPERTIES',
		'DEFINED',
		'DELETE',
		'DELIMITED',
		'DESC',
		'DESCRIBE',
		'DFS',
		'DIRECTORIES',
		'DIRECTORY',
		'DISTINCT',
		'DISTRIBUTE',
		'DIV',
		'DROP',
		'ELSE',
		'END',
		'ESCAPE',
		'ESCAPED',
		'EXCEPT',
		'EXCHANGE',
		'EXISTS',
		'EXPLAIN',
		'EXPORT',
		'EXTENDED',
		'EXTERNAL',
		'EXTRACT',
		'FALSE',
		'FETCH',
		'FIELDS',
		'FILTER',
		'FILEFORMAT',
		'FIRST',
		'FOLLOWING',
		'FOR',
		'FOREIGN',
		'FORMAT',
		'FORMATTED',
		'FROM',
		'FULL',
		'FUNCTION',
		'FUNCTIONS',
		'GLOBAL',
		'GRANT',
		'GROUP',
		'GROUPING',
		'HAVING',
		'IF',
		'IGNORE',
		'IMPORT',
		'IN',
		'INDEX',
		'INDEXES',
		'INNER',
		'INPATH',
		'INPUTFORMAT',
		'INSERT',
		'INTERSECT',
		'INTERVAL',
		'INTO',
		'IS',
		'ITEMS',
		'JOIN',
		'KEYS',
		'LAST',
		'LATERAL',
		'LAZY',
		'LEADING',
		'LEFT',
		'LIKE',
		'LIMIT',
		'LINES',
		'LIST',
		'LOAD',
		'LOCAL',
		'LOCATION',
		'LOCK',
		'LOCKS',
		'LOGICAL',
		'MACRO',
		'MAP',
		'MATCHED',
		'MERGE',
		'MSCK',
		'NAMESPACE',
		'NAMESPACES',
		'NATURAL',
		'NO',
		'NOT',
		'NULL',
		'NULLS',
		'OF',
		'ON',
		'ONLY',
		'OPTION',
		'OPTIONS',
		'OR',
		'ORDER',
		'OUT',
		'OUTER',
		'OUTPUTFORMAT',
		'OVER',
		'OVERLAPS',
		'OVERLAY',
		'OVERWRITE',
		'PARTITION',
		'PARTITIONED',
		'PARTITIONS',
		'PERCENTLIT',
		'PIVOT',
		'PLACING',
		'POSITION',
		'PRECEDING',
		'PRIMARY',
		'PRINCIPALS',
		'PROPERTIES',
		'PURGE',
		'QUERY',
		'RANGE',
		'RECORDREADER',
		'RECORDWRITER',
		'RECOVER',
		'REDUCE',
		'REFERENCES',
		'REFRESH',
		'RENAME',
		'REPAIR',
		'REPLACE',
		'RESET',
		'RESPECT',
		'RESTRICT',
		'REVOKE',
		'RIGHT',
		'RLIKE',
		'ROLE',
		'ROLES',
		'ROLLBACK',
		'ROLLUP',
		'ROW',
		'ROWS',
		'SCHEMA',
		'SELECT',
		'SEMI',
		'SEPARATED',
		'SERDE',
		'SERDEPROPERTIES',
		'SESSION_USER',
		'SET',
		'SETMINUS',
		'SETS',
		'SHOW',
		'SKEWED',
		'SOME',
		'SORT',
		'SORTED',
		'START',
		'STATISTICS',
		'STORED',
		'STRATIFY',
		'STRUCT',
		'SUBSTR',
		'SUBSTRING',
		'SYNC',
		'TABLE',
		'TABLES',
		'TABLESAMPLE',
		'TBLPROPERTIES',
		'TEMPORARY',
		'TERMINATED',
		'THEN',
		'TIME',
		'TO',
		'TOUCH',
		'TRAILING',
		'TRANSACTION',
		'TRANSACTIONS',
		'TRANSFORM',
		'TRIM',
		'TRUE',
		'TRUNCATE',
		'TRY_CAST',
		'TYPE',
		'UNARCHIVE',
		'UNBOUNDED',
		'UNCACHE',
		'UNION',
		'UNIQUE',
		'UNKNOWN',
		'UNLOCK',
		'UNSET',
		'UPDATE',
		'USE',
		'USER',
		'USING',
		'VALUES',
		'VIEW',
		'VIEWS',
		'WHEN',
		'WHERE',
		'WINDOW',
		'WITH',
		'ZONE',
		'EQ',
		'NSEQ',
		'NEQ',
		'NEQJ',
		'LT',
		'LTE',
		'GT',
		'GTE',
		'PLUS',
		'MINUS',
		'ASTERISK',
		'SLASH',
		'PERCENT',
		'TILDE',
		'AMPERSAND',
		'PIPE',
		'CONCAT_PIPE',
		'HAT',
		'STRING',
		'BIGINT_LITERAL',
		'SMALLINT_LITERAL',
		'TINYINT_LITERAL',
		'INTEGER_VALUE',
		'EXPONENT_VALUE',
		'DECIMAL_VALUE',
		'FLOAT_LITERAL',
		'DOUBLE_LITERAL',
		'BIGDECIMAL_LITERAL',
		'IDENTIFIER',
		'BACKQUOTED_IDENTIFIER',
		'SIMPLE_COMMENT',
		'BRACKETED_COMMENT',
		'WS',
		'UNRECOGNIZED',
	];
	E.prototype.ruleNames = [
		'T__0',
		'T__1',
		'T__2',
		'T__3',
		'T__4',
		'T__5',
		'T__6',
		'T__7',
		'T__8',
		'T__9',
		'T__10',
		'ADD',
		'AFTER',
		'ALL',
		'ALTER',
		'ANALYZE',
		'AND',
		'ANTI',
		'ANY',
		'ARCHIVE',
		'ARRAY',
		'AS',
		'ASC',
		'AT',
		'AUTHORIZATION',
		'BETWEEN',
		'BOTH',
		'BUCKET',
		'BUCKETS',
		'BY',
		'CACHE',
		'CASCADE',
		'CASE',
		'CAST',
		'CHANGE',
		'CHECK',
		'CLEAR',
		'CLUSTER',
		'CLUSTERED',
		'CODEGEN',
		'COLLATE',
		'COLLECTION',
		'COLUMN',
		'COLUMNS',
		'COMMENT',
		'COMMIT',
		'COMPACT',
		'COMPACTIONS',
		'COMPUTE',
		'CONCATENATE',
		'CONSTRAINT',
		'COST',
		'CREATE',
		'CROSS',
		'CUBE',
		'CURRENT',
		'CURRENT_DATE',
		'CURRENT_TIME',
		'CURRENT_TIMESTAMP',
		'CURRENT_USER',
		'DATA',
		'DATABASE',
		'DATABASES',
		'DBPROPERTIES',
		'DEFINED',
		'DELETE',
		'DELIMITED',
		'DESC',
		'DESCRIBE',
		'DFS',
		'DIRECTORIES',
		'DIRECTORY',
		'DISTINCT',
		'DISTRIBUTE',
		'DIV',
		'DROP',
		'ELSE',
		'END',
		'ESCAPE',
		'ESCAPED',
		'EXCEPT',
		'EXCHANGE',
		'EXISTS',
		'EXPLAIN',
		'EXPORT',
		'EXTENDED',
		'EXTERNAL',
		'EXTRACT',
		'FALSE',
		'FETCH',
		'FIELDS',
		'FILTER',
		'FILEFORMAT',
		'FIRST',
		'FOLLOWING',
		'FOR',
		'FOREIGN',
		'FORMAT',
		'FORMATTED',
		'FROM',
		'FULL',
		'FUNCTION',
		'FUNCTIONS',
		'GLOBAL',
		'GRANT',
		'GROUP',
		'GROUPING',
		'HAVING',
		'IF',
		'IGNORE',
		'IMPORT',
		'IN',
		'INDEX',
		'INDEXES',
		'INNER',
		'INPATH',
		'INPUTFORMAT',
		'INSERT',
		'INTERSECT',
		'INTERVAL',
		'INTO',
		'IS',
		'ITEMS',
		'JOIN',
		'KEYS',
		'LAST',
		'LATERAL',
		'LAZY',
		'LEADING',
		'LEFT',
		'LIKE',
		'LIMIT',
		'LINES',
		'LIST',
		'LOAD',
		'LOCAL',
		'LOCATION',
		'LOCK',
		'LOCKS',
		'LOGICAL',
		'MACRO',
		'MAP',
		'MATCHED',
		'MERGE',
		'MSCK',
		'NAMESPACE',
		'NAMESPACES',
		'NATURAL',
		'NO',
		'NOT',
		'NULL',
		'NULLS',
		'OF',
		'ON',
		'ONLY',
		'OPTION',
		'OPTIONS',
		'OR',
		'ORDER',
		'OUT',
		'OUTER',
		'OUTPUTFORMAT',
		'OVER',
		'OVERLAPS',
		'OVERLAY',
		'OVERWRITE',
		'PARTITION',
		'PARTITIONED',
		'PARTITIONS',
		'PERCENTLIT',
		'PIVOT',
		'PLACING',
		'POSITION',
		'PRECEDING',
		'PRIMARY',
		'PRINCIPALS',
		'PROPERTIES',
		'PURGE',
		'QUERY',
		'RANGE',
		'RECORDREADER',
		'RECORDWRITER',
		'RECOVER',
		'REDUCE',
		'REFERENCES',
		'REFRESH',
		'RENAME',
		'REPAIR',
		'REPLACE',
		'RESET',
		'RESPECT',
		'RESTRICT',
		'REVOKE',
		'RIGHT',
		'RLIKE',
		'ROLE',
		'ROLES',
		'ROLLBACK',
		'ROLLUP',
		'ROW',
		'ROWS',
		'SCHEMA',
		'SELECT',
		'SEMI',
		'SEPARATED',
		'SERDE',
		'SERDEPROPERTIES',
		'SESSION_USER',
		'SET',
		'SETMINUS',
		'SETS',
		'SHOW',
		'SKEWED',
		'SOME',
		'SORT',
		'SORTED',
		'START',
		'STATISTICS',
		'STORED',
		'STRATIFY',
		'STRUCT',
		'SUBSTR',
		'SUBSTRING',
		'SYNC',
		'TABLE',
		'TABLES',
		'TABLESAMPLE',
		'TBLPROPERTIES',
		'TEMPORARY',
		'TERMINATED',
		'THEN',
		'TIME',
		'TO',
		'TOUCH',
		'TRAILING',
		'TRANSACTION',
		'TRANSACTIONS',
		'TRANSFORM',
		'TRIM',
		'TRUE',
		'TRUNCATE',
		'TRY_CAST',
		'TYPE',
		'UNARCHIVE',
		'UNBOUNDED',
		'UNCACHE',
		'UNION',
		'UNIQUE',
		'UNKNOWN',
		'UNLOCK',
		'UNSET',
		'UPDATE',
		'USE',
		'USER',
		'USING',
		'VALUES',
		'VIEW',
		'VIEWS',
		'WHEN',
		'WHERE',
		'WINDOW',
		'WITH',
		'ZONE',
		'EQ',
		'NSEQ',
		'NEQ',
		'NEQJ',
		'LT',
		'LTE',
		'GT',
		'GTE',
		'PLUS',
		'MINUS',
		'ASTERISK',
		'SLASH',
		'PERCENT',
		'TILDE',
		'AMPERSAND',
		'PIPE',
		'CONCAT_PIPE',
		'HAT',
		'STRING',
		'BIGINT_LITERAL',
		'SMALLINT_LITERAL',
		'TINYINT_LITERAL',
		'INTEGER_VALUE',
		'EXPONENT_VALUE',
		'DECIMAL_VALUE',
		'FLOAT_LITERAL',
		'DOUBLE_LITERAL',
		'BIGDECIMAL_LITERAL',
		'IDENTIFIER',
		'BACKQUOTED_IDENTIFIER',
		'A',
		'B',
		'C',
		'D',
		'E',
		'F',
		'G',
		'H',
		'I',
		'J',
		'K',
		'L',
		'M',
		'N',
		'O',
		'P',
		'Q',
		'R',
		'S',
		'T',
		'U',
		'V',
		'W',
		'X',
		'Y',
		'Z',
		'DECIMAL_DIGITS',
		'EXPONENT',
		'DIGIT',
		'LETTER',
		'SIMPLE_COMMENT',
		'BRACKETED_COMMENT',
		'WS',
		'UNRECOGNIZED',
	];
	E.prototype.grammarFileName = 'SqlBase.g4';
	E.prototype.sempred = function (u, e, i) {
		switch (e) {
			case 286:
				return this.EXPONENT_VALUE_sempred(u, i);
			case 287:
				return this.DECIMAL_VALUE_sempred(u, i);
			case 288:
				return this.FLOAT_LITERAL_sempred(u, i);
			case 289:
				return this.DOUBLE_LITERAL_sempred(u, i);
			case 290:
				return this.BIGDECIMAL_LITERAL_sempred(u, i);
			case 324:
				return this.BRACKETED_COMMENT_sempred(u, i);
			default:
				throw 'No registered predicate for:' + e;
		}
	};
	E.prototype.EXPONENT_VALUE_sempred = function (u, e) {
		switch (e) {
			case 0:
				return Wd();
			default:
				throw 'No predicate with index:' + e;
		}
	};
	E.prototype.DECIMAL_VALUE_sempred = function (u, e) {
		switch (e) {
			case 1:
				return Wd();
			default:
				throw 'No predicate with index:' + e;
		}
	};
	E.prototype.FLOAT_LITERAL_sempred = function (u, e) {
		switch (e) {
			case 2:
				return Wd();
			default:
				throw 'No predicate with index:' + e;
		}
	};
	E.prototype.DOUBLE_LITERAL_sempred = function (u, e) {
		switch (e) {
			case 3:
				return Wd();
			default:
				throw 'No predicate with index:' + e;
		}
	};
	E.prototype.BIGDECIMAL_LITERAL_sempred = function (u, e) {
		switch (e) {
			case 4:
				return Wd();
			default:
				throw 'No predicate with index:' + e;
		}
	};
	E.prototype.BRACKETED_COMMENT_sempred = function (u, e) {
		switch (e) {
			case 5:
				return !L9();
			default:
				throw 'No predicate with index:' + e;
		}
	};
	V7.SqlBaseLexer = E;
});
var zf = Z(Y7 => {
	var B7 = (ls(), ra(hs));
	function T() {
		return B7.tree.ParseTreeVisitor.call(this), this;
	}
	T.prototype = Object.create(B7.tree.ParseTreeVisitor.prototype);
	T.prototype.constructor = T;
	T.prototype.visitSingleStatement = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSingleExpression = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSingleTableIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSingleMultipartIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSingleFunctionIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSingleDataType = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSingleTableSchema = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitStatementDefault = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDmlStatement = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitUse = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCreateNamespace = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetNamespaceProperties = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetNamespaceLocation = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDropNamespace = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowNamespaces = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCreateTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCreateTableLike = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitReplaceTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAnalyze = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAnalyzeTables = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAddTableColumns = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRenameTableColumn = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDropTableColumns = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRenameTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetTableProperties = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitUnsetTableProperties = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAlterTableAlterColumn = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitHiveChangeColumn = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitHiveReplaceColumns = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetTableSerDe = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAddTablePartition = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRenameTablePartition = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDropTablePartitions = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetTableLocation = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRecoverPartitions = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDropTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDropView = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCreateView = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCreateTempViewUsing = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAlterViewQuery = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCreateFunction = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDropFunction = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitExplain = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowTables = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowTableExtended = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowTblProperties = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowColumns = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowViews = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowPartitions = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowFunctions = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowCreateTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitShowCurrentNamespace = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDescribeFunction = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDescribeNamespace = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDescribeRelation = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDescribeQuery = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCommentNamespace = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCommentTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRefreshTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRefreshFunction = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRefreshResource = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCacheTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitUncacheTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitClearCache = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitLoadData = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTruncateTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRepairTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitManageResource = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFailNativeCommand = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetTimeZone = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetQuotedConfiguration = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetConfiguration = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitResetQuotedConfiguration = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitResetConfiguration = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitConfigKey = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitConfigValue = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitUnsupportedHiveNativeCommands = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCreateTableHeader = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitReplaceTableHeader = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitBucketSpec = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSkewSpec = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitLocationSpec = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCommentSpec = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQuery = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitInsertOverwriteTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitInsertIntoTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitInsertOverwriteHiveDir = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitInsertOverwriteDir = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPartitionSpecLocation = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPartitionSpec = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPartitionVal = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNamespace = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDescribeFuncName = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDescribeColName = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCtes = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNamedQuery = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTableProvider = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCreateTableClauses = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTablePropertyList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTableProperty = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTablePropertyKey = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTablePropertyValue = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitConstantList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNestedConstantList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCreateFileFormat = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTableFileFormat = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitGenericFileFormat = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitStorageHandler = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitResource = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSingleInsertQuery = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitMultiInsertQuery = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDeleteFromTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitUpdateTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitMergeIntoTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQueryOrganization = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitMultiInsertQueryBody = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQueryTermDefault = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetOperation = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQueryPrimaryDefault = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFromStmt = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitInlineTableDefault1 = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSubquery = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSortItem = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFromStatement = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFromStatementBody = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTransformQuerySpecification = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRegularQuerySpecification = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTransformClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSelectClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitMatchedClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNotMatchedClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitMatchedAction = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNotMatchedAction = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAssignmentList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAssignment = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitWhereClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitHavingClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitHint = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitHintStatement = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFromClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAggregationClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitGroupByClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitGroupingAnalytics = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitGroupingSet = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPivotClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPivotColumn = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPivotValue = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitLateralView = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSetQuantifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRelation = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitJoinRelation = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitJoinType = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitJoinCriteria = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSample = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSampleByPercentile = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSampleByRows = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSampleByBucket = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSampleByBytes = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitIdentifierList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitIdentifierSeq = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitOrderedIdentifierList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitOrderedIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitIdentifierCommentList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitIdentifierComment = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTableName = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAliasedQuery = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAliasedRelation = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitInlineTableDefault2 = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTableValuedFunction = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitInlineTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFunctionTable = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTableAlias = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRowFormatSerde = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRowFormatDelimited = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitMultipartIdentifierList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitMultipartIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTableIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFunctionIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNamedExpression = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNamedExpressionSeq = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPartitionFieldList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPartitionTransform = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPartitionColumn = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitIdentityTransform = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitApplyTransform = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTransformArgument = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitExpression = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitLogicalNot = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPredicated = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitExists = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitLogicalBinary = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPredicate = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitValueExpressionDefault = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitComparison = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitArithmeticBinary = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitArithmeticUnary = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitStruct = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDereference = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSimpleCase = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitColumnReference = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRowConstructor = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitLast = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitStar = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitOverlay = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSubscript = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSubqueryExpression = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSubstring = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCurrentDatetime = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitCast = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitConstantDefault = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitLambda = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitParenthesizedExpression = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitExtract = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTrim = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFunctionCall = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSearchedCase = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPosition = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFirst = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNullLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitIntervalLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTypeConstructor = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNumericLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitBooleanLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitStringLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitComparisonOperator = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitArithmeticOperator = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPredicateOperator = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitBooleanValue = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitInterval = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitErrorCapturingMultiUnitsInterval = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitMultiUnitsInterval = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitErrorCapturingUnitToUnitInterval = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitUnitToUnitInterval = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitIntervalValue = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitColPosition = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitArrayDataType = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitMapDataType = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitStructDataType = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitPrimitiveDataType = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQualifiedColTypeWithPositionList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQualifiedColTypeWithPosition = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitColTypeList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitColType = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitComplexColTypeList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitComplexColType = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitWhenClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitWindowClause = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNamedWindow = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitWindowRef = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitWindowDef = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitWindowFrame = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFrameBound = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQualifiedNameList = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFunctionName = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQualifiedName = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitErrorCapturingIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitErrorIdent = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitRealIdent = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitUnquotedIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQuotedIdentifierAlternative = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitQuotedIdentifier = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitExponentLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDecimalLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitLegacyDecimalLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitIntegerLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitBigIntLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitSmallIntLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitTinyIntLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitDoubleLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitFloatLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitBigDecimalLiteral = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAlterColumnAction = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitAnsiNonReserved = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitStrictNonReserved = function (u) {
		return this.visitChildren(u);
	};
	T.prototype.visitNonReserved = function (u) {
		return this.visitChildren(u);
	};
	Y7.SqlBaseVisitor = T;
});
var u5 = Z(G7 => {
	var p = (ls(), ra(hs)),
		R = zf().SqlBaseVisitor,
		N9 = [
			'\u608B\uA72A\u8133\uB9ED\u417C\u3BE7\u7786\u5964',
			'\u012B\u0C04		',
			'			\x07	\x07',
			`\b	\b			
	
\v	\v\f	\f`,
			'\r	\r			',
			'			',
			'				',
			'			\x1B',
			'	\x1B			',
			'	 	 !	!"	"#	#',
			"$	$%	%&	&'	'(	()	)*	*",
			'+	+,	,-	-.	./	/0	01	1',
			'2	23	34	45	56	67	78	8',
			'9	9:	:;	;<	<=	=>	>?	?',
			'@	@A	AB	BC	CD	DE	EF	F',
			'G	GH	HI	IJ	JK	KL	LM	M',
			'N	NO	OP	PQ	QR	RS	ST	T',
			'U	UV	VW	WX	XY	YZ	Z[	[',
			'\\	\\]	]^	^_	_`	`a	ab	b',
			'c	cd	de	ef	fg	gh	hi	i',
			'j	jk	kl	lm	mn	no	op	p',
			'q	qr	rs	st	tu	uv	vw	w',
			'x	xy	yz	z{	{|	|}	}~	~',
			'\x7F	\x7F\x80	\x80\x81	\x81\x82	',
			'\x82\x83	\x83\x84	\x84\x85	\x85',
			'\x86	\x86\x87	\x87\x88	\x88\x89	',
			'\x89\x8A	\x8A\x8B	\x8B\x8C	\x8C',
			'\x8D	\x8D\x8E	\x8E\x07',
			`\u011F
\f\u0122\v`,
			'',
			'',
			'\x07\x07\x07\b\b\b',
			`			\u013A
					\u013F
`,
			`								\u0147
	`,
			`						\x07	\u014F
	\f`,
			'		\u0152\v						',
			'									',
			`				\u0165
				\u0169
`,
			`						\u016F
			`,
			`\u0172
			\u0175
					`,
			`		\u017C
			\u017F
			`,
			`	\u0183
			\u0186
				`,
			`			\u018D
					`,
			`					\x07	\u0198
	\f		\u019B`,
			`\v							\u01A2
	`,
			`		\u01A5
				\u01A9
		`,
			`	\u01AC
						\u01B2
	`,
			'									',
			`	\u01BD
						\u01C3
	`,
			`				\u01C8
					`,
			'								',
			'									',
			'									',
			'									',
			'									',
			'									',
			`						\u0208
			`,
			`						\u0211
		`,
			`		\u0215
						\u021B
`,
			`				\u021F
					`,
			`\u0224
						\u022A
		`,
			'								',
			`		\u0236
							`,
			`	\u023E
						\u0244
	`,
			'								',
			`				\u0251
			\u0254
	\r	`,
			'	\u0255							',
			`								\u0266
	`,
			`			\x07	\u026B
	\f		\u026E\v	`,
			`		\u0271
						\u0277`,
			`
									`,
			`						\u0286
		`,
			`		\u028A
						\u0290
`,
			`						\u0296
			`,
			`\u0299
			\u029C
					`,
			`	\u02A2
				\u02A6
			`,
			`				\x07	\u02AE
	\f		\u02B1`,
			'\v								\u02B9',
			`
			\u02BC
					`,
			`				\u02C5
					`,
			`\u02CA
						\u02D0
		`,
			`					\u02D7
			\u02DA`,
			`
						\u02E0
		`,
			`						\x07	\u02E9
	\f	`,
			`	\u02EC\v		\u02EE
				\u02F2
	`,
			`				\u02F7
				`,
			`	\u02FC
							\u0303
`,
			`			\u0306
			\u0309
		`,
			`					\u0310
				`,
			`	\u0315
							`,
			`		\u031E
							`,
			`	\u0326
						\u032C
	`,
			`		\u032F
			\u0332
			`,
			`			\u0338
				\u033C
	`,
			`			\u0340
				\u0344
	`,
			`	\u0346
							`,
			`	\u034E
								`,
			`\u0356
						\u035C
		`,
			`				\u0362
			\u0365
	`,
			`			\u0369
			\u036C
		`,
			`		\u0370
						`,
			'									',
			'									',
			`	\x07	\u038A
	\f		\u038D\v		\u038F
	`,
			`			\u0393
						`,
			`\u0399
			\u039C
			\u039F
	`,
			`					\u03A5
				`,
			`				\u03AD
				`,
			`	\u03B2
						\u03B8
	`,
			`					\u03BE
				`,
			`				\u03C6
				`,
			`	\x07	\u03CC
	\f		\u03CF\v		\u03D1
	`,
			`			\x07	\u03D6
	\f		\u03D9\v	`,
			'									',
			`			\x07	\u03E7
	\f		\u03EA\v	`,
			'									\x07',
			`	\u03F5
	\f		\u03F8\v		\u03FA
		`,
			`	\x07	\u03FE
	\f		\u0401\v			`,
			`		\x07	\u0407
	\f		\u040A\v		`,
			`			\x07	\u0410
	\f		\u0413\v	`,
			`		\x07	\u0417
	\f		\u041A\v		\u041C`,
			`
	

\v\v\f\f\f`,
			`\f\f\f\f\u0428
\f\f\f\f\u042C`,
			`
\f\f\f\f\f\f\f\u0433
\f`,
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			'\f\f\f\f\f\f\f\f\f',
			`\f\f\f\f\f\f\f\u04A7
\f\f`,
			`\f\f\f\f\f\f\u04AF
\f\f`,
			`\f\f\f\f\f\f\u04B7
\f\f\f`,
			`\f\f\f\f\f\f\u04C0
\f\f`,
			`\f\f\f\f\f\f\f\f\u04CA
\f`,
			`\r\r\r\u04CE
\r\r\r\u04D1
\r\r`,
			`\r\r\r\r\u04D7
\r\r\r`,
			`\u04DD
`,
			'',
			`\u04E9
`,
			'',
			`\u04F5
`,
			`\u04FA
`,
			'',
			`\u0503
`,
			`\u050B
`,
			`\u0512
`,
			`\u0514
\u0517
`,
			`\u051C
`,
			`\u0520
`,
			`\u0525
\u0528
`,
			`\u052D
`,
			`\u0532
`,
			`\u0535
`,
			`\u053A
\u053E
`,
			`\u0543
`,
			`\u0545
\u0549
`,
			'\x07\u0550',
			`
\f\u0553\v`,
			`\u055A
`,
			'',
			`\u0563
`,
			`\x07\u0568
\f\u056B\v`,
			`\x1B\x1B\x1B\x1B\x07\x1B\u0571
\x1B`,
			'\f\x1B\x1B\u0574\v\x1B',
			`\u0578
\u057B
`,
			'',
			'',
			'',
			`\x07\u0591
\f\u0594\v`,
			'\x07\u059A',
			`
\f\u059D\v`,
			`   \u05A3
   \u05A6
 !!`,
			`!\x07!\u05AB
!\f!!\u05AE\v!!!\u05B1
`,
			`!"""""\u05B7
"##`,
			`##\x07#\u05BD
#\f##\u05C0\v###`,
			`$$$$\x07$\u05C8
$\f$$\u05CB\v$`,
			`$$%%%%%%%\u05D5
%`,
			`&&&&&&\u05DC
&''`,
			`'''\u05E2
'((())`,
			`)))))\u05ED
)\r))\u05EE)`,
			`)))))\u05F6
)))))`,
			`))\u05FD
))))))))`,
			`))))\u0609
)))))\x07)\u060F`,
			`
)\f))\u0612\v))\x07)\u0615
)\f))\u0618\v`,
			`))\u061A
)*****\x07*\u0621
`,
			`*\f**\u0624\v**\u0626
****`,
			`**\x07*\u062D
*\f**\u0630\v**\u0632
*`,
			`*****\x07*\u0639
*\f**\u063C\v`,
			`**\u063E
******\x07*\u0645
`,
			`*\f**\u0648\v**\u064A
***\u064D
*`,
			`****\u0652
**\u0654
*++`,
			`+,,,,,,,,\u0660
,`,
			`,,,,,,\u0667
,,,,`,
			`,,,\u066E
,,\x07,\u0671
,\f,,\u0674\v`,
			',---------',
			`-\u067F
-...\u0683
....\u0687`,
			`
.///\u068B
/\r//\u068C00`,
			`0\u0691
00000\x070\u0697
0\f00\u069A`,
			`\v000\u069D
000\u06A0
000`,
			`\u06A3
000\u06A6
0000\u06AA
0`,
			`111\u06AE
111\u06B1
111`,
			`1\u06B5
11\x071\u06B8
1\f11\u06BB\v11`,
			`1\u06BE
111\u06C1
111\u06C4
11`,
			`1\u06C7
11\u06C9
122222`,
			`222222\u06D5
222\u06D8
`,
			`2222\u06DC
222222`,
			`2222\u06E6
2222\u06EA
2`,
			`2\u06EC
222\u06EF
2222\u06F3
2`,
			`33\x073\u06F7
3\f33\u06FA\v333\u06FD`,
			`
3334445555`,
			`5\u0708
555566666`,
			`6\u0712
666677777`,
			`777\u071E
7888888`,
			`88888\x078\u072B
8\f88\u072E\v`,
			`8888\u0732
8999\x079\u0737
`,
			'9\f99\u073A\v9::::;;',
			`;<<<====\u0749
==\x07`,
			`=\u074C
=\f==\u074F\v===>>`,
			`>>>>\x07>\u0759
>\f>>\u075C\v>`,
			`>>>\u0760
>????\x07?\u0766
`,
			`?\f??\u0769\v??\x07?\u076C
?\f??\u076F\v`,
			`???\u0772
?@@@@@\x07@\u0779`,
			`
@\f@@\u077C\v@@@@@@\x07`,
			`@\u0783
@\f@@\u0786\v@@@@@`,
			`@@@@@@\x07@\u0792
@\f@@\u0795`,
			`\v@@@@\u0799
@@\u079B
@AA`,
			`A\u079F
ABBBBB\u07A5
BB`,
			`BBB\x07B\u07AB
B\fBB\u07AE\vBB`,
			`BCCCC\x07C\u07B6
C\fCC\u07B9`,
			`\vCC\u07BB
CCCC\u07BF
CDD`,
			'DDDDDDDD\x07D\u07CB',
			`
D\fDD\u07CE\vDDDDEE`,
			`EEE\x07E\u07D8
E\fEE\u07DB\vEE`,
			`EE\u07DF
EFFF\u07E3
FFF\u07E6`,
			`
FGGGG\u07EB
GGGG`,
			`GG\x07G\u07F2
G\fGG\u07F5\vGG\u07F7
G`,
			`GGGG\u07FC
GGGG\x07G\u0801
`,
			`G\fGG\u0804\vGG\u0806
GHHI`,
			`I\x07I\u080C
I\fII\u080F\vIJJJ`,
			`JJ\u0815
JJJJJJJ\u081C
`,
			`JKK\u081F
KKKKK\u0824
K`,
			`KK\u0827
KKKKK\u082C
KK`,
			`KK\u0830
KKK\u0833
KKK\u0836
K`,
			`LLLLL\u083C
LMMMM\u0841`,
			`
MMMNN\u0846
NNNN`,
			'NNNNNNNNNN',
			`NNNN\u0858
NN\u085A
NNN\u085D`,
			`
NOOOOPPP\x07P\u0866
`,
			`P\fPP\u0869\vPQQQQ\x07Q\u086F
`,
			`Q\fQQ\u0872\vQQQRRR\u0878
`,
			`RSSSS\x07S\u087E
S\fSS\u0881\v`,
			`SSSTTT\u0887
TUUU\u088B`,
			`
UUUUUUUU\u0893
U`,
			`UUUUUUU\u089B
UUU`,
			`UUU\u08A1
UVVVV\x07V\u08A7
`,
			'V\fVV\u08AA\vVVVWWWW',
			`W\x07W\u08B3
W\fWW\u08B6\vWW\u08B8
WW`,
			`WWXX\u08BE
XXXX\u08C2
X`,
			`X\u08C4
XYYYYYYYY\u08CD`,
			`
YYYYYYYYYY`,
			`YY\u08D9
YY\u08DB
YYYYY`,
			`YY\u08E2
YYYYYYY\u08E9
`,
			`YYYYYY\u08EF
YYYY`,
			`YY\u08F5
YY\u08F7
YZZZ\x07Z\u08FC`,
			`
Z\fZZ\u08FF\vZ[[[\x07[\u0904
[\f[`,
			`[\u0907\v[\\\\\\\\\u090C
\\\\`,
			`\\]]]]\u0913
]]]^^`,
			`^\u0919
^^^^\u091D
^^\u091F
^`,
			'___\x07_\u0924\n_\f__\u0927\v_`',
			'```\x07`\u092D\n`\f``\u0930\v``',
			'`aaa\u0936\nabbbbb',
			`b\x07b\u093E
b\fbb\u0941\vbbbb\u0945`,
			`
bccc\u0949
cddee`,
			`eeeeeeeee\u0957
e`,
			`e\u0959
eeeeeee\x07e\u0961
`,
			`e\fee\u0964\veff\u0967
fff`,
			`fffff\u096F
fffff`,
			`f\x07f\u0976
f\fff\u0979\vffff`,
			`f\u097E
ffffffff\u0986
`,
			`fffff\u098B
fffff`,
			`ffff\x07f\u0995
f\fff\u0998\vf`,
			`fff\u099C
fff\u099F
fff`,
			`fff\u09A5
ffff\u09A9
ff`,
			`fff\u09AE
fffff\u09B3
f`,
			`ffff\u09B8
fggggg\u09BE`,
			`
gggggggggg`,
			'gggggggggg\x07',
			`g\u09D3
g\fgg\u09D6\vghhhh`,
			`h\u09DC
h\rhh\u09DDhhh\u09E2
hh`,
			`hhhhh\u09E9
h\rhh\u09EAh`,
			`hh\u09EF
hhhhhhhh`,
			`hhhhhhh\x07h\u09FF
h\fh`,
			`h\u0A02\vhh\u0A04
hhhhhh`,
			`hh\u0A0C
hhhhhhhh`,
			`h\u0A15
hhhhhhhhh`,
			'hhhhhhhhhh',
			`hh\u0A2A
h\rhh\u0A2Bhhhh`,
			`hhhhhh\u0A37
hhhh\x07`,
			`h\u0A3C
h\fhh\u0A3F\vhh\u0A41
hhh`,
			`hhhhhh\u0A4A
hhhh\u0A4E`,
			`
hhhh\u0A52
hhhhh`,
			`hhhhh\u0A5C
h\rhh\u0A5Dh`,
			'hhhhhhhhhh',
			'hhhhhhhhhh',
			`hhh\u0A77
hhhhhhh\u0A7E`,
			`
hhh\u0A81
hhhhhh`,
			`hhhhhhhhh\u0A90
h`,
			`hhh\u0A94
hhhhhhh`,
			`hh\x07h\u0A9E
h\fhh\u0AA1\vhii`,
			`iiiiiii\u0AAB
i\rii\u0AAC`,
			`i\u0AAF
ijjkkllm`,
			`mnnnn\u0ABC
nooo\u0AC0
`,
			`opppp\u0AC5
p\rpp\u0AC6q`,
			`qqq\u0ACC
qrrrrrs`,
			`s\u0AD4
ssss\u0AD8
sttt`,
			`t\u0ADD
tuuuuuuuu`,
			`uuuuuuuu\u0AEE
uu`,
			`uu\u0AF2
uuuuuu\x07u\u0AF9
`,
			`u\fuu\u0AFC\vuuu\u0AFF
uu\u0B01
u`,
			`vvv\x07v\u0B06
v\fvv\u0B09\vvw`,
			`wwww\u0B0F
www\u0B12
ww`,
			`w\u0B15
wxxx\x07x\u0B1A
x\fxx\u0B1D\v`,
			`xyyyyy\u0B23
yyy\u0B26
`,
			`yzzz\x07z\u0B2B
z\fzz\u0B2E\vz`,
			`{{{{{{\u0B35
{{{\u0B38
`,
			'{|||||}}}}\x07',
			`}\u0B43
}\f}}\u0B46\v}~~~~`,
			'\x7F\x7F\x7F\x7F\x7F\x7F',
			'\x7F\x7F\x7F\x7F\x7F\x07\x7F\u0B57',
			`
\x7F\f\x7F\x7F\u0B5A\v\x7F\x7F\x7F`,
			`\x7F\x7F\x7F\x07\x7F\u0B61
\x7F\f\x7F`,
			`\x7F\u0B64\v\x7F\x7F\u0B66
\x7F\x7F`,
			`\x7F\x7F\x7F\x7F\x07\x7F\u0B6D
`,
			`\x7F\f\x7F\x7F\u0B70\v\x7F\x7F\u0B72
\x7F`,
			`\x7F\u0B74
\x7F\x7F\x7F\u0B77
\x7F`,
			`\x7F\x7F\u0B7A
\x7F\x80\x80\x80`,
			'\x80\x80\x80\x80\x80\x80',
			'\x80\x80\x80\x80\x80\x80',
			`\x80\x80\u0B8C
\x80\x81\x81`,
			'\x81\x81\x81\x81\x81\x81\u0B95',
			`
\x81\x82\x82\x82\x07\x82\u0B9A
\x82`,
			'\f\x82\x82\u0B9D\v\x82\x83\x83',
			`\x83\x83\x83\u0BA3
\x83\x84\x84`,
			`\x84\x07\x84\u0BA8
\x84\f\x84\x84\u0BAB\v`,
			'\x84\x85\x85\x85\x86\x86',
			`\x86\u0BB2
\x86\r\x86\x86\u0BB3\x86\x86`,
			`\u0BB7
\x86\x87\x87\x87\x87\u0BBC`,
			`
\x87\x88\x88\x88\x88\x88`,
			`\x88\x88\u0BC4
\x88\x89\x89`,
			`\x8A\x8A\x8A\u0BCA
\x8A\x8A\x8A`,
			`\x8A\x8A\u0BCF
\x8A\x8A\x8A`,
			`\x8A\x8A\u0BD4
\x8A\x8A\x8A\x8A`,
			`\u0BD8
\x8A\x8A\x8A\x8A\u0BDC
\x8A`,
			`\x8A\x8A\x8A\u0BE0
\x8A\x8A\x8A`,
			`\x8A\u0BE4
\x8A\x8A\x8A\x8A\u0BE8`,
			`
\x8A\x8A\x8A\x8A\u0BEC
\x8A\x8A`,
			`\x8A\x8A\u0BF0
\x8A\x8A\x8A\u0BF3`,
			`
\x8A\x8B\x8B\x8B\x8B\x8B`,
			`\x8B\x8B\x8B\u0BFC
\x8B\x8C`,
			'\x8C\x8D\x8D\x8E\x8E\x8E\v',
			'\u038B\u03CD\u03D7\u03E8\u03F6\u03FF\u0408\u0411\u0418V\xC8',
			`\xCC\xCE\x8F\b
\f`,
			' "$&(*,.02468:<>@BDFHJLNPRTVXZ\\^`bdfhjlnp',
			'rtvxz|~\x80\x82\x84\x86\x88\x8A\x8C\x8E\x90\x92',
			'\x94\x96\x98\x9A\x9C\x9E\xA0\xA2\xA4\xA6\xA8\xAA',
			'\xAC\xAE\xB0\xB2\xB4\xB6\xB8\xBA\xBC\xBE\xC0\xC2',
			'\xC4\xC6\xC8\xCA\xCC\xCE\xD0\xD2\xD4\xD6\xD8\xDA',
			'\xDC\xDE\xE0\xE2\xE4\xE6\xE8\xEA\xEC\xEE\xF0\xF2',
			'\xF4\xF6\xF8\xFA\xFC\xFE\u0100\u0102\u0104\u0106\u0108\u010A',
			'\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A0',
			'BB\xB3\xB3""\xC2\xC2AA\x95\x95',
			'ffrr-.\xE3\xE3\u0103\u0103',
			'%%\x07**66XXee\x8E\x8EFG',
			'XXee\x99\x99\u011C\u011C',
			'NN\xE2\xE2\x88\x88\x8A',
			'\x8A\u011C\u011C@@\x94\x94\xCC\xCC',
			'SSyy\xD4\xD4\xF9\xF9SS\xD4\xD4\xF9\xF9',
			'FF``\x80\x80',
			'KK\u0120\u0120\u0122\u0122',
			'\xD8\xD8[[\xF2\xF2\xFB\xFB',
			'\u0112\u0113\u0117\u0117MM\u0114\u0116\u0112',
			'\u0113\u011A\u011A;;==$$\xF4\xF4',
			'pp\xC1\xC1\xE0\xE1ff',
			'bb\x83\x83\xED\xED',
			'\u010A\u0111MM\u0112\u011B',
			'rr\x98\x98\xA0\xA0[[\xF2\xF2',
			'\u0112\u0113LL\xA9\xA9\xA1\xA1\xD9',
			'\xD9aa\xB0\xB0\u0121\u0122',
			'NN\xD3\xD32',
			`"%%'*,,.4669:?JLNRRTZ]]_adehjmmoqst`,
			'vxzz}}\x7F\x82\x85\x95\x97\x97\x9A\x9B\x9E\x9F\xA2',
			'\xA2\xA4\xA5\xA7\xB0\xB2\xBA\xBC\xC3\xC5\xCC\xCE',
			'\xD1\xD3\xD7\xD9\xE2\xE4\xE8\xEC\xEC\xEE\xF8\xFC',
			'\xFF\u0102\u0104\u0107\u0107\u0109\u01098',
			'8SSgguuyy~~\x84\x84\x96\x96\x9C\x9C\xC4\xC4\xCE\xCE',
			'\xD4\xD4\xF9\xF9\u0101\u01017',
			'9RTfhtvxz}\x7F\x83\x85\x95\x97\x9B\x9D\xC3\xC5\xCD',
			'\xCF\xD3\xD5\xF8\xFA\u0100\u0102\u0109\u0DE0\u011C',
			'\u0125\u0128',
			`\b\u012B
\u012E`,
			'\f\u0131\u0134',
			'\u041B\u041D',
			'\u041F\u04C9',
			'\u04CB\u04DC',
			'\u04E2\u04EE',
			' \u04FB"\u04FE',
			'$\u0502&\u0544',
			'(\u0546*\u054A',
			',\u0556.\u055B0\u0562',
			'2\u05644\u056C',
			'6\u05758\u0580',
			':\u0592<\u0595',
			'>\u05A0@\u05B0',
			'B\u05B6D\u05B8F\u05C3',
			'H\u05D4J\u05DB',
			'L\u05DDN\u05E3',
			'P\u0619R\u0625',
			'T\u0655V\u0658',
			'X\u067EZ\u0680\\\u0688',
			'^\u06A9`\u06C8',
			'b\u06D4d\u06F4',
			'f\u0700h\u0703',
			'j\u070Cl\u071D',
			'n\u0731p\u0733r\u073B',
			't\u073Fv\u0742',
			'x\u0745z\u075F',
			'|\u0761~\u079A',
			'\x80\u079E\x82\u07A4',
			'\x84\u07BE\x86\u07C0',
			'\x88\u07DE\x8A\u07E0',
			'\x8C\u07E7\x8E\u0807',
			'\x90\u0809\x92\u081B',
			'\x94\u0835\x96\u083B',
			'\x98\u083D\x9A\u085C',
			'\x9C\u085E\x9E\u0862',
			'\xA0\u086A\xA2\u0875',
			'\xA4\u0879\xA6\u0884',
			'\xA8\u08A0\xAA\u08A2',
			'\xAC\u08AD\xAE\u08C3',
			'\xB0\u08F6\xB2\u08F8',
			'\xB4\u0900\xB6\u090B',
			'\xB8\u0912\xBA\u0916',
			'\xBC\u0920\xBE\u0928',
			'\xC0\u0935\xC2\u0944',
			'\xC4\u0948\xC6\u094A',
			'\xC8\u0958\xCA\u09B7',
			'\xCC\u09BD\xCE\u0A93',
			'\xD0\u0AAE\xD2\u0AB0',
			'\xD4\u0AB2\xD6\u0AB4',
			'\xD8\u0AB6\xDA\u0AB8',
			'\xDC\u0ABD\xDE\u0AC4',
			'\xE0\u0AC8\xE2\u0ACD',
			'\xE4\u0AD7\xE6\u0ADC',
			'\xE8\u0B00\xEA\u0B02',
			'\xEC\u0B0A\xEE\u0B16',
			'\xF0\u0B1E\xF2\u0B27',
			'\xF4\u0B2F\xF6\u0B39',
			'\xF8\u0B3E\xFA\u0B47',
			'\xFC\u0B79\xFE\u0B8B',
			'\u0100\u0B94\u0102\u0B96',
			'\u0104\u0BA2\u0106\u0BA4',
			'\u0108\u0BAC\u010A\u0BB6',
			'\u010C\u0BBB\u010E\u0BC3',
			'\u0110\u0BC5\u0112\u0BF2',
			'\u0114\u0BFB\u0116\u0BFD',
			'\u0118\u0BFF\u011A\u0C01',
			'\u011C\u0120	\u011D\u011F\x07',
			'\u011E\u011D\u011F\u0122',
			'\u0120\u011E\u0120\u0121',
			'\u0121\u0123\u0122\u0120',
			'\u0123\u0124\x07\u0124',
			'\u0125\u0126\xBA^\u0126\u0127\x07',
			'\u0127\u0128\u0129\xB6\\',
			'\u0129\u012A\x07\u012A\x07',
			'\u012B\u012C\xB4[\u012C\u012D\x07',
			'\u012D	\u012E\u012F\xB8]',
			'\u012F\u0130\x07\u0130\v',
			'\u0131\u0132\xE8u\u0132\u0133\x07',
			'\u0133\r\u0134\u0135\xEEx\u0135',
			'\u0136\x07\u0136\u0137',
			'\u041C$\u0138\u013A4\x1B\u0139\u0138',
			'\u0139\u013A\u013A\u013B',
			'\u013B\u041CP)\u013C\u013E\x07',
			'\xFF\u013D\u013F\x07\x94\u013E\u013D',
			'\u013E\u013F\u013F\u0140',
			'\u0140\u041C\xB4[\u0141\u0142\x07',
			'7\u0142\u0146.\u0143\u0144\x07o',
			'\u0144\u0145\x07\x98\u0145\u0147\x07U',
			'\u0146\u0143\u0146\u0147',
			'\u0147\u0148\u0148\u0150\xB4[',
			'\u0149\u014F"\u014A\u014F ',
			'\u014B\u014C\x07\u0108\u014C\u014D	',
			'\u014D\u014F<\u014E\u0149',
			'\u014E\u014A\u014E\u014B',
			'\u014F\u0152\u0150\u014E',
			'\u0150\u0151\u0151\u041C',
			'\u0152\u0150\u0153\u0154\x07',
			'\u0154\u0155.\u0155\u0156\xB4[\u0156',
			'\u0157\x07\xD3\u0157\u0158	\u0158',
			'\u0159<\u0159\u041C\u015A',
			'\u015B\x07\u015B\u015C.\u015C',
			'\u015D\xB4[\u015D\u015E\x07\xD3\u015E',
			'\u015F \u015F\u041C\u0160',
			'\u0161\x07N\u0161\u0164.\u0162\u0163',
			'\x07o\u0163\u0165\x07U\u0164\u0162',
			'\u0164\u0165\u0165\u0166',
			'\u0166\u0168\xB4[\u0167\u0169	',
			'\u0168\u0167\u0168\u0169',
			'\u0169\u041C\u016A\u016B\x07\xD6',
			'\u016B\u016E	\u016C\u016D	',
			'\u016D\u016F\xB4[\u016E\u016C',
			'\u016E\u016F\u016F\u0174',
			'\u0170\u0172\x07\x85\u0171\u0170',
			'\u0171\u0172\u0172\u0173',
			'\u0173\u0175\x07\u011C\u0174\u0171',
			'\u0174\u0175\u0175\u041C',
			'\u0176\u017B\r\u0177\u0178\x07',
			'\u0178\u0179\xEEx\u0179\u017A\x07',
			'\u017A\u017C\u017B\u0177',
			'\u017B\u017C\u017C\u017E',
			'\u017D\u017F8\u017E\u017D',
			'\u017E\u017F\u017F\u0180',
			'\u0180\u0185:\u0181\u0183\x07',
			'\u0182\u0181\u0182\u0183',
			'\u0183\u0184\u0184\u0186$',
			'\u0185\u0182\u0185\u0186',
			'\u0186\u041C\u0187\u0188\x077',
			'\u0188\u018C\x07\xE3\u0189\u018A\x07o',
			'\u018A\u018B\x07\x98\u018B\u018D\x07U',
			'\u018C\u0189\u018C\u018D',
			'\u018D\u018E\u018E\u018F\xB6\\',
			'\u018F\u0190\x07\x85\u0190\u0199\xB6\\',
			'\u0191\u01988\u0192\u0198\xB0Y',
			'\u0193\u0198H%\u0194\u0198 \u0195\u0196',
			'\x07\xE6\u0196\u0198<\u0197\u0191',
			'\u0197\u0192\u0197\u0193',
			'\u0197\u0194\u0197\u0195',
			'\u0198\u019B\u0199\u0197',
			'\u0199\u019A\u019A\u041C',
			'\u019B\u0199\u019C\u01A1',
			'\u019D\u019E\x07\u019E\u019F',
			'\xEEx\u019F\u01A0\x07\u01A0\u01A2',
			'\u01A1\u019D\u01A1\u01A2',
			'\u01A2\u01A4\u01A3\u01A5',
			'8\u01A4\u01A3\u01A4\u01A5',
			'\u01A5\u01A6\u01A6\u01AB',
			':\u01A7\u01A9\x07\u01A8\u01A7',
			'\u01A8\u01A9\u01A9\u01AA',
			'\u01AA\u01AC$\u01AB\u01A8',
			'\u01AB\u01AC\u01AC\u041C',
			'\u01AD\u01AE\x07\u01AE\u01AF',
			'\x07\xE3\u01AF\u01B1\xB4[\u01B0\u01B2',
			'*\u01B1\u01B0\u01B1\u01B2',
			'\u01B2\u01B3\u01B3\u01B4',
			'\x073\u01B4\u01BC\x07\xDC\u01B5\u01BD',
			'\u010C\x87\u01B6\u01B7\x07b\u01B7\u01B8',
			'\x07.\u01B8\u01BD\x9EP\u01B9\u01BA\x07',
			'b\u01BA\u01BB\x07\u01BB\u01BD\x07',
			'.\u01BC\u01B5\u01BC\u01B6',
			'\u01BC\u01B9\u01BC\u01BD',
			'\u01BD\u041C\u01BE\u01BF\x07',
			'\u01BF\u01C2\x07\xE4\u01C0\u01C1	',
			'\u01C1\u01C3\xB4[\u01C2\u01C0',
			'\u01C2\u01C3\u01C3\u01C4',
			'\u01C4\u01C5\x073\u01C5\u01C7\x07',
			'\xDC\u01C6\u01C8\u010C\x87\u01C7\u01C6',
			'\u01C7\u01C8\u01C8\u041C',
			'\u01C9\u01CA\x07\u01CA\u01CB\x07',
			'\xE3\u01CB\u01CC\xB4[\u01CC\u01CD\x07',
			'\u01CD\u01CE	\u01CE\u01CF',
			'\xEAv\u01CF\u041C\u01D0\u01D1\x07',
			'\u01D1\u01D2\x07\xE3\u01D2\u01D3',
			'\xB4[\u01D3\u01D4\x07\u01D4\u01D5	',
			'\u01D5\u01D6\x07\u01D6\u01D7\xEA',
			'v\u01D7\u01D8\x07\u01D8\u041C',
			'\u01D9\u01DA\x07\u01DA\u01DB\x07\xE3',
			'\u01DB\u01DC\xB4[\u01DC\u01DD\x07\xBD',
			'\u01DD\u01DE\x07-\u01DE\u01DF\xB4',
			'[\u01DF\u01E0\x07\xEB\u01E0\u01E1\u0108',
			'\x85\u01E1\u041C\u01E2\u01E3\x07',
			'\u01E3\u01E4\x07\xE3\u01E4\u01E5\xB4',
			'[\u01E5\u01E6\x07N\u01E6\u01E7	',
			'\u01E7\u01E8\x07\u01E8\u01E9\xB2Z',
			'\u01E9\u01EA\x07\u01EA\u041C',
			'\u01EB\u01EC\x07\u01EC\u01ED\x07\xE3',
			'\u01ED\u01EE\xB4[\u01EE\u01EF\x07N\u01EF',
			'\u01F0	\u01F0\u01F1\xB2Z\u01F1\u041C',
			'\u01F2\u01F3\x07\u01F3\u01F4',
			'	\x07\u01F4\u01F5\xB4[\u01F5\u01F6\x07',
			'\xBD\u01F6\u01F7\x07\xEB\u01F7\u01F8',
			'\xB4[\u01F8\u041C\u01F9\u01FA\x07',
			'\u01FA\u01FB	\x07\u01FB\u01FC',
			'\xB4[\u01FC\u01FD\x07\xD3\u01FD\u01FE\x07',
			'\xE6\u01FE\u01FF<\u01FF\u041C',
			'\u0200\u0201\x07\u0201\u0202	',
			'\x07\u0202\u0203\xB4[\u0203\u0204\x07',
			'\xFD\u0204\u0207\x07\xE6\u0205\u0206\x07',
			'o\u0206\u0208\x07U\u0207\u0205',
			'\u0207\u0208\u0208\u0209',
			'\u0209\u020A<\u020A\u041C',
			'\u020B\u020C\x07\u020C\u020D\x07\xE3',
			'\u020D\u020E\xB4[\u020E\u0210	\b',
			'\u020F\u0211\x07-\u0210\u020F',
			'\u0210\u0211\u0211\u0212',
			'\u0212\u0214\xB4[\u0213\u0215\u0114\x8B',
			'\u0214\u0213\u0214\u0215',
			'\u0215\u041C\u0216\u0217\x07',
			'\u0217\u0218\x07\xE3\u0218\u021A\xB4[',
			'\u0219\u021B*\u021A\u0219',
			'\u021A\u021B\u021B\u021C',
			'\u021C\u021E\x07%\u021D\u021F\x07-\u021E',
			'\u021D\u021E\u021F\u021F',
			'\u0220\u0220\u0221\xB4[\u0221',
			'\u0223\xF0y\u0222\u0224\xE6t\u0223\u0222',
			'\u0223\u0224\u0224\u041C',
			'\u0225\u0226\x07\u0226\u0227',
			'\x07\xE3\u0227\u0229\xB4[\u0228\u022A',
			'*\u0229\u0228\u0229\u022A',
			'\u022A\u022B\u022B\u022C',
			'\x07\xBF\u022C\u022D\x07.\u022D\u022E',
			'\x07\u022E\u022F\xEAv\u022F\u0230',
			'\x07\u0230\u041C\u0231\u0232',
			'\x07\u0232\u0233\x07\xE3\u0233\u0235',
			'\xB4[\u0234\u0236*\u0235\u0234',
			'\u0235\u0236\u0236\u0237',
			'\u0237\u0238\x07\xD3\u0238\u0239\x07',
			'\xD0\u0239\u023D\x07\u011C\u023A\u023B\x07',
			'\u0108\u023B\u023C\x07\xD1\u023C\u023E',
			'<\u023D\u023A\u023D\u023E',
			'\u023E\u041C\u023F\u0240\x07',
			'\u0240\u0241\x07\xE3\u0241\u0243',
			'\xB4[\u0242\u0244*\u0243\u0242',
			'\u0243\u0244\u0244\u0245',
			'\u0245\u0246\x07\xD3\u0246\u0247\x07\xD1',
			'\u0247\u0248<\u0248\u041C',
			'\u0249\u024A\x07\u024A\u024B	\x07',
			'\u024B\u024C\xB4[\u024C\u0250\x07',
			'\u024D\u024E\x07o\u024E\u024F\x07\x98',
			'\u024F\u0251\x07U\u0250\u024D',
			'\u0250\u0251\u0251\u0253',
			'\u0252\u0254(\u0253\u0252',
			'\u0254\u0255\u0255\u0253',
			'\u0255\u0256\u0256\u041C',
			'\u0257\u0258\x07\u0258\u0259\x07\xE3',
			'\u0259\u025A\xB4[\u025A\u025B*',
			'\u025B\u025C\x07\xBD\u025C\u025D\x07\xEB',
			'\u025D\u025E*\u025E\u041C',
			'\u025F\u0260\x07\u0260\u0261	\x07',
			'\u0261\u0262\xB4[\u0262\u0265\x07N',
			'\u0263\u0264\x07o\u0264\u0266\x07U\u0265',
			'\u0263\u0265\u0266\u0266',
			'\u0267\u0267\u026C*\u0268',
			'\u0269\x07\u0269\u026B*\u026A',
			'\u0268\u026B\u026E\u026C',
			'\u026A\u026C\u026D\u026D',
			'\u0270\u026E\u026C\u026F',
			'\u0271\x07\xB4\u0270\u026F\u0270',
			'\u0271\u0271\u041C\u0272',
			'\u0273\x07\u0273\u0274\x07\xE3\u0274',
			'\u0276\xB4[\u0275\u0277*\u0276\u0275',
			'\u0276\u0277\u0277\u0278',
			'\u0278\u0279\x07\xD3\u0279\u027A',
			' \u027A\u041C\u027B\u027C',
			'\x07\u027C\u027D\x07\xE3\u027D\u027E',
			'\xB4[\u027E\u027F\x07\xB9\u027F\u0280',
			'\x07\xAB\u0280\u041C\u0281\u0282',
			'\x07N\u0282\u0285\x07\xE3\u0283\u0284',
			'\x07o\u0284\u0286\x07U\u0285\u0283',
			'\u0285\u0286\u0286\u0287',
			'\u0287\u0289\xB4[\u0288\u028A\x07',
			'\xB4\u0289\u0288\u0289\u028A',
			'\u028A\u041C\u028B\u028C\x07',
			'N\u028C\u028F\x07\u0103\u028D\u028E\x07',
			'o\u028E\u0290\x07U\u028F\u028D',
			'\u028F\u0290\u0290\u0291',
			'\u0291\u041C\xB4[\u0292\u0295\x077',
			'\u0293\u0294\x07\xA0\u0294\u0296\x07\xBF',
			'\u0295\u0293\u0295\u0296',
			'\u0296\u029B\u0297\u0299\x07j',
			'\u0298\u0297\u0298\u0299',
			'\u0299\u029A\u029A\u029C\x07\xE7',
			'\u029B\u0298\u029B\u029C',
			'\u029C\u029D\u029D\u02A1\x07\u0103',
			'\u029E\u029F\x07o\u029F\u02A0\x07\x98',
			'\u02A0\u02A2\x07U\u02A1\u029E',
			'\u02A1\u02A2\u02A2\u02A3',
			'\u02A3\u02A5\xB4[\u02A4\u02A6\xA4S',
			'\u02A5\u02A4\u02A5\u02A6',
			'\u02A6\u02AF\u02A7\u02AE"',
			'\u02A8\u02A9\x07\xAA\u02A9\u02AA\x07\x9C',
			'\u02AA\u02AE\x9CO\u02AB\u02AC\x07\xE6',
			'\u02AC\u02AE<\u02AD\u02A7',
			'\u02AD\u02A8\u02AD\u02AB',
			'\u02AE\u02B1\u02AF\u02AD',
			'\u02AF\u02B0\u02B0\u02B2',
			'\u02B1\u02AF\u02B2\u02B3\x07',
			'\u02B3\u02B4$\u02B4\u041C',
			'\u02B5\u02B8\x077\u02B6\u02B7\x07\xA0',
			'\u02B7\u02B9\x07\xBF\u02B8\u02B6',
			'\u02B8\u02B9\u02B9\u02BB',
			'\u02BA\u02BC\x07j\u02BB\u02BA',
			'\u02BB\u02BC\u02BC\u02BD',
			'\u02BD\u02BE\x07\xE7\u02BE\u02BF\x07\u0103',
			'\u02BF\u02C4\xB6\\\u02C0\u02C1\x07',
			'\u02C1\u02C2\xEEx\u02C2\u02C3\x07',
			'\u02C3\u02C5\u02C4\u02C0',
			'\u02C4\u02C5\u02C5\u02C6',
			'\u02C6\u02C98\u02C7\u02C8\x07\x9F',
			'\u02C8\u02CA<\u02C9\u02C7',
			'\u02C9\u02CA\u02CA\u041C',
			'\u02CB\u02CC\x07\u02CC\u02CD\x07\u0103',
			'\u02CD\u02CF\xB4[\u02CE\u02D0\x07',
			'\u02CF\u02CE\u02CF\u02D0',
			'\u02D0\u02D1\u02D1\u02D2$',
			'\u02D2\u041C\u02D3\u02D6\x077',
			'\u02D4\u02D5\x07\xA0\u02D5\u02D7\x07\xBF',
			'\u02D6\u02D4\u02D6\u02D7',
			'\u02D7\u02D9\u02D8\u02DA\x07\xE7',
			'\u02D9\u02D8\u02D9\u02DA',
			'\u02DA\u02DB\u02DB\u02DF\x07h',
			'\u02DC\u02DD\x07o\u02DD\u02DE\x07\x98',
			'\u02DE\u02E0\x07U\u02DF\u02DC',
			'\u02DF\u02E0\u02E0\u02E1',
			'\u02E1\u02E2\xB4[\u02E2\u02E3\x07',
			'\u02E3\u02ED\x07\u011C\u02E4\u02E5\x07\u0101',
			'\u02E5\u02EAN(\u02E6\u02E7\x07\u02E7',
			'\u02E9N(\u02E8\u02E6\u02E9\u02EC',
			'\u02EA\u02E8\u02EA\u02EB',
			'\u02EB\u02EE\u02EC\u02EA',
			'\u02ED\u02E4\u02ED\u02EE',
			'\u02EE\u041C\u02EF\u02F1',
			'\x07N\u02F0\u02F2\x07\xE7\u02F1\u02F0',
			'\u02F1\u02F2\u02F2\u02F3',
			'\u02F3\u02F6\x07h\u02F4\u02F5',
			'\x07o\u02F5\u02F7\x07U\u02F6\u02F4',
			'\u02F6\u02F7\u02F7\u02F8',
			'\u02F8\u041C\xB4[\u02F9\u02FB\x07',
			'V\u02FA\u02FC		\u02FB\u02FA',
			'\u02FB\u02FC\u02FC\u02FD',
			'\u02FD\u041C	\u02FE\u02FF\x07\xD6',
			'\u02FF\u0302\x07\xE4\u0300\u0301	',
			'\u0301\u0303\xB4[\u0302\u0300',
			'\u0302\u0303\u0303\u0308',
			'\u0304\u0306\x07\x85\u0305\u0304',
			'\u0305\u0306\u0306\u0307',
			'\u0307\u0309\x07\u011C\u0308\u0305',
			'\u0308\u0309\u0309\u041C',
			'\u030A\u030B\x07\xD6\u030B\u030C\x07\xE3',
			'\u030C\u030F\x07X\u030D\u030E	',
			'\u030E\u0310\xB4[\u030F\u030D',
			'\u030F\u0310\u0310\u0311',
			'\u0311\u0312\x07\x85\u0312\u0314\x07\u011C',
			'\u0313\u0315*\u0314\u0313',
			'\u0314\u0315\u0315\u041C',
			'\u0316\u0317\x07\xD6\u0317\u0318\x07\xE6',
			'\u0318\u031D\xB4[\u0319\u031A\x07',
			'\u031A\u031B@!\u031B\u031C\x07\u031C',
			'\u031E\u031D\u0319\u031D',
			'\u031E\u031E\u041C\u031F',
			'\u0320\x07\xD6\u0320\u0321\x07.\u0321',
			'\u0322	\u0322\u0325\xB4[\u0323\u0324',
			'	\u0324\u0326\xB4[\u0325\u0323',
			'\u0325\u0326\u0326\u041C',
			'\u0327\u0328\x07\xD6\u0328\u032B\x07',
			'\u0104\u0329\u032A	\u032A\u032C',
			'\xB4[\u032B\u0329\u032B\u032C',
			'\u032C\u0331\u032D\u032F\x07',
			'\x85\u032E\u032D\u032E\u032F',
			'\u032F\u0330\u0330\u0332\x07',
			'\u011C\u0331\u032E\u0331\u0332',
			'\u0332\u041C\u0333\u0334\x07',
			'\xD6\u0334\u0335\x07\xAB\u0335\u0337',
			'\xB4[\u0336\u0338*\u0337\u0336',
			'\u0337\u0338\u0338\u041C',
			'\u0339\u033B\x07\xD6\u033A\u033C\u010C',
			'\x87\u033B\u033A\u033B\u033C',
			'\u033C\u033D\u033D\u0345\x07i',
			'\u033E\u0340\x07\x85\u033F\u033E',
			'\u033F\u0340\u0340\u0343',
			'\u0341\u0344\xB4[\u0342\u0344\x07\u011C',
			'\u0343\u0341\u0343\u0342',
			'\u0344\u0346\u0345\u033F',
			'\u0345\u0346\u0346\u041C',
			'\u0347\u0348\x07\xD6\u0348\u0349\x077',
			'\u0349\u034A\x07\xE3\u034A\u034D\xB4',
			'[\u034B\u034C\x07\u034C\u034E\x07\xD0',
			'\u034D\u034B\u034D\u034E',
			'\u034E\u041C\u034F\u0350\x07\xD6',
			'\u0350\u0351\x07:\u0351\u041C\x07\x94',
			`\u0352\u0353	
\u0353\u0355\x07h`,
			'\u0354\u0356\x07X\u0355\u0354',
			'\u0355\u0356\u0356\u0357',
			`\u0357\u041C0\u0358\u0359	
\u0359\u035B`,
			'.\u035A\u035C\x07X\u035B\u035A',
			'\u035B\u035C\u035C\u035D',
			'\u035D\u035E\xB4[\u035E\u041C',
			`\u035F\u0361	
\u0360\u0362\x07\xE3`,
			'\u0361\u0360\u0361\u0362',
			'\u0362\u0364\u0363\u0365	\v',
			'\u0364\u0363\u0364\u0365',
			'\u0365\u0366\u0366\u0368\xB4',
			'[\u0367\u0369*\u0368\u0367',
			'\u0368\u0369\u0369\u036B',
			'\u036A\u036C2\u036B\u036A',
			'\u036B\u036C\u036C\u041C',
			`\u036D\u036F	
\u036E\u0370\x07\xB5`,
			'\u036F\u036E\u036F\u0370',
			'\u0370\u0371\u0371\u041C$',
			'\u0372\u0373\x07/\u0373\u0374\x07\x9C',
			'\u0374\u0375.\u0375\u0376\xB4[\u0376',
			'\u0377\x07|\u0377\u0378	\f\u0378\u041C',
			'\u0379\u037A\x07/\u037A\u037B\x07',
			'\x9C\u037B\u037C\x07\xE3\u037C\u037D',
			'\xB4[\u037D\u037E\x07|\u037E\u037F	\f',
			'\u037F\u041C\u0380\u0381\x07\xBC',
			'\u0381\u0382\x07\xE3\u0382\u041C\xB4[',
			'\u0383\u0384\x07\xBC\u0384\u0385\x07h',
			'\u0385\u041C\xB4[\u0386\u038E\x07\xBC',
			'\u0387\u038F\x07\u011C\u0388\u038A\v',
			'\u0389\u0388\u038A\u038D',
			'\u038B\u038C\u038B\u0389',
			'\u038C\u038F\u038D\u038B',
			'\u038E\u0387\u038E\u038B',
			'\u038F\u041C\u0390\u0392\x07!',
			'\u0391\u0393\x07\x82\u0392\u0391',
			'\u0392\u0393\u0393\u0394',
			'\u0394\u0395\x07\xE3\u0395\u0398\xB4[',
			'\u0396\u0397\x07\x9F\u0397\u0399<',
			'\u0398\u0396\u0398\u0399',
			'\u0399\u039E\u039A\u039C\x07',
			'\u039B\u039A\u039B\u039C',
			'\u039C\u039D\u039D\u039F$',
			'\u039E\u039B\u039E\u039F',
			'\u039F\u041C\u03A0\u03A1\x07\xF8',
			'\u03A1\u03A4\x07\xE3\u03A2\u03A3\x07o',
			'\u03A3\u03A5\x07U\u03A4\u03A2',
			'\u03A4\u03A5\u03A5\u03A6',
			"\u03A6\u041C\xB4[\u03A7\u03A8\x07'\u03A8",
			'\u041C\x07!\u03A9\u03AA\x07\x89\u03AA',
			'\u03AC\x07?\u03AB\u03AD\x07\x8A\u03AC',
			'\u03AB\u03AC\u03AD\u03AD',
			'\u03AE\u03AE\u03AF\x07v\u03AF',
			'\u03B1\x07\u011C\u03B0\u03B2\x07\xA8\u03B1',
			'\u03B0\u03B1\u03B2\u03B2',
			'\u03B3\u03B3\u03B4\x07{\u03B4',
			'\u03B5\x07\xE3\u03B5\u03B7\xB4[\u03B6',
			'\u03B8*\u03B7\u03B6\u03B7',
			'\u03B8\u03B8\u041C\u03B9',
			'\u03BA\x07\xF3\u03BA\u03BB\x07\xE3\u03BB',
			'\u03BD\xB4[\u03BC\u03BE*\u03BD\u03BC',
			'\u03BD\u03BE\u03BE\u041C',
			'\u03BF\u03C0\x07\x93\u03C0\u03C1',
			'\x07\xBE\u03C1\u03C2\x07\xE3\u03C2\u03C5',
			'\xB4[\u03C3\u03C4	\r\u03C4\u03C6\x07\xAB',
			'\u03C5\u03C3\u03C5\u03C6',
			'\u03C6\u041C\u03C7\u03C8	',
			'\u03C8\u03D0\u010C\x87\u03C9\u03D1\x07\u011C',
			'\u03CA\u03CC\v\u03CB\u03CA',
			'\u03CC\u03CF\u03CD\u03CE',
			'\u03CD\u03CB\u03CE\u03D1',
			'\u03CF\u03CD\u03D0\u03C9',
			'\u03D0\u03CD\u03D1\u041C',
			'\u03D2\u03D3\x07\xD3\u03D3\u03D7\x07\xC6',
			'\u03D4\u03D6\v\u03D5\u03D4',
			'\u03D6\u03D9\u03D7\u03D8',
			'\u03D7\u03D5\u03D8\u041C',
			'\u03D9\u03D7\u03DA\u03DB\x07\xD3',
			'\u03DB\u03DC\x07\xEA\u03DC\u03DD\x07\u0109',
			'\u03DD\u041C\xDAn\u03DE\u03DF\x07\xD3',
			'\u03DF\u03E0\x07\xEA\u03E0\u03E1\x07\u0109',
			'\u03E1\u041C	\u03E2\u03E3\x07\xD3',
			'\u03E3\u03E4\x07\xEA\u03E4\u03E8\x07\u0109',
			'\u03E5\u03E7\v\u03E6\u03E5',
			'\u03E7\u03EA\u03E8\u03E9',
			'\u03E8\u03E6\u03E9\u041C',
			'\u03EA\u03E8\u03EB\u03EC\x07\xD3',
			`\u03EC\u03ED
\u03ED\u03EE\x07\u010A`,
			'\u03EE\u03EF\v\u03EF\u041C',
			'\u03F0\u03F1\x07\xD3\u03F1\u03F9',
			`
\u03F2\u03F6\x07\u010A\u03F3\u03F5\v`,
			'\u03F4\u03F3\u03F5\u03F8',
			'\u03F6\u03F7\u03F6\u03F4',
			'\u03F7\u03FA\u03F8\u03F6',
			'\u03F9\u03F2\u03F9\u03FA',
			'\u03FA\u041C\u03FB\u03FF\x07\xD3',
			'\u03FC\u03FE\v\u03FD\u03FC',
			'\u03FE\u0401\u03FF\u0400',
			'\u03FF\u03FD\u0400\u0402',
			'\u0401\u03FF\u0402\u0403\x07\u010A',
			'\u0403\u041C\v\u0404\u0408\x07\xD3',
			'\u0405\u0407\v\u0406\u0405',
			'\u0407\u040A\u0408\u0409',
			'\u0408\u0406\u0409\u041C',
			'\u040A\u0408\u040B\u040C\x07\xC0',
			`\u040C\u041C
\u040D\u0411\x07\xC0`,
			'\u040E\u0410\v\u040F\u040E',
			'\u0410\u0413\u0411\u0412',
			'\u0411\u040F\u0412\u041C',
			'\u0413\u0411\u0414\u0418',
			'\f\u0415\u0417\v\u0416\u0415',
			'\u0417\u041A\u0418\u0419',
			'\u0418\u0416\u0419\u041C',
			'\u041A\u0418\u041B\u0137',
			'\u041B\u0139\u041B\u013C',
			'\u041B\u0141\u041B\u0153',
			'\u041B\u015A\u041B\u0160',
			'\u041B\u016A\u041B\u0176',
			'\u041B\u0187\u041B\u019C',
			'\u041B\u01AD\u041B\u01BE',
			'\u041B\u01C9\u041B\u01D0',
			'\u041B\u01D9\u041B\u01E2',
			'\u041B\u01EB\u041B\u01F2',
			'\u041B\u01F9\u041B\u0200',
			'\u041B\u020B\u041B\u0216',
			'\u041B\u0225\u041B\u0231',
			'\u041B\u023F\u041B\u0249',
			'\u041B\u0257\u041B\u025F',
			'\u041B\u0272\u041B\u027B',
			'\u041B\u0281\u041B\u028B',
			'\u041B\u0292\u041B\u02B5',
			'\u041B\u02CB\u041B\u02D3',
			'\u041B\u02EF\u041B\u02F9',
			'\u041B\u02FE\u041B\u030A',
			'\u041B\u0316\u041B\u031F',
			'\u041B\u0327\u041B\u0333',
			'\u041B\u0339\u041B\u0347',
			'\u041B\u034F\u041B\u0352',
			'\u041B\u0358\u041B\u035F',
			'\u041B\u036D\u041B\u0372',
			'\u041B\u0379\u041B\u0380',
			'\u041B\u0383\u041B\u0386',
			'\u041B\u0390\u041B\u03A0',
			'\u041B\u03A7\u041B\u03A9',
			'\u041B\u03B9\u041B\u03BF',
			'\u041B\u03C7\u041B\u03D2',
			'\u041B\u03DA\u041B\u03DE',
			'\u041B\u03E2\u041B\u03EB',
			'\u041B\u03F0\u041B\u03FB',
			'\u041B\u0404\u041B\u040B',
			'\u041B\u040D\u041B\u0414',
			'\u041C\u041D\u041E\u0110',
			'\x89\u041E\u041F\u0420\u0110',
			'\x89\u0420\u0421\u0422\x077',
			'\u0422\u04CA\x07\xC6\u0423\u0424\x07N',
			'\u0424\u04CA\x07\xC6\u0425\u0427\x07k',
			'\u0426\u0428\x07\xC6\u0427\u0426',
			'\u0427\u0428\u0428\u04CA',
			'\u0429\u042B\x07\xC3\u042A\u042C\x07\xC6',
			'\u042B\u042A\u042B\u042C',
			'\u042C\u04CA\u042D\u042E\x07\xD6',
			'\u042E\u04CA\x07k\u042F\u0430\x07\xD6',
			'\u0430\u0432\x07\xC6\u0431\u0433\x07k',
			'\u0432\u0431\u0432\u0433',
			'\u0433\u04CA\u0434\u0435\x07\xD6',
			'\u0435\u04CA\x07\xB2\u0436\u0437\x07\xD6',
			'\u0437\u04CA\x07\xC7\u0438\u0439\x07\xD6',
			'\u0439\u043A\x07:\u043A\u04CA\x07\xC7',
			'\u043B\u043C\x07W\u043C\u04CA\x07\xE3',
			'\u043D\u043E\x07q\u043E\u04CA\x07\xE3',
			'\u043F\u0440\x07\xD6\u0440\u04CA\x072',
			'\u0441\u0442\x07\xD6\u0442\u0443\x077',
			'\u0443\u04CA\x07\xE3\u0444\u0445\x07\xD6',
			'\u0445\u04CA\x07\xEF\u0446\u0447\x07\xD6',
			'\u0447\u04CA\x07t\u0448\u0449\x07\xD6',
			'\u0449\u04CA\x07\x8D\u044A\u044B\x077',
			'\u044B\u04CA\x07s\u044C\u044D\x07N',
			'\u044D\u04CA\x07s\u044E\u044F\x07',
			'\u044F\u04CA\x07s\u0450\u0451\x07\x8C',
			'\u0451\u04CA\x07\xE3\u0452\u0453\x07\x8C',
			'\u0453\u04CA\x07@\u0454\u0455\x07\xFC',
			'\u0455\u04CA\x07\xE3\u0456\u0457\x07\xFC',
			'\u0457\u04CA\x07@\u0458\u0459\x077',
			'\u0459\u045A\x07\xE7\u045A\u04CA\x07\x8F',
			'\u045B\u045C\x07N\u045C\u045D\x07\xE7',
			'\u045D\u04CA\x07\x8F\u045E\u045F\x07',
			'\u045F\u0460\x07\xE3\u0460\u0461\xB6\\',
			'\u0461\u0462\x07\x98\u0462\u0463\x07)',
			'\u0463\u04CA\u0464\u0465\x07',
			'\u0465\u0466\x07\xE3\u0466\u0467\xB6\\',
			'\u0467\u0468\x07)\u0468\u0469\x07 \u0469',
			'\u04CA\u046A\u046B\x07\u046B',
			'\u046C\x07\xE3\u046C\u046D\xB6\\\u046D',
			'\u046E\x07\x98\u046E\u046F\x07\xDA\u046F',
			'\u04CA\u0470\u0471\x07\u0471',
			'\u0472\x07\xE3\u0472\u0473\xB6\\\u0473',
			'\u0474\x07\xD7\u0474\u0475\x07 \u0475',
			'\u04CA\u0476\u0477\x07\u0477',
			'\u0478\x07\xE3\u0478\u0479\xB6\\\u0479',
			'\u047A\x07\x98\u047A\u047B\x07\xD7\u047B',
			'\u04CA\u047C\u047D\x07\u047D',
			'\u047E\x07\xE3\u047E\u047F\xB6\\\u047F',
			'\u0480\x07\x98\u0480\u0481\x07\xDD\u0481',
			'\u0482\x07\u0482\u0483\x07I\u0483',
			'\u04CA\u0484\u0485\x07\u0485',
			'\u0486\x07\xE3\u0486\u0487\xB6\\\u0487',
			'\u0488\x07\xD3\u0488\u0489\x07\xD7\u0489',
			'\u048A\x07\x8B\u048A\u04CA\u048B',
			'\u048C\x07\u048C\u048D\x07\xE3\u048D',
			'\u048E\xB6\\\u048E\u048F\x07T\u048F\u0490',
			'\x07\xA9\u0490\u04CA\u0491\u0492',
			'\x07\u0492\u0493\x07\xE3\u0493\u0494',
			'\xB6\\\u0494\u0495\x07\u0495\u0496',
			'\x07\xA9\u0496\u04CA\u0497\u0498',
			'\x07\u0498\u0499\x07\xE3\u0499\u049A',
			'\xB6\\\u049A\u049B\x07\xF6\u049B\u049C',
			'\x07\xA9\u049C\u04CA\u049D\u049E',
			'\x07\u049E\u049F\x07\xE3\u049F\u04A0',
			'\xB6\\\u04A0\u04A1\x07\xEC\u04A1\u04CA',
			'\u04A2\u04A3\x07\u04A3\u04A4',
			'\x07\xE3\u04A4\u04A6\xB6\\\u04A5\u04A7',
			'*\u04A6\u04A5\u04A6\u04A7',
			'\u04A7\u04A8\u04A8\u04A9',
			'\x071\u04A9\u04CA\u04AA\u04AB',
			'\x07\u04AB\u04AC\x07\xE3\u04AC\u04AE',
			'\xB6\\\u04AD\u04AF*\u04AE\u04AD',
			'\u04AE\u04AF\u04AF\u04B0',
			'\u04B0\u04B1\x074\u04B1\u04CA',
			'\u04B2\u04B3\x07\u04B3\u04B4\x07',
			'\xE3\u04B4\u04B6\xB6\\\u04B5\u04B7',
			'*\u04B6\u04B5\u04B6\u04B7',
			'\u04B7\u04B8\u04B8\u04B9\x07',
			'\xD3\u04B9\u04BA\x07_\u04BA\u04CA',
			'\u04BB\u04BC\x07\u04BC\u04BD\x07',
			'\xE3\u04BD\u04BF\xB6\\\u04BE\u04C0',
			'*\u04BF\u04BE\u04BF\u04C0',
			'\u04C0\u04C1\u04C1\u04C2\x07',
			'\xBF\u04C2\u04C3\x07.\u04C3\u04CA',
			'\u04C4\u04C5\x07\xDB\u04C5\u04CA\x07',
			'\xEE\u04C6\u04CA\x070\u04C7\u04CA\x07',
			'\xC8\u04C8\u04CA\x07H\u04C9\u0421',
			'\u04C9\u0423\u04C9\u0425',
			'\u04C9\u0429\u04C9\u042D',
			'\u04C9\u042F\u04C9\u0434',
			'\u04C9\u0436\u04C9\u0438',
			'\u04C9\u043B\u04C9\u043D',
			'\u04C9\u043F\u04C9\u0441',
			'\u04C9\u0444\u04C9\u0446',
			'\u04C9\u0448\u04C9\u044A',
			'\u04C9\u044C\u04C9\u044E',
			'\u04C9\u0450\u04C9\u0452',
			'\u04C9\u0454\u04C9\u0456',
			'\u04C9\u0458\u04C9\u045B',
			'\u04C9\u045E\u04C9\u0464',
			'\u04C9\u046A\u04C9\u0470',
			'\u04C9\u0476\u04C9\u047C',
			'\u04C9\u0484\u04C9\u048B',
			'\u04C9\u0491\u04C9\u0497',
			'\u04C9\u049D\u04C9\u04A2',
			'\u04C9\u04AA\u04C9\u04B2',
			'\u04C9\u04BB\u04C9\u04C4',
			'\u04C9\u04C6\u04C9\u04C7',
			'\u04C9\u04C8\u04CA',
			'\u04CB\u04CD\x077\u04CC\u04CE\x07',
			'\xE7\u04CD\u04CC\u04CD\u04CE',
			'\u04CE\u04D0\u04CF\u04D1\x07',
			'Y\u04D0\u04CF\u04D0\u04D1',
			'\u04D1\u04D2\u04D2\u04D6\x07',
			'\xE3\u04D3\u04D4\x07o\u04D4\u04D5\x07',
			'\x98\u04D5\u04D7\x07U\u04D6\u04D3',
			'\u04D6\u04D7\u04D7\u04D8',
			'\u04D8\u04D9\xB4[\u04D9',
			'\u04DA\u04DB\x077\u04DB\u04DD\x07',
			'\xA0\u04DC\u04DA\u04DC\u04DD',
			'\u04DD\u04DE\u04DE\u04DF\x07',
			'\xBF\u04DF\u04E0\x07\xE3\u04E0\u04E1',
			'\xB4[\u04E1\x1B\u04E2\u04E3\x07',
			')\u04E3\u04E4\x07 \u04E4\u04E8\x9C',
			'O\u04E5\u04E6\x07\xDA\u04E6\u04E7\x07 ',
			'\u04E7\u04E9\xA0Q\u04E8\u04E5',
			'\u04E8\u04E9\u04E9\u04EA',
			'\u04EA\u04EB\x07{\u04EB\u04EC\x07\u0120',
			'\u04EC\u04ED\x07\u04ED',
			'\u04EE\u04EF\x07\xD7\u04EF\u04F0\x07 ',
			'\u04F0\u04F1\x9CO\u04F1\u04F4\x07\x9C',
			'\u04F2\u04F5D#\u04F3\u04F5F$\u04F4\u04F2',
			'\u04F4\u04F3\u04F5\u04F9',
			'\u04F6\u04F7\x07\xDD\u04F7\u04F8',
			'\x07\u04F8\u04FA\x07I\u04F9\u04F6',
			'\u04F9\u04FA\u04FA',
			'\u04FB\u04FC\x07\x8B\u04FC\u04FD',
			'\x07\u011C\u04FD!\u04FE\u04FF',
			'\x07/\u04FF\u0500\x07\u011C\u0500#',
			'\u0501\u05034\x1B\u0502\u0501',
			'\u0502\u0503\u0503\u0504',
			'\u0504\u0505V,\u0505\u0506R*',
			'\u0506%\u0507\u0508\x07x\u0508',
			'\u050A\x07\xA8\u0509\u050B\x07\xE3\u050A',
			'\u0509\u050A\u050B\u050B',
			'\u050C\u050C\u0513\xB4[\u050D',
			'\u0511*\u050E\u050F\x07o\u050F\u0510',
			'\x07\x98\u0510\u0512\x07U\u0511\u050E',
			'\u0511\u0512\u0512\u0514',
			'\u0513\u050D\u0513\u0514',
			'\u0514\u0516\u0515\u0517',
			'\x9CO\u0516\u0515\u0516\u0517',
			'\u0517\u0545\u0518\u0519',
			'\x07x\u0519\u051B\x07{\u051A\u051C\x07',
			'\xE3\u051B\u051A\u051B\u051C',
			'\u051C\u051D\u051D\u051F',
			'\xB4[\u051E\u0520*\u051F\u051E',
			'\u051F\u0520\u0520\u0524',
			'\u0521\u0522\x07o\u0522\u0523\x07\x98',
			'\u0523\u0525\x07U\u0524\u0521',
			'\u0524\u0525\u0525\u0527',
			'\u0526\u0528\x9CO\u0527\u0526',
			'\u0527\u0528\u0528\u0545',
			'\u0529\u052A\x07x\u052A\u052C\x07\xA8',
			'\u052B\u052D\x07\x8A\u052C\u052B',
			'\u052C\u052D\u052D\u052E',
			'\u052E\u052F\x07J\u052F\u0531\x07\u011C',
			'\u0530\u0532\xB0Y\u0531\u0530',
			'\u0531\u0532\u0532\u0534',
			'\u0533\u0535H%\u0534\u0533',
			'\u0534\u0535\u0535\u0545',
			'\u0536\u0537\x07x\u0537\u0539\x07\xA8',
			'\u0538\u053A\x07\x8A\u0539\u0538',
			'\u0539\u053A\u053A\u053B',
			'\u053B\u053D\x07J\u053C\u053E\x07\u011C',
			'\u053D\u053C\u053D\u053E',
			'\u053E\u053F\u053F\u05428',
			'\u0540\u0541\x07\x9F\u0541\u0543<',
			'\u0542\u0540\u0542\u0543',
			'\u0543\u0545\u0544\u0507',
			'\u0544\u0518\u0544\u0529',
			"\u0544\u0536\u0545'",
			'\u0546\u0548*\u0547\u0549 ',
			'\u0548\u0547\u0548\u0549',
			'\u0549)\u054A\u054B\x07\xA9',
			'\u054B\u054C\x07\u054C\u0551,',
			'\u054D\u054E\x07\u054E\u0550,',
			'\u054F\u054D\u0550\u0553',
			'\u0551\u054F\u0551\u0552',
			'\u0552\u0554\u0553\u0551',
			'\u0554\u0555\x07\u0555+',
			'\u0556\u0559\u010C\x87\u0557\u0558\x07\u010A',
			'\u0558\u055A\xD0i\u0559\u0557',
			'\u0559\u055A\u055A-',
			'\u055B\u055C	\u055C/\u055D',
			'\u0563\u0106\x84\u055E\u0563\x07\u011C\u055F',
			'\u0563\xD2j\u0560\u0563\xD4k\u0561\u0563',
			'\xD6l\u0562\u055D\u0562\u055E',
			'\u0562\u055F\u0562\u0560',
			'\u0562\u0561\u05631',
			'\u0564\u0569\u010C\x87\u0565\u0566',
			'\x07\x07\u0566\u0568\u010C\x87\u0567\u0565',
			'\u0568\u056B\u0569\u0567',
			'\u0569\u056A\u056A3',
			'\u056B\u0569\u056C\u056D',
			'\x07\u0108\u056D\u05726\u056E\u056F',
			'\x07\u056F\u05716\u0570\u056E',
			'\u0571\u0574\u0572\u0570',
			'\u0572\u0573\u05735',
			'\u0574\u0572\u0575\u0577',
			'\u0108\x85\u0576\u0578\x9CO\u0577\u0576',
			'\u0577\u0578\u0578\u057A',
			'\u0579\u057B\x07\u057A\u0579',
			'\u057A\u057B\u057B\u057C',
			'\u057C\u057D\x07\u057D\u057E',
			'$\u057E\u057F\x07\u057F7',
			'\u0580\u0581\x07\u0101\u0581\u0582',
			'\xB4[\u05829\u0583\u0584\x07\x9F',
			'\u0584\u0591<\u0585\u0586\x07\xAA',
			'\u0586\u0587\x07 \u0587\u0591\xBE',
			'`\u0588\u0591\u0589\u0591',
			'\u058A\u0591\xB0Y\u058B\u0591H%',
			'\u058C\u0591 \u058D\u0591"\u058E',
			'\u058F\x07\xE6\u058F\u0591<\u0590',
			'\u0583\u0590\u0585\u0590',
			'\u0588\u0590\u0589\u0590',
			'\u058A\u0590\u058B\u0590',
			'\u058C\u0590\u058D\u0590',
			'\u058E\u0591\u0594\u0592',
			'\u0590\u0592\u0593\u0593',
			';\u0594\u0592\u0595',
			'\u0596\x07\u0596\u059B> \u0597\u0598',
			'\x07\u0598\u059A> \u0599\u0597',
			'\u059A\u059D\u059B\u0599',
			'\u059B\u059C\u059C\u059E',
			'\u059D\u059B\u059E\u059F\x07',
			'\u059F=\u05A0\u05A5',
			'@!\u05A1\u05A3\x07\u010A\u05A2\u05A1',
			'\u05A2\u05A3\u05A3\u05A4',
			'\u05A4\u05A6B"\u05A5\u05A2',
			'\u05A5\u05A6\u05A6?',
			'\u05A7\u05AC\u010C\x87\u05A8\u05A9\x07\x07',
			'\u05A9\u05AB\u010C\x87\u05AA\u05A8',
			'\u05AB\u05AE\u05AC\u05AA',
			'\u05AC\u05AD\u05AD\u05B1',
			'\u05AE\u05AC\u05AF\u05B1\x07\u011C',
			'\u05B0\u05A7\u05B0\u05AF',
			'\u05B1A\u05B2\u05B7\x07\u0120',
			'\u05B3\u05B7\x07\u0122\u05B4\u05B7\xD8m',
			'\u05B5\u05B7\x07\u011C\u05B6\u05B2',
			'\u05B6\u05B3\u05B6\u05B4',
			'\u05B6\u05B5\u05B7C',
			'\u05B8\u05B9\x07\u05B9\u05BE\xD0i',
			'\u05BA\u05BB\x07\u05BB\u05BD\xD0i',
			'\u05BC\u05BA\u05BD\u05C0',
			'\u05BE\u05BC\u05BE\u05BF',
			'\u05BF\u05C1\u05C0\u05BE',
			'\u05C1\u05C2\x07\u05C2E',
			'\u05C3\u05C4\x07\u05C4\u05C9D#',
			'\u05C5\u05C6\x07\u05C6\u05C8D#\u05C7',
			'\u05C5\u05C8\u05CB\u05C9',
			'\u05C7\u05C9\u05CA\u05CA',
			'\u05CC\u05CB\u05C9\u05CC',
			'\u05CD\x07\u05CDG\u05CE',
			'\u05CF\x07\xDD\u05CF\u05D0\x07\u05D0',
			'\u05D5J&\u05D1\u05D2\x07\xDD\u05D2\u05D3',
			"\x07 \u05D3\u05D5L'\u05D4\u05CE",
			'\u05D4\u05D1\u05D5I',
			'\u05D6\u05D7\x07w\u05D7\u05D8\x07\u011C',
			'\u05D8\u05D9\x07\xA4\u05D9\u05DC\x07\u011C',
			'\u05DA\u05DC\u010C\x87\u05DB\u05D6',
			'\u05DB\u05DA\u05DCK',
			'\u05DD\u05E1\x07\u011C\u05DE\u05DF\x07\u0108',
			'\u05DF\u05E0\x07\xD1\u05E0\u05E2<',
			'\u05E1\u05DE\u05E1\u05E2',
			'\u05E2M\u05E3\u05E4\u010C',
			'\x87\u05E4\u05E5\x07\u011C\u05E5O',
			'\u05E6\u05E7&\u05E7\u05E8V,',
			'\u05E8\u05E9R*\u05E9\u061A\u05EA',
			'\u05EC|?\u05EB\u05EDT+\u05EC\u05EB',
			'\u05ED\u05EE\u05EE\u05EC',
			'\u05EE\u05EF\u05EF\u061A',
			'\u05F0\u05F1\x07D\u05F1\u05F2\x07f',
			'\u05F2\u05F3\xB4[\u05F3\u05F5\xAEX',
			'\u05F4\u05F6t;\u05F5\u05F4\u05F5',
			'\u05F6\u05F6\u061A\u05F7',
			'\u05F8\x07\xFE\u05F8\u05F9\xB4[\u05F9',
			'\u05FA\xAEX\u05FA\u05FCf4\u05FB\u05FD',
			't;\u05FC\u05FB\u05FC\u05FD',
			'\u05FD\u061A\u05FE\u05FF\x07\x92',
			'\u05FF\u0600\x07{\u0600\u0601\xB4',
			'[\u0601\u0602\xAEX\u0602\u0608\x07\u0101',
			'\u0603\u0609\xB4[\u0604\u0605\x07',
			'\u0605\u0606$\u0606\u0607\x07',
			'\u0607\u0609\u0608\u0603',
			'\u0608\u0604\u0609\u060A',
			'\u060A\u060B\xAEX\u060B\u060C\x07\x9C',
			'\u060C\u0610\xC8e\u060D\u060Fh5\u060E',
			'\u060D\u060F\u0612\u0610',
			'\u060E\u0610\u0611\u0611',
			'\u0616\u0612\u0610\u0613',
			'\u0615j6\u0614\u0613\u0615\u0618',
			'\u0616\u0614\u0616\u0617',
			'\u0617\u061A\u0618\u0616',
			'\u0619\u05E6\u0619\u05EA',
			'\u0619\u05F0\u0619\u05F7',
			'\u0619\u05FE\u061AQ',
			'\u061B\u061C\x07\xA1\u061C\u061D',
			'\x07 \u061D\u0622Z.\u061E\u061F\x07',
			'\u061F\u0621Z.\u0620\u061E',
			'\u0621\u0624\u0622\u0620',
			'\u0622\u0623\u0623\u0626',
			'\u0624\u0622\u0625\u061B',
			'\u0625\u0626\u0626\u0631',
			'\u0627\u0628\x07(\u0628\u0629\x07 ',
			'\u0629\u062E\xC6d\u062A\u062B\x07',
			'\u062B\u062D\xC6d\u062C\u062A',
			'\u062D\u0630\u062E\u062C',
			'\u062E\u062F\u062F\u0632',
			'\u0630\u062E\u0631\u0627',
			'\u0631\u0632\u0632\u063D',
			'\u0633\u0634\x07L\u0634\u0635\x07 \u0635',
			'\u063A\xC6d\u0636\u0637\x07\u0637',
			'\u0639\xC6d\u0638\u0636\u0639',
			'\u063C\u063A\u0638\u063A',
			'\u063B\u063B\u063E\u063C',
			'\u063A\u063D\u0633\u063D',
			'\u063E\u063E\u0649\u063F',
			'\u0640\x07\xD9\u0640\u0641\x07 \u0641',
			'\u0646Z.\u0642\u0643\x07\u0643\u0645',
			'Z.\u0644\u0642\u0645\u0648',
			'\u0646\u0644\u0646\u0647',
			'\u0647\u064A\u0648\u0646',
			'\u0649\u063F\u0649\u064A',
			'\u064A\u064C\u064B\u064D',
			'\xF8}\u064C\u064B\u064C\u064D',
			'\u064D\u0653\u064E\u0651\x07',
			'\x86\u064F\u0652\x07\u0650\u0652',
			'\xC6d\u0651\u064F\u0651\u0650',
			'\u0652\u0654\u0653\u064E',
			'\u0653\u0654\u0654S',
			'\u0655\u0656&\u0656\u0657',
			'^0\u0657U\u0658\u0659\b,\u0659',
			'\u065AX-\u065A\u0672\u065B\u065C',
			'\f\u065C\u065D,\u065D\u065F	',
			'\u065E\u0660\x8EH\u065F\u065E',
			'\u065F\u0660\u0660\u0661',
			'\u0661\u0671V,\u0662\u0663\f',
			'\u0663\u0664,\u0664\u0666\x07y\u0665',
			'\u0667\x8EH\u0666\u0665\u0666',
			'\u0667\u0667\u0668\u0668',
			'\u0671V,\u0669\u066A\f\u066A\u066B',
			',\x07\u066B\u066D	\u066C\u066E\x8E',
			'H\u066D\u066C\u066D\u066E',
			'\u066E\u066F\u066F\u0671V',
			',\u0670\u065B\u0670\u0662',
			'\u0670\u0669\u0671\u0674',
			'\u0672\u0670\u0672\u0673',
			'\u0673W\u0674\u0672',
			'\u0675\u067F`1\u0676\u067F\\/\u0677',
			'\u0678\x07\xE3\u0678\u067F\xB4[\u0679',
			'\u067F\xAAV\u067A\u067B\x07\u067B',
			'\u067C$\u067C\u067D\x07\u067D',
			'\u067F\u067E\u0675\u067E',
			'\u0676\u067E\u0677\u067E',
			'\u0679\u067E\u067A\u067F',
			'Y\u0680\u0682\xC6d\u0681\u0683',
			'	\u0682\u0681\u0682\u0683',
			'\u0683\u0686\u0684\u0685',
			'\x07\x9A\u0685\u0687	\u0686\u0684',
			'\u0686\u0687\u0687[',
			'\u0688\u068A|?\u0689\u068B',
			'^0\u068A\u0689\u068B\u068C',
			'\u068C\u068A\u068C\u068D',
			'\u068D]\u068E\u0690b2',
			'\u068F\u0691t;\u0690\u068F\u0690',
			'\u0691\u0691\u0692\u0692',
			'\u0693R*\u0693\u06AA\u0694\u0698',
			'd3\u0695\u0697\x8CG\u0696\u0695',
			'\u0697\u069A\u0698\u0696',
			'\u0698\u0699\u0699\u069C',
			'\u069A\u0698\u069B\u069Dt',
			';\u069C\u069B\u069C\u069D',
			'\u069D\u069F\u069E\u06A0~',
			'@\u069F\u069E\u069F\u06A0',
			'\u06A0\u06A2\u06A1\u06A3v',
			'<\u06A2\u06A1\u06A2\u06A3',
			'\u06A3\u06A5\u06A4\u06A6\xF8',
			'}\u06A5\u06A4\u06A5\u06A6',
			'\u06A6\u06A7\u06A7\u06A8R',
			'*\u06A8\u06AA\u06A9\u068E',
			'\u06A9\u0694\u06AA_',
			'\u06AB\u06ADb2\u06AC\u06AE|?\u06AD',
			'\u06AC\u06AD\u06AE\u06AE',
			'\u06B0\u06AF\u06B1t;\u06B0\u06AF',
			'\u06B0\u06B1\u06B1\u06C9',
			'\u06B2\u06B4d3\u06B3\u06B5',
			'|?\u06B4\u06B3\u06B4\u06B5',
			'\u06B5\u06B9\u06B6\u06B8\x8C',
			'G\u06B7\u06B6\u06B8\u06BB',
			'\u06B9\u06B7\u06B9\u06BA',
			'\u06BA\u06BD\u06BB\u06B9',
			'\u06BC\u06BEt;\u06BD\u06BC',
			'\u06BD\u06BE\u06BE\u06C0',
			'\u06BF\u06C1~@\u06C0\u06BF',
			'\u06C0\u06C1\u06C1\u06C3',
			'\u06C2\u06C4v<\u06C3\u06C2\u06C3',
			'\u06C4\u06C4\u06C6\u06C5',
			'\u06C7\xF8}\u06C6\u06C5\u06C6',
			'\u06C7\u06C7\u06C9\u06C8',
			'\u06AB\u06C8\u06B2\u06C9',
			'a\u06CA\u06CB\x07\xCD\u06CB',
			'\u06CC\x07\xF0\u06CC\u06CD\x07\u06CD',
			'\u06CE\xBC_\u06CE\u06CF\x07\u06CF',
			'\u06D5\u06D0\u06D1\x07\x90\u06D1',
			'\u06D5\xBC_\u06D2\u06D3\x07\xBA\u06D3',
			'\u06D5\xBC_\u06D4\u06CA\u06D4',
			'\u06D0\u06D4\u06D2\u06D5',
			'\u06D7\u06D6\u06D8\xB0Y\u06D7',
			'\u06D6\u06D7\u06D8\u06D8',
			'\u06DB\u06D9\u06DA\x07\xB8\u06DA',
			'\u06DC\x07\u011C\u06DB\u06D9\u06DB',
			'\u06DC\u06DC\u06DD\u06DD',
			'\u06DE\x07\u0101\u06DE\u06EB\x07\u011C\u06DF',
			'\u06E9\x07\u06E0\u06EA\x9EP\u06E1',
			'\u06EA\xEEx\u06E2\u06E5\x07\u06E3',
			'\u06E6\x9EP\u06E4\u06E6\xEEx\u06E5\u06E3',
			'\u06E5\u06E4\u06E6\u06E7',
			'\u06E7\u06E8\x07\u06E8\u06EA',
			'\u06E9\u06E0\u06E9\u06E1',
			'\u06E9\u06E2\u06EA\u06EC',
			'\u06EB\u06DF\u06EB\u06EC',
			'\u06EC\u06EE\u06ED\u06EF',
			'\xB0Y\u06EE\u06ED\u06EE\u06EF',
			'\u06EF\u06F2\u06F0\u06F1',
			'\x07\xB7\u06F1\u06F3\x07\u011C\u06F2\u06F0',
			'\u06F2\u06F3\u06F3c',
			'\u06F4\u06F8\x07\xCD\u06F5\u06F7',
			'x=\u06F6\u06F5\u06F7\u06FA',
			'\u06F8\u06F6\u06F8\u06F9',
			'\u06F9\u06FC\u06FA\u06F8',
			'\u06FB\u06FD\x8EH\u06FC\u06FB',
			'\u06FC\u06FD\u06FD\u06FE',
			'\u06FE\u06FF\xBC_\u06FFe',
			'\u0700\u0701\x07\xD3\u0701\u0702p',
			'9\u0702g\u0703\u0704\x07\u0105',
			'\u0704\u0707\x07\x91\u0705\u0706\x07',
			'\u0706\u0708\xC8e\u0707\u0705',
			'\u0707\u0708\u0708\u0709',
			'\u0709\u070A\x07\xE9\u070A\u070Bl7',
			'\u070Bi\u070C\u070D\x07\u0105',
			'\u070D\u070E\x07\x98\u070E\u0711\x07\x91',
			'\u070F\u0710\x07\u0710\u0712\xC8e',
			'\u0711\u070F\u0711\u0712',
			'\u0712\u0713\u0713\u0714\x07\xE9',
			'\u0714\u0715n8\u0715k\u0716\u071E',
			'\x07D\u0717\u0718\x07\xFE\u0718\u0719',
			'\x07\xD3\u0719\u071E\x07\u0114\u071A\u071B',
			'\x07\xFE\u071B\u071C\x07\xD3\u071C\u071E',
			'p9\u071D\u0716\u071D\u0717',
			'\u071D\u071A\u071Em',
			'\u071F\u0720\x07x\u0720\u0732\x07',
			'\u0114\u0721\u0722\x07x\u0722\u0723\x07',
			'\u0723\u0724\xB2Z\u0724\u0725\x07',
			'\u0725\u0726\x07\u0102\u0726\u0727\x07',
			'\u0727\u072C\xC6d\u0728\u0729\x07',
			'\u0729\u072B\xC6d\u072A\u0728',
			'\u072B\u072E\u072C\u072A',
			'\u072C\u072D\u072D\u072F',
			'\u072E\u072C\u072F\u0730\x07',
			'\u0730\u0732\u0731\u071F',
			'\u0731\u0721\u0732o',
			'\u0733\u0738r:\u0734\u0735\x07',
			'\u0735\u0737r:\u0736\u0734',
			'\u0737\u073A\u0738\u0736',
			'\u0738\u0739\u0739q',
			'\u073A\u0738\u073B\u073C\xB4[',
			'\u073C\u073D\x07\u010A\u073D\u073E\xC6d',
			'\u073Es\u073F\u0740\x07\u0106',
			'\u0740\u0741\xC8e\u0741u',
			'\u0742\u0743\x07n\u0743\u0744\xC8e\u0744',
			'w\u0745\u0746\x07\b\u0746\u074D',
			'z>\u0747\u0749\x07\u0748\u0747',
			'\u0748\u0749\u0749\u074A',
			'\u074A\u074Cz>\u074B\u0748',
			'\u074C\u074F\u074D\u074B',
			'\u074D\u074E\u074E\u0750',
			'\u074F\u074D\u0750\u0751\x07	',
			'\u0751y\u0752\u0760\u010C',
			'\x87\u0753\u0754\u010C\x87\u0754\u0755\x07',
			'\u0755\u075A\xCEh\u0756\u0757\x07',
			'\u0757\u0759\xCEh\u0758\u0756',
			'\u0759\u075C\u075A\u0758',
			'\u075A\u075B\u075B\u075D',
			'\u075C\u075A\u075D\u075E\x07',
			'\u075E\u0760\u075F\u0752',
			'\u075F\u0753\u0760{',
			'\u0761\u0762\x07f\u0762\u0767\x90',
			'I\u0763\u0764\x07\u0764\u0766\x90',
			'I\u0765\u0763\u0766\u0769',
			'\u0767\u0765\u0767\u0768',
			'\u0768\u076D\u0769\u0767',
			'\u076A\u076C\x8CG\u076B\u076A',
			'\u076C\u076F\u076D\u076B',
			'\u076D\u076E\u076E\u0771',
			'\u076F\u076D\u0770\u0772\x86',
			'D\u0771\u0770\u0771\u0772',
			'\u0772}\u0773\u0774\x07l',
			'\u0774\u0775\x07 \u0775\u077A\x80A',
			'\u0776\u0777\x07\u0777\u0779\x80A',
			'\u0778\u0776\u0779\u077C',
			'\u077A\u0778\u077A\u077B',
			'\u077B\u079B\u077C\u077A',
			'\u077D\u077E\x07l\u077E\u077F\x07 \u077F',
			'\u0784\xC6d\u0780\u0781\x07\u0781',
			'\u0783\xC6d\u0782\u0780\u0783',
			'\u0786\u0784\u0782\u0784',
			'\u0785\u0785\u0798\u0786',
			'\u0784\u0787\u0788\x07\u0108\u0788',
			'\u0799\x07\xC9\u0789\u078A\x07\u0108\u078A',
			'\u0799\x079\u078B\u078C\x07m\u078C\u078D',
			'\x07\xD5\u078D\u078E\x07\u078E\u0793',
			'\x84C\u078F\u0790\x07\u0790\u0792',
			'\x84C\u0791\u078F\u0792\u0795',
			'\u0793\u0791\u0793\u0794',
			'\u0794\u0796\u0795\u0793',
			'\u0796\u0797\x07\u0797\u0799',
			'\u0798\u0787\u0798\u0789',
			'\u0798\u078B\u0798\u0799',
			'\u0799\u079B\u079A\u0773',
			'\u079A\u077D\u079B\x7F',
			'\u079C\u079F\x82B\u079D\u079F',
			'\xC6d\u079E\u079C\u079E\u079D',
			'\u079F\x81\u07A0\u07A5',
			'\x07\xC9\u07A1\u07A5\x079\u07A2\u07A3',
			'\x07m\u07A3\u07A5\x07\xD5\u07A4\u07A0',
			'\u07A4\u07A1\u07A4\u07A2',
			'\u07A5\u07A6\u07A6\u07A7',
			'\x07\u07A7\u07AC\x84C\u07A8\u07A9',
			'\x07\u07A9\u07AB\x84C\u07AA\u07A8',
			'\u07AB\u07AE\u07AC\u07AA',
			'\u07AC\u07AD\u07AD\u07AF',
			'\u07AE\u07AC\u07AF\u07B0',
			'\x07\u07B0\x83\u07B1\u07BA',
			'\x07\u07B2\u07B7\xC6d\u07B3\u07B4',
			'\x07\u07B4\u07B6\xC6d\u07B5\u07B3',
			'\u07B6\u07B9\u07B7\u07B5',
			'\u07B7\u07B8\u07B8\u07BB',
			'\u07B9\u07B7\u07BA\u07B2',
			'\u07BA\u07BB\u07BB\u07BC',
			'\u07BC\u07BF\x07\u07BD\u07BF',
			'\xC6d\u07BE\u07B1\u07BE\u07BD',
			'\u07BF\x85\u07C0\u07C1',
			'\x07\xAD\u07C1\u07C2\x07\u07C2\u07C3',
			'\xBC_\u07C3\u07C4\x07b\u07C4\u07C5',
			'\x88E\u07C5\u07C6\x07r\u07C6\u07C7\x07',
			'\u07C7\u07CC\x8AF\u07C8\u07C9\x07',
			'\u07C9\u07CB\x8AF\u07CA\u07C8',
			'\u07CB\u07CE\u07CC\u07CA',
			'\u07CC\u07CD\u07CD\u07CF',
			'\u07CE\u07CC\u07CF\u07D0\x07',
			'\u07D0\u07D1\x07\u07D1\x87',
			'\u07D2\u07DF\u010C\x87\u07D3\u07D4\x07',
			'\u07D4\u07D9\u010C\x87\u07D5\u07D6\x07',
			'\u07D6\u07D8\u010C\x87\u07D7\u07D5',
			'\u07D8\u07DB\u07D9\u07D7',
			'\u07D9\u07DA\u07DA\u07DC',
			'\u07DB\u07D9\u07DC\u07DD\x07',
			'\u07DD\u07DF\u07DE\u07D2',
			'\u07DE\u07D3\u07DF\x89',
			'\u07E0\u07E5\xC6d\u07E1\u07E3\x07',
			'\u07E2\u07E1\u07E2\u07E3',
			'\u07E3\u07E4\u07E4\u07E6\u010C',
			'\x87\u07E5\u07E2\u07E5\u07E6',
			'\u07E6\x8B\u07E7\u07E8\x07\x81',
			'\u07E8\u07EA\x07\u0103\u07E9\u07EB\x07\xA3',
			'\u07EA\u07E9\u07EA\u07EB',
			'\u07EB\u07EC\u07EC\u07ED\u0106',
			'\x84\u07ED\u07F6\x07\u07EE\u07F3\xC6',
			'd\u07EF\u07F0\x07\u07F0\u07F2\xC6',
			'd\u07F1\u07EF\u07F2\u07F5',
			'\u07F3\u07F1\u07F3\u07F4',
			'\u07F4\u07F7\u07F5\u07F3',
			'\u07F6\u07EE\u07F6\u07F7',
			'\u07F7\u07F8\u07F8\u07F9\x07',
			'\u07F9\u0805\u010C\x87\u07FA\u07FC\x07',
			'\u07FB\u07FA\u07FB\u07FC',
			'\u07FC\u07FD\u07FD\u0802\u010C',
			'\x87\u07FE\u07FF\x07\u07FF\u0801\u010C',
			'\x87\u0800\u07FE\u0801\u0804',
			'\u0802\u0800\u0802\u0803',
			'\u0803\u0806\u0804\u0802',
			'\u0805\u07FB\u0805\u0806',
			'\u0806\x8D\u0807\u0808	',
			'\u0808\x8F\u0809\u080D\xA8',
			'U\u080A\u080C\x92J\u080B\u080A',
			'\u080C\u080F\u080D\u080B',
			'\u080D\u080E\u080E\x91',
			'\u080F\u080D\u0810\u0811\x94K',
			'\u0811\u0812\x07~\u0812\u0814\xA8U',
			'\u0813\u0815\x96L\u0814\u0813',
			'\u0814\u0815\u0815\u081C',
			'\u0816\u0817\x07\x96\u0817\u0818\x94K',
			'\u0818\u0819\x07~\u0819\u081A\xA8U\u081A',
			'\u081C\u081B\u0810\u081B',
			'\u0816\u081C\x93\u081D',
			'\u081F\x07u\u081E\u081D\u081E',
			'\u081F\u081F\u0836\u0820',
			'\u0836\x078\u0821\u0823\x07\x84\u0822',
			'\u0824\x07\xA3\u0823\u0822\u0823',
			'\u0824\u0824\u0836\u0825',
			'\u0827\x07\x84\u0826\u0825\u0826',
			'\u0827\u0827\u0828\u0828',
			'\u0836\x07\xCE\u0829\u082B\x07\xC4\u082A',
			'\u082C\x07\xA3\u082B\u082A\u082B',
			'\u082C\u082C\u0836\u082D',
			'\u082F\x07g\u082E\u0830\x07\xA3\u082F',
			'\u082E\u082F\u0830\u0830',
			'\u0836\u0831\u0833\x07\x84\u0832',
			'\u0831\u0832\u0833\u0833',
			'\u0834\u0834\u0836\x07\u0835',
			'\u081E\u0835\u0820\u0835',
			'\u0821\u0835\u0826\u0835',
			'\u0829\u0835\u082D\u0835',
			'\u0832\u0836\x95\u0837',
			'\u0838\x07\x9C\u0838\u083C\xC8e\u0839',
			'\u083A\x07\u0101\u083A\u083C\x9CO\u083B',
			'\u0837\u083B\u0839\u083C',
			'\x97\u083D\u083E\x07\xE5\u083E',
			'\u0840\x07\u083F\u0841\x9AN\u0840',
			'\u083F\u0840\u0841\u0841',
			'\u0842\u0842\u0843\x07\u0843',
			'\x99\u0844\u0846\x07\u0113\u0845',
			'\u0844\u0845\u0846\u0846',
			'\u0847\u0847\u0848	\u0848',
			'\u085D\x07\xAC\u0849\u084A\xC6d\u084A',
			'\u084B\x07\xCB\u084B\u085D\u084C',
			'\u084D\x07\u084D\u084E\x07\u0120\u084E',
			'\u084F\x07\xA2\u084F\u0850\x07\x9B\u0850',
			'\u0859\x07\u0120\u0851\u0857\x07\x9C\u0852',
			'\u0858\u010C\x87\u0853\u0854\u0106\x84\u0854',
			'\u0855\x07\u0855\u0856\x07\u0856',
			'\u0858\u0857\u0852\u0857',
			'\u0853\u0858\u085A\u0859',
			'\u0851\u0859\u085A\u085A',
			'\u085D\u085B\u085D\xC6d\u085C',
			'\u0845\u085C\u0849\u085C',
			'\u084C\u085C\u085B\u085D',
			'\x9B\u085E\u085F\x07\u085F',
			'\u0860\x9EP\u0860\u0861\x07\u0861',
			'\x9D\u0862\u0867\u0108\x85\u0863',
			'\u0864\x07\u0864\u0866\u0108\x85\u0865',
			'\u0863\u0866\u0869\u0867',
			'\u0865\u0867\u0868\u0868',
			'\x9F\u0869\u0867\u086A',
			'\u086B\x07\u086B\u0870\xA2R\u086C',
			'\u086D\x07\u086D\u086F\xA2R\u086E',
			'\u086C\u086F\u0872\u0870',
			'\u086E\u0870\u0871\u0871',
			'\u0873\u0872\u0870\u0873',
			'\u0874\x07\u0874\xA1\u0875',
			'\u0877\u0108\x85\u0876\u0878	\u0877',
			'\u0876\u0877\u0878\u0878',
			'\xA3\u0879\u087A\x07\u087A',
			'\u087F\xA6T\u087B\u087C\x07\u087C',
			'\u087E\xA6T\u087D\u087B\u087E',
			'\u0881\u087F\u087D\u087F',
			'\u0880\u0880\u0882\u0881',
			'\u087F\u0882\u0883\x07\u0883',
			'\xA5\u0884\u0886\u010C\x87\u0885',
			'\u0887"\u0886\u0885\u0886',
			'\u0887\u0887\xA7\u0888',
			'\u088A\xB4[\u0889\u088B\x98M\u088A\u0889',
			'\u088A\u088B\u088B\u088C',
			'\u088C\u088D\xAEX\u088D\u08A1',
			'\u088E\u088F\x07\u088F\u0890',
			'$\u0890\u0892\x07\u0891\u0893',
			'\x98M\u0892\u0891\u0892\u0893',
			'\u0893\u0894\u0894\u0895',
			'\xAEX\u0895\u08A1\u0896\u0897',
			'\x07\u0897\u0898\x90I\u0898\u089A',
			'\x07\u0899\u089B\x98M\u089A\u0899',
			'\u089A\u089B\u089B\u089C',
			'\u089C\u089D\xAEX\u089D\u08A1',
			'\u089E\u08A1\xAAV\u089F\u08A1',
			'\xACW\u08A0\u0888\u08A0\u088E',
			'\u08A0\u0896\u08A0\u089E',
			'\u08A0\u089F\u08A1\xA9',
			'\u08A2\u08A3\x07\u0102\u08A3\u08A8',
			'\xC6d\u08A4\u08A5\x07\u08A5\u08A7',
			'\xC6d\u08A6\u08A4\u08A7\u08AA',
			'\u08A8\u08A6\u08A8\u08A9',
			'\u08A9\u08AB\u08AA\u08A8',
			'\u08AB\u08AC\xAEX\u08AC\xAB',
			'\u08AD\u08AE\u0104\x83\u08AE\u08B7',
			'\x07\u08AF\u08B4\xC6d\u08B0\u08B1',
			'\x07\u08B1\u08B3\xC6d\u08B2\u08B0',
			'\u08B3\u08B6\u08B4\u08B2',
			'\u08B4\u08B5\u08B5\u08B8',
			'\u08B6\u08B4\u08B7\u08AF',
			'\u08B7\u08B8\u08B8\u08B9',
			'\u08B9\u08BA\x07\u08BA\u08BB',
			'\xAEX\u08BB\xAD\u08BC\u08BE',
			'\x07\u08BD\u08BC\u08BD\u08BE',
			'\u08BE\u08BF\u08BF\u08C1',
			'\u010E\x88\u08C0\u08C2\x9CO\u08C1\u08C0',
			'\u08C1\u08C2\u08C2\u08C4',
			'\u08C3\u08BD\u08C3\u08C4',
			'\u08C4\xAF\u08C5\u08C6',
			'\x07\xCA\u08C6\u08C7\x07d\u08C7\u08C8',
			'\x07\xD0\u08C8\u08CC\x07\u011C\u08C9\u08CA',
			'\x07\u0108\u08CA\u08CB\x07\xD1\u08CB\u08CD',
			'<\u08CC\u08C9\u08CC\u08CD',
			'\u08CD\u08F7\u08CE\u08CF',
			'\x07\xCA\u08CF\u08D0\x07d\u08D0\u08DA',
			'\x07E\u08D1\u08D2\x07]\u08D2\u08D3\x07',
			'\xE8\u08D3\u08D4\x07 \u08D4\u08D8\x07',
			'\u011C\u08D5\u08D6\x07R\u08D6\u08D7\x07',
			' \u08D7\u08D9\x07\u011C\u08D8\u08D5',
			'\u08D8\u08D9\u08D9\u08DB',
			'\u08DA\u08D1\u08DA\u08DB',
			'\u08DB\u08E1\u08DC\u08DD\x07',
			',\u08DD\u08DE\x07}\u08DE\u08DF\x07\xE8',
			'\u08DF\u08E0\x07 \u08E0\u08E2\x07\u011C',
			'\u08E1\u08DC\u08E1\u08E2',
			'\u08E2\u08E8\u08E3\u08E4\x07\x90',
			'\u08E4\u08E5\x07\x7F\u08E5\u08E6\x07\xE8',
			'\u08E6\u08E7\x07 \u08E7\u08E9\x07\u011C',
			'\u08E8\u08E3\u08E8\u08E9',
			'\u08E9\u08EE\u08EA\u08EB\x07\x87',
			'\u08EB\u08EC\x07\xE8\u08EC\u08ED\x07 ',
			'\u08ED\u08EF\x07\u011C\u08EE\u08EA',
			'\u08EE\u08EF\u08EF\u08F4',
			'\u08F0\u08F1\x07\x99\u08F1\u08F2\x07C',
			'\u08F2\u08F3\x07\u08F3\u08F5\x07\u011C',
			'\u08F4\u08F0\u08F4\u08F5',
			'\u08F5\u08F7\u08F6\u08C5',
			'\u08F6\u08CE\u08F7\xB1',
			'\u08F8\u08FD\xB4[\u08F9\u08FA\x07',
			'\u08FA\u08FC\xB4[\u08FB\u08F9',
			'\u08FC\u08FF\u08FD\u08FB',
			'\u08FD\u08FE\u08FE\xB3',
			'\u08FF\u08FD\u0900\u0905\u0108',
			'\x85\u0901\u0902\x07\x07\u0902\u0904\u0108',
			'\x85\u0903\u0901\u0904\u0907',
			'\u0905\u0903\u0905\u0906',
			'\u0906\xB5\u0907\u0905',
			'\u0908\u0909\u0108\x85\u0909\u090A\x07\x07',
			'\u090A\u090C\u090B\u0908',
			'\u090B\u090C\u090C\u090D',
			'\u090D\u090E\u0108\x85\u090E\xB7',
			'\u090F\u0910\u0108\x85\u0910\u0911\x07\x07',
			'\u0911\u0913\u0912\u090F',
			'\u0912\u0913\u0913\u0914',
			'\u0914\u0915\u0108\x85\u0915\xB9',
			'\u0916\u091E\xC6d\u0917\u0919\x07',
			'\u0918\u0917\u0918\u0919',
			'\u0919\u091C\u091A\u091D\u0108',
			'\x85\u091B\u091D\x9CO\u091C\u091A',
			'\u091C\u091B\u091D\u091F',
			'\u091E\u0918\u091E\u091F',
			'\u091F\xBB\u0920\u0925\xBA',
			'^\u0921\u0922\x07\u0922\u0924\xBA',
			'^\u0923\u0921\u0924\u0927',
			'\u0925\u0923\u0925\u0926',
			'\u0926\xBD\u0927\u0925',
			'\u0928\u0929\x07\u0929\u092E\xC0',
			'a\u092A\u092B\x07\u092B\u092D\xC0',
			'a\u092C\u092A\u092D\u0930',
			'\u092E\u092C\u092E\u092F',
			'\u092F\u0931\u0930\u092E',
			'\u0931\u0932\x07\u0932\xBF',
			'\u0933\u0936\xC2b\u0934\u0936\xF0',
			'y\u0935\u0933\u0935\u0934',
			'\u0936\xC1\u0937\u0945\u0106',
			'\x84\u0938\u0939\u010C\x87\u0939\u093A\x07',
			'\u093A\u093F\xC4c\u093B\u093C\x07',
			'\u093C\u093E\xC4c\u093D\u093B',
			'\u093E\u0941\u093F\u093D',
			'\u093F\u0940\u0940\u0942',
			'\u0941\u093F\u0942\u0943\x07',
			'\u0943\u0945\u0944\u0937',
			'\u0944\u0938\u0945\xC3',
			'\u0946\u0949\u0106\x84\u0947\u0949\xD0',
			'i\u0948\u0946\u0948\u0947',
			'\u0949\xC5\u094A\u094B\xC8',
			'e\u094B\xC7\u094C\u094D\be',
			'\u094D\u094E\x07\x98\u094E\u0959\xC8e\x07',
			'\u094F\u0950\x07U\u0950\u0951\x07',
			'\u0951\u0952$\u0952\u0953\x07',
			'\u0953\u0959\u0954\u0956\xCCg',
			'\u0955\u0957\xCAf\u0956\u0955',
			'\u0956\u0957\u0957\u0959',
			'\u0958\u094C\u0958\u094F',
			'\u0958\u0954\u0959\u0962',
			'\u095A\u095B\f\u095B\u095C\x07',
			'\u095C\u0961\xC8e\u095D\u095E\f\u095E',
			'\u095F\x07\xA0\u095F\u0961\xC8e\u0960',
			'\u095A\u0960\u095D\u0961',
			'\u0964\u0962\u0960\u0962',
			'\u0963\u0963\xC9\u0964',
			'\u0962\u0965\u0967\x07\x98\u0966',
			'\u0965\u0966\u0967\u0967',
			'\u0968\u0968\u0969\x07\u0969',
			'\u096A\xCCg\u096A\u096B\x07\u096B',
			'\u096C\xCCg\u096C\u09B8\u096D',
			'\u096F\x07\x98\u096E\u096D\u096E',
			'\u096F\u096F\u0970\u0970',
			'\u0971\x07r\u0971\u0972\x07\u0972',
			'\u0977\xC6d\u0973\u0974\x07\u0974',
			'\u0976\xC6d\u0975\u0973\u0976',
			'\u0979\u0977\u0975\u0977',
			'\u0978\u0978\u097A\u0979',
			'\u0977\u097A\u097B\x07\u097B',
			'\u09B8\u097C\u097E\x07\x98\u097D',
			'\u097C\u097D\u097E\u097E',
			'\u097F\u097F\u0980\x07r\u0980',
			'\u0981\x07\u0981\u0982$\u0982',
			'\u0983\x07\u0983\u09B8\u0984',
			'\u0986\x07\x98\u0985\u0984\u0985',
			'\u0986\u0986\u0987\u0987',
			'\u0988\x07\xC5\u0988\u09B8\xCCg\u0989',
			'\u098B\x07\x98\u098A\u0989\u098A',
			'\u098B\u098B\u098C\u098C',
			'\u098D\x07\x85\u098D\u099B	\u098E',
			'\u098F\x07\u098F\u099C\x07\u0990',
			'\u0991\x07\u0991\u0996\xC6d\u0992',
			'\u0993\x07\u0993\u0995\xC6d\u0994',
			'\u0992\u0995\u0998\u0996',
			'\u0994\u0996\u0997\u0997',
			'\u0999\u0998\u0996\u0999',
			'\u099A\x07\u099A\u099C\u099B',
			'\u098E\u099B\u0990\u099C',
			'\u09B8\u099D\u099F\x07\x98\u099E',
			'\u099D\u099E\u099F\u099F',
			'\u09A0\u09A0\u09A1\x07\x85\u09A1',
			'\u09A4\xCCg\u09A2\u09A3\x07Q\u09A3\u09A5',
			'\x07\u011C\u09A4\u09A2\u09A4\u09A5',
			'\u09A5\u09B8\u09A6\u09A8',
			'\x07|\u09A7\u09A9\x07\x98\u09A8\u09A7',
			'\u09A8\u09A9\u09A9\u09AA',
			'\u09AA\u09B8\x07\x99\u09AB\u09AD',
			'\x07|\u09AC\u09AE\x07\x98\u09AD\u09AC',
			'\u09AD\u09AE\u09AE\u09AF',
			'\u09AF\u09B8	\u09B0\u09B2',
			'\x07|\u09B1\u09B3\x07\x98\u09B2\u09B1',
			'\u09B2\u09B3\u09B3\u09B4',
			'\u09B4\u09B5\x07K\u09B5\u09B6',
			'\x07f\u09B6\u09B8\xCCg\u09B7\u0966',
			'\u09B7\u096E\u09B7\u097D',
			'\u09B7\u0985\u09B7\u098A',
			'\u09B7\u099E\u09B7\u09A6',
			'\u09B7\u09AB\u09B7\u09B0',
			'\u09B8\xCB\u09B9\u09BA\b',
			'g\u09BA\u09BE\xCEh\u09BB\u09BC	',
			'\u09BC\u09BE\xCCg	\u09BD\u09B9',
			'\u09BD\u09BB\u09BE\u09D4',
			'\u09BF\u09C0\f\b\u09C0\u09C1	\u09C1\u09D3',
			'\xCCg	\u09C2\u09C3\f\x07\u09C3\u09C4	\x1B',
			'\u09C4\u09D3\xCCg\b\u09C5\u09C6\f',
			'\u09C6\u09C7\x07\u0118\u09C7\u09D3\xCCg\x07',
			'\u09C8\u09C9\f\u09C9\u09CA\x07\u011B',
			'\u09CA\u09D3\xCCg\u09CB\u09CC\f\u09CC',
			'\u09CD\x07\u0119\u09CD\u09D3\xCCg\u09CE',
			'\u09CF\f\u09CF\u09D0\xD2j\u09D0\u09D1',
			'\xCCg\u09D1\u09D3\u09D2\u09BF',
			'\u09D2\u09C2\u09D2\u09C5',
			'\u09D2\u09C8\u09D2\u09CB',
			'\u09D2\u09CE\u09D3\u09D6',
			'\u09D4\u09D2\u09D4\u09D5',
			'\u09D5\xCD\u09D6\u09D4',
			'\u09D7\u09D8\bh\u09D8\u0A94	',
			'\u09D9\u09DB\x07#\u09DA\u09DC\xF6',
			'|\u09DB\u09DA\u09DC\u09DD',
			'\u09DD\u09DB\u09DD\u09DE',
			'\u09DE\u09E1\u09DF\u09E0\x07O',
			'\u09E0\u09E2\xC6d\u09E1\u09DF',
			'\u09E1\u09E2\u09E2\u09E3',
			'\u09E3\u09E4\x07P\u09E4\u0A94',
			'\u09E5\u09E6\x07#\u09E6\u09E8\xC6',
			'd\u09E7\u09E9\xF6|\u09E8\u09E7',
			'\u09E9\u09EA\u09EA\u09E8',
			'\u09EA\u09EB\u09EB\u09EE',
			'\u09EC\u09ED\x07O\u09ED\u09EF\xC6d',
			'\u09EE\u09EC\u09EE\u09EF',
			'\u09EF\u09F0\u09F0\u09F1\x07P',
			'\u09F1\u0A94\u09F2\u09F3	',
			'\u09F3\u09F4\x07\u09F4\u09F5\xC6d',
			'\u09F5\u09F6\x07\u09F6\u09F7\xE8u',
			'\u09F7\u09F8\x07\u09F8\u0A94',
			'\u09F9\u09FA\x07\xDF\u09FA\u0A03\x07',
			'\u09FB\u0A00\xBA^\u09FC\u09FD\x07',
			'\u09FD\u09FF\xBA^\u09FE\u09FC',
			'\u09FF\u0A02\u0A00\u09FE',
			'\u0A00\u0A01\u0A01\u0A04',
			'\u0A02\u0A00\u0A03\u09FB',
			'\u0A03\u0A04\u0A04\u0A05',
			'\u0A05\u0A94\x07\u0A06\u0A07\x07`',
			'\u0A07\u0A08\x07\u0A08\u0A0B\xC6d',
			'\u0A09\u0A0A\x07p\u0A0A\u0A0C\x07\x9A',
			'\u0A0B\u0A09\u0A0B\u0A0C',
			'\u0A0C\u0A0D\u0A0D\u0A0E\x07',
			'\u0A0E\u0A94\u0A0F\u0A10\x07\x80',
			'\u0A10\u0A11\x07\u0A11\u0A14\xC6d',
			'\u0A12\u0A13\x07p\u0A13\u0A15\x07\x9A',
			'\u0A14\u0A12\u0A14\u0A15',
			'\u0A15\u0A16\u0A16\u0A17\x07',
			'\u0A17\u0A94\u0A18\u0A19\x07\xAF',
			'\u0A19\u0A1A\x07\u0A1A\u0A1B\xCCg',
			'\u0A1B\u0A1C\x07r\u0A1C\u0A1D\xCCg\u0A1D',
			'\u0A1E\x07\u0A1E\u0A94\u0A1F',
			'\u0A94\xD0i\u0A20\u0A94\x07\u0114\u0A21',
			'\u0A22\u0106\x84\u0A22\u0A23\x07\x07\u0A23',
			'\u0A24\x07\u0114\u0A24\u0A94\u0A25',
			'\u0A26\x07\u0A26\u0A29\xBA^\u0A27',
			'\u0A28\x07\u0A28\u0A2A\xBA^\u0A29',
			'\u0A27\u0A2A\u0A2B\u0A2B',
			'\u0A29\u0A2B\u0A2C\u0A2C',
			'\u0A2D\u0A2D\u0A2E\x07\u0A2E',
			'\u0A94\u0A2F\u0A30\x07\u0A30',
			'\u0A31$\u0A31\u0A32\x07\u0A32',
			'\u0A94\u0A33\u0A34\u0104\x83\u0A34',
			'\u0A40\x07\u0A35\u0A37\x8EH\u0A36',
			'\u0A35\u0A36\u0A37\u0A37',
			'\u0A38\u0A38\u0A3D\xC6d\u0A39',
			'\u0A3A\x07\u0A3A\u0A3C\xC6d\u0A3B',
			'\u0A39\u0A3C\u0A3F\u0A3D',
			'\u0A3B\u0A3D\u0A3E\u0A3E',
			'\u0A41\u0A3F\u0A3D\u0A40',
			'\u0A36\u0A40\u0A41\u0A41',
			'\u0A42\u0A42\u0A49\x07\u0A43',
			'\u0A44\x07^\u0A44\u0A45\x07\u0A45',
			'\u0A46\x07\u0106\u0A46\u0A47\xC8e\u0A47',
			'\u0A48\x07\u0A48\u0A4A\u0A49',
			'\u0A43\u0A49\u0A4A\u0A4A',
			'\u0A4D\u0A4B\u0A4C	\u0A4C',
			'\u0A4E\x07\x9A\u0A4D\u0A4B\u0A4D',
			'\u0A4E\u0A4E\u0A51\u0A4F',
			'\u0A50\x07\xA5\u0A50\u0A52\xFC\x7F\u0A51',
			'\u0A4F\u0A51\u0A52\u0A52',
			'\u0A94\u0A53\u0A54\u010C\x87\u0A54',
			`\u0A55\x07
\u0A55\u0A56\xC6d\u0A56\u0A94`,
			'\u0A57\u0A58\x07\u0A58\u0A5B',
			'\u010C\x87\u0A59\u0A5A\x07\u0A5A\u0A5C',
			'\u010C\x87\u0A5B\u0A59\u0A5C\u0A5D',
			'\u0A5D\u0A5B\u0A5D\u0A5E',
			'\u0A5E\u0A5F\u0A5F\u0A60',
			`\x07\u0A60\u0A61\x07
\u0A61\u0A62`,
			'\xC6d\u0A62\u0A94\u0A63\u0A94',
			'\u010C\x87\u0A64\u0A65\x07\u0A65\u0A66',
			'\xC6d\u0A66\u0A67\x07\u0A67\u0A94',
			'\u0A68\u0A69\x07Z\u0A69\u0A6A',
			'\x07\u0A6A\u0A6B\u010C\x87\u0A6B\u0A6C',
			'\x07f\u0A6C\u0A6D\xCCg\u0A6D\u0A6E\x07',
			'\u0A6E\u0A94\u0A6F\u0A70	',
			'\u0A70\u0A71\x07\u0A71\u0A72',
			'\xCCg\u0A72\u0A73	 \u0A73\u0A76\xCCg',
			'\u0A74\u0A75	!\u0A75\u0A77\xCCg\u0A76\u0A74',
			'\u0A76\u0A77\u0A77\u0A78',
			'\u0A78\u0A79\x07\u0A79\u0A94',
			'\u0A7A\u0A7B\x07\xF1\u0A7B\u0A7D',
			'\x07\u0A7C\u0A7E	"\u0A7D\u0A7C',
			'\u0A7D\u0A7E\u0A7E\u0A80',
			'\u0A7F\u0A81\xCCg\u0A80\u0A7F',
			'\u0A80\u0A81\u0A81\u0A82',
			'\u0A82\u0A83\x07f\u0A83\u0A84',
			'\xCCg\u0A84\u0A85\x07\u0A85\u0A94',
			'\u0A86\u0A87\x07\xA7\u0A87\u0A88\x07',
			'\u0A88\u0A89\xCCg\u0A89\u0A8A\x07',
			'\xAE\u0A8A\u0A8B\xCCg\u0A8B\u0A8C\x07',
			'f\u0A8C\u0A8F\xCCg\u0A8D\u0A8E\x07b',
			'\u0A8E\u0A90\xCCg\u0A8F\u0A8D',
			'\u0A8F\u0A90\u0A90\u0A91',
			'\u0A91\u0A92\x07\u0A92\u0A94',
			'\u0A93\u09D7\u0A93\u09D9',
			'\u0A93\u09E5\u0A93\u09F2',
			'\u0A93\u09F9\u0A93\u0A06',
			'\u0A93\u0A0F\u0A93\u0A18',
			'\u0A93\u0A1F\u0A93\u0A20',
			'\u0A93\u0A21\u0A93\u0A25',
			'\u0A93\u0A2F\u0A93\u0A33',
			'\u0A93\u0A53\u0A93\u0A57',
			'\u0A93\u0A63\u0A93\u0A64',
			'\u0A93\u0A68\u0A93\u0A6F',
			'\u0A93\u0A7A\u0A93\u0A86',
			`\u0A94\u0A9F\u0A95\u0A96\f
`,
			'\u0A96\u0A97\x07\v\u0A97\u0A98\xCCg',
			'\u0A98\u0A99\x07\f\u0A99\u0A9E',
			'\u0A9A\u0A9B\f\b\u0A9B\u0A9C\x07\x07\u0A9C',
			'\u0A9E\u010C\x87\u0A9D\u0A95\u0A9D',
			'\u0A9A\u0A9E\u0AA1\u0A9F',
			'\u0A9D\u0A9F\u0AA0\u0AA0',
			'\xCF\u0AA1\u0A9F\u0AA2',
			'\u0AAF\x07\x99\u0AA3\u0AAF\xDAn\u0AA4',
			'\u0AA5\u010C\x87\u0AA5\u0AA6\x07\u011C\u0AA6',
			'\u0AAF\u0AA7\u0AAF\u0112\x8A\u0AA8',
			'\u0AAF\xD8m\u0AA9\u0AAB\x07\u011C\u0AAA',
			'\u0AA9\u0AAB\u0AAC\u0AAC',
			'\u0AAA\u0AAC\u0AAD\u0AAD',
			'\u0AAF\u0AAE\u0AA2\u0AAE',
			'\u0AA3\u0AAE\u0AA4\u0AAE',
			'\u0AA7\u0AAE\u0AA8\u0AAE',
			'\u0AAA\u0AAF\xD1\u0AB0',
			'\u0AB1	#\u0AB1\xD3\u0AB2\u0AB3',
			'	$\u0AB3\xD5\u0AB4\u0AB5	%',
			'\u0AB5\xD7\u0AB6\u0AB7	&',
			'\u0AB7\xD9\u0AB8\u0ABB\x07z',
			'\u0AB9\u0ABC\xDCo\u0ABA\u0ABC\xE0q\u0ABB',
			'\u0AB9\u0ABB\u0ABA\u0ABB',
			'\u0ABC\u0ABC\xDB\u0ABD',
			'\u0ABF\xDEp\u0ABE\u0AC0\xE2r\u0ABF\u0ABE',
			'\u0ABF\u0AC0\u0AC0\xDD',
			'\u0AC1\u0AC2\xE4s\u0AC2\u0AC3',
			'\u010C\x87\u0AC3\u0AC5\u0AC4\u0AC1',
			'\u0AC5\u0AC6\u0AC6\u0AC4',
			'\u0AC6\u0AC7\u0AC7\xDF',
			'\u0AC8\u0ACB\xE2r\u0AC9\u0ACC',
			'\xDEp\u0ACA\u0ACC\xE2r\u0ACB\u0AC9',
			'\u0ACB\u0ACA\u0ACB\u0ACC',
			'\u0ACC\xE1\u0ACD\u0ACE',
			'\xE4s\u0ACE\u0ACF\u010C\x87\u0ACF\u0AD0\x07',
			'\xEB\u0AD0\u0AD1\u010C\x87\u0AD1\xE3',
			"\u0AD2\u0AD4	'\u0AD3\u0AD2",
			'\u0AD3\u0AD4\u0AD4\u0AD5',
			'\u0AD5\u0AD8	\u0AD6\u0AD8\x07\u011C',
			'\u0AD7\u0AD3\u0AD7\u0AD6',
			'\u0AD8\xE5\u0AD9\u0ADD\x07`',
			'\u0ADA\u0ADB\x07\u0ADB\u0ADD\u0108',
			'\x85\u0ADC\u0AD9\u0ADC\u0ADA',
			'\u0ADD\xE7\u0ADE\u0ADF\x07',
			'\u0ADF\u0AE0\x07\u010E\u0AE0\u0AE1\xE8',
			'u\u0AE1\u0AE2\x07\u0110\u0AE2\u0B01',
			'\u0AE3\u0AE4\x07\x90\u0AE4\u0AE5\x07\u010E',
			'\u0AE5\u0AE6\xE8u\u0AE6\u0AE7\x07',
			'\u0AE7\u0AE8\xE8u\u0AE8\u0AE9\x07\u0110',
			'\u0AE9\u0B01\u0AEA\u0AF1\x07\xDF',
			'\u0AEB\u0AED\x07\u010E\u0AEC\u0AEE\xF2',
			'z\u0AED\u0AEC\u0AED\u0AEE',
			'\u0AEE\u0AEF\u0AEF\u0AF2\x07\u0110',
			'\u0AF0\u0AF2\x07\u010C\u0AF1\u0AEB',
			'\u0AF1\u0AF0\u0AF2\u0B01',
			'\u0AF3\u0AFE\u010C\x87\u0AF4\u0AF5\x07',
			'\u0AF5\u0AFA\x07\u0120\u0AF6\u0AF7\x07',
			'\u0AF7\u0AF9\x07\u0120\u0AF8\u0AF6',
			'\u0AF9\u0AFC\u0AFA\u0AF8',
			'\u0AFA\u0AFB\u0AFB\u0AFD',
			'\u0AFC\u0AFA\u0AFD\u0AFF\x07',
			'\u0AFE\u0AF4\u0AFE\u0AFF',
			'\u0AFF\u0B01\u0B00\u0ADE',
			'\u0B00\u0AE3\u0B00\u0AEA',
			'\u0B00\u0AF3\u0B01\xE9',
			'\u0B02\u0B07\xECw\u0B03\u0B04\x07',
			'\u0B04\u0B06\xECw\u0B05\u0B03',
			'\u0B06\u0B09\u0B07\u0B05',
			'\u0B07\u0B08\u0B08\xEB',
			'\u0B09\u0B07\u0B0A\u0B0B\xB4',
			'[\u0B0B\u0B0E\xE8u\u0B0C\u0B0D\x07\x98',
			'\u0B0D\u0B0F\x07\x99\u0B0E\u0B0C',
			'\u0B0E\u0B0F\u0B0F\u0B11',
			'\u0B10\u0B12"\u0B11\u0B10',
			'\u0B11\u0B12\u0B12\u0B14',
			'\u0B13\u0B15\xE6t\u0B14\u0B13',
			'\u0B14\u0B15\u0B15\xED',
			'\u0B16\u0B1B\xF0y\u0B17\u0B18\x07',
			'\u0B18\u0B1A\xF0y\u0B19\u0B17',
			'\u0B1A\u0B1D\u0B1B\u0B19',
			'\u0B1B\u0B1C\u0B1C\xEF',
			'\u0B1D\u0B1B\u0B1E\u0B1F\u0108\x85',
			'\u0B1F\u0B22\xE8u\u0B20\u0B21\x07\x98',
			'\u0B21\u0B23\x07\x99\u0B22\u0B20',
			'\u0B22\u0B23\u0B23\u0B25',
			'\u0B24\u0B26"\u0B25\u0B24',
			'\u0B25\u0B26\u0B26\xF1',
			'\u0B27\u0B2C\xF4{\u0B28\u0B29\x07',
			'\u0B29\u0B2B\xF4{\u0B2A\u0B28',
			'\u0B2B\u0B2E\u0B2C\u0B2A',
			'\u0B2C\u0B2D\u0B2D\xF3',
			'\u0B2E\u0B2C\u0B2F\u0B30\u010C\x87',
			'\u0B30\u0B31\x07\r\u0B31\u0B34\xE8u',
			'\u0B32\u0B33\x07\x98\u0B33\u0B35\x07\x99',
			'\u0B34\u0B32\u0B34\u0B35',
			'\u0B35\u0B37\u0B36\u0B38"',
			'\u0B37\u0B36\u0B37\u0B38',
			'\u0B38\xF5\u0B39\u0B3A\x07\u0105',
			'\u0B3A\u0B3B\xC6d\u0B3B\u0B3C\x07\xE9',
			'\u0B3C\u0B3D\xC6d\u0B3D\xF7',
			'\u0B3E\u0B3F\x07\u0107\u0B3F\u0B44\xFA~',
			'\u0B40\u0B41\x07\u0B41\u0B43\xFA~',
			'\u0B42\u0B40\u0B43\u0B46',
			'\u0B44\u0B42\u0B44\u0B45',
			'\u0B45\xF9\u0B46\u0B44',
			'\u0B47\u0B48\u0108\x85\u0B48\u0B49\x07',
			'\u0B49\u0B4A\xFC\x7F\u0B4A\xFB',
			'\u0B4B\u0B7A\u0108\x85\u0B4C\u0B4D\x07',
			'\u0B4D\u0B4E\u0108\x85\u0B4E\u0B4F\x07',
			'\u0B4F\u0B7A\u0B50\u0B73\x07',
			'\u0B51\u0B52\x07(\u0B52\u0B53\x07 \u0B53',
			'\u0B58\xC6d\u0B54\u0B55\x07\u0B55',
			'\u0B57\xC6d\u0B56\u0B54\u0B57',
			'\u0B5A\u0B58\u0B56\u0B58',
			'\u0B59\u0B59\u0B74\u0B5A',
			'\u0B58\u0B5B\u0B5C	(\u0B5C\u0B5D',
			'\x07 \u0B5D\u0B62\xC6d\u0B5E\u0B5F\x07',
			'\u0B5F\u0B61\xC6d\u0B60\u0B5E',
			'\u0B61\u0B64\u0B62\u0B60',
			'\u0B62\u0B63\u0B63\u0B66',
			'\u0B64\u0B62\u0B65\u0B5B',
			'\u0B65\u0B66\u0B66\u0B71',
			'\u0B67\u0B68	)\u0B68\u0B69\x07 ',
			'\u0B69\u0B6EZ.\u0B6A\u0B6B\x07',
			'\u0B6B\u0B6DZ.\u0B6C\u0B6A\u0B6D',
			'\u0B70\u0B6E\u0B6C\u0B6E',
			'\u0B6F\u0B6F\u0B72\u0B70',
			'\u0B6E\u0B71\u0B67\u0B71',
			'\u0B72\u0B72\u0B74\u0B73',
			'\u0B51\u0B73\u0B65\u0B74',
			'\u0B76\u0B75\u0B77\xFE\x80\u0B76',
			'\u0B75\u0B76\u0B77\u0B77',
			'\u0B78\u0B78\u0B7A\x07\u0B79',
			'\u0B4B\u0B79\u0B4C\u0B79',
			'\u0B50\u0B7A\xFD\u0B7B',
			'\u0B7C\x07\xB6\u0B7C\u0B8C\u0100\x81\u0B7D',
			'\u0B7E\x07\xCB\u0B7E\u0B8C\u0100\x81\u0B7F',
			'\u0B80\x07\xB6\u0B80\u0B81\x07\u0B81',
			'\u0B82\u0100\x81\u0B82\u0B83\x07\u0B83',
			'\u0B84\u0100\x81\u0B84\u0B8C\u0B85',
			'\u0B86\x07\xCB\u0B86\u0B87\x07\u0B87',
			'\u0B88\u0100\x81\u0B88\u0B89\x07\u0B89',
			'\u0B8A\u0100\x81\u0B8A\u0B8C\u0B8B',
			'\u0B7B\u0B8B\u0B7D\u0B8B',
			'\u0B7F\u0B8B\u0B85\u0B8C',
			'\xFF\u0B8D\u0B8E\x07\xF7\u0B8E',
			'\u0B95	*\u0B8F\u0B90\x07:\u0B90\u0B95\x07',
			'\xCA\u0B91\u0B92\xC6d\u0B92\u0B93	*',
			'\u0B93\u0B95\u0B94\u0B8D',
			'\u0B94\u0B8F\u0B94\u0B91',
			'\u0B95\u0101\u0B96\u0B9B\u0106\x84',
			'\u0B97\u0B98\x07\u0B98\u0B9A\u0106\x84',
			'\u0B99\u0B97\u0B9A\u0B9D',
			'\u0B9B\u0B99\u0B9B\u0B9C',
			'\u0B9C\u0103\u0B9D\u0B9B',
			'\u0B9E\u0BA3\u0106\x84\u0B9F\u0BA3\x07^',
			'\u0BA0\u0BA3\x07\x84\u0BA1\u0BA3\x07\xC4',
			'\u0BA2\u0B9E\u0BA2\u0B9F',
			'\u0BA2\u0BA0\u0BA2\u0BA1',
			'\u0BA3\u0105\u0BA4\u0BA9\u010C\x87',
			'\u0BA5\u0BA6\x07\x07\u0BA6\u0BA8\u010C\x87',
			'\u0BA7\u0BA5\u0BA8\u0BAB',
			'\u0BA9\u0BA7\u0BA9\u0BAA',
			'\u0BAA\u0107\u0BAB\u0BA9',
			'\u0BAC\u0BAD\u010C\x87\u0BAD\u0BAE\u010A\x86',
			'\u0BAE\u0109\u0BAF\u0BB0\x07\u0113',
			'\u0BB0\u0BB2\u010C\x87\u0BB1\u0BAF',
			'\u0BB2\u0BB3\u0BB3\u0BB1',
			'\u0BB3\u0BB4\u0BB4\u0BB7',
			'\u0BB5\u0BB7\u0BB6\u0BB1',
			'\u0BB6\u0BB5\u0BB7\u010B',
			'\u0BB8\u0BBC\u010E\x88\u0BB9\u0BBA\x87',
			'\u0BBA\u0BBC\u0118\x8D\u0BBB\u0BB8',
			'\u0BBB\u0BB9\u0BBC\u010D',
			'\u0BBD\u0BC4\x07\u0126\u0BBE\u0BC4\u0110\x89',
			'\u0BBF\u0BC0\x88\u0BC0\u0BC4\u0116\x8C',
			'\u0BC1\u0BC2\x88\u0BC2\u0BC4\u011A\x8E',
			'\u0BC3\u0BBD\u0BC3\u0BBE',
			'\u0BC3\u0BBF\u0BC3\u0BC1',
			'\u0BC4\u010F\u0BC5\u0BC6\x07\u0127',
			'\u0BC6\u0111\u0BC7\u0BC9\x8A',
			'\u0BC8\u0BCA\x07\u0113\u0BC9\u0BC8',
			'\u0BC9\u0BCA\u0BCA\u0BCB',
			'\u0BCB\u0BF3\x07\u0121\u0BCC\u0BCE\x8A',
			'\u0BCD\u0BCF\x07\u0113\u0BCE\u0BCD',
			'\u0BCE\u0BCF\u0BCF\u0BD0',
			'\u0BD0\u0BF3\x07\u0122\u0BD1\u0BD3\x8A',
			'\u0BD2\u0BD4\x07\u0113\u0BD3\u0BD2',
			'\u0BD3\u0BD4\u0BD4\u0BD5',
			'\u0BD5\u0BF3	+\u0BD6\u0BD8\x07\u0113',
			'\u0BD7\u0BD6\u0BD7\u0BD8',
			'\u0BD8\u0BD9\u0BD9\u0BF3\x07\u0120',
			'\u0BDA\u0BDC\x07\u0113\u0BDB\u0BDA',
			'\u0BDB\u0BDC\u0BDC\u0BDD',
			'\u0BDD\u0BF3\x07\u011D\u0BDE\u0BE0\x07\u0113',
			'\u0BDF\u0BDE\u0BDF\u0BE0',
			'\u0BE0\u0BE1\u0BE1\u0BF3\x07\u011E',
			'\u0BE2\u0BE4\x07\u0113\u0BE3\u0BE2',
			'\u0BE3\u0BE4\u0BE4\u0BE5',
			'\u0BE5\u0BF3\x07\u011F\u0BE6\u0BE8\x07\u0113',
			'\u0BE7\u0BE6\u0BE7\u0BE8',
			'\u0BE8\u0BE9\u0BE9\u0BF3\x07\u0124',
			'\u0BEA\u0BEC\x07\u0113\u0BEB\u0BEA',
			'\u0BEB\u0BEC\u0BEC\u0BED',
			'\u0BED\u0BF3\x07\u0123\u0BEE\u0BF0\x07\u0113',
			'\u0BEF\u0BEE\u0BEF\u0BF0',
			'\u0BF0\u0BF1\u0BF1\u0BF3\x07\u0125',
			'\u0BF2\u0BC7\u0BF2\u0BCC',
			'\u0BF2\u0BD1\u0BF2\u0BD7',
			'\u0BF2\u0BDB\u0BF2\u0BDF',
			'\u0BF2\u0BE3\u0BF2\u0BE7',
			'\u0BF2\u0BEB\u0BF2\u0BEF',
			'\u0BF3\u0113\u0BF4\u0BF5\x07\xF5',
			'\u0BF5\u0BFC\xE8u\u0BF6\u0BFC"\u0BF7',
			'\u0BFC\xE6t\u0BF8\u0BF9	,\u0BF9\u0BFA\x07',
			'\x98\u0BFA\u0BFC\x07\x99\u0BFB\u0BF4',
			'\u0BFB\u0BF6\u0BFB\u0BF7',
			'\u0BFB\u0BF8\u0BFC\u0115',
			'\u0BFD\u0BFE	-\u0BFE\u0117',
			'\u0BFF\u0C00	.\u0C00\u0119',
			'\u0C01\u0C02	/\u0C02\u011B',
			'\u0193\u0120\u0139\u013E\u0146\u014E\u0150\u0164\u0168\u016E\u0171\u0174',
			'\u017B\u017E\u0182\u0185\u018C\u0197\u0199\u01A1\u01A4\u01A8\u01AB\u01B1',
			'\u01BC\u01C2\u01C7\u0207\u0210\u0214\u021A\u021E\u0223\u0229\u0235\u023D',
			'\u0243\u0250\u0255\u0265\u026C\u0270\u0276\u0285\u0289\u028F\u0295\u0298',
			'\u029B\u02A1\u02A5\u02AD\u02AF\u02B8\u02BB\u02C4\u02C9\u02CF\u02D6\u02D9',
			'\u02DF\u02EA\u02ED\u02F1\u02F6\u02FB\u0302\u0305\u0308\u030F\u0314\u031D',
			'\u0325\u032B\u032E\u0331\u0337\u033B\u033F\u0343\u0345\u034D\u0355\u035B',
			'\u0361\u0364\u0368\u036B\u036F\u038B\u038E\u0392\u0398\u039B\u039E\u03A4',
			'\u03AC\u03B1\u03B7\u03BD\u03C5\u03CD\u03D0\u03D7\u03E8\u03F6\u03F9\u03FF',
			'\u0408\u0411\u0418\u041B\u0427\u042B\u0432\u04A6\u04AE\u04B6\u04BF\u04C9',
			'\u04CD\u04D0\u04D6\u04DC\u04E8\u04F4\u04F9\u0502\u050A\u0511\u0513\u0516',
			'\u051B\u051F\u0524\u0527\u052C\u0531\u0534\u0539\u053D\u0542\u0544\u0548',
			'\u0551\u0559\u0562\u0569\u0572\u0577\u057A\u0590\u0592\u059B\u05A2\u05A5',
			'\u05AC\u05B0\u05B6\u05BE\u05C9\u05D4\u05DB\u05E1\u05EE\u05F5\u05FC\u0608',
			'\u0610\u0616\u0619\u0622\u0625\u062E\u0631\u063A\u063D\u0646\u0649\u064C',
			'\u0651\u0653\u065F\u0666\u066D\u0670\u0672\u067E\u0682\u0686\u068C\u0690',
			'\u0698\u069C\u069F\u06A2\u06A5\u06A9\u06AD\u06B0\u06B4\u06B9\u06BD\u06C0',
			'\u06C3\u06C6\u06C8\u06D4\u06D7\u06DB\u06E5\u06E9\u06EB\u06EE\u06F2\u06F8',
			'\u06FC\u0707\u0711\u071D\u072C\u0731\u0738\u0748\u074D\u075A\u075F\u0767',
			'\u076D\u0771\u077A\u0784\u0793\u0798\u079A\u079E\u07A4\u07AC\u07B7\u07BA',
			'\u07BE\u07CC\u07D9\u07DE\u07E2\u07E5\u07EA\u07F3\u07F6\u07FB\u0802\u0805',
			'\u080D\u0814\u081B\u081E\u0823\u0826\u082B\u082F\u0832\u0835\u083B\u0840',
			'\u0845\u0857\u0859\u085C\u0867\u0870\u0877\u087F\u0886\u088A\u0892\u089A',
			'\u08A0\u08A8\u08B4\u08B7\u08BD\u08C1\u08C3\u08CC\u08D8\u08DA\u08E1\u08E8',
			'\u08EE\u08F4\u08F6\u08FD\u0905\u090B\u0912\u0918\u091C\u091E\u0925\u092E',
			'\u0935\u093F\u0944\u0948\u0956\u0958\u0960\u0962\u0966\u096E\u0977\u097D',
			'\u0985\u098A\u0996\u099B\u099E\u09A4\u09A8\u09AD\u09B2\u09B7\u09BD\u09D2',
			'\u09D4\u09DD\u09E1\u09EA\u09EE\u0A00\u0A03\u0A0B\u0A14\u0A2B\u0A36\u0A3D',
			'\u0A40\u0A49\u0A4D\u0A51\u0A5D\u0A76\u0A7D\u0A80\u0A8F\u0A93\u0A9D\u0A9F',
			'\u0AAC\u0AAE\u0ABB\u0ABF\u0AC6\u0ACB\u0AD3\u0AD7\u0ADC\u0AED\u0AF1\u0AFA',
			'\u0AFE\u0B00\u0B07\u0B0E\u0B11\u0B14\u0B1B\u0B22\u0B25\u0B2C\u0B34\u0B37',
			'\u0B44\u0B58\u0B62\u0B65\u0B6E\u0B71\u0B73\u0B76\u0B79\u0B8B\u0B94\u0B9B',
			'\u0BA2\u0BA9\u0BB3\u0BB6\u0BBB\u0BC3\u0BC9\u0BCE\u0BD3\u0BD7\u0BDB\u0BDF',
			'\u0BE3\u0BE7\u0BEB\u0BEF\u0BF2\u0BFB',
		].join(''),
		$f = new p.atn.ATNDeserializer().deserialize(N9),
		P9 = $f.decisionToState.map(function (u, e) {
			return new p.dfa.DFA(u, e);
		}),
		g9 = new p.PredictionContextCache(),
		D9 = [
			null,
			"';'",
			"'('",
			"')'",
			"','",
			"'.'",
			"'/*+'",
			"'*/'",
			"'->'",
			"'['",
			"']'",
			"':'",
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			"'<=>'",
			"'<>'",
			"'!='",
			"'<'",
			null,
			"'>'",
			null,
			"'+'",
			"'-'",
			"'*'",
			"'/'",
			"'%'",
			"'~'",
			"'&'",
			"'|'",
			"'||'",
			"'^'",
		],
		U9 = [
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			'ADD',
			'AFTER',
			'ALL',
			'ALTER',
			'ANALYZE',
			'AND',
			'ANTI',
			'ANY',
			'ARCHIVE',
			'ARRAY',
			'AS',
			'ASC',
			'AT',
			'AUTHORIZATION',
			'BETWEEN',
			'BOTH',
			'BUCKET',
			'BUCKETS',
			'BY',
			'CACHE',
			'CASCADE',
			'CASE',
			'CAST',
			'CHANGE',
			'CHECK',
			'CLEAR',
			'CLUSTER',
			'CLUSTERED',
			'CODEGEN',
			'COLLATE',
			'COLLECTION',
			'COLUMN',
			'COLUMNS',
			'COMMENT',
			'COMMIT',
			'COMPACT',
			'COMPACTIONS',
			'COMPUTE',
			'CONCATENATE',
			'CONSTRAINT',
			'COST',
			'CREATE',
			'CROSS',
			'CUBE',
			'CURRENT',
			'CURRENT_DATE',
			'CURRENT_TIME',
			'CURRENT_TIMESTAMP',
			'CURRENT_USER',
			'DATA',
			'DATABASE',
			'DATABASES',
			'DBPROPERTIES',
			'DEFINED',
			'DELETE',
			'DELIMITED',
			'DESC',
			'DESCRIBE',
			'DFS',
			'DIRECTORIES',
			'DIRECTORY',
			'DISTINCT',
			'DISTRIBUTE',
			'DIV',
			'DROP',
			'ELSE',
			'END',
			'ESCAPE',
			'ESCAPED',
			'EXCEPT',
			'EXCHANGE',
			'EXISTS',
			'EXPLAIN',
			'EXPORT',
			'EXTENDED',
			'EXTERNAL',
			'EXTRACT',
			'FALSE',
			'FETCH',
			'FIELDS',
			'FILTER',
			'FILEFORMAT',
			'FIRST',
			'FOLLOWING',
			'FOR',
			'FOREIGN',
			'FORMAT',
			'FORMATTED',
			'FROM',
			'FULL',
			'FUNCTION',
			'FUNCTIONS',
			'GLOBAL',
			'GRANT',
			'GROUP',
			'GROUPING',
			'HAVING',
			'IF',
			'IGNORE',
			'IMPORT',
			'IN',
			'INDEX',
			'INDEXES',
			'INNER',
			'INPATH',
			'INPUTFORMAT',
			'INSERT',
			'INTERSECT',
			'INTERVAL',
			'INTO',
			'IS',
			'ITEMS',
			'JOIN',
			'KEYS',
			'LAST',
			'LATERAL',
			'LAZY',
			'LEADING',
			'LEFT',
			'LIKE',
			'LIMIT',
			'LINES',
			'LIST',
			'LOAD',
			'LOCAL',
			'LOCATION',
			'LOCK',
			'LOCKS',
			'LOGICAL',
			'MACRO',
			'MAP',
			'MATCHED',
			'MERGE',
			'MSCK',
			'NAMESPACE',
			'NAMESPACES',
			'NATURAL',
			'NO',
			'NOT',
			'NULL',
			'NULLS',
			'OF',
			'ON',
			'ONLY',
			'OPTION',
			'OPTIONS',
			'OR',
			'ORDER',
			'OUT',
			'OUTER',
			'OUTPUTFORMAT',
			'OVER',
			'OVERLAPS',
			'OVERLAY',
			'OVERWRITE',
			'PARTITION',
			'PARTITIONED',
			'PARTITIONS',
			'PERCENTLIT',
			'PIVOT',
			'PLACING',
			'POSITION',
			'PRECEDING',
			'PRIMARY',
			'PRINCIPALS',
			'PROPERTIES',
			'PURGE',
			'QUERY',
			'RANGE',
			'RECORDREADER',
			'RECORDWRITER',
			'RECOVER',
			'REDUCE',
			'REFERENCES',
			'REFRESH',
			'RENAME',
			'REPAIR',
			'REPLACE',
			'RESET',
			'RESPECT',
			'RESTRICT',
			'REVOKE',
			'RIGHT',
			'RLIKE',
			'ROLE',
			'ROLES',
			'ROLLBACK',
			'ROLLUP',
			'ROW',
			'ROWS',
			'SCHEMA',
			'SELECT',
			'SEMI',
			'SEPARATED',
			'SERDE',
			'SERDEPROPERTIES',
			'SESSION_USER',
			'SET',
			'SETMINUS',
			'SETS',
			'SHOW',
			'SKEWED',
			'SOME',
			'SORT',
			'SORTED',
			'START',
			'STATISTICS',
			'STORED',
			'STRATIFY',
			'STRUCT',
			'SUBSTR',
			'SUBSTRING',
			'SYNC',
			'TABLE',
			'TABLES',
			'TABLESAMPLE',
			'TBLPROPERTIES',
			'TEMPORARY',
			'TERMINATED',
			'THEN',
			'TIME',
			'TO',
			'TOUCH',
			'TRAILING',
			'TRANSACTION',
			'TRANSACTIONS',
			'TRANSFORM',
			'TRIM',
			'TRUE',
			'TRUNCATE',
			'TRY_CAST',
			'TYPE',
			'UNARCHIVE',
			'UNBOUNDED',
			'UNCACHE',
			'UNION',
			'UNIQUE',
			'UNKNOWN',
			'UNLOCK',
			'UNSET',
			'UPDATE',
			'USE',
			'USER',
			'USING',
			'VALUES',
			'VIEW',
			'VIEWS',
			'WHEN',
			'WHERE',
			'WINDOW',
			'WITH',
			'ZONE',
			'EQ',
			'NSEQ',
			'NEQ',
			'NEQJ',
			'LT',
			'LTE',
			'GT',
			'GTE',
			'PLUS',
			'MINUS',
			'ASTERISK',
			'SLASH',
			'PERCENT',
			'TILDE',
			'AMPERSAND',
			'PIPE',
			'CONCAT_PIPE',
			'HAT',
			'STRING',
			'BIGINT_LITERAL',
			'SMALLINT_LITERAL',
			'TINYINT_LITERAL',
			'INTEGER_VALUE',
			'EXPONENT_VALUE',
			'DECIMAL_VALUE',
			'FLOAT_LITERAL',
			'DOUBLE_LITERAL',
			'BIGDECIMAL_LITERAL',
			'IDENTIFIER',
			'BACKQUOTED_IDENTIFIER',
			'SIMPLE_COMMENT',
			'BRACKETED_COMMENT',
			'WS',
			'UNRECOGNIZED',
		],
		v9 = [
			'singleStatement',
			'singleExpression',
			'singleTableIdentifier',
			'singleMultipartIdentifier',
			'singleFunctionIdentifier',
			'singleDataType',
			'singleTableSchema',
			'statement',
			'configKey',
			'configValue',
			'unsupportedHiveNativeCommands',
			'createTableHeader',
			'replaceTableHeader',
			'bucketSpec',
			'skewSpec',
			'locationSpec',
			'commentSpec',
			'query',
			'insertInto',
			'partitionSpecLocation',
			'partitionSpec',
			'partitionVal',
			'namespace',
			'describeFuncName',
			'describeColName',
			'ctes',
			'namedQuery',
			'tableProvider',
			'createTableClauses',
			'tablePropertyList',
			'tableProperty',
			'tablePropertyKey',
			'tablePropertyValue',
			'constantList',
			'nestedConstantList',
			'createFileFormat',
			'fileFormat',
			'storageHandler',
			'resource',
			'dmlStatementNoWith',
			'queryOrganization',
			'multiInsertQueryBody',
			'queryTerm',
			'queryPrimary',
			'sortItem',
			'fromStatement',
			'fromStatementBody',
			'querySpecification',
			'transformClause',
			'selectClause',
			'setClause',
			'matchedClause',
			'notMatchedClause',
			'matchedAction',
			'notMatchedAction',
			'assignmentList',
			'assignment',
			'whereClause',
			'havingClause',
			'hint',
			'hintStatement',
			'fromClause',
			'aggregationClause',
			'groupByClause',
			'groupingAnalytics',
			'groupingSet',
			'pivotClause',
			'pivotColumn',
			'pivotValue',
			'lateralView',
			'setQuantifier',
			'relation',
			'joinRelation',
			'joinType',
			'joinCriteria',
			'sample',
			'sampleMethod',
			'identifierList',
			'identifierSeq',
			'orderedIdentifierList',
			'orderedIdentifier',
			'identifierCommentList',
			'identifierComment',
			'relationPrimary',
			'inlineTable',
			'functionTable',
			'tableAlias',
			'rowFormat',
			'multipartIdentifierList',
			'multipartIdentifier',
			'tableIdentifier',
			'functionIdentifier',
			'namedExpression',
			'namedExpressionSeq',
			'partitionFieldList',
			'partitionField',
			'transform',
			'transformArgument',
			'expression',
			'booleanExpression',
			'predicate',
			'valueExpression',
			'primaryExpression',
			'constant',
			'comparisonOperator',
			'arithmeticOperator',
			'predicateOperator',
			'booleanValue',
			'interval',
			'errorCapturingMultiUnitsInterval',
			'multiUnitsInterval',
			'errorCapturingUnitToUnitInterval',
			'unitToUnitInterval',
			'intervalValue',
			'colPosition',
			'dataType',
			'qualifiedColTypeWithPositionList',
			'qualifiedColTypeWithPosition',
			'colTypeList',
			'colType',
			'complexColTypeList',
			'complexColType',
			'whenClause',
			'windowClause',
			'namedWindow',
			'windowSpec',
			'windowFrame',
			'frameBound',
			'qualifiedNameList',
			'functionName',
			'qualifiedName',
			'errorCapturingIdentifier',
			'errorCapturingIdentifierExtra',
			'identifier',
			'strictIdentifier',
			'quotedIdentifier',
			'number',
			'alterColumnAction',
			'ansiNonReserved',
			'strictNonReserved',
			'nonReserved',
		];
	function r(u) {
		return (
			p.Parser.call(this, u),
			(this._interp = new p.atn.ParserATNSimulator(this, $f, P9, g9)),
			(this.ruleNames = v9),
			(this.literalNames = D9),
			(this.symbolicNames = U9),
			this
		);
	}
	r.prototype = Object.create(p.Parser.prototype);
	r.prototype.constructor = r;
	Object.defineProperty(r.prototype, 'atn', {
		get: function () {
			return $f;
		},
	});
	r.EOF = p.Token.EOF;
	r.T__0 = 1;
	r.T__1 = 2;
	r.T__2 = 3;
	r.T__3 = 4;
	r.T__4 = 5;
	r.T__5 = 6;
	r.T__6 = 7;
	r.T__7 = 8;
	r.T__8 = 9;
	r.T__9 = 10;
	r.T__10 = 11;
	r.ADD = 12;
	r.AFTER = 13;
	r.ALL = 14;
	r.ALTER = 15;
	r.ANALYZE = 16;
	r.AND = 17;
	r.ANTI = 18;
	r.ANY = 19;
	r.ARCHIVE = 20;
	r.ARRAY = 21;
	r.AS = 22;
	r.ASC = 23;
	r.AT = 24;
	r.AUTHORIZATION = 25;
	r.BETWEEN = 26;
	r.BOTH = 27;
	r.BUCKET = 28;
	r.BUCKETS = 29;
	r.BY = 30;
	r.CACHE = 31;
	r.CASCADE = 32;
	r.CASE = 33;
	r.CAST = 34;
	r.CHANGE = 35;
	r.CHECK = 36;
	r.CLEAR = 37;
	r.CLUSTER = 38;
	r.CLUSTERED = 39;
	r.CODEGEN = 40;
	r.COLLATE = 41;
	r.COLLECTION = 42;
	r.COLUMN = 43;
	r.COLUMNS = 44;
	r.COMMENT = 45;
	r.COMMIT = 46;
	r.COMPACT = 47;
	r.COMPACTIONS = 48;
	r.COMPUTE = 49;
	r.CONCATENATE = 50;
	r.CONSTRAINT = 51;
	r.COST = 52;
	r.CREATE = 53;
	r.CROSS = 54;
	r.CUBE = 55;
	r.CURRENT = 56;
	r.CURRENT_DATE = 57;
	r.CURRENT_TIME = 58;
	r.CURRENT_TIMESTAMP = 59;
	r.CURRENT_USER = 60;
	r.DATA = 61;
	r.DATABASE = 62;
	r.DATABASES = 63;
	r.DBPROPERTIES = 64;
	r.DEFINED = 65;
	r.DELETE = 66;
	r.DELIMITED = 67;
	r.DESC = 68;
	r.DESCRIBE = 69;
	r.DFS = 70;
	r.DIRECTORIES = 71;
	r.DIRECTORY = 72;
	r.DISTINCT = 73;
	r.DISTRIBUTE = 74;
	r.DIV = 75;
	r.DROP = 76;
	r.ELSE = 77;
	r.END = 78;
	r.ESCAPE = 79;
	r.ESCAPED = 80;
	r.EXCEPT = 81;
	r.EXCHANGE = 82;
	r.EXISTS = 83;
	r.EXPLAIN = 84;
	r.EXPORT = 85;
	r.EXTENDED = 86;
	r.EXTERNAL = 87;
	r.EXTRACT = 88;
	r.FALSE = 89;
	r.FETCH = 90;
	r.FIELDS = 91;
	r.FILTER = 92;
	r.FILEFORMAT = 93;
	r.FIRST = 94;
	r.FOLLOWING = 95;
	r.FOR = 96;
	r.FOREIGN = 97;
	r.FORMAT = 98;
	r.FORMATTED = 99;
	r.FROM = 100;
	r.FULL = 101;
	r.FUNCTION = 102;
	r.FUNCTIONS = 103;
	r.GLOBAL = 104;
	r.GRANT = 105;
	r.GROUP = 106;
	r.GROUPING = 107;
	r.HAVING = 108;
	r.IF = 109;
	r.IGNORE = 110;
	r.IMPORT = 111;
	r.IN = 112;
	r.INDEX = 113;
	r.INDEXES = 114;
	r.INNER = 115;
	r.INPATH = 116;
	r.INPUTFORMAT = 117;
	r.INSERT = 118;
	r.INTERSECT = 119;
	r.INTERVAL = 120;
	r.INTO = 121;
	r.IS = 122;
	r.ITEMS = 123;
	r.JOIN = 124;
	r.KEYS = 125;
	r.LAST = 126;
	r.LATERAL = 127;
	r.LAZY = 128;
	r.LEADING = 129;
	r.LEFT = 130;
	r.LIKE = 131;
	r.LIMIT = 132;
	r.LINES = 133;
	r.LIST = 134;
	r.LOAD = 135;
	r.LOCAL = 136;
	r.LOCATION = 137;
	r.LOCK = 138;
	r.LOCKS = 139;
	r.LOGICAL = 140;
	r.MACRO = 141;
	r.MAP = 142;
	r.MATCHED = 143;
	r.MERGE = 144;
	r.MSCK = 145;
	r.NAMESPACE = 146;
	r.NAMESPACES = 147;
	r.NATURAL = 148;
	r.NO = 149;
	r.NOT = 150;
	r.NULL = 151;
	r.NULLS = 152;
	r.OF = 153;
	r.ON = 154;
	r.ONLY = 155;
	r.OPTION = 156;
	r.OPTIONS = 157;
	r.OR = 158;
	r.ORDER = 159;
	r.OUT = 160;
	r.OUTER = 161;
	r.OUTPUTFORMAT = 162;
	r.OVER = 163;
	r.OVERLAPS = 164;
	r.OVERLAY = 165;
	r.OVERWRITE = 166;
	r.PARTITION = 167;
	r.PARTITIONED = 168;
	r.PARTITIONS = 169;
	r.PERCENTLIT = 170;
	r.PIVOT = 171;
	r.PLACING = 172;
	r.POSITION = 173;
	r.PRECEDING = 174;
	r.PRIMARY = 175;
	r.PRINCIPALS = 176;
	r.PROPERTIES = 177;
	r.PURGE = 178;
	r.QUERY = 179;
	r.RANGE = 180;
	r.RECORDREADER = 181;
	r.RECORDWRITER = 182;
	r.RECOVER = 183;
	r.REDUCE = 184;
	r.REFERENCES = 185;
	r.REFRESH = 186;
	r.RENAME = 187;
	r.REPAIR = 188;
	r.REPLACE = 189;
	r.RESET = 190;
	r.RESPECT = 191;
	r.RESTRICT = 192;
	r.REVOKE = 193;
	r.RIGHT = 194;
	r.RLIKE = 195;
	r.ROLE = 196;
	r.ROLES = 197;
	r.ROLLBACK = 198;
	r.ROLLUP = 199;
	r.ROW = 200;
	r.ROWS = 201;
	r.SCHEMA = 202;
	r.SELECT = 203;
	r.SEMI = 204;
	r.SEPARATED = 205;
	r.SERDE = 206;
	r.SERDEPROPERTIES = 207;
	r.SESSION_USER = 208;
	r.SET = 209;
	r.SETMINUS = 210;
	r.SETS = 211;
	r.SHOW = 212;
	r.SKEWED = 213;
	r.SOME = 214;
	r.SORT = 215;
	r.SORTED = 216;
	r.START = 217;
	r.STATISTICS = 218;
	r.STORED = 219;
	r.STRATIFY = 220;
	r.STRUCT = 221;
	r.SUBSTR = 222;
	r.SUBSTRING = 223;
	r.SYNC = 224;
	r.TABLE = 225;
	r.TABLES = 226;
	r.TABLESAMPLE = 227;
	r.TBLPROPERTIES = 228;
	r.TEMPORARY = 229;
	r.TERMINATED = 230;
	r.THEN = 231;
	r.TIME = 232;
	r.TO = 233;
	r.TOUCH = 234;
	r.TRAILING = 235;
	r.TRANSACTION = 236;
	r.TRANSACTIONS = 237;
	r.TRANSFORM = 238;
	r.TRIM = 239;
	r.TRUE = 240;
	r.TRUNCATE = 241;
	r.TRY_CAST = 242;
	r.TYPE = 243;
	r.UNARCHIVE = 244;
	r.UNBOUNDED = 245;
	r.UNCACHE = 246;
	r.UNION = 247;
	r.UNIQUE = 248;
	r.UNKNOWN = 249;
	r.UNLOCK = 250;
	r.UNSET = 251;
	r.UPDATE = 252;
	r.USE = 253;
	r.USER = 254;
	r.USING = 255;
	r.VALUES = 256;
	r.VIEW = 257;
	r.VIEWS = 258;
	r.WHEN = 259;
	r.WHERE = 260;
	r.WINDOW = 261;
	r.WITH = 262;
	r.ZONE = 263;
	r.EQ = 264;
	r.NSEQ = 265;
	r.NEQ = 266;
	r.NEQJ = 267;
	r.LT = 268;
	r.LTE = 269;
	r.GT = 270;
	r.GTE = 271;
	r.PLUS = 272;
	r.MINUS = 273;
	r.ASTERISK = 274;
	r.SLASH = 275;
	r.PERCENT = 276;
	r.TILDE = 277;
	r.AMPERSAND = 278;
	r.PIPE = 279;
	r.CONCAT_PIPE = 280;
	r.HAT = 281;
	r.STRING = 282;
	r.BIGINT_LITERAL = 283;
	r.SMALLINT_LITERAL = 284;
	r.TINYINT_LITERAL = 285;
	r.INTEGER_VALUE = 286;
	r.EXPONENT_VALUE = 287;
	r.DECIMAL_VALUE = 288;
	r.FLOAT_LITERAL = 289;
	r.DOUBLE_LITERAL = 290;
	r.BIGDECIMAL_LITERAL = 291;
	r.IDENTIFIER = 292;
	r.BACKQUOTED_IDENTIFIER = 293;
	r.SIMPLE_COMMENT = 294;
	r.BRACKETED_COMMENT = 295;
	r.WS = 296;
	r.UNRECOGNIZED = 297;
	r.RULE_singleStatement = 0;
	r.RULE_singleExpression = 1;
	r.RULE_singleTableIdentifier = 2;
	r.RULE_singleMultipartIdentifier = 3;
	r.RULE_singleFunctionIdentifier = 4;
	r.RULE_singleDataType = 5;
	r.RULE_singleTableSchema = 6;
	r.RULE_statement = 7;
	r.RULE_configKey = 8;
	r.RULE_configValue = 9;
	r.RULE_unsupportedHiveNativeCommands = 10;
	r.RULE_createTableHeader = 11;
	r.RULE_replaceTableHeader = 12;
	r.RULE_bucketSpec = 13;
	r.RULE_skewSpec = 14;
	r.RULE_locationSpec = 15;
	r.RULE_commentSpec = 16;
	r.RULE_query = 17;
	r.RULE_insertInto = 18;
	r.RULE_partitionSpecLocation = 19;
	r.RULE_partitionSpec = 20;
	r.RULE_partitionVal = 21;
	r.RULE_namespace = 22;
	r.RULE_describeFuncName = 23;
	r.RULE_describeColName = 24;
	r.RULE_ctes = 25;
	r.RULE_namedQuery = 26;
	r.RULE_tableProvider = 27;
	r.RULE_createTableClauses = 28;
	r.RULE_tablePropertyList = 29;
	r.RULE_tableProperty = 30;
	r.RULE_tablePropertyKey = 31;
	r.RULE_tablePropertyValue = 32;
	r.RULE_constantList = 33;
	r.RULE_nestedConstantList = 34;
	r.RULE_createFileFormat = 35;
	r.RULE_fileFormat = 36;
	r.RULE_storageHandler = 37;
	r.RULE_resource = 38;
	r.RULE_dmlStatementNoWith = 39;
	r.RULE_queryOrganization = 40;
	r.RULE_multiInsertQueryBody = 41;
	r.RULE_queryTerm = 42;
	r.RULE_queryPrimary = 43;
	r.RULE_sortItem = 44;
	r.RULE_fromStatement = 45;
	r.RULE_fromStatementBody = 46;
	r.RULE_querySpecification = 47;
	r.RULE_transformClause = 48;
	r.RULE_selectClause = 49;
	r.RULE_setClause = 50;
	r.RULE_matchedClause = 51;
	r.RULE_notMatchedClause = 52;
	r.RULE_matchedAction = 53;
	r.RULE_notMatchedAction = 54;
	r.RULE_assignmentList = 55;
	r.RULE_assignment = 56;
	r.RULE_whereClause = 57;
	r.RULE_havingClause = 58;
	r.RULE_hint = 59;
	r.RULE_hintStatement = 60;
	r.RULE_fromClause = 61;
	r.RULE_aggregationClause = 62;
	r.RULE_groupByClause = 63;
	r.RULE_groupingAnalytics = 64;
	r.RULE_groupingSet = 65;
	r.RULE_pivotClause = 66;
	r.RULE_pivotColumn = 67;
	r.RULE_pivotValue = 68;
	r.RULE_lateralView = 69;
	r.RULE_setQuantifier = 70;
	r.RULE_relation = 71;
	r.RULE_joinRelation = 72;
	r.RULE_joinType = 73;
	r.RULE_joinCriteria = 74;
	r.RULE_sample = 75;
	r.RULE_sampleMethod = 76;
	r.RULE_identifierList = 77;
	r.RULE_identifierSeq = 78;
	r.RULE_orderedIdentifierList = 79;
	r.RULE_orderedIdentifier = 80;
	r.RULE_identifierCommentList = 81;
	r.RULE_identifierComment = 82;
	r.RULE_relationPrimary = 83;
	r.RULE_inlineTable = 84;
	r.RULE_functionTable = 85;
	r.RULE_tableAlias = 86;
	r.RULE_rowFormat = 87;
	r.RULE_multipartIdentifierList = 88;
	r.RULE_multipartIdentifier = 89;
	r.RULE_tableIdentifier = 90;
	r.RULE_functionIdentifier = 91;
	r.RULE_namedExpression = 92;
	r.RULE_namedExpressionSeq = 93;
	r.RULE_partitionFieldList = 94;
	r.RULE_partitionField = 95;
	r.RULE_transform = 96;
	r.RULE_transformArgument = 97;
	r.RULE_expression = 98;
	r.RULE_booleanExpression = 99;
	r.RULE_predicate = 100;
	r.RULE_valueExpression = 101;
	r.RULE_primaryExpression = 102;
	r.RULE_constant = 103;
	r.RULE_comparisonOperator = 104;
	r.RULE_arithmeticOperator = 105;
	r.RULE_predicateOperator = 106;
	r.RULE_booleanValue = 107;
	r.RULE_interval = 108;
	r.RULE_errorCapturingMultiUnitsInterval = 109;
	r.RULE_multiUnitsInterval = 110;
	r.RULE_errorCapturingUnitToUnitInterval = 111;
	r.RULE_unitToUnitInterval = 112;
	r.RULE_intervalValue = 113;
	r.RULE_colPosition = 114;
	r.RULE_dataType = 115;
	r.RULE_qualifiedColTypeWithPositionList = 116;
	r.RULE_qualifiedColTypeWithPosition = 117;
	r.RULE_colTypeList = 118;
	r.RULE_colType = 119;
	r.RULE_complexColTypeList = 120;
	r.RULE_complexColType = 121;
	r.RULE_whenClause = 122;
	r.RULE_windowClause = 123;
	r.RULE_namedWindow = 124;
	r.RULE_windowSpec = 125;
	r.RULE_windowFrame = 126;
	r.RULE_frameBound = 127;
	r.RULE_qualifiedNameList = 128;
	r.RULE_functionName = 129;
	r.RULE_qualifiedName = 130;
	r.RULE_errorCapturingIdentifier = 131;
	r.RULE_errorCapturingIdentifierExtra = 132;
	r.RULE_identifier = 133;
	r.RULE_strictIdentifier = 134;
	r.RULE_quotedIdentifier = 135;
	r.RULE_number = 136;
	r.RULE_alterColumnAction = 137;
	r.RULE_ansiNonReserved = 138;
	r.RULE_strictNonReserved = 139;
	r.RULE_nonReserved = 140;
	function jp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_singleStatement),
			this
		);
	}
	jp.prototype = Object.create(p.ParserRuleContext.prototype);
	jp.prototype.constructor = jp;
	jp.prototype.statement = function () {
		return this.getTypedRuleContext(C, 0);
	};
	jp.prototype.EOF = function () {
		return this.getToken(r.EOF, 0);
	};
	jp.prototype.accept = function (u) {
		return u instanceof R ? u.visitSingleStatement(this) : u.visitChildren(this);
	};
	r.SingleStatementContext = jp;
	r.prototype.singleStatement = function () {
		var u = new jp(this, this._ctx, this.state);
		this.enterRule(u, 0, r.RULE_singleStatement);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 282,
					this.statement(),
					this.state = 286,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__0;

			)
				(this.state = 283),
					this.match(r.T__0),
					(this.state = 288),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 289), this.match(r.EOF);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Xp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_singleExpression),
			this
		);
	}
	Xp.prototype = Object.create(p.ParserRuleContext.prototype);
	Xp.prototype.constructor = Xp;
	Xp.prototype.namedExpression = function () {
		return this.getTypedRuleContext($u, 0);
	};
	Xp.prototype.EOF = function () {
		return this.getToken(r.EOF, 0);
	};
	Xp.prototype.accept = function (u) {
		return u instanceof R ? u.visitSingleExpression(this) : u.visitChildren(this);
	};
	r.SingleExpressionContext = Xp;
	r.prototype.singleExpression = function () {
		var u = new Xp(this, this._ctx, this.state);
		this.enterRule(u, 2, r.RULE_singleExpression);
		try {
			this.enterOuterAlt(u, 1), (this.state = 291), this.namedExpression(), (this.state = 292), this.match(r.EOF);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Qp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_singleTableIdentifier),
			this
		);
	}
	Qp.prototype = Object.create(p.ParserRuleContext.prototype);
	Qp.prototype.constructor = Qp;
	Qp.prototype.tableIdentifier = function () {
		return this.getTypedRuleContext(Xr, 0);
	};
	Qp.prototype.EOF = function () {
		return this.getToken(r.EOF, 0);
	};
	Qp.prototype.accept = function (u) {
		return u instanceof R ? u.visitSingleTableIdentifier(this) : u.visitChildren(this);
	};
	r.SingleTableIdentifierContext = Qp;
	r.prototype.singleTableIdentifier = function () {
		var u = new Qp(this, this._ctx, this.state);
		this.enterRule(u, 4, r.RULE_singleTableIdentifier);
		try {
			this.enterOuterAlt(u, 1), (this.state = 294), this.tableIdentifier(), (this.state = 295), this.match(r.EOF);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_singleMultipartIdentifier),
			this
		);
	}
	qp.prototype = Object.create(p.ParserRuleContext.prototype);
	qp.prototype.constructor = qp;
	qp.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	qp.prototype.EOF = function () {
		return this.getToken(r.EOF, 0);
	};
	qp.prototype.accept = function (u) {
		return u instanceof R ? u.visitSingleMultipartIdentifier(this) : u.visitChildren(this);
	};
	r.SingleMultipartIdentifierContext = qp;
	r.prototype.singleMultipartIdentifier = function () {
		var u = new qp(this, this._ctx, this.state);
		this.enterRule(u, 6, r.RULE_singleMultipartIdentifier);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 297),
				this.multipartIdentifier(),
				(this.state = 298),
				this.match(r.EOF);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Zp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_singleFunctionIdentifier),
			this
		);
	}
	Zp.prototype = Object.create(p.ParserRuleContext.prototype);
	Zp.prototype.constructor = Zp;
	Zp.prototype.functionIdentifier = function () {
		return this.getTypedRuleContext(l3, 0);
	};
	Zp.prototype.EOF = function () {
		return this.getToken(r.EOF, 0);
	};
	Zp.prototype.accept = function (u) {
		return u instanceof R ? u.visitSingleFunctionIdentifier(this) : u.visitChildren(this);
	};
	r.SingleFunctionIdentifierContext = Zp;
	r.prototype.singleFunctionIdentifier = function () {
		var u = new Zp(this, this._ctx, this.state);
		this.enterRule(u, 8, r.RULE_singleFunctionIdentifier);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 300),
				this.functionIdentifier(),
				(this.state = 301),
				this.match(r.EOF);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Jp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_singleDataType),
			this
		);
	}
	Jp.prototype = Object.create(p.ParserRuleContext.prototype);
	Jp.prototype.constructor = Jp;
	Jp.prototype.dataType = function () {
		return this.getTypedRuleContext(l0, 0);
	};
	Jp.prototype.EOF = function () {
		return this.getToken(r.EOF, 0);
	};
	Jp.prototype.accept = function (u) {
		return u instanceof R ? u.visitSingleDataType(this) : u.visitChildren(this);
	};
	r.SingleDataTypeContext = Jp;
	r.prototype.singleDataType = function () {
		var u = new Jp(this, this._ctx, this.state);
		this.enterRule(u, 10, r.RULE_singleDataType);
		try {
			this.enterOuterAlt(u, 1), (this.state = 303), this.dataType(), (this.state = 304), this.match(r.EOF);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function zp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_singleTableSchema),
			this
		);
	}
	zp.prototype = Object.create(p.ParserRuleContext.prototype);
	zp.prototype.constructor = zp;
	zp.prototype.colTypeList = function () {
		return this.getTypedRuleContext(Jr, 0);
	};
	zp.prototype.EOF = function () {
		return this.getToken(r.EOF, 0);
	};
	zp.prototype.accept = function (u) {
		return u instanceof R ? u.visitSingleTableSchema(this) : u.visitChildren(this);
	};
	r.SingleTableSchemaContext = zp;
	r.prototype.singleTableSchema = function () {
		var u = new zp(this, this._ctx, this.state);
		this.enterRule(u, 12, r.RULE_singleTableSchema);
		try {
			this.enterOuterAlt(u, 1), (this.state = 306), this.colTypeList(), (this.state = 307), this.match(r.EOF);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function C(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_statement),
			this
		);
	}
	C.prototype = Object.create(p.ParserRuleContext.prototype);
	C.prototype.constructor = C;
	C.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function bi(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	bi.prototype = Object.create(C.prototype);
	bi.prototype.constructor = bi;
	r.ExplainContext = bi;
	bi.prototype.EXPLAIN = function () {
		return this.getToken(r.EXPLAIN, 0);
	};
	bi.prototype.statement = function () {
		return this.getTypedRuleContext(C, 0);
	};
	bi.prototype.LOGICAL = function () {
		return this.getToken(r.LOGICAL, 0);
	};
	bi.prototype.FORMATTED = function () {
		return this.getToken(r.FORMATTED, 0);
	};
	bi.prototype.EXTENDED = function () {
		return this.getToken(r.EXTENDED, 0);
	};
	bi.prototype.CODEGEN = function () {
		return this.getToken(r.CODEGEN, 0);
	};
	bi.prototype.COST = function () {
		return this.getToken(r.COST, 0);
	};
	bi.prototype.accept = function (u) {
		return u instanceof R ? u.visitExplain(this) : u.visitChildren(this);
	};
	function kh(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	kh.prototype = Object.create(C.prototype);
	kh.prototype.constructor = kh;
	r.ResetConfigurationContext = kh;
	kh.prototype.RESET = function () {
		return this.getToken(r.RESET, 0);
	};
	kh.prototype.accept = function (u) {
		return u instanceof R ? u.visitResetConfiguration(this) : u.visitChildren(this);
	};
	function fs(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	fs.prototype = Object.create(C.prototype);
	fs.prototype.constructor = fs;
	r.AlterViewQueryContext = fs;
	fs.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	fs.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	fs.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	fs.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	fs.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	fs.prototype.accept = function (u) {
		return u instanceof R ? u.visitAlterViewQuery(this) : u.visitChildren(this);
	};
	function j1(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	j1.prototype = Object.create(C.prototype);
	j1.prototype.constructor = j1;
	r.UseContext = j1;
	j1.prototype.USE = function () {
		return this.getToken(r.USE, 0);
	};
	j1.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	j1.prototype.NAMESPACE = function () {
		return this.getToken(r.NAMESPACE, 0);
	};
	j1.prototype.accept = function (u) {
		return u instanceof R ? u.visitUse(this) : u.visitChildren(this);
	};
	function Ai(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Ai.prototype = Object.create(C.prototype);
	Ai.prototype.constructor = Ai;
	r.DropNamespaceContext = Ai;
	Ai.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	Ai.prototype.namespace = function () {
		return this.getTypedRuleContext(Zt, 0);
	};
	Ai.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ai.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	Ai.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	Ai.prototype.RESTRICT = function () {
		return this.getToken(r.RESTRICT, 0);
	};
	Ai.prototype.CASCADE = function () {
		return this.getToken(r.CASCADE, 0);
	};
	Ai.prototype.accept = function (u) {
		return u instanceof R ? u.visitDropNamespace(this) : u.visitChildren(this);
	};
	function ju(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	ju.prototype = Object.create(C.prototype);
	ju.prototype.constructor = ju;
	r.CreateTempViewUsingContext = ju;
	ju.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	ju.prototype.TEMPORARY = function () {
		return this.getToken(r.TEMPORARY, 0);
	};
	ju.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	ju.prototype.tableIdentifier = function () {
		return this.getTypedRuleContext(Xr, 0);
	};
	ju.prototype.tableProvider = function () {
		return this.getTypedRuleContext(we, 0);
	};
	ju.prototype.OR = function () {
		return this.getToken(r.OR, 0);
	};
	ju.prototype.REPLACE = function () {
		return this.getToken(r.REPLACE, 0);
	};
	ju.prototype.GLOBAL = function () {
		return this.getToken(r.GLOBAL, 0);
	};
	ju.prototype.colTypeList = function () {
		return this.getTypedRuleContext(Jr, 0);
	};
	ju.prototype.OPTIONS = function () {
		return this.getToken(r.OPTIONS, 0);
	};
	ju.prototype.tablePropertyList = function () {
		return this.getTypedRuleContext(m0, 0);
	};
	ju.prototype.accept = function (u) {
		return u instanceof R ? u.visitCreateTempViewUsing(this) : u.visitChildren(this);
	};
	function Ir(u, e) {
		return C.call(this, u), (this.from = null), (this.to = null), C.prototype.copyFrom.call(this, e), this;
	}
	Ir.prototype = Object.create(C.prototype);
	Ir.prototype.constructor = Ir;
	r.RenameTableContext = Ir;
	Ir.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Ir.prototype.RENAME = function () {
		return this.getToken(r.RENAME, 0);
	};
	Ir.prototype.TO = function () {
		return this.getToken(r.TO, 0);
	};
	Ir.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Ir.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	Ir.prototype.multipartIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(D) : this.getTypedRuleContext(D, u);
	};
	Ir.prototype.accept = function (u) {
		return u instanceof R ? u.visitRenameTable(this) : u.visitChildren(this);
	};
	function ma(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	ma.prototype = Object.create(C.prototype);
	ma.prototype.constructor = ma;
	r.FailNativeCommandContext = ma;
	ma.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	ma.prototype.ROLE = function () {
		return this.getToken(r.ROLE, 0);
	};
	ma.prototype.unsupportedHiveNativeCommands = function () {
		return this.getTypedRuleContext(v, 0);
	};
	ma.prototype.accept = function (u) {
		return u instanceof R ? u.visitFailNativeCommand(this) : u.visitChildren(this);
	};
	function $p(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	$p.prototype = Object.create(C.prototype);
	$p.prototype.constructor = $p;
	r.ClearCacheContext = $p;
	$p.prototype.CLEAR = function () {
		return this.getToken(r.CLEAR, 0);
	};
	$p.prototype.CACHE = function () {
		return this.getToken(r.CACHE, 0);
	};
	$p.prototype.accept = function (u) {
		return u instanceof R ? u.visitClearCache(this) : u.visitChildren(this);
	};
	function _s(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	_s.prototype = Object.create(C.prototype);
	_s.prototype.constructor = _s;
	r.DropViewContext = _s;
	_s.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	_s.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	_s.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	_s.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	_s.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	_s.prototype.accept = function (u) {
		return u instanceof R ? u.visitDropView(this) : u.visitChildren(this);
	};
	function Wi(u, e) {
		return C.call(this, u), (this.pattern = null), C.prototype.copyFrom.call(this, e), this;
	}
	Wi.prototype = Object.create(C.prototype);
	Wi.prototype.constructor = Wi;
	r.ShowTablesContext = Wi;
	Wi.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	Wi.prototype.TABLES = function () {
		return this.getToken(r.TABLES, 0);
	};
	Wi.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Wi.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	Wi.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	Wi.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Wi.prototype.LIKE = function () {
		return this.getToken(r.LIKE, 0);
	};
	Wi.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowTables(this) : u.visitChildren(this);
	};
	function Es(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Es.prototype = Object.create(C.prototype);
	Es.prototype.constructor = Es;
	r.RecoverPartitionsContext = Es;
	Es.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Es.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Es.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Es.prototype.RECOVER = function () {
		return this.getToken(r.RECOVER, 0);
	};
	Es.prototype.PARTITIONS = function () {
		return this.getToken(r.PARTITIONS, 0);
	};
	Es.prototype.accept = function (u) {
		return u instanceof R ? u.visitRecoverPartitions(this) : u.visitChildren(this);
	};
	function X1(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	X1.prototype = Object.create(C.prototype);
	X1.prototype.constructor = X1;
	r.ShowCurrentNamespaceContext = X1;
	X1.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	X1.prototype.CURRENT = function () {
		return this.getToken(r.CURRENT, 0);
	};
	X1.prototype.NAMESPACE = function () {
		return this.getToken(r.NAMESPACE, 0);
	};
	X1.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowCurrentNamespace(this) : u.visitChildren(this);
	};
	function Nr(u, e) {
		return C.call(this, u), (this.from = null), (this.to = null), C.prototype.copyFrom.call(this, e), this;
	}
	Nr.prototype = Object.create(C.prototype);
	Nr.prototype.constructor = Nr;
	r.RenameTablePartitionContext = Nr;
	Nr.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Nr.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Nr.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Nr.prototype.RENAME = function () {
		return this.getToken(r.RENAME, 0);
	};
	Nr.prototype.TO = function () {
		return this.getToken(r.TO, 0);
	};
	Nr.prototype.partitionSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(f0) : this.getTypedRuleContext(f0, u);
	};
	Nr.prototype.accept = function (u) {
		return u instanceof R ? u.visitRenameTablePartition(this) : u.visitChildren(this);
	};
	function Le(u, e) {
		return C.call(this, u), (this.option = null), C.prototype.copyFrom.call(this, e), this;
	}
	Le.prototype = Object.create(C.prototype);
	Le.prototype.constructor = Le;
	r.RepairTableContext = Le;
	Le.prototype.MSCK = function () {
		return this.getToken(r.MSCK, 0);
	};
	Le.prototype.REPAIR = function () {
		return this.getToken(r.REPAIR, 0);
	};
	Le.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Le.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Le.prototype.PARTITIONS = function () {
		return this.getToken(r.PARTITIONS, 0);
	};
	Le.prototype.ADD = function () {
		return this.getToken(r.ADD, 0);
	};
	Le.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	Le.prototype.SYNC = function () {
		return this.getToken(r.SYNC, 0);
	};
	Le.prototype.accept = function (u) {
		return u instanceof R ? u.visitRepairTable(this) : u.visitChildren(this);
	};
	function u3(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	u3.prototype = Object.create(C.prototype);
	u3.prototype.constructor = u3;
	r.RefreshResourceContext = u3;
	u3.prototype.REFRESH = function () {
		return this.getToken(r.REFRESH, 0);
	};
	u3.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	u3.prototype.accept = function (u) {
		return u instanceof R ? u.visitRefreshResource(this) : u.visitChildren(this);
	};
	function Pr(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Pr.prototype = Object.create(C.prototype);
	Pr.prototype.constructor = Pr;
	r.ShowCreateTableContext = Pr;
	Pr.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	Pr.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	Pr.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Pr.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Pr.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	Pr.prototype.SERDE = function () {
		return this.getToken(r.SERDE, 0);
	};
	Pr.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowCreateTable(this) : u.visitChildren(this);
	};
	function Se(u, e) {
		return C.call(this, u), (this.pattern = null), C.prototype.copyFrom.call(this, e), this;
	}
	Se.prototype = Object.create(C.prototype);
	Se.prototype.constructor = Se;
	r.ShowNamespacesContext = Se;
	Se.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	Se.prototype.DATABASES = function () {
		return this.getToken(r.DATABASES, 0);
	};
	Se.prototype.NAMESPACES = function () {
		return this.getToken(r.NAMESPACES, 0);
	};
	Se.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Se.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	Se.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	Se.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Se.prototype.LIKE = function () {
		return this.getToken(r.LIKE, 0);
	};
	Se.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowNamespaces(this) : u.visitChildren(this);
	};
	function Ts(u, e) {
		return C.call(this, u), (this.table = null), (this.ns = null), C.prototype.copyFrom.call(this, e), this;
	}
	Ts.prototype = Object.create(C.prototype);
	Ts.prototype.constructor = Ts;
	r.ShowColumnsContext = Ts;
	Ts.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	Ts.prototype.COLUMNS = function () {
		return this.getToken(r.COLUMNS, 0);
	};
	Ts.prototype.FROM = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.FROM) : this.getToken(r.FROM, u);
	};
	Ts.prototype.IN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.IN) : this.getToken(r.IN, u);
	};
	Ts.prototype.multipartIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(D) : this.getTypedRuleContext(D, u);
	};
	Ts.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowColumns(this) : u.visitChildren(this);
	};
	function gr(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	gr.prototype = Object.create(C.prototype);
	gr.prototype.constructor = gr;
	r.ReplaceTableContext = gr;
	gr.prototype.replaceTableHeader = function () {
		return this.getTypedRuleContext(Fr, 0);
	};
	gr.prototype.createTableClauses = function () {
		return this.getTypedRuleContext($0, 0);
	};
	gr.prototype.colTypeList = function () {
		return this.getTypedRuleContext(Jr, 0);
	};
	gr.prototype.tableProvider = function () {
		return this.getTypedRuleContext(we, 0);
	};
	gr.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	gr.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	gr.prototype.accept = function (u) {
		return u instanceof R ? u.visitReplaceTable(this) : u.visitChildren(this);
	};
	function Ie(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Ie.prototype = Object.create(C.prototype);
	Ie.prototype.constructor = Ie;
	r.AnalyzeTablesContext = Ie;
	Ie.prototype.ANALYZE = function () {
		return this.getToken(r.ANALYZE, 0);
	};
	Ie.prototype.TABLES = function () {
		return this.getToken(r.TABLES, 0);
	};
	Ie.prototype.COMPUTE = function () {
		return this.getToken(r.COMPUTE, 0);
	};
	Ie.prototype.STATISTICS = function () {
		return this.getToken(r.STATISTICS, 0);
	};
	Ie.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ie.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Ie.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	Ie.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	Ie.prototype.accept = function (u) {
		return u instanceof R ? u.visitAnalyzeTables(this) : u.visitChildren(this);
	};
	function Bt(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Bt.prototype = Object.create(C.prototype);
	Bt.prototype.constructor = Bt;
	r.AddTablePartitionContext = Bt;
	Bt.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Bt.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Bt.prototype.ADD = function () {
		return this.getToken(r.ADD, 0);
	};
	Bt.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Bt.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	Bt.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	Bt.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	Bt.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	Bt.prototype.partitionSpecLocation = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ka) : this.getTypedRuleContext(Ka, u);
	};
	Bt.prototype.accept = function (u) {
		return u instanceof R ? u.visitAddTablePartition(this) : u.visitChildren(this);
	};
	function Rs(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Rs.prototype = Object.create(C.prototype);
	Rs.prototype.constructor = Rs;
	r.SetNamespaceLocationContext = Rs;
	Rs.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Rs.prototype.namespace = function () {
		return this.getTypedRuleContext(Zt, 0);
	};
	Rs.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Rs.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	Rs.prototype.locationSpec = function () {
		return this.getTypedRuleContext(Zu, 0);
	};
	Rs.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetNamespaceLocation(this) : u.visitChildren(this);
	};
	function Q1(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Q1.prototype = Object.create(C.prototype);
	Q1.prototype.constructor = Q1;
	r.RefreshTableContext = Q1;
	Q1.prototype.REFRESH = function () {
		return this.getToken(r.REFRESH, 0);
	};
	Q1.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Q1.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Q1.prototype.accept = function (u) {
		return u instanceof R ? u.visitRefreshTable(this) : u.visitChildren(this);
	};
	function Ki(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Ki.prototype = Object.create(C.prototype);
	Ki.prototype.constructor = Ki;
	r.SetNamespacePropertiesContext = Ki;
	Ki.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Ki.prototype.namespace = function () {
		return this.getTypedRuleContext(Zt, 0);
	};
	Ki.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ki.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	Ki.prototype.tablePropertyList = function () {
		return this.getTypedRuleContext(m0, 0);
	};
	Ki.prototype.DBPROPERTIES = function () {
		return this.getToken(r.DBPROPERTIES, 0);
	};
	Ki.prototype.PROPERTIES = function () {
		return this.getToken(r.PROPERTIES, 0);
	};
	Ki.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetNamespaceProperties(this) : u.visitChildren(this);
	};
	function ya(u, e) {
		return C.call(this, u), (this.op = null), C.prototype.copyFrom.call(this, e), this;
	}
	ya.prototype = Object.create(C.prototype);
	ya.prototype.constructor = ya;
	r.ManageResourceContext = ya;
	ya.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	ya.prototype.ADD = function () {
		return this.getToken(r.ADD, 0);
	};
	ya.prototype.LIST = function () {
		return this.getToken(r.LIST, 0);
	};
	ya.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	ya.prototype.accept = function (u) {
		return u instanceof R ? u.visitManageResource(this) : u.visitChildren(this);
	};
	function Sr(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Sr.prototype = Object.create(C.prototype);
	Sr.prototype.constructor = Sr;
	r.SetQuotedConfigurationContext = Sr;
	Sr.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	Sr.prototype.configKey = function () {
		return this.getTypedRuleContext(Z1, 0);
	};
	Sr.prototype.EQ = function () {
		return this.getToken(r.EQ, 0);
	};
	Sr.prototype.configValue = function () {
		return this.getTypedRuleContext(i3, 0);
	};
	Sr.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetQuotedConfiguration(this) : u.visitChildren(this);
	};
	function Xu(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Xu.prototype = Object.create(C.prototype);
	Xu.prototype.constructor = Xu;
	r.AnalyzeContext = Xu;
	Xu.prototype.ANALYZE = function () {
		return this.getToken(r.ANALYZE, 0);
	};
	Xu.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Xu.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Xu.prototype.COMPUTE = function () {
		return this.getToken(r.COMPUTE, 0);
	};
	Xu.prototype.STATISTICS = function () {
		return this.getToken(r.STATISTICS, 0);
	};
	Xu.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Xu.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Xu.prototype.FOR = function () {
		return this.getToken(r.FOR, 0);
	};
	Xu.prototype.COLUMNS = function () {
		return this.getToken(r.COLUMNS, 0);
	};
	Xu.prototype.identifierSeq = function () {
		return this.getTypedRuleContext(Ua, 0);
	};
	Xu.prototype.ALL = function () {
		return this.getToken(r.ALL, 0);
	};
	Xu.prototype.accept = function (u) {
		return u instanceof R ? u.visitAnalyze(this) : u.visitChildren(this);
	};
	function hu(u, e) {
		return C.call(this, u), (this.className = null), C.prototype.copyFrom.call(this, e), this;
	}
	hu.prototype = Object.create(C.prototype);
	hu.prototype.constructor = hu;
	r.CreateFunctionContext = hu;
	hu.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	hu.prototype.FUNCTION = function () {
		return this.getToken(r.FUNCTION, 0);
	};
	hu.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	hu.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	hu.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	hu.prototype.OR = function () {
		return this.getToken(r.OR, 0);
	};
	hu.prototype.REPLACE = function () {
		return this.getToken(r.REPLACE, 0);
	};
	hu.prototype.TEMPORARY = function () {
		return this.getToken(r.TEMPORARY, 0);
	};
	hu.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	hu.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	hu.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	hu.prototype.USING = function () {
		return this.getToken(r.USING, 0);
	};
	hu.prototype.resource = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Sa) : this.getTypedRuleContext(Sa, u);
	};
	hu.prototype.accept = function (u) {
		return u instanceof R ? u.visitCreateFunction(this) : u.visitChildren(this);
	};
	function xi(u, e) {
		return C.call(this, u), (this.table = null), (this.columns = null), C.prototype.copyFrom.call(this, e), this;
	}
	xi.prototype = Object.create(C.prototype);
	xi.prototype.constructor = xi;
	r.HiveReplaceColumnsContext = xi;
	xi.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	xi.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	xi.prototype.REPLACE = function () {
		return this.getToken(r.REPLACE, 0);
	};
	xi.prototype.COLUMNS = function () {
		return this.getToken(r.COLUMNS, 0);
	};
	xi.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	xi.prototype.qualifiedColTypeWithPositionList = function () {
		return this.getTypedRuleContext(fc, 0);
	};
	xi.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	xi.prototype.accept = function (u) {
		return u instanceof R ? u.visitHiveReplaceColumns(this) : u.visitChildren(this);
	};
	function Oi(u, e) {
		return C.call(this, u), (this.comment = null), C.prototype.copyFrom.call(this, e), this;
	}
	Oi.prototype = Object.create(C.prototype);
	Oi.prototype.constructor = Oi;
	r.CommentNamespaceContext = Oi;
	Oi.prototype.COMMENT = function () {
		return this.getToken(r.COMMENT, 0);
	};
	Oi.prototype.ON = function () {
		return this.getToken(r.ON, 0);
	};
	Oi.prototype.namespace = function () {
		return this.getTypedRuleContext(Zt, 0);
	};
	Oi.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Oi.prototype.IS = function () {
		return this.getToken(r.IS, 0);
	};
	Oi.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Oi.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	Oi.prototype.accept = function (u) {
		return u instanceof R ? u.visitCommentNamespace(this) : u.visitChildren(this);
	};
	function t3(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	t3.prototype = Object.create(C.prototype);
	t3.prototype.constructor = t3;
	r.ResetQuotedConfigurationContext = t3;
	t3.prototype.RESET = function () {
		return this.getToken(r.RESET, 0);
	};
	t3.prototype.configKey = function () {
		return this.getTypedRuleContext(Z1, 0);
	};
	t3.prototype.accept = function (u) {
		return u instanceof R ? u.visitResetQuotedConfiguration(this) : u.visitChildren(this);
	};
	function Dr(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Dr.prototype = Object.create(C.prototype);
	Dr.prototype.constructor = Dr;
	r.CreateTableContext = Dr;
	Dr.prototype.createTableHeader = function () {
		return this.getTypedRuleContext(Xt, 0);
	};
	Dr.prototype.createTableClauses = function () {
		return this.getTypedRuleContext($0, 0);
	};
	Dr.prototype.colTypeList = function () {
		return this.getTypedRuleContext(Jr, 0);
	};
	Dr.prototype.tableProvider = function () {
		return this.getTypedRuleContext(we, 0);
	};
	Dr.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	Dr.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	Dr.prototype.accept = function (u) {
		return u instanceof R ? u.visitCreateTable(this) : u.visitChildren(this);
	};
	function e3(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	e3.prototype = Object.create(C.prototype);
	e3.prototype.constructor = e3;
	r.DmlStatementContext = e3;
	e3.prototype.dmlStatementNoWith = function () {
		return this.getTypedRuleContext(D0, 0);
	};
	e3.prototype.ctes = function () {
		return this.getTypedRuleContext(xa, 0);
	};
	e3.prototype.accept = function (u) {
		return u instanceof R ? u.visitDmlStatement(this) : u.visitChildren(this);
	};
	function lu(u, e) {
		return (
			C.call(this, u),
			(this.target = null),
			(this.source = null),
			(this.tableProps = null),
			C.prototype.copyFrom.call(this, e),
			this
		);
	}
	lu.prototype = Object.create(C.prototype);
	lu.prototype.constructor = lu;
	r.CreateTableLikeContext = lu;
	lu.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	lu.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	lu.prototype.LIKE = function () {
		return this.getToken(r.LIKE, 0);
	};
	lu.prototype.tableIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Xr) : this.getTypedRuleContext(Xr, u);
	};
	lu.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	lu.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	lu.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	lu.prototype.tableProvider = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(we) : this.getTypedRuleContext(we, u);
	};
	lu.prototype.rowFormat = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Tu) : this.getTypedRuleContext(Tu, u);
	};
	lu.prototype.createFileFormat = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ct) : this.getTypedRuleContext(Ct, u);
	};
	lu.prototype.locationSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Zu) : this.getTypedRuleContext(Zu, u);
	};
	lu.prototype.TBLPROPERTIES = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(r.TBLPROPERTIES) : this.getToken(r.TBLPROPERTIES, u)
		);
	};
	lu.prototype.tablePropertyList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(m0) : this.getTypedRuleContext(m0, u);
	};
	lu.prototype.accept = function (u) {
		return u instanceof R ? u.visitCreateTableLike(this) : u.visitChildren(this);
	};
	function ms(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	ms.prototype = Object.create(C.prototype);
	ms.prototype.constructor = ms;
	r.UncacheTableContext = ms;
	ms.prototype.UNCACHE = function () {
		return this.getToken(r.UNCACHE, 0);
	};
	ms.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	ms.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	ms.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	ms.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	ms.prototype.accept = function (u) {
		return u instanceof R ? u.visitUncacheTable(this) : u.visitChildren(this);
	};
	function Ur(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Ur.prototype = Object.create(C.prototype);
	Ur.prototype.constructor = Ur;
	r.DropFunctionContext = Ur;
	Ur.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	Ur.prototype.FUNCTION = function () {
		return this.getToken(r.FUNCTION, 0);
	};
	Ur.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ur.prototype.TEMPORARY = function () {
		return this.getToken(r.TEMPORARY, 0);
	};
	Ur.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	Ur.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	Ur.prototype.accept = function (u) {
		return u instanceof R ? u.visitDropFunction(this) : u.visitChildren(this);
	};
	function Ne(u, e) {
		return C.call(this, u), (this.option = null), C.prototype.copyFrom.call(this, e), this;
	}
	Ne.prototype = Object.create(C.prototype);
	Ne.prototype.constructor = Ne;
	r.DescribeRelationContext = Ne;
	Ne.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ne.prototype.DESC = function () {
		return this.getToken(r.DESC, 0);
	};
	Ne.prototype.DESCRIBE = function () {
		return this.getToken(r.DESCRIBE, 0);
	};
	Ne.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Ne.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Ne.prototype.describeColName = function () {
		return this.getTypedRuleContext(r3, 0);
	};
	Ne.prototype.EXTENDED = function () {
		return this.getToken(r.EXTENDED, 0);
	};
	Ne.prototype.FORMATTED = function () {
		return this.getToken(r.FORMATTED, 0);
	};
	Ne.prototype.accept = function (u) {
		return u instanceof R ? u.visitDescribeRelation(this) : u.visitChildren(this);
	};
	function mt(u, e) {
		return C.call(this, u), (this.path = null), C.prototype.copyFrom.call(this, e), this;
	}
	mt.prototype = Object.create(C.prototype);
	mt.prototype.constructor = mt;
	r.LoadDataContext = mt;
	mt.prototype.LOAD = function () {
		return this.getToken(r.LOAD, 0);
	};
	mt.prototype.DATA = function () {
		return this.getToken(r.DATA, 0);
	};
	mt.prototype.INPATH = function () {
		return this.getToken(r.INPATH, 0);
	};
	mt.prototype.INTO = function () {
		return this.getToken(r.INTO, 0);
	};
	mt.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	mt.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	mt.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	mt.prototype.LOCAL = function () {
		return this.getToken(r.LOCAL, 0);
	};
	mt.prototype.OVERWRITE = function () {
		return this.getToken(r.OVERWRITE, 0);
	};
	mt.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	mt.prototype.accept = function (u) {
		return u instanceof R ? u.visitLoadData(this) : u.visitChildren(this);
	};
	function Ca(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Ca.prototype = Object.create(C.prototype);
	Ca.prototype.constructor = Ca;
	r.ShowPartitionsContext = Ca;
	Ca.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	Ca.prototype.PARTITIONS = function () {
		return this.getToken(r.PARTITIONS, 0);
	};
	Ca.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ca.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Ca.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowPartitions(this) : u.visitChildren(this);
	};
	function ys(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	ys.prototype = Object.create(C.prototype);
	ys.prototype.constructor = ys;
	r.DescribeFunctionContext = ys;
	ys.prototype.FUNCTION = function () {
		return this.getToken(r.FUNCTION, 0);
	};
	ys.prototype.describeFuncName = function () {
		return this.getTypedRuleContext(kr, 0);
	};
	ys.prototype.DESC = function () {
		return this.getToken(r.DESC, 0);
	};
	ys.prototype.DESCRIBE = function () {
		return this.getToken(r.DESCRIBE, 0);
	};
	ys.prototype.EXTENDED = function () {
		return this.getToken(r.EXTENDED, 0);
	};
	ys.prototype.accept = function (u) {
		return u instanceof R ? u.visitDescribeFunction(this) : u.visitChildren(this);
	};
	function Li(u, e) {
		return (
			C.call(this, u),
			(this.table = null),
			(this.from = null),
			(this.to = null),
			C.prototype.copyFrom.call(this, e),
			this
		);
	}
	Li.prototype = Object.create(C.prototype);
	Li.prototype.constructor = Li;
	r.RenameTableColumnContext = Li;
	Li.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Li.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Li.prototype.RENAME = function () {
		return this.getToken(r.RENAME, 0);
	};
	Li.prototype.COLUMN = function () {
		return this.getToken(r.COLUMN, 0);
	};
	Li.prototype.TO = function () {
		return this.getToken(r.TO, 0);
	};
	Li.prototype.multipartIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(D) : this.getTypedRuleContext(D, u);
	};
	Li.prototype.errorCapturingIdentifier = function () {
		return this.getTypedRuleContext(y0, 0);
	};
	Li.prototype.accept = function (u) {
		return u instanceof R ? u.visitRenameTableColumn(this) : u.visitChildren(this);
	};
	function Vh(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Vh.prototype = Object.create(C.prototype);
	Vh.prototype.constructor = Vh;
	r.StatementDefaultContext = Vh;
	Vh.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	Vh.prototype.accept = function (u) {
		return u instanceof R ? u.visitStatementDefault(this) : u.visitChildren(this);
	};
	function Pe(u, e) {
		return C.call(this, u), (this.table = null), (this.colName = null), C.prototype.copyFrom.call(this, e), this;
	}
	Pe.prototype = Object.create(C.prototype);
	Pe.prototype.constructor = Pe;
	r.HiveChangeColumnContext = Pe;
	Pe.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Pe.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Pe.prototype.CHANGE = function () {
		return this.getToken(r.CHANGE, 0);
	};
	Pe.prototype.colType = function () {
		return this.getTypedRuleContext($t, 0);
	};
	Pe.prototype.multipartIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(D) : this.getTypedRuleContext(D, u);
	};
	Pe.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Pe.prototype.COLUMN = function () {
		return this.getToken(r.COLUMN, 0);
	};
	Pe.prototype.colPosition = function () {
		return this.getTypedRuleContext(Zr, 0);
	};
	Pe.prototype.accept = function (u) {
		return u instanceof R ? u.visitHiveChangeColumn(this) : u.visitChildren(this);
	};
	function xe(u, e) {
		return C.call(this, u), (this.timezone = null), C.prototype.copyFrom.call(this, e), this;
	}
	xe.prototype = Object.create(C.prototype);
	xe.prototype.constructor = xe;
	r.SetTimeZoneContext = xe;
	xe.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	xe.prototype.TIME = function () {
		return this.getToken(r.TIME, 0);
	};
	xe.prototype.ZONE = function () {
		return this.getToken(r.ZONE, 0);
	};
	xe.prototype.interval = function () {
		return this.getTypedRuleContext(Bs, 0);
	};
	xe.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	xe.prototype.LOCAL = function () {
		return this.getToken(r.LOCAL, 0);
	};
	xe.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetTimeZone(this) : u.visitChildren(this);
	};
	function ba(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	ba.prototype = Object.create(C.prototype);
	ba.prototype.constructor = ba;
	r.DescribeQueryContext = ba;
	ba.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	ba.prototype.DESC = function () {
		return this.getToken(r.DESC, 0);
	};
	ba.prototype.DESCRIBE = function () {
		return this.getToken(r.DESCRIBE, 0);
	};
	ba.prototype.QUERY = function () {
		return this.getToken(r.QUERY, 0);
	};
	ba.prototype.accept = function (u) {
		return u instanceof R ? u.visitDescribeQuery(this) : u.visitChildren(this);
	};
	function Aa(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Aa.prototype = Object.create(C.prototype);
	Aa.prototype.constructor = Aa;
	r.TruncateTableContext = Aa;
	Aa.prototype.TRUNCATE = function () {
		return this.getToken(r.TRUNCATE, 0);
	};
	Aa.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Aa.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Aa.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Aa.prototype.accept = function (u) {
		return u instanceof R ? u.visitTruncateTable(this) : u.visitChildren(this);
	};
	function Qu(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Qu.prototype = Object.create(C.prototype);
	Qu.prototype.constructor = Qu;
	r.SetTableSerDeContext = Qu;
	Qu.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Qu.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Qu.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Qu.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	Qu.prototype.SERDE = function () {
		return this.getToken(r.SERDE, 0);
	};
	Qu.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Qu.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Qu.prototype.WITH = function () {
		return this.getToken(r.WITH, 0);
	};
	Qu.prototype.SERDEPROPERTIES = function () {
		return this.getToken(r.SERDEPROPERTIES, 0);
	};
	Qu.prototype.tablePropertyList = function () {
		return this.getTypedRuleContext(m0, 0);
	};
	Qu.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetTableSerDe(this) : u.visitChildren(this);
	};
	function E0(u, e) {
		return C.call(this, u), (this.selectStmt = null), C.prototype.copyFrom.call(this, e), this;
	}
	E0.prototype = Object.create(C.prototype);
	E0.prototype.constructor = E0;
	r.CreateViewContext = E0;
	E0.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	E0.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	E0.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	E0.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	E0.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	E0.prototype.OR = function () {
		return this.getToken(r.OR, 0);
	};
	E0.prototype.REPLACE = function () {
		return this.getToken(r.REPLACE, 0);
	};
	E0.prototype.TEMPORARY = function () {
		return this.getToken(r.TEMPORARY, 0);
	};
	E0.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	E0.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	E0.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	E0.prototype.identifierCommentList = function () {
		return this.getTypedRuleContext(h3, 0);
	};
	E0.prototype.commentSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(du) : this.getTypedRuleContext(du, u);
	};
	E0.prototype.PARTITIONED = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.PARTITIONED) : this.getToken(r.PARTITIONED, u);
	};
	E0.prototype.ON = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.ON) : this.getToken(r.ON, u);
	};
	E0.prototype.identifierList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(zu) : this.getTypedRuleContext(zu, u);
	};
	E0.prototype.TBLPROPERTIES = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(r.TBLPROPERTIES) : this.getToken(r.TBLPROPERTIES, u)
		);
	};
	E0.prototype.tablePropertyList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(m0) : this.getTypedRuleContext(m0, u);
	};
	E0.prototype.GLOBAL = function () {
		return this.getToken(r.GLOBAL, 0);
	};
	E0.prototype.accept = function (u) {
		return u instanceof R ? u.visitCreateView(this) : u.visitChildren(this);
	};
	function Yt(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Yt.prototype = Object.create(C.prototype);
	Yt.prototype.constructor = Yt;
	r.DropTablePartitionsContext = Yt;
	Yt.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Yt.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Yt.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	Yt.prototype.partitionSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(f0) : this.getTypedRuleContext(f0, u);
	};
	Yt.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Yt.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	Yt.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	Yt.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	Yt.prototype.PURGE = function () {
		return this.getToken(r.PURGE, 0);
	};
	Yt.prototype.accept = function (u) {
		return u instanceof R ? u.visitDropTablePartitions(this) : u.visitChildren(this);
	};
	function Bh(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Bh.prototype = Object.create(C.prototype);
	Bh.prototype.constructor = Bh;
	r.SetConfigurationContext = Bh;
	Bh.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	Bh.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetConfiguration(this) : u.visitChildren(this);
	};
	function vr(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	vr.prototype = Object.create(C.prototype);
	vr.prototype.constructor = vr;
	r.DropTableContext = vr;
	vr.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	vr.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	vr.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	vr.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	vr.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	vr.prototype.PURGE = function () {
		return this.getToken(r.PURGE, 0);
	};
	vr.prototype.accept = function (u) {
		return u instanceof R ? u.visitDropTable(this) : u.visitChildren(this);
	};
	function Gt(u, e) {
		return C.call(this, u), (this.ns = null), (this.pattern = null), C.prototype.copyFrom.call(this, e), this;
	}
	Gt.prototype = Object.create(C.prototype);
	Gt.prototype.constructor = Gt;
	r.ShowTableExtendedContext = Gt;
	Gt.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	Gt.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Gt.prototype.EXTENDED = function () {
		return this.getToken(r.EXTENDED, 0);
	};
	Gt.prototype.LIKE = function () {
		return this.getToken(r.LIKE, 0);
	};
	Gt.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Gt.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Gt.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	Gt.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	Gt.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Gt.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowTableExtended(this) : u.visitChildren(this);
	};
	function Cs(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Cs.prototype = Object.create(C.prototype);
	Cs.prototype.constructor = Cs;
	r.DescribeNamespaceContext = Cs;
	Cs.prototype.namespace = function () {
		return this.getTypedRuleContext(Zt, 0);
	};
	Cs.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Cs.prototype.DESC = function () {
		return this.getToken(r.DESC, 0);
	};
	Cs.prototype.DESCRIBE = function () {
		return this.getToken(r.DESCRIBE, 0);
	};
	Cs.prototype.EXTENDED = function () {
		return this.getToken(r.EXTENDED, 0);
	};
	Cs.prototype.accept = function (u) {
		return u instanceof R ? u.visitDescribeNamespace(this) : u.visitChildren(this);
	};
	function wr(u, e) {
		return C.call(this, u), (this.table = null), (this.column = null), C.prototype.copyFrom.call(this, e), this;
	}
	wr.prototype = Object.create(C.prototype);
	wr.prototype.constructor = wr;
	r.AlterTableAlterColumnContext = wr;
	wr.prototype.ALTER = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.ALTER) : this.getToken(r.ALTER, u);
	};
	wr.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	wr.prototype.multipartIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(D) : this.getTypedRuleContext(D, u);
	};
	wr.prototype.CHANGE = function () {
		return this.getToken(r.CHANGE, 0);
	};
	wr.prototype.COLUMN = function () {
		return this.getToken(r.COLUMN, 0);
	};
	wr.prototype.alterColumnAction = function () {
		return this.getTypedRuleContext(te, 0);
	};
	wr.prototype.accept = function (u) {
		return u instanceof R ? u.visitAlterTableAlterColumn(this) : u.visitChildren(this);
	};
	function q1(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	q1.prototype = Object.create(C.prototype);
	q1.prototype.constructor = q1;
	r.RefreshFunctionContext = q1;
	q1.prototype.REFRESH = function () {
		return this.getToken(r.REFRESH, 0);
	};
	q1.prototype.FUNCTION = function () {
		return this.getToken(r.FUNCTION, 0);
	};
	q1.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	q1.prototype.accept = function (u) {
		return u instanceof R ? u.visitRefreshFunction(this) : u.visitChildren(this);
	};
	function Si(u, e) {
		return C.call(this, u), (this.comment = null), C.prototype.copyFrom.call(this, e), this;
	}
	Si.prototype = Object.create(C.prototype);
	Si.prototype.constructor = Si;
	r.CommentTableContext = Si;
	Si.prototype.COMMENT = function () {
		return this.getToken(r.COMMENT, 0);
	};
	Si.prototype.ON = function () {
		return this.getToken(r.ON, 0);
	};
	Si.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Si.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Si.prototype.IS = function () {
		return this.getToken(r.IS, 0);
	};
	Si.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Si.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	Si.prototype.accept = function (u) {
		return u instanceof R ? u.visitCommentTable(this) : u.visitChildren(this);
	};
	function Ou(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Ou.prototype = Object.create(C.prototype);
	Ou.prototype.constructor = Ou;
	r.CreateNamespaceContext = Ou;
	Ou.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	Ou.prototype.namespace = function () {
		return this.getTypedRuleContext(Zt, 0);
	};
	Ou.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ou.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	Ou.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	Ou.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	Ou.prototype.commentSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(du) : this.getTypedRuleContext(du, u);
	};
	Ou.prototype.locationSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Zu) : this.getTypedRuleContext(Zu, u);
	};
	Ou.prototype.WITH = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.WITH) : this.getToken(r.WITH, u);
	};
	Ou.prototype.tablePropertyList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(m0) : this.getTypedRuleContext(m0, u);
	};
	Ou.prototype.DBPROPERTIES = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(r.DBPROPERTIES) : this.getToken(r.DBPROPERTIES, u)
		);
	};
	Ou.prototype.PROPERTIES = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.PROPERTIES) : this.getToken(r.PROPERTIES, u);
	};
	Ou.prototype.accept = function (u) {
		return u instanceof R ? u.visitCreateNamespace(this) : u.visitChildren(this);
	};
	function Wa(u, e) {
		return C.call(this, u), (this.table = null), (this.key = null), C.prototype.copyFrom.call(this, e), this;
	}
	Wa.prototype = Object.create(C.prototype);
	Wa.prototype.constructor = Wa;
	r.ShowTblPropertiesContext = Wa;
	Wa.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	Wa.prototype.TBLPROPERTIES = function () {
		return this.getToken(r.TBLPROPERTIES, 0);
	};
	Wa.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Wa.prototype.tablePropertyKey = function () {
		return this.getTypedRuleContext(Oa, 0);
	};
	Wa.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowTblProperties(this) : u.visitChildren(this);
	};
	function jt(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	jt.prototype = Object.create(C.prototype);
	jt.prototype.constructor = jt;
	r.UnsetTablePropertiesContext = jt;
	jt.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	jt.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	jt.prototype.UNSET = function () {
		return this.getToken(r.UNSET, 0);
	};
	jt.prototype.TBLPROPERTIES = function () {
		return this.getToken(r.TBLPROPERTIES, 0);
	};
	jt.prototype.tablePropertyList = function () {
		return this.getTypedRuleContext(m0, 0);
	};
	jt.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	jt.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	jt.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	jt.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	jt.prototype.accept = function (u) {
		return u instanceof R ? u.visitUnsetTableProperties(this) : u.visitChildren(this);
	};
	function Mr(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Mr.prototype = Object.create(C.prototype);
	Mr.prototype.constructor = Mr;
	r.SetTableLocationContext = Mr;
	Mr.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Mr.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Mr.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Mr.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	Mr.prototype.locationSpec = function () {
		return this.getTypedRuleContext(Zu, 0);
	};
	Mr.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Mr.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetTableLocation(this) : u.visitChildren(this);
	};
	function ge(u, e) {
		return C.call(this, u), (this.columns = null), C.prototype.copyFrom.call(this, e), this;
	}
	ge.prototype = Object.create(C.prototype);
	ge.prototype.constructor = ge;
	r.DropTableColumnsContext = ge;
	ge.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	ge.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	ge.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	ge.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	ge.prototype.COLUMN = function () {
		return this.getToken(r.COLUMN, 0);
	};
	ge.prototype.COLUMNS = function () {
		return this.getToken(r.COLUMNS, 0);
	};
	ge.prototype.multipartIdentifierList = function () {
		return this.getTypedRuleContext(ac, 0);
	};
	ge.prototype.accept = function (u) {
		return u instanceof R ? u.visitDropTableColumns(this) : u.visitChildren(this);
	};
	function Ii(u, e) {
		return C.call(this, u), (this.pattern = null), C.prototype.copyFrom.call(this, e), this;
	}
	Ii.prototype = Object.create(C.prototype);
	Ii.prototype.constructor = Ii;
	r.ShowViewsContext = Ii;
	Ii.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	Ii.prototype.VIEWS = function () {
		return this.getToken(r.VIEWS, 0);
	};
	Ii.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ii.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	Ii.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	Ii.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Ii.prototype.LIKE = function () {
		return this.getToken(r.LIKE, 0);
	};
	Ii.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowViews(this) : u.visitChildren(this);
	};
	function Hr(u, e) {
		return C.call(this, u), (this.pattern = null), C.prototype.copyFrom.call(this, e), this;
	}
	Hr.prototype = Object.create(C.prototype);
	Hr.prototype.constructor = Hr;
	r.ShowFunctionsContext = Hr;
	Hr.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	Hr.prototype.FUNCTIONS = function () {
		return this.getToken(r.FUNCTIONS, 0);
	};
	Hr.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Hr.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Hr.prototype.LIKE = function () {
		return this.getToken(r.LIKE, 0);
	};
	Hr.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Hr.prototype.accept = function (u) {
		return u instanceof R ? u.visitShowFunctions(this) : u.visitChildren(this);
	};
	function De(u, e) {
		return C.call(this, u), (this.options = null), C.prototype.copyFrom.call(this, e), this;
	}
	De.prototype = Object.create(C.prototype);
	De.prototype.constructor = De;
	r.CacheTableContext = De;
	De.prototype.CACHE = function () {
		return this.getToken(r.CACHE, 0);
	};
	De.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	De.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	De.prototype.LAZY = function () {
		return this.getToken(r.LAZY, 0);
	};
	De.prototype.OPTIONS = function () {
		return this.getToken(r.OPTIONS, 0);
	};
	De.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	De.prototype.tablePropertyList = function () {
		return this.getTypedRuleContext(m0, 0);
	};
	De.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	De.prototype.accept = function (u) {
		return u instanceof R ? u.visitCacheTable(this) : u.visitChildren(this);
	};
	function Ue(u, e) {
		return C.call(this, u), (this.columns = null), C.prototype.copyFrom.call(this, e), this;
	}
	Ue.prototype = Object.create(C.prototype);
	Ue.prototype.constructor = Ue;
	r.AddTableColumnsContext = Ue;
	Ue.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Ue.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Ue.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ue.prototype.ADD = function () {
		return this.getToken(r.ADD, 0);
	};
	Ue.prototype.COLUMN = function () {
		return this.getToken(r.COLUMN, 0);
	};
	Ue.prototype.COLUMNS = function () {
		return this.getToken(r.COLUMNS, 0);
	};
	Ue.prototype.qualifiedColTypeWithPositionList = function () {
		return this.getTypedRuleContext(fc, 0);
	};
	Ue.prototype.accept = function (u) {
		return u instanceof R ? u.visitAddTableColumns(this) : u.visitChildren(this);
	};
	function Ni(u, e) {
		return C.call(this, u), C.prototype.copyFrom.call(this, e), this;
	}
	Ni.prototype = Object.create(C.prototype);
	Ni.prototype.constructor = Ni;
	r.SetTablePropertiesContext = Ni;
	Ni.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	Ni.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ni.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	Ni.prototype.TBLPROPERTIES = function () {
		return this.getToken(r.TBLPROPERTIES, 0);
	};
	Ni.prototype.tablePropertyList = function () {
		return this.getTypedRuleContext(m0, 0);
	};
	Ni.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Ni.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	Ni.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetTableProperties(this) : u.visitChildren(this);
	};
	r.StatementContext = C;
	r.prototype.statement = function () {
		var u = new C(this, this._ctx, this.state);
		this.enterRule(u, 14, r.RULE_statement);
		var e = 0;
		try {
			(this.state = 1049), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 110, this._ctx);
			switch (i) {
				case 1:
					(u = new Vh(this, u)), this.enterOuterAlt(u, 1), (this.state = 309), this.query();
					break;
				case 2:
					(u = new e3(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 311),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.WITH && ((this.state = 310), this.ctes()),
						(this.state = 313),
						this.dmlStatementNoWith();
					break;
				case 3:
					(u = new j1(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 314),
						this.match(r.USE),
						(this.state = 316),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 2, this._ctx);
					i === 1 && ((this.state = 315), this.match(r.NAMESPACE)),
						(this.state = 318),
						this.multipartIdentifier();
					break;
				case 4:
					(u = new Ou(this, u)),
						this.enterOuterAlt(u, 4),
						(this.state = 319),
						this.match(r.CREATE),
						(this.state = 320),
						this.namespace(),
						(this.state = 324),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 3, this._ctx);
					for (
						i === 1 &&
							((this.state = 321),
							this.match(r.IF),
							(this.state = 322),
							this.match(r.NOT),
							(this.state = 323),
							this.match(r.EXISTS)),
							this.state = 326,
							this.multipartIdentifier(),
							this.state = 334,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.COMMENT || e === r.LOCATION || e === r.WITH;

					) {
						switch (((this.state = 332), this._errHandler.sync(this), this._input.LA(1))) {
							case r.COMMENT:
								(this.state = 327), this.commentSpec();
								break;
							case r.LOCATION:
								(this.state = 328), this.locationSpec();
								break;
							case r.WITH:
								(this.state = 329),
									this.match(r.WITH),
									(this.state = 330),
									(e = this._input.LA(1)),
									e === r.DBPROPERTIES || e === r.PROPERTIES
										? (this._errHandler.reportMatch(this), this.consume())
										: this._errHandler.recoverInline(this),
									(this.state = 331),
									this.tablePropertyList();
								break;
							default:
								throw new p.error.NoViableAltException(this);
						}
						(this.state = 336), this._errHandler.sync(this), (e = this._input.LA(1));
					}
					break;
				case 5:
					(u = new Ki(this, u)),
						this.enterOuterAlt(u, 5),
						(this.state = 337),
						this.match(r.ALTER),
						(this.state = 338),
						this.namespace(),
						(this.state = 339),
						this.multipartIdentifier(),
						(this.state = 340),
						this.match(r.SET),
						(this.state = 341),
						(e = this._input.LA(1)),
						e === r.DBPROPERTIES || e === r.PROPERTIES
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 342),
						this.tablePropertyList();
					break;
				case 6:
					(u = new Rs(this, u)),
						this.enterOuterAlt(u, 6),
						(this.state = 344),
						this.match(r.ALTER),
						(this.state = 345),
						this.namespace(),
						(this.state = 346),
						this.multipartIdentifier(),
						(this.state = 347),
						this.match(r.SET),
						(this.state = 348),
						this.locationSpec();
					break;
				case 7:
					(u = new Ai(this, u)),
						this.enterOuterAlt(u, 7),
						(this.state = 350),
						this.match(r.DROP),
						(this.state = 351),
						this.namespace(),
						(this.state = 354),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 6, this._ctx);
					i === 1 && ((this.state = 352), this.match(r.IF), (this.state = 353), this.match(r.EXISTS)),
						(this.state = 356),
						this.multipartIdentifier(),
						(this.state = 358),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.CASCADE || e === r.RESTRICT) &&
							((this.state = 357),
							(e = this._input.LA(1)),
							e === r.CASCADE || e === r.RESTRICT
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this));
					break;
				case 8:
					(u = new Se(this, u)),
						this.enterOuterAlt(u, 8),
						(this.state = 360),
						this.match(r.SHOW),
						(this.state = 361),
						(e = this._input.LA(1)),
						e === r.DATABASES || e === r.NAMESPACES
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 364),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.FROM || e === r.IN) &&
							((this.state = 362),
							(e = this._input.LA(1)),
							e === r.FROM || e === r.IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 363),
							this.multipartIdentifier()),
						(this.state = 370),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.LIKE || e === r.STRING) &&
							((this.state = 367),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === r.LIKE && ((this.state = 366), this.match(r.LIKE)),
							(this.state = 369),
							(u.pattern = this.match(r.STRING)));
					break;
				case 9:
					(u = new Dr(this, u)),
						this.enterOuterAlt(u, 9),
						(this.state = 372),
						this.createTableHeader(),
						(this.state = 377),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 11, this._ctx);
					i === 1 &&
						((this.state = 373),
						this.match(r.T__1),
						(this.state = 374),
						this.colTypeList(),
						(this.state = 375),
						this.match(r.T__2)),
						(this.state = 380),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.USING && ((this.state = 379), this.tableProvider()),
						(this.state = 382),
						this.createTableClauses(),
						(this.state = 387),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.T__1 ||
							e === r.AS ||
							e === r.FROM ||
							e === r.MAP ||
							e === r.REDUCE ||
							e === r.SELECT ||
							e === r.TABLE ||
							e === r.VALUES ||
							e === r.WITH) &&
							((this.state = 384),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === r.AS && ((this.state = 383), this.match(r.AS)),
							(this.state = 386),
							this.query());
					break;
				case 10:
					(u = new lu(this, u)),
						this.enterOuterAlt(u, 10),
						(this.state = 389),
						this.match(r.CREATE),
						(this.state = 390),
						this.match(r.TABLE),
						(this.state = 394),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 15, this._ctx);
					for (
						i === 1 &&
							((this.state = 391),
							this.match(r.IF),
							(this.state = 392),
							this.match(r.NOT),
							(this.state = 393),
							this.match(r.EXISTS)),
							this.state = 396,
							u.target = this.tableIdentifier(),
							this.state = 397,
							this.match(r.LIKE),
							this.state = 398,
							u.source = this.tableIdentifier(),
							this.state = 407,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.LOCATION ||
						(((e - 200) & -32) == 0 &&
							((1 << (e - 200)) &
								((1 << (r.ROW - 200)) | (1 << (r.STORED - 200)) | (1 << (r.TBLPROPERTIES - 200)))) !==
								0) ||
						e === r.USING;

					) {
						switch (((this.state = 405), this._errHandler.sync(this), this._input.LA(1))) {
							case r.USING:
								(this.state = 399), this.tableProvider();
								break;
							case r.ROW:
								(this.state = 400), this.rowFormat();
								break;
							case r.STORED:
								(this.state = 401), this.createFileFormat();
								break;
							case r.LOCATION:
								(this.state = 402), this.locationSpec();
								break;
							case r.TBLPROPERTIES:
								(this.state = 403),
									this.match(r.TBLPROPERTIES),
									(this.state = 404),
									(u.tableProps = this.tablePropertyList());
								break;
							default:
								throw new p.error.NoViableAltException(this);
						}
						(this.state = 409), this._errHandler.sync(this), (e = this._input.LA(1));
					}
					break;
				case 11:
					(u = new gr(this, u)),
						this.enterOuterAlt(u, 11),
						(this.state = 410),
						this.replaceTableHeader(),
						(this.state = 415),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 18, this._ctx);
					i === 1 &&
						((this.state = 411),
						this.match(r.T__1),
						(this.state = 412),
						this.colTypeList(),
						(this.state = 413),
						this.match(r.T__2)),
						(this.state = 418),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.USING && ((this.state = 417), this.tableProvider()),
						(this.state = 420),
						this.createTableClauses(),
						(this.state = 425),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.T__1 ||
							e === r.AS ||
							e === r.FROM ||
							e === r.MAP ||
							e === r.REDUCE ||
							e === r.SELECT ||
							e === r.TABLE ||
							e === r.VALUES ||
							e === r.WITH) &&
							((this.state = 422),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === r.AS && ((this.state = 421), this.match(r.AS)),
							(this.state = 424),
							this.query());
					break;
				case 12:
					(u = new Xu(this, u)),
						this.enterOuterAlt(u, 12),
						(this.state = 427),
						this.match(r.ANALYZE),
						(this.state = 428),
						this.match(r.TABLE),
						(this.state = 429),
						this.multipartIdentifier(),
						(this.state = 431),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 430), this.partitionSpec()),
						(this.state = 433),
						this.match(r.COMPUTE),
						(this.state = 434),
						this.match(r.STATISTICS),
						(this.state = 442),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 23, this._ctx);
					i === 1
						? ((this.state = 435), this.identifier())
						: i === 2
						? ((this.state = 436),
						  this.match(r.FOR),
						  (this.state = 437),
						  this.match(r.COLUMNS),
						  (this.state = 438),
						  this.identifierSeq())
						: i === 3 &&
						  ((this.state = 439),
						  this.match(r.FOR),
						  (this.state = 440),
						  this.match(r.ALL),
						  (this.state = 441),
						  this.match(r.COLUMNS));
					break;
				case 13:
					(u = new Ie(this, u)),
						this.enterOuterAlt(u, 13),
						(this.state = 444),
						this.match(r.ANALYZE),
						(this.state = 445),
						this.match(r.TABLES),
						(this.state = 448),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.FROM || e === r.IN) &&
							((this.state = 446),
							(e = this._input.LA(1)),
							e === r.FROM || e === r.IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 447),
							this.multipartIdentifier()),
						(this.state = 450),
						this.match(r.COMPUTE),
						(this.state = 451),
						this.match(r.STATISTICS),
						(this.state = 453),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 25, this._ctx);
					i === 1 && ((this.state = 452), this.identifier());
					break;
				case 14:
					(u = new Ue(this, u)),
						this.enterOuterAlt(u, 14),
						(this.state = 455),
						this.match(r.ALTER),
						(this.state = 456),
						this.match(r.TABLE),
						(this.state = 457),
						this.multipartIdentifier(),
						(this.state = 458),
						this.match(r.ADD),
						(this.state = 459),
						(e = this._input.LA(1)),
						e === r.COLUMN || e === r.COLUMNS
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 460),
						(u.columns = this.qualifiedColTypeWithPositionList());
					break;
				case 15:
					(u = new Ue(this, u)),
						this.enterOuterAlt(u, 15),
						(this.state = 462),
						this.match(r.ALTER),
						(this.state = 463),
						this.match(r.TABLE),
						(this.state = 464),
						this.multipartIdentifier(),
						(this.state = 465),
						this.match(r.ADD),
						(this.state = 466),
						(e = this._input.LA(1)),
						e === r.COLUMN || e === r.COLUMNS
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 467),
						this.match(r.T__1),
						(this.state = 468),
						(u.columns = this.qualifiedColTypeWithPositionList()),
						(this.state = 469),
						this.match(r.T__2);
					break;
				case 16:
					(u = new Li(this, u)),
						this.enterOuterAlt(u, 16),
						(this.state = 471),
						this.match(r.ALTER),
						(this.state = 472),
						this.match(r.TABLE),
						(this.state = 473),
						(u.table = this.multipartIdentifier()),
						(this.state = 474),
						this.match(r.RENAME),
						(this.state = 475),
						this.match(r.COLUMN),
						(this.state = 476),
						(u.from = this.multipartIdentifier()),
						(this.state = 477),
						this.match(r.TO),
						(this.state = 478),
						(u.to = this.errorCapturingIdentifier());
					break;
				case 17:
					(u = new ge(this, u)),
						this.enterOuterAlt(u, 17),
						(this.state = 480),
						this.match(r.ALTER),
						(this.state = 481),
						this.match(r.TABLE),
						(this.state = 482),
						this.multipartIdentifier(),
						(this.state = 483),
						this.match(r.DROP),
						(this.state = 484),
						(e = this._input.LA(1)),
						e === r.COLUMN || e === r.COLUMNS
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 485),
						this.match(r.T__1),
						(this.state = 486),
						(u.columns = this.multipartIdentifierList()),
						(this.state = 487),
						this.match(r.T__2);
					break;
				case 18:
					(u = new ge(this, u)),
						this.enterOuterAlt(u, 18),
						(this.state = 489),
						this.match(r.ALTER),
						(this.state = 490),
						this.match(r.TABLE),
						(this.state = 491),
						this.multipartIdentifier(),
						(this.state = 492),
						this.match(r.DROP),
						(this.state = 493),
						(e = this._input.LA(1)),
						e === r.COLUMN || e === r.COLUMNS
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 494),
						(u.columns = this.multipartIdentifierList());
					break;
				case 19:
					(u = new Ir(this, u)),
						this.enterOuterAlt(u, 19),
						(this.state = 496),
						this.match(r.ALTER),
						(this.state = 497),
						(e = this._input.LA(1)),
						e === r.TABLE || e === r.VIEW
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 498),
						(u.from = this.multipartIdentifier()),
						(this.state = 499),
						this.match(r.RENAME),
						(this.state = 500),
						this.match(r.TO),
						(this.state = 501),
						(u.to = this.multipartIdentifier());
					break;
				case 20:
					(u = new Ni(this, u)),
						this.enterOuterAlt(u, 20),
						(this.state = 503),
						this.match(r.ALTER),
						(this.state = 504),
						(e = this._input.LA(1)),
						e === r.TABLE || e === r.VIEW
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 505),
						this.multipartIdentifier(),
						(this.state = 506),
						this.match(r.SET),
						(this.state = 507),
						this.match(r.TBLPROPERTIES),
						(this.state = 508),
						this.tablePropertyList();
					break;
				case 21:
					(u = new jt(this, u)),
						this.enterOuterAlt(u, 21),
						(this.state = 510),
						this.match(r.ALTER),
						(this.state = 511),
						(e = this._input.LA(1)),
						e === r.TABLE || e === r.VIEW
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 512),
						this.multipartIdentifier(),
						(this.state = 513),
						this.match(r.UNSET),
						(this.state = 514),
						this.match(r.TBLPROPERTIES),
						(this.state = 517),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.IF && ((this.state = 515), this.match(r.IF), (this.state = 516), this.match(r.EXISTS)),
						(this.state = 519),
						this.tablePropertyList();
					break;
				case 22:
					(u = new wr(this, u)),
						this.enterOuterAlt(u, 22),
						(this.state = 521),
						this.match(r.ALTER),
						(this.state = 522),
						this.match(r.TABLE),
						(this.state = 523),
						(u.table = this.multipartIdentifier()),
						(this.state = 524),
						(e = this._input.LA(1)),
						e === r.ALTER || e === r.CHANGE
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 526),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 27, this._ctx);
					i === 1 && ((this.state = 525), this.match(r.COLUMN)),
						(this.state = 528),
						(u.column = this.multipartIdentifier()),
						(this.state = 530),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.AFTER ||
							e === r.COMMENT ||
							e === r.DROP ||
							e === r.FIRST ||
							e === r.SET ||
							e === r.TYPE) &&
							((this.state = 529), this.alterColumnAction());
					break;
				case 23:
					(u = new Pe(this, u)),
						this.enterOuterAlt(u, 23),
						(this.state = 532),
						this.match(r.ALTER),
						(this.state = 533),
						this.match(r.TABLE),
						(this.state = 534),
						(u.table = this.multipartIdentifier()),
						(this.state = 536),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 535), this.partitionSpec()),
						(this.state = 538),
						this.match(r.CHANGE),
						(this.state = 540),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 30, this._ctx);
					i === 1 && ((this.state = 539), this.match(r.COLUMN)),
						(this.state = 542),
						(u.colName = this.multipartIdentifier()),
						(this.state = 543),
						this.colType(),
						(this.state = 545),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.AFTER || e === r.FIRST) && ((this.state = 544), this.colPosition());
					break;
				case 24:
					(u = new xi(this, u)),
						this.enterOuterAlt(u, 24),
						(this.state = 547),
						this.match(r.ALTER),
						(this.state = 548),
						this.match(r.TABLE),
						(this.state = 549),
						(u.table = this.multipartIdentifier()),
						(this.state = 551),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 550), this.partitionSpec()),
						(this.state = 553),
						this.match(r.REPLACE),
						(this.state = 554),
						this.match(r.COLUMNS),
						(this.state = 555),
						this.match(r.T__1),
						(this.state = 556),
						(u.columns = this.qualifiedColTypeWithPositionList()),
						(this.state = 557),
						this.match(r.T__2);
					break;
				case 25:
					(u = new Qu(this, u)),
						this.enterOuterAlt(u, 25),
						(this.state = 559),
						this.match(r.ALTER),
						(this.state = 560),
						this.match(r.TABLE),
						(this.state = 561),
						this.multipartIdentifier(),
						(this.state = 563),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 562), this.partitionSpec()),
						(this.state = 565),
						this.match(r.SET),
						(this.state = 566),
						this.match(r.SERDE),
						(this.state = 567),
						this.match(r.STRING),
						(this.state = 571),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.WITH &&
							((this.state = 568),
							this.match(r.WITH),
							(this.state = 569),
							this.match(r.SERDEPROPERTIES),
							(this.state = 570),
							this.tablePropertyList());
					break;
				case 26:
					(u = new Qu(this, u)),
						this.enterOuterAlt(u, 26),
						(this.state = 573),
						this.match(r.ALTER),
						(this.state = 574),
						this.match(r.TABLE),
						(this.state = 575),
						this.multipartIdentifier(),
						(this.state = 577),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 576), this.partitionSpec()),
						(this.state = 579),
						this.match(r.SET),
						(this.state = 580),
						this.match(r.SERDEPROPERTIES),
						(this.state = 581),
						this.tablePropertyList();
					break;
				case 27:
					(u = new Bt(this, u)),
						this.enterOuterAlt(u, 27),
						(this.state = 583),
						this.match(r.ALTER),
						(this.state = 584),
						(e = this._input.LA(1)),
						e === r.TABLE || e === r.VIEW
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 585),
						this.multipartIdentifier(),
						(this.state = 586),
						this.match(r.ADD),
						(this.state = 590),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.IF &&
							((this.state = 587),
							this.match(r.IF),
							(this.state = 588),
							this.match(r.NOT),
							(this.state = 589),
							this.match(r.EXISTS)),
						(this.state = 593),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
					do
						(this.state = 592),
							this.partitionSpecLocation(),
							(this.state = 595),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					while (e === r.PARTITION);
					break;
				case 28:
					(u = new Nr(this, u)),
						this.enterOuterAlt(u, 28),
						(this.state = 597),
						this.match(r.ALTER),
						(this.state = 598),
						this.match(r.TABLE),
						(this.state = 599),
						this.multipartIdentifier(),
						(this.state = 600),
						(u.from = this.partitionSpec()),
						(this.state = 601),
						this.match(r.RENAME),
						(this.state = 602),
						this.match(r.TO),
						(this.state = 603),
						(u.to = this.partitionSpec());
					break;
				case 29:
					for (
						u = new Yt(this, u),
							this.enterOuterAlt(u, 29),
							this.state = 605,
							this.match(r.ALTER),
							this.state = 606,
							e = this._input.LA(1),
							e === r.TABLE || e === r.VIEW
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							this.state = 607,
							this.multipartIdentifier(),
							this.state = 608,
							this.match(r.DROP),
							this.state = 611,
							this._errHandler.sync(this),
							e = this._input.LA(1),
							e === r.IF &&
								((this.state = 609), this.match(r.IF), (this.state = 610), this.match(r.EXISTS)),
							this.state = 613,
							this.partitionSpec(),
							this.state = 618,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.T__3;

					)
						(this.state = 614),
							this.match(r.T__3),
							(this.state = 615),
							this.partitionSpec(),
							(this.state = 620),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					(this.state = 622),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PURGE && ((this.state = 621), this.match(r.PURGE));
					break;
				case 30:
					(u = new Mr(this, u)),
						this.enterOuterAlt(u, 30),
						(this.state = 624),
						this.match(r.ALTER),
						(this.state = 625),
						this.match(r.TABLE),
						(this.state = 626),
						this.multipartIdentifier(),
						(this.state = 628),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 627), this.partitionSpec()),
						(this.state = 630),
						this.match(r.SET),
						(this.state = 631),
						this.locationSpec();
					break;
				case 31:
					(u = new Es(this, u)),
						this.enterOuterAlt(u, 31),
						(this.state = 633),
						this.match(r.ALTER),
						(this.state = 634),
						this.match(r.TABLE),
						(this.state = 635),
						this.multipartIdentifier(),
						(this.state = 636),
						this.match(r.RECOVER),
						(this.state = 637),
						this.match(r.PARTITIONS);
					break;
				case 32:
					(u = new vr(this, u)),
						this.enterOuterAlt(u, 32),
						(this.state = 639),
						this.match(r.DROP),
						(this.state = 640),
						this.match(r.TABLE),
						(this.state = 643),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 42, this._ctx);
					i === 1 && ((this.state = 641), this.match(r.IF), (this.state = 642), this.match(r.EXISTS)),
						(this.state = 645),
						this.multipartIdentifier(),
						(this.state = 647),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PURGE && ((this.state = 646), this.match(r.PURGE));
					break;
				case 33:
					(u = new _s(this, u)),
						this.enterOuterAlt(u, 33),
						(this.state = 649),
						this.match(r.DROP),
						(this.state = 650),
						this.match(r.VIEW),
						(this.state = 653),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 44, this._ctx);
					i === 1 && ((this.state = 651), this.match(r.IF), (this.state = 652), this.match(r.EXISTS)),
						(this.state = 655),
						this.multipartIdentifier();
					break;
				case 34:
					(u = new E0(this, u)),
						this.enterOuterAlt(u, 34),
						(this.state = 656),
						this.match(r.CREATE),
						(this.state = 659),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OR && ((this.state = 657), this.match(r.OR), (this.state = 658), this.match(r.REPLACE)),
						(this.state = 665),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.GLOBAL || e === r.TEMPORARY) &&
							((this.state = 662),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === r.GLOBAL && ((this.state = 661), this.match(r.GLOBAL)),
							(this.state = 664),
							this.match(r.TEMPORARY)),
						(this.state = 667),
						this.match(r.VIEW),
						(this.state = 671),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 48, this._ctx);
					for (
						i === 1 &&
							((this.state = 668),
							this.match(r.IF),
							(this.state = 669),
							this.match(r.NOT),
							(this.state = 670),
							this.match(r.EXISTS)),
							this.state = 673,
							this.multipartIdentifier(),
							this.state = 675,
							this._errHandler.sync(this),
							e = this._input.LA(1),
							e === r.T__1 && ((this.state = 674), this.identifierCommentList()),
							this.state = 685,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.COMMENT || e === r.PARTITIONED || e === r.TBLPROPERTIES;

					) {
						switch (((this.state = 683), this._errHandler.sync(this), this._input.LA(1))) {
							case r.COMMENT:
								(this.state = 677), this.commentSpec();
								break;
							case r.PARTITIONED:
								(this.state = 678),
									this.match(r.PARTITIONED),
									(this.state = 679),
									this.match(r.ON),
									(this.state = 680),
									this.identifierList();
								break;
							case r.TBLPROPERTIES:
								(this.state = 681),
									this.match(r.TBLPROPERTIES),
									(this.state = 682),
									this.tablePropertyList();
								break;
							default:
								throw new p.error.NoViableAltException(this);
						}
						(this.state = 687), this._errHandler.sync(this), (e = this._input.LA(1));
					}
					(this.state = 688), this.match(r.AS), (this.state = 689), (u.selectStmt = this.query());
					break;
				case 35:
					(u = new ju(this, u)),
						this.enterOuterAlt(u, 35),
						(this.state = 691),
						this.match(r.CREATE),
						(this.state = 694),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OR && ((this.state = 692), this.match(r.OR), (this.state = 693), this.match(r.REPLACE)),
						(this.state = 697),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.GLOBAL && ((this.state = 696), this.match(r.GLOBAL)),
						(this.state = 699),
						this.match(r.TEMPORARY),
						(this.state = 700),
						this.match(r.VIEW),
						(this.state = 701),
						this.tableIdentifier(),
						(this.state = 706),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.T__1 &&
							((this.state = 702),
							this.match(r.T__1),
							(this.state = 703),
							this.colTypeList(),
							(this.state = 704),
							this.match(r.T__2)),
						(this.state = 708),
						this.tableProvider(),
						(this.state = 711),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OPTIONS &&
							((this.state = 709), this.match(r.OPTIONS), (this.state = 710), this.tablePropertyList());
					break;
				case 36:
					(u = new fs(this, u)),
						this.enterOuterAlt(u, 36),
						(this.state = 713),
						this.match(r.ALTER),
						(this.state = 714),
						this.match(r.VIEW),
						(this.state = 715),
						this.multipartIdentifier(),
						(this.state = 717),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.AS && ((this.state = 716), this.match(r.AS)),
						(this.state = 719),
						this.query();
					break;
				case 37:
					(u = new hu(this, u)),
						this.enterOuterAlt(u, 37),
						(this.state = 721),
						this.match(r.CREATE),
						(this.state = 724),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OR && ((this.state = 722), this.match(r.OR), (this.state = 723), this.match(r.REPLACE)),
						(this.state = 727),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.TEMPORARY && ((this.state = 726), this.match(r.TEMPORARY)),
						(this.state = 729),
						this.match(r.FUNCTION),
						(this.state = 733),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 59, this._ctx);
					if (
						(i === 1 &&
							((this.state = 730),
							this.match(r.IF),
							(this.state = 731),
							this.match(r.NOT),
							(this.state = 732),
							this.match(r.EXISTS)),
						(this.state = 735),
						this.multipartIdentifier(),
						(this.state = 736),
						this.match(r.AS),
						(this.state = 737),
						(u.className = this.match(r.STRING)),
						(this.state = 747),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.USING)
					)
						for (
							this.state = 738,
								this.match(r.USING),
								this.state = 739,
								this.resource(),
								this.state = 744,
								this._errHandler.sync(this),
								e = this._input.LA(1);
							e === r.T__3;

						)
							(this.state = 740),
								this.match(r.T__3),
								(this.state = 741),
								this.resource(),
								(this.state = 746),
								this._errHandler.sync(this),
								(e = this._input.LA(1));
					break;
				case 38:
					(u = new Ur(this, u)),
						this.enterOuterAlt(u, 38),
						(this.state = 749),
						this.match(r.DROP),
						(this.state = 751),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.TEMPORARY && ((this.state = 750), this.match(r.TEMPORARY)),
						(this.state = 753),
						this.match(r.FUNCTION),
						(this.state = 756),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 63, this._ctx);
					i === 1 && ((this.state = 754), this.match(r.IF), (this.state = 755), this.match(r.EXISTS)),
						(this.state = 758),
						this.multipartIdentifier();
					break;
				case 39:
					(u = new bi(this, u)),
						this.enterOuterAlt(u, 39),
						(this.state = 759),
						this.match(r.EXPLAIN),
						(this.state = 761),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.CODEGEN || e === r.COST || e === r.EXTENDED || e === r.FORMATTED || e === r.LOGICAL) &&
							((this.state = 760),
							(e = this._input.LA(1)),
							e === r.CODEGEN || e === r.COST || e === r.EXTENDED || e === r.FORMATTED || e === r.LOGICAL
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this)),
						(this.state = 763),
						this.statement();
					break;
				case 40:
					(u = new Wi(this, u)),
						this.enterOuterAlt(u, 40),
						(this.state = 764),
						this.match(r.SHOW),
						(this.state = 765),
						this.match(r.TABLES),
						(this.state = 768),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.FROM || e === r.IN) &&
							((this.state = 766),
							(e = this._input.LA(1)),
							e === r.FROM || e === r.IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 767),
							this.multipartIdentifier()),
						(this.state = 774),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.LIKE || e === r.STRING) &&
							((this.state = 771),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === r.LIKE && ((this.state = 770), this.match(r.LIKE)),
							(this.state = 773),
							(u.pattern = this.match(r.STRING)));
					break;
				case 41:
					(u = new Gt(this, u)),
						this.enterOuterAlt(u, 41),
						(this.state = 776),
						this.match(r.SHOW),
						(this.state = 777),
						this.match(r.TABLE),
						(this.state = 778),
						this.match(r.EXTENDED),
						(this.state = 781),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.FROM || e === r.IN) &&
							((this.state = 779),
							(e = this._input.LA(1)),
							e === r.FROM || e === r.IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 780),
							(u.ns = this.multipartIdentifier())),
						(this.state = 783),
						this.match(r.LIKE),
						(this.state = 784),
						(u.pattern = this.match(r.STRING)),
						(this.state = 786),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 785), this.partitionSpec());
					break;
				case 42:
					(u = new Wa(this, u)),
						this.enterOuterAlt(u, 42),
						(this.state = 788),
						this.match(r.SHOW),
						(this.state = 789),
						this.match(r.TBLPROPERTIES),
						(this.state = 790),
						(u.table = this.multipartIdentifier()),
						(this.state = 795),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.T__1 &&
							((this.state = 791),
							this.match(r.T__1),
							(this.state = 792),
							(u.key = this.tablePropertyKey()),
							(this.state = 793),
							this.match(r.T__2));
					break;
				case 43:
					(u = new Ts(this, u)),
						this.enterOuterAlt(u, 43),
						(this.state = 797),
						this.match(r.SHOW),
						(this.state = 798),
						this.match(r.COLUMNS),
						(this.state = 799),
						(e = this._input.LA(1)),
						e === r.FROM || e === r.IN
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 800),
						(u.table = this.multipartIdentifier()),
						(this.state = 803),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.FROM || e === r.IN) &&
							((this.state = 801),
							(e = this._input.LA(1)),
							e === r.FROM || e === r.IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 802),
							(u.ns = this.multipartIdentifier()));
					break;
				case 44:
					(u = new Ii(this, u)),
						this.enterOuterAlt(u, 44),
						(this.state = 805),
						this.match(r.SHOW),
						(this.state = 806),
						this.match(r.VIEWS),
						(this.state = 809),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.FROM || e === r.IN) &&
							((this.state = 807),
							(e = this._input.LA(1)),
							e === r.FROM || e === r.IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 808),
							this.multipartIdentifier()),
						(this.state = 815),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.LIKE || e === r.STRING) &&
							((this.state = 812),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === r.LIKE && ((this.state = 811), this.match(r.LIKE)),
							(this.state = 814),
							(u.pattern = this.match(r.STRING)));
					break;
				case 45:
					(u = new Ca(this, u)),
						this.enterOuterAlt(u, 45),
						(this.state = 817),
						this.match(r.SHOW),
						(this.state = 818),
						this.match(r.PARTITIONS),
						(this.state = 819),
						this.multipartIdentifier(),
						(this.state = 821),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 820), this.partitionSpec());
					break;
				case 46:
					(u = new Hr(this, u)),
						this.enterOuterAlt(u, 46),
						(this.state = 823),
						this.match(r.SHOW),
						(this.state = 825),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 76, this._ctx);
					i === 1 && ((this.state = 824), this.identifier()),
						(this.state = 827),
						this.match(r.FUNCTIONS),
						(this.state = 835),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 79, this._ctx);
					if (i === 1) {
						(this.state = 829), this._errHandler.sync(this);
						var i = this._interp.adaptivePredict(this._input, 77, this._ctx);
						i === 1 && ((this.state = 828), this.match(r.LIKE)),
							(this.state = 833),
							this._errHandler.sync(this);
						var i = this._interp.adaptivePredict(this._input, 78, this._ctx);
						switch (i) {
							case 1:
								(this.state = 831), this.multipartIdentifier();
								break;
							case 2:
								(this.state = 832), (u.pattern = this.match(r.STRING));
								break;
						}
					}
					break;
				case 47:
					(u = new Pr(this, u)),
						this.enterOuterAlt(u, 47),
						(this.state = 837),
						this.match(r.SHOW),
						(this.state = 838),
						this.match(r.CREATE),
						(this.state = 839),
						this.match(r.TABLE),
						(this.state = 840),
						this.multipartIdentifier(),
						(this.state = 843),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.AS && ((this.state = 841), this.match(r.AS), (this.state = 842), this.match(r.SERDE));
					break;
				case 48:
					(u = new X1(this, u)),
						this.enterOuterAlt(u, 48),
						(this.state = 845),
						this.match(r.SHOW),
						(this.state = 846),
						this.match(r.CURRENT),
						(this.state = 847),
						this.match(r.NAMESPACE);
					break;
				case 49:
					(u = new ys(this, u)),
						this.enterOuterAlt(u, 49),
						(this.state = 848),
						(e = this._input.LA(1)),
						e === r.DESC || e === r.DESCRIBE
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 849),
						this.match(r.FUNCTION),
						(this.state = 851),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 81, this._ctx);
					i === 1 && ((this.state = 850), this.match(r.EXTENDED)),
						(this.state = 853),
						this.describeFuncName();
					break;
				case 50:
					(u = new Cs(this, u)),
						this.enterOuterAlt(u, 50),
						(this.state = 854),
						(e = this._input.LA(1)),
						e === r.DESC || e === r.DESCRIBE
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 855),
						this.namespace(),
						(this.state = 857),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 82, this._ctx);
					i === 1 && ((this.state = 856), this.match(r.EXTENDED)),
						(this.state = 859),
						this.multipartIdentifier();
					break;
				case 51:
					(u = new Ne(this, u)),
						this.enterOuterAlt(u, 51),
						(this.state = 861),
						(e = this._input.LA(1)),
						e === r.DESC || e === r.DESCRIBE
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 863),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 83, this._ctx);
					i === 1 && ((this.state = 862), this.match(r.TABLE)),
						(this.state = 866),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 84, this._ctx);
					i === 1 &&
						((this.state = 865),
						(u.option = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.EXTENDED || e === r.FORMATTED
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.option = this._errHandler.recoverInline(this))),
						(this.state = 868),
						this.multipartIdentifier(),
						(this.state = 870),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 85, this._ctx);
					i === 1 && ((this.state = 869), this.partitionSpec()),
						(this.state = 873),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 86, this._ctx);
					i === 1 && ((this.state = 872), this.describeColName());
					break;
				case 52:
					(u = new ba(this, u)),
						this.enterOuterAlt(u, 52),
						(this.state = 875),
						(e = this._input.LA(1)),
						e === r.DESC || e === r.DESCRIBE
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 877),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.QUERY && ((this.state = 876), this.match(r.QUERY)),
						(this.state = 879),
						this.query();
					break;
				case 53:
					(u = new Oi(this, u)),
						this.enterOuterAlt(u, 53),
						(this.state = 880),
						this.match(r.COMMENT),
						(this.state = 881),
						this.match(r.ON),
						(this.state = 882),
						this.namespace(),
						(this.state = 883),
						this.multipartIdentifier(),
						(this.state = 884),
						this.match(r.IS),
						(this.state = 885),
						(u.comment = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.NULL || e === r.STRING
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.comment = this._errHandler.recoverInline(this));
					break;
				case 54:
					(u = new Si(this, u)),
						this.enterOuterAlt(u, 54),
						(this.state = 887),
						this.match(r.COMMENT),
						(this.state = 888),
						this.match(r.ON),
						(this.state = 889),
						this.match(r.TABLE),
						(this.state = 890),
						this.multipartIdentifier(),
						(this.state = 891),
						this.match(r.IS),
						(this.state = 892),
						(u.comment = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.NULL || e === r.STRING
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.comment = this._errHandler.recoverInline(this));
					break;
				case 55:
					(u = new Q1(this, u)),
						this.enterOuterAlt(u, 55),
						(this.state = 894),
						this.match(r.REFRESH),
						(this.state = 895),
						this.match(r.TABLE),
						(this.state = 896),
						this.multipartIdentifier();
					break;
				case 56:
					(u = new q1(this, u)),
						this.enterOuterAlt(u, 56),
						(this.state = 897),
						this.match(r.REFRESH),
						(this.state = 898),
						this.match(r.FUNCTION),
						(this.state = 899),
						this.multipartIdentifier();
					break;
				case 57:
					(u = new u3(this, u)),
						this.enterOuterAlt(u, 57),
						(this.state = 900),
						this.match(r.REFRESH),
						(this.state = 908),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 89, this._ctx);
					switch (i) {
						case 1:
							(this.state = 901), this.match(r.STRING);
							break;
						case 2:
							(this.state = 905), this._errHandler.sync(this);
							for (
								var n = this._interp.adaptivePredict(this._input, 88, this._ctx);
								n != 1 && n != p.atn.ATN.INVALID_ALT_NUMBER;

							)
								n === 1 + 1 && ((this.state = 902), this.matchWildcard()),
									(this.state = 907),
									this._errHandler.sync(this),
									(n = this._interp.adaptivePredict(this._input, 88, this._ctx));
							break;
					}
					break;
				case 58:
					(u = new De(this, u)),
						this.enterOuterAlt(u, 58),
						(this.state = 910),
						this.match(r.CACHE),
						(this.state = 912),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.LAZY && ((this.state = 911), this.match(r.LAZY)),
						(this.state = 914),
						this.match(r.TABLE),
						(this.state = 915),
						this.multipartIdentifier(),
						(this.state = 918),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OPTIONS &&
							((this.state = 916),
							this.match(r.OPTIONS),
							(this.state = 917),
							(u.options = this.tablePropertyList())),
						(this.state = 924),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.T__1 ||
							e === r.AS ||
							e === r.FROM ||
							e === r.MAP ||
							e === r.REDUCE ||
							e === r.SELECT ||
							e === r.TABLE ||
							e === r.VALUES ||
							e === r.WITH) &&
							((this.state = 921),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === r.AS && ((this.state = 920), this.match(r.AS)),
							(this.state = 923),
							this.query());
					break;
				case 59:
					(u = new ms(this, u)),
						this.enterOuterAlt(u, 59),
						(this.state = 926),
						this.match(r.UNCACHE),
						(this.state = 927),
						this.match(r.TABLE),
						(this.state = 930),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 94, this._ctx);
					i === 1 && ((this.state = 928), this.match(r.IF), (this.state = 929), this.match(r.EXISTS)),
						(this.state = 932),
						this.multipartIdentifier();
					break;
				case 60:
					(u = new $p(this, u)),
						this.enterOuterAlt(u, 60),
						(this.state = 933),
						this.match(r.CLEAR),
						(this.state = 934),
						this.match(r.CACHE);
					break;
				case 61:
					(u = new mt(this, u)),
						this.enterOuterAlt(u, 61),
						(this.state = 935),
						this.match(r.LOAD),
						(this.state = 936),
						this.match(r.DATA),
						(this.state = 938),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.LOCAL && ((this.state = 937), this.match(r.LOCAL)),
						(this.state = 940),
						this.match(r.INPATH),
						(this.state = 941),
						(u.path = this.match(r.STRING)),
						(this.state = 943),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OVERWRITE && ((this.state = 942), this.match(r.OVERWRITE)),
						(this.state = 945),
						this.match(r.INTO),
						(this.state = 946),
						this.match(r.TABLE),
						(this.state = 947),
						this.multipartIdentifier(),
						(this.state = 949),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 948), this.partitionSpec());
					break;
				case 62:
					(u = new Aa(this, u)),
						this.enterOuterAlt(u, 62),
						(this.state = 951),
						this.match(r.TRUNCATE),
						(this.state = 952),
						this.match(r.TABLE),
						(this.state = 953),
						this.multipartIdentifier(),
						(this.state = 955),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 954), this.partitionSpec());
					break;
				case 63:
					(u = new Le(this, u)),
						this.enterOuterAlt(u, 63),
						(this.state = 957),
						this.match(r.MSCK),
						(this.state = 958),
						this.match(r.REPAIR),
						(this.state = 959),
						this.match(r.TABLE),
						(this.state = 960),
						this.multipartIdentifier(),
						(this.state = 963),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.ADD || e === r.DROP || e === r.SYNC) &&
							((this.state = 961),
							(u.option = this._input.LT(1)),
							(e = this._input.LA(1)),
							e === r.ADD || e === r.DROP || e === r.SYNC
								? (this._errHandler.reportMatch(this), this.consume())
								: (u.option = this._errHandler.recoverInline(this)),
							(this.state = 962),
							this.match(r.PARTITIONS));
					break;
				case 64:
					(u = new ya(this, u)),
						this.enterOuterAlt(u, 64),
						(this.state = 965),
						(u.op = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.ADD || e === r.LIST
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.op = this._errHandler.recoverInline(this)),
						(this.state = 966),
						this.identifier(),
						(this.state = 974),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 101, this._ctx);
					switch (i) {
						case 1:
							(this.state = 967), this.match(r.STRING);
							break;
						case 2:
							(this.state = 971), this._errHandler.sync(this);
							for (
								var n = this._interp.adaptivePredict(this._input, 100, this._ctx);
								n != 1 && n != p.atn.ATN.INVALID_ALT_NUMBER;

							)
								n === 1 + 1 && ((this.state = 968), this.matchWildcard()),
									(this.state = 973),
									this._errHandler.sync(this),
									(n = this._interp.adaptivePredict(this._input, 100, this._ctx));
							break;
					}
					break;
				case 65:
					(u = new ma(this, u)),
						this.enterOuterAlt(u, 65),
						(this.state = 976),
						this.match(r.SET),
						(this.state = 977),
						this.match(r.ROLE),
						(this.state = 981),
						this._errHandler.sync(this);
					for (
						var n = this._interp.adaptivePredict(this._input, 102, this._ctx);
						n != 1 && n != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						n === 1 + 1 && ((this.state = 978), this.matchWildcard()),
							(this.state = 983),
							this._errHandler.sync(this),
							(n = this._interp.adaptivePredict(this._input, 102, this._ctx));
					break;
				case 66:
					(u = new xe(this, u)),
						this.enterOuterAlt(u, 66),
						(this.state = 984),
						this.match(r.SET),
						(this.state = 985),
						this.match(r.TIME),
						(this.state = 986),
						this.match(r.ZONE),
						(this.state = 987),
						this.interval();
					break;
				case 67:
					(u = new xe(this, u)),
						this.enterOuterAlt(u, 67),
						(this.state = 988),
						this.match(r.SET),
						(this.state = 989),
						this.match(r.TIME),
						(this.state = 990),
						this.match(r.ZONE),
						(this.state = 991),
						(u.timezone = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.LOCAL || e === r.STRING
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.timezone = this._errHandler.recoverInline(this));
					break;
				case 68:
					(u = new xe(this, u)),
						this.enterOuterAlt(u, 68),
						(this.state = 992),
						this.match(r.SET),
						(this.state = 993),
						this.match(r.TIME),
						(this.state = 994),
						this.match(r.ZONE),
						(this.state = 998),
						this._errHandler.sync(this);
					for (
						var n = this._interp.adaptivePredict(this._input, 103, this._ctx);
						n != 1 && n != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						n === 1 + 1 && ((this.state = 995), this.matchWildcard()),
							(this.state = 1e3),
							this._errHandler.sync(this),
							(n = this._interp.adaptivePredict(this._input, 103, this._ctx));
					break;
				case 69:
					(u = new Sr(this, u)),
						this.enterOuterAlt(u, 69),
						(this.state = 1001),
						this.match(r.SET),
						(this.state = 1002),
						this.configKey(),
						(this.state = 1003),
						this.match(r.EQ),
						(this.state = 1004),
						this.configValue();
					break;
				case 70:
					if (
						((u = new Sr(this, u)),
						this.enterOuterAlt(u, 70),
						(this.state = 1006),
						this.match(r.SET),
						(this.state = 1007),
						this.configKey(),
						(this.state = 1015),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.EQ)
					) {
						(this.state = 1008), this.match(r.EQ), (this.state = 1012), this._errHandler.sync(this);
						for (
							var n = this._interp.adaptivePredict(this._input, 104, this._ctx);
							n != 1 && n != p.atn.ATN.INVALID_ALT_NUMBER;

						)
							n === 1 + 1 && ((this.state = 1009), this.matchWildcard()),
								(this.state = 1014),
								this._errHandler.sync(this),
								(n = this._interp.adaptivePredict(this._input, 104, this._ctx));
					}
					break;
				case 71:
					(u = new Sr(this, u)),
						this.enterOuterAlt(u, 71),
						(this.state = 1017),
						this.match(r.SET),
						(this.state = 1021),
						this._errHandler.sync(this);
					for (
						var n = this._interp.adaptivePredict(this._input, 106, this._ctx);
						n != 1 && n != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						n === 1 + 1 && ((this.state = 1018), this.matchWildcard()),
							(this.state = 1023),
							this._errHandler.sync(this),
							(n = this._interp.adaptivePredict(this._input, 106, this._ctx));
					(this.state = 1024), this.match(r.EQ), (this.state = 1025), this.configValue();
					break;
				case 72:
					(u = new Bh(this, u)),
						this.enterOuterAlt(u, 72),
						(this.state = 1026),
						this.match(r.SET),
						(this.state = 1030),
						this._errHandler.sync(this);
					for (
						var n = this._interp.adaptivePredict(this._input, 107, this._ctx);
						n != 1 && n != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						n === 1 + 1 && ((this.state = 1027), this.matchWildcard()),
							(this.state = 1032),
							this._errHandler.sync(this),
							(n = this._interp.adaptivePredict(this._input, 107, this._ctx));
					break;
				case 73:
					(u = new t3(this, u)),
						this.enterOuterAlt(u, 73),
						(this.state = 1033),
						this.match(r.RESET),
						(this.state = 1034),
						this.configKey();
					break;
				case 74:
					(u = new kh(this, u)),
						this.enterOuterAlt(u, 74),
						(this.state = 1035),
						this.match(r.RESET),
						(this.state = 1039),
						this._errHandler.sync(this);
					for (
						var n = this._interp.adaptivePredict(this._input, 108, this._ctx);
						n != 1 && n != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						n === 1 + 1 && ((this.state = 1036), this.matchWildcard()),
							(this.state = 1041),
							this._errHandler.sync(this),
							(n = this._interp.adaptivePredict(this._input, 108, this._ctx));
					break;
				case 75:
					(u = new ma(this, u)),
						this.enterOuterAlt(u, 75),
						(this.state = 1042),
						this.unsupportedHiveNativeCommands(),
						(this.state = 1046),
						this._errHandler.sync(this);
					for (
						var n = this._interp.adaptivePredict(this._input, 109, this._ctx);
						n != 1 && n != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						n === 1 + 1 && ((this.state = 1043), this.matchWildcard()),
							(this.state = 1048),
							this._errHandler.sync(this),
							(n = this._interp.adaptivePredict(this._input, 109, this._ctx));
					break;
			}
		} catch (a) {
			if (a instanceof p.error.RecognitionException)
				(u.exception = a), this._errHandler.reportError(this, a), this._errHandler.recover(this, a);
			else throw a;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Z1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_configKey),
			this
		);
	}
	Z1.prototype = Object.create(p.ParserRuleContext.prototype);
	Z1.prototype.constructor = Z1;
	Z1.prototype.quotedIdentifier = function () {
		return this.getTypedRuleContext(qa, 0);
	};
	Z1.prototype.accept = function (u) {
		return u instanceof R ? u.visitConfigKey(this) : u.visitChildren(this);
	};
	r.ConfigKeyContext = Z1;
	r.prototype.configKey = function () {
		var u = new Z1(this, this._ctx, this.state);
		this.enterRule(u, 16, r.RULE_configKey);
		try {
			this.enterOuterAlt(u, 1), (this.state = 1051), this.quotedIdentifier();
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function i3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_configValue),
			this
		);
	}
	i3.prototype = Object.create(p.ParserRuleContext.prototype);
	i3.prototype.constructor = i3;
	i3.prototype.quotedIdentifier = function () {
		return this.getTypedRuleContext(qa, 0);
	};
	i3.prototype.accept = function (u) {
		return u instanceof R ? u.visitConfigValue(this) : u.visitChildren(this);
	};
	r.ConfigValueContext = i3;
	r.prototype.configValue = function () {
		var u = new i3(this, this._ctx, this.state);
		this.enterRule(u, 18, r.RULE_configValue);
		try {
			this.enterOuterAlt(u, 1), (this.state = 1053), this.quotedIdentifier();
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function v(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_unsupportedHiveNativeCommands),
			(this.kw1 = null),
			(this.kw2 = null),
			(this.kw3 = null),
			(this.kw4 = null),
			(this.kw5 = null),
			(this.kw6 = null),
			this
		);
	}
	v.prototype = Object.create(p.ParserRuleContext.prototype);
	v.prototype.constructor = v;
	v.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	v.prototype.ROLE = function () {
		return this.getToken(r.ROLE, 0);
	};
	v.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	v.prototype.GRANT = function () {
		return this.getToken(r.GRANT, 0);
	};
	v.prototype.REVOKE = function () {
		return this.getToken(r.REVOKE, 0);
	};
	v.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	v.prototype.PRINCIPALS = function () {
		return this.getToken(r.PRINCIPALS, 0);
	};
	v.prototype.ROLES = function () {
		return this.getToken(r.ROLES, 0);
	};
	v.prototype.CURRENT = function () {
		return this.getToken(r.CURRENT, 0);
	};
	v.prototype.EXPORT = function () {
		return this.getToken(r.EXPORT, 0);
	};
	v.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	v.prototype.IMPORT = function () {
		return this.getToken(r.IMPORT, 0);
	};
	v.prototype.COMPACTIONS = function () {
		return this.getToken(r.COMPACTIONS, 0);
	};
	v.prototype.TRANSACTIONS = function () {
		return this.getToken(r.TRANSACTIONS, 0);
	};
	v.prototype.INDEXES = function () {
		return this.getToken(r.INDEXES, 0);
	};
	v.prototype.LOCKS = function () {
		return this.getToken(r.LOCKS, 0);
	};
	v.prototype.INDEX = function () {
		return this.getToken(r.INDEX, 0);
	};
	v.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	v.prototype.LOCK = function () {
		return this.getToken(r.LOCK, 0);
	};
	v.prototype.DATABASE = function () {
		return this.getToken(r.DATABASE, 0);
	};
	v.prototype.UNLOCK = function () {
		return this.getToken(r.UNLOCK, 0);
	};
	v.prototype.TEMPORARY = function () {
		return this.getToken(r.TEMPORARY, 0);
	};
	v.prototype.MACRO = function () {
		return this.getToken(r.MACRO, 0);
	};
	v.prototype.tableIdentifier = function () {
		return this.getTypedRuleContext(Xr, 0);
	};
	v.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	v.prototype.CLUSTERED = function () {
		return this.getToken(r.CLUSTERED, 0);
	};
	v.prototype.BY = function () {
		return this.getToken(r.BY, 0);
	};
	v.prototype.SORTED = function () {
		return this.getToken(r.SORTED, 0);
	};
	v.prototype.SKEWED = function () {
		return this.getToken(r.SKEWED, 0);
	};
	v.prototype.STORED = function () {
		return this.getToken(r.STORED, 0);
	};
	v.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	v.prototype.DIRECTORIES = function () {
		return this.getToken(r.DIRECTORIES, 0);
	};
	v.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	v.prototype.LOCATION = function () {
		return this.getToken(r.LOCATION, 0);
	};
	v.prototype.EXCHANGE = function () {
		return this.getToken(r.EXCHANGE, 0);
	};
	v.prototype.PARTITION = function () {
		return this.getToken(r.PARTITION, 0);
	};
	v.prototype.ARCHIVE = function () {
		return this.getToken(r.ARCHIVE, 0);
	};
	v.prototype.UNARCHIVE = function () {
		return this.getToken(r.UNARCHIVE, 0);
	};
	v.prototype.TOUCH = function () {
		return this.getToken(r.TOUCH, 0);
	};
	v.prototype.COMPACT = function () {
		return this.getToken(r.COMPACT, 0);
	};
	v.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	v.prototype.CONCATENATE = function () {
		return this.getToken(r.CONCATENATE, 0);
	};
	v.prototype.FILEFORMAT = function () {
		return this.getToken(r.FILEFORMAT, 0);
	};
	v.prototype.REPLACE = function () {
		return this.getToken(r.REPLACE, 0);
	};
	v.prototype.COLUMNS = function () {
		return this.getToken(r.COLUMNS, 0);
	};
	v.prototype.START = function () {
		return this.getToken(r.START, 0);
	};
	v.prototype.TRANSACTION = function () {
		return this.getToken(r.TRANSACTION, 0);
	};
	v.prototype.COMMIT = function () {
		return this.getToken(r.COMMIT, 0);
	};
	v.prototype.ROLLBACK = function () {
		return this.getToken(r.ROLLBACK, 0);
	};
	v.prototype.DFS = function () {
		return this.getToken(r.DFS, 0);
	};
	v.prototype.accept = function (u) {
		return u instanceof R ? u.visitUnsupportedHiveNativeCommands(this) : u.visitChildren(this);
	};
	r.UnsupportedHiveNativeCommandsContext = v;
	r.prototype.unsupportedHiveNativeCommands = function () {
		var u = new v(this, this._ctx, this.state);
		this.enterRule(u, 20, r.RULE_unsupportedHiveNativeCommands);
		var e = 0;
		try {
			(this.state = 1223), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 118, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1055),
						(u.kw1 = this.match(r.CREATE)),
						(this.state = 1056),
						(u.kw2 = this.match(r.ROLE));
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 1057),
						(u.kw1 = this.match(r.DROP)),
						(this.state = 1058),
						(u.kw2 = this.match(r.ROLE));
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 1059),
						(u.kw1 = this.match(r.GRANT)),
						(this.state = 1061),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 111, this._ctx);
					i === 1 && ((this.state = 1060), (u.kw2 = this.match(r.ROLE)));
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 1063),
						(u.kw1 = this.match(r.REVOKE)),
						(this.state = 1065),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 112, this._ctx);
					i === 1 && ((this.state = 1064), (u.kw2 = this.match(r.ROLE)));
					break;
				case 5:
					this.enterOuterAlt(u, 5),
						(this.state = 1067),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1068),
						(u.kw2 = this.match(r.GRANT));
					break;
				case 6:
					this.enterOuterAlt(u, 6),
						(this.state = 1069),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1070),
						(u.kw2 = this.match(r.ROLE)),
						(this.state = 1072),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 113, this._ctx);
					i === 1 && ((this.state = 1071), (u.kw3 = this.match(r.GRANT)));
					break;
				case 7:
					this.enterOuterAlt(u, 7),
						(this.state = 1074),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1075),
						(u.kw2 = this.match(r.PRINCIPALS));
					break;
				case 8:
					this.enterOuterAlt(u, 8),
						(this.state = 1076),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1077),
						(u.kw2 = this.match(r.ROLES));
					break;
				case 9:
					this.enterOuterAlt(u, 9),
						(this.state = 1078),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1079),
						(u.kw2 = this.match(r.CURRENT)),
						(this.state = 1080),
						(u.kw3 = this.match(r.ROLES));
					break;
				case 10:
					this.enterOuterAlt(u, 10),
						(this.state = 1081),
						(u.kw1 = this.match(r.EXPORT)),
						(this.state = 1082),
						(u.kw2 = this.match(r.TABLE));
					break;
				case 11:
					this.enterOuterAlt(u, 11),
						(this.state = 1083),
						(u.kw1 = this.match(r.IMPORT)),
						(this.state = 1084),
						(u.kw2 = this.match(r.TABLE));
					break;
				case 12:
					this.enterOuterAlt(u, 12),
						(this.state = 1085),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1086),
						(u.kw2 = this.match(r.COMPACTIONS));
					break;
				case 13:
					this.enterOuterAlt(u, 13),
						(this.state = 1087),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1088),
						(u.kw2 = this.match(r.CREATE)),
						(this.state = 1089),
						(u.kw3 = this.match(r.TABLE));
					break;
				case 14:
					this.enterOuterAlt(u, 14),
						(this.state = 1090),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1091),
						(u.kw2 = this.match(r.TRANSACTIONS));
					break;
				case 15:
					this.enterOuterAlt(u, 15),
						(this.state = 1092),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1093),
						(u.kw2 = this.match(r.INDEXES));
					break;
				case 16:
					this.enterOuterAlt(u, 16),
						(this.state = 1094),
						(u.kw1 = this.match(r.SHOW)),
						(this.state = 1095),
						(u.kw2 = this.match(r.LOCKS));
					break;
				case 17:
					this.enterOuterAlt(u, 17),
						(this.state = 1096),
						(u.kw1 = this.match(r.CREATE)),
						(this.state = 1097),
						(u.kw2 = this.match(r.INDEX));
					break;
				case 18:
					this.enterOuterAlt(u, 18),
						(this.state = 1098),
						(u.kw1 = this.match(r.DROP)),
						(this.state = 1099),
						(u.kw2 = this.match(r.INDEX));
					break;
				case 19:
					this.enterOuterAlt(u, 19),
						(this.state = 1100),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1101),
						(u.kw2 = this.match(r.INDEX));
					break;
				case 20:
					this.enterOuterAlt(u, 20),
						(this.state = 1102),
						(u.kw1 = this.match(r.LOCK)),
						(this.state = 1103),
						(u.kw2 = this.match(r.TABLE));
					break;
				case 21:
					this.enterOuterAlt(u, 21),
						(this.state = 1104),
						(u.kw1 = this.match(r.LOCK)),
						(this.state = 1105),
						(u.kw2 = this.match(r.DATABASE));
					break;
				case 22:
					this.enterOuterAlt(u, 22),
						(this.state = 1106),
						(u.kw1 = this.match(r.UNLOCK)),
						(this.state = 1107),
						(u.kw2 = this.match(r.TABLE));
					break;
				case 23:
					this.enterOuterAlt(u, 23),
						(this.state = 1108),
						(u.kw1 = this.match(r.UNLOCK)),
						(this.state = 1109),
						(u.kw2 = this.match(r.DATABASE));
					break;
				case 24:
					this.enterOuterAlt(u, 24),
						(this.state = 1110),
						(u.kw1 = this.match(r.CREATE)),
						(this.state = 1111),
						(u.kw2 = this.match(r.TEMPORARY)),
						(this.state = 1112),
						(u.kw3 = this.match(r.MACRO));
					break;
				case 25:
					this.enterOuterAlt(u, 25),
						(this.state = 1113),
						(u.kw1 = this.match(r.DROP)),
						(this.state = 1114),
						(u.kw2 = this.match(r.TEMPORARY)),
						(this.state = 1115),
						(u.kw3 = this.match(r.MACRO));
					break;
				case 26:
					this.enterOuterAlt(u, 26),
						(this.state = 1116),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1117),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1118),
						this.tableIdentifier(),
						(this.state = 1119),
						(u.kw3 = this.match(r.NOT)),
						(this.state = 1120),
						(u.kw4 = this.match(r.CLUSTERED));
					break;
				case 27:
					this.enterOuterAlt(u, 27),
						(this.state = 1122),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1123),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1124),
						this.tableIdentifier(),
						(this.state = 1125),
						(u.kw3 = this.match(r.CLUSTERED)),
						(this.state = 1126),
						(u.kw4 = this.match(r.BY));
					break;
				case 28:
					this.enterOuterAlt(u, 28),
						(this.state = 1128),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1129),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1130),
						this.tableIdentifier(),
						(this.state = 1131),
						(u.kw3 = this.match(r.NOT)),
						(this.state = 1132),
						(u.kw4 = this.match(r.SORTED));
					break;
				case 29:
					this.enterOuterAlt(u, 29),
						(this.state = 1134),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1135),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1136),
						this.tableIdentifier(),
						(this.state = 1137),
						(u.kw3 = this.match(r.SKEWED)),
						(this.state = 1138),
						(u.kw4 = this.match(r.BY));
					break;
				case 30:
					this.enterOuterAlt(u, 30),
						(this.state = 1140),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1141),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1142),
						this.tableIdentifier(),
						(this.state = 1143),
						(u.kw3 = this.match(r.NOT)),
						(this.state = 1144),
						(u.kw4 = this.match(r.SKEWED));
					break;
				case 31:
					this.enterOuterAlt(u, 31),
						(this.state = 1146),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1147),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1148),
						this.tableIdentifier(),
						(this.state = 1149),
						(u.kw3 = this.match(r.NOT)),
						(this.state = 1150),
						(u.kw4 = this.match(r.STORED)),
						(this.state = 1151),
						(u.kw5 = this.match(r.AS)),
						(this.state = 1152),
						(u.kw6 = this.match(r.DIRECTORIES));
					break;
				case 32:
					this.enterOuterAlt(u, 32),
						(this.state = 1154),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1155),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1156),
						this.tableIdentifier(),
						(this.state = 1157),
						(u.kw3 = this.match(r.SET)),
						(this.state = 1158),
						(u.kw4 = this.match(r.SKEWED)),
						(this.state = 1159),
						(u.kw5 = this.match(r.LOCATION));
					break;
				case 33:
					this.enterOuterAlt(u, 33),
						(this.state = 1161),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1162),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1163),
						this.tableIdentifier(),
						(this.state = 1164),
						(u.kw3 = this.match(r.EXCHANGE)),
						(this.state = 1165),
						(u.kw4 = this.match(r.PARTITION));
					break;
				case 34:
					this.enterOuterAlt(u, 34),
						(this.state = 1167),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1168),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1169),
						this.tableIdentifier(),
						(this.state = 1170),
						(u.kw3 = this.match(r.ARCHIVE)),
						(this.state = 1171),
						(u.kw4 = this.match(r.PARTITION));
					break;
				case 35:
					this.enterOuterAlt(u, 35),
						(this.state = 1173),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1174),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1175),
						this.tableIdentifier(),
						(this.state = 1176),
						(u.kw3 = this.match(r.UNARCHIVE)),
						(this.state = 1177),
						(u.kw4 = this.match(r.PARTITION));
					break;
				case 36:
					this.enterOuterAlt(u, 36),
						(this.state = 1179),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1180),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1181),
						this.tableIdentifier(),
						(this.state = 1182),
						(u.kw3 = this.match(r.TOUCH));
					break;
				case 37:
					this.enterOuterAlt(u, 37),
						(this.state = 1184),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1185),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1186),
						this.tableIdentifier(),
						(this.state = 1188),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 1187), this.partitionSpec()),
						(this.state = 1190),
						(u.kw3 = this.match(r.COMPACT));
					break;
				case 38:
					this.enterOuterAlt(u, 38),
						(this.state = 1192),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1193),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1194),
						this.tableIdentifier(),
						(this.state = 1196),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 1195), this.partitionSpec()),
						(this.state = 1198),
						(u.kw3 = this.match(r.CONCATENATE));
					break;
				case 39:
					this.enterOuterAlt(u, 39),
						(this.state = 1200),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1201),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1202),
						this.tableIdentifier(),
						(this.state = 1204),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 1203), this.partitionSpec()),
						(this.state = 1206),
						(u.kw3 = this.match(r.SET)),
						(this.state = 1207),
						(u.kw4 = this.match(r.FILEFORMAT));
					break;
				case 40:
					this.enterOuterAlt(u, 40),
						(this.state = 1209),
						(u.kw1 = this.match(r.ALTER)),
						(this.state = 1210),
						(u.kw2 = this.match(r.TABLE)),
						(this.state = 1211),
						this.tableIdentifier(),
						(this.state = 1213),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 1212), this.partitionSpec()),
						(this.state = 1215),
						(u.kw3 = this.match(r.REPLACE)),
						(this.state = 1216),
						(u.kw4 = this.match(r.COLUMNS));
					break;
				case 41:
					this.enterOuterAlt(u, 41),
						(this.state = 1218),
						(u.kw1 = this.match(r.START)),
						(this.state = 1219),
						(u.kw2 = this.match(r.TRANSACTION));
					break;
				case 42:
					this.enterOuterAlt(u, 42), (this.state = 1220), (u.kw1 = this.match(r.COMMIT));
					break;
				case 43:
					this.enterOuterAlt(u, 43), (this.state = 1221), (u.kw1 = this.match(r.ROLLBACK));
					break;
				case 44:
					this.enterOuterAlt(u, 44), (this.state = 1222), (u.kw1 = this.match(r.DFS));
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Xt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_createTableHeader),
			this
		);
	}
	Xt.prototype = Object.create(p.ParserRuleContext.prototype);
	Xt.prototype.constructor = Xt;
	Xt.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	Xt.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Xt.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Xt.prototype.TEMPORARY = function () {
		return this.getToken(r.TEMPORARY, 0);
	};
	Xt.prototype.EXTERNAL = function () {
		return this.getToken(r.EXTERNAL, 0);
	};
	Xt.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	Xt.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	Xt.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	Xt.prototype.accept = function (u) {
		return u instanceof R ? u.visitCreateTableHeader(this) : u.visitChildren(this);
	};
	r.CreateTableHeaderContext = Xt;
	r.prototype.createTableHeader = function () {
		var u = new Xt(this, this._ctx, this.state);
		this.enterRule(u, 22, r.RULE_createTableHeader);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1225),
				this.match(r.CREATE),
				(this.state = 1227),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.TEMPORARY && ((this.state = 1226), this.match(r.TEMPORARY)),
				(this.state = 1230),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.EXTERNAL && ((this.state = 1229), this.match(r.EXTERNAL)),
				(this.state = 1232),
				this.match(r.TABLE),
				(this.state = 1236),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 121, this._ctx);
			i === 1 &&
				((this.state = 1233),
				this.match(r.IF),
				(this.state = 1234),
				this.match(r.NOT),
				(this.state = 1235),
				this.match(r.EXISTS)),
				(this.state = 1238),
				this.multipartIdentifier();
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Fr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_replaceTableHeader),
			this
		);
	}
	Fr.prototype = Object.create(p.ParserRuleContext.prototype);
	Fr.prototype.constructor = Fr;
	Fr.prototype.REPLACE = function () {
		return this.getToken(r.REPLACE, 0);
	};
	Fr.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Fr.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Fr.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	Fr.prototype.OR = function () {
		return this.getToken(r.OR, 0);
	};
	Fr.prototype.accept = function (u) {
		return u instanceof R ? u.visitReplaceTableHeader(this) : u.visitChildren(this);
	};
	r.ReplaceTableHeaderContext = Fr;
	r.prototype.replaceTableHeader = function () {
		var u = new Fr(this, this._ctx, this.state);
		this.enterRule(u, 24, r.RULE_replaceTableHeader);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1242),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.CREATE && ((this.state = 1240), this.match(r.CREATE), (this.state = 1241), this.match(r.OR)),
				(this.state = 1244),
				this.match(r.REPLACE),
				(this.state = 1245),
				this.match(r.TABLE),
				(this.state = 1246),
				this.multipartIdentifier();
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function yt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_bucketSpec),
			this
		);
	}
	yt.prototype = Object.create(p.ParserRuleContext.prototype);
	yt.prototype.constructor = yt;
	yt.prototype.CLUSTERED = function () {
		return this.getToken(r.CLUSTERED, 0);
	};
	yt.prototype.BY = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.BY) : this.getToken(r.BY, u);
	};
	yt.prototype.identifierList = function () {
		return this.getTypedRuleContext(zu, 0);
	};
	yt.prototype.INTO = function () {
		return this.getToken(r.INTO, 0);
	};
	yt.prototype.INTEGER_VALUE = function () {
		return this.getToken(r.INTEGER_VALUE, 0);
	};
	yt.prototype.BUCKETS = function () {
		return this.getToken(r.BUCKETS, 0);
	};
	yt.prototype.SORTED = function () {
		return this.getToken(r.SORTED, 0);
	};
	yt.prototype.orderedIdentifierList = function () {
		return this.getTypedRuleContext(p3, 0);
	};
	yt.prototype.accept = function (u) {
		return u instanceof R ? u.visitBucketSpec(this) : u.visitChildren(this);
	};
	r.BucketSpecContext = yt;
	r.prototype.bucketSpec = function () {
		var u = new yt(this, this._ctx, this.state);
		this.enterRule(u, 26, r.RULE_bucketSpec);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1248),
				this.match(r.CLUSTERED),
				(this.state = 1249),
				this.match(r.BY),
				(this.state = 1250),
				this.identifierList(),
				(this.state = 1254),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.SORTED &&
					((this.state = 1251),
					this.match(r.SORTED),
					(this.state = 1252),
					this.match(r.BY),
					(this.state = 1253),
					this.orderedIdentifierList()),
				(this.state = 1256),
				this.match(r.INTO),
				(this.state = 1257),
				this.match(r.INTEGER_VALUE),
				(this.state = 1258),
				this.match(r.BUCKETS);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_skewSpec),
			this
		);
	}
	qu.prototype = Object.create(p.ParserRuleContext.prototype);
	qu.prototype.constructor = qu;
	qu.prototype.SKEWED = function () {
		return this.getToken(r.SKEWED, 0);
	};
	qu.prototype.BY = function () {
		return this.getToken(r.BY, 0);
	};
	qu.prototype.identifierList = function () {
		return this.getTypedRuleContext(zu, 0);
	};
	qu.prototype.ON = function () {
		return this.getToken(r.ON, 0);
	};
	qu.prototype.constantList = function () {
		return this.getTypedRuleContext(La, 0);
	};
	qu.prototype.nestedConstantList = function () {
		return this.getTypedRuleContext(n3, 0);
	};
	qu.prototype.STORED = function () {
		return this.getToken(r.STORED, 0);
	};
	qu.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	qu.prototype.DIRECTORIES = function () {
		return this.getToken(r.DIRECTORIES, 0);
	};
	qu.prototype.accept = function (u) {
		return u instanceof R ? u.visitSkewSpec(this) : u.visitChildren(this);
	};
	r.SkewSpecContext = qu;
	r.prototype.skewSpec = function () {
		var u = new qu(this, this._ctx, this.state);
		this.enterRule(u, 28, r.RULE_skewSpec);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1260),
				this.match(r.SKEWED),
				(this.state = 1261),
				this.match(r.BY),
				(this.state = 1262),
				this.identifierList(),
				(this.state = 1263),
				this.match(r.ON),
				(this.state = 1266),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 124, this._ctx);
			switch (e) {
				case 1:
					(this.state = 1264), this.constantList();
					break;
				case 2:
					(this.state = 1265), this.nestedConstantList();
					break;
			}
			(this.state = 1271), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 125, this._ctx);
			e === 1 &&
				((this.state = 1268),
				this.match(r.STORED),
				(this.state = 1269),
				this.match(r.AS),
				(this.state = 1270),
				this.match(r.DIRECTORIES));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Zu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_locationSpec),
			(this.location = null),
			this
		);
	}
	Zu.prototype = Object.create(p.ParserRuleContext.prototype);
	Zu.prototype.constructor = Zu;
	Zu.prototype.LOCATION = function () {
		return this.getToken(r.LOCATION, 0);
	};
	Zu.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Zu.prototype.accept = function (u) {
		return u instanceof R ? u.visitLocationSpec(this) : u.visitChildren(this);
	};
	r.LocationSpecContext = Zu;
	r.prototype.locationSpec = function () {
		var u = new Zu(this, this._ctx, this.state);
		this.enterRule(u, 30, r.RULE_locationSpec);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1273),
				this.match(r.LOCATION),
				(this.state = 1274),
				(u.location = this.match(r.STRING));
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function du(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_commentSpec),
			(this.comment = null),
			this
		);
	}
	du.prototype = Object.create(p.ParserRuleContext.prototype);
	du.prototype.constructor = du;
	du.prototype.COMMENT = function () {
		return this.getToken(r.COMMENT, 0);
	};
	du.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	du.prototype.accept = function (u) {
		return u instanceof R ? u.visitCommentSpec(this) : u.visitChildren(this);
	};
	r.CommentSpecContext = du;
	r.prototype.commentSpec = function () {
		var u = new du(this, this._ctx, this.state);
		this.enterRule(u, 32, r.RULE_commentSpec);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1276),
				this.match(r.COMMENT),
				(this.state = 1277),
				(u.comment = this.match(r.STRING));
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function x0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_query),
			this
		);
	}
	x0.prototype = Object.create(p.ParserRuleContext.prototype);
	x0.prototype.constructor = x0;
	x0.prototype.queryTerm = function () {
		return this.getTypedRuleContext(xu, 0);
	};
	x0.prototype.queryOrganization = function () {
		return this.getTypedRuleContext(fu, 0);
	};
	x0.prototype.ctes = function () {
		return this.getTypedRuleContext(xa, 0);
	};
	x0.prototype.accept = function (u) {
		return u instanceof R ? u.visitQuery(this) : u.visitChildren(this);
	};
	r.QueryContext = x0;
	r.prototype.query = function () {
		var u = new x0(this, this._ctx, this.state);
		this.enterRule(u, 34, r.RULE_query);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1280),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.WITH && ((this.state = 1279), this.ctes()),
				(this.state = 1282),
				this.queryTerm(0),
				(this.state = 1283),
				this.queryOrganization();
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function z0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_insertInto),
			this
		);
	}
	z0.prototype = Object.create(p.ParserRuleContext.prototype);
	z0.prototype.constructor = z0;
	z0.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function Pi(u, e) {
		return z0.call(this, u), (this.path = null), z0.prototype.copyFrom.call(this, e), this;
	}
	Pi.prototype = Object.create(z0.prototype);
	Pi.prototype.constructor = Pi;
	r.InsertOverwriteHiveDirContext = Pi;
	Pi.prototype.INSERT = function () {
		return this.getToken(r.INSERT, 0);
	};
	Pi.prototype.OVERWRITE = function () {
		return this.getToken(r.OVERWRITE, 0);
	};
	Pi.prototype.DIRECTORY = function () {
		return this.getToken(r.DIRECTORY, 0);
	};
	Pi.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Pi.prototype.LOCAL = function () {
		return this.getToken(r.LOCAL, 0);
	};
	Pi.prototype.rowFormat = function () {
		return this.getTypedRuleContext(Tu, 0);
	};
	Pi.prototype.createFileFormat = function () {
		return this.getTypedRuleContext(Ct, 0);
	};
	Pi.prototype.accept = function (u) {
		return u instanceof R ? u.visitInsertOverwriteHiveDir(this) : u.visitChildren(this);
	};
	function ve(u, e) {
		return z0.call(this, u), (this.path = null), (this.options = null), z0.prototype.copyFrom.call(this, e), this;
	}
	ve.prototype = Object.create(z0.prototype);
	ve.prototype.constructor = ve;
	r.InsertOverwriteDirContext = ve;
	ve.prototype.INSERT = function () {
		return this.getToken(r.INSERT, 0);
	};
	ve.prototype.OVERWRITE = function () {
		return this.getToken(r.OVERWRITE, 0);
	};
	ve.prototype.DIRECTORY = function () {
		return this.getToken(r.DIRECTORY, 0);
	};
	ve.prototype.tableProvider = function () {
		return this.getTypedRuleContext(we, 0);
	};
	ve.prototype.LOCAL = function () {
		return this.getToken(r.LOCAL, 0);
	};
	ve.prototype.OPTIONS = function () {
		return this.getToken(r.OPTIONS, 0);
	};
	ve.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	ve.prototype.tablePropertyList = function () {
		return this.getTypedRuleContext(m0, 0);
	};
	ve.prototype.accept = function (u) {
		return u instanceof R ? u.visitInsertOverwriteDir(this) : u.visitChildren(this);
	};
	function Qt(u, e) {
		return z0.call(this, u), z0.prototype.copyFrom.call(this, e), this;
	}
	Qt.prototype = Object.create(z0.prototype);
	Qt.prototype.constructor = Qt;
	r.InsertOverwriteTableContext = Qt;
	Qt.prototype.INSERT = function () {
		return this.getToken(r.INSERT, 0);
	};
	Qt.prototype.OVERWRITE = function () {
		return this.getToken(r.OVERWRITE, 0);
	};
	Qt.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Qt.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	Qt.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Qt.prototype.identifierList = function () {
		return this.getTypedRuleContext(zu, 0);
	};
	Qt.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	Qt.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	Qt.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	Qt.prototype.accept = function (u) {
		return u instanceof R ? u.visitInsertOverwriteTable(this) : u.visitChildren(this);
	};
	function qt(u, e) {
		return z0.call(this, u), z0.prototype.copyFrom.call(this, e), this;
	}
	qt.prototype = Object.create(z0.prototype);
	qt.prototype.constructor = qt;
	r.InsertIntoTableContext = qt;
	qt.prototype.INSERT = function () {
		return this.getToken(r.INSERT, 0);
	};
	qt.prototype.INTO = function () {
		return this.getToken(r.INTO, 0);
	};
	qt.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	qt.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	qt.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	qt.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	qt.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	qt.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	qt.prototype.identifierList = function () {
		return this.getTypedRuleContext(zu, 0);
	};
	qt.prototype.accept = function (u) {
		return u instanceof R ? u.visitInsertIntoTable(this) : u.visitChildren(this);
	};
	r.InsertIntoContext = z0;
	r.prototype.insertInto = function () {
		var u = new z0(this, this._ctx, this.state);
		this.enterRule(u, 36, r.RULE_insertInto);
		var e = 0;
		try {
			(this.state = 1346), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 141, this._ctx);
			switch (i) {
				case 1:
					(u = new Qt(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 1285),
						this.match(r.INSERT),
						(this.state = 1286),
						this.match(r.OVERWRITE),
						(this.state = 1288),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 127, this._ctx);
					i === 1 && ((this.state = 1287), this.match(r.TABLE)),
						(this.state = 1290),
						this.multipartIdentifier(),
						(this.state = 1297),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION &&
							((this.state = 1291),
							this.partitionSpec(),
							(this.state = 1295),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === r.IF &&
								((this.state = 1292),
								this.match(r.IF),
								(this.state = 1293),
								this.match(r.NOT),
								(this.state = 1294),
								this.match(r.EXISTS))),
						(this.state = 1300),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 130, this._ctx);
					i === 1 && ((this.state = 1299), this.identifierList());
					break;
				case 2:
					(u = new qt(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 1302),
						this.match(r.INSERT),
						(this.state = 1303),
						this.match(r.INTO),
						(this.state = 1305),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 131, this._ctx);
					i === 1 && ((this.state = 1304), this.match(r.TABLE)),
						(this.state = 1307),
						this.multipartIdentifier(),
						(this.state = 1309),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.PARTITION && ((this.state = 1308), this.partitionSpec()),
						(this.state = 1314),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.IF &&
							((this.state = 1311),
							this.match(r.IF),
							(this.state = 1312),
							this.match(r.NOT),
							(this.state = 1313),
							this.match(r.EXISTS)),
						(this.state = 1317),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 134, this._ctx);
					i === 1 && ((this.state = 1316), this.identifierList());
					break;
				case 3:
					(u = new Pi(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 1319),
						this.match(r.INSERT),
						(this.state = 1320),
						this.match(r.OVERWRITE),
						(this.state = 1322),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.LOCAL && ((this.state = 1321), this.match(r.LOCAL)),
						(this.state = 1324),
						this.match(r.DIRECTORY),
						(this.state = 1325),
						(u.path = this.match(r.STRING)),
						(this.state = 1327),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.ROW && ((this.state = 1326), this.rowFormat()),
						(this.state = 1330),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.STORED && ((this.state = 1329), this.createFileFormat());
					break;
				case 4:
					(u = new ve(this, u)),
						this.enterOuterAlt(u, 4),
						(this.state = 1332),
						this.match(r.INSERT),
						(this.state = 1333),
						this.match(r.OVERWRITE),
						(this.state = 1335),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.LOCAL && ((this.state = 1334), this.match(r.LOCAL)),
						(this.state = 1337),
						this.match(r.DIRECTORY),
						(this.state = 1339),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.STRING && ((this.state = 1338), (u.path = this.match(r.STRING))),
						(this.state = 1341),
						this.tableProvider(),
						(this.state = 1344),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OPTIONS &&
							((this.state = 1342),
							this.match(r.OPTIONS),
							(this.state = 1343),
							(u.options = this.tablePropertyList()));
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ka(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_partitionSpecLocation),
			this
		);
	}
	Ka.prototype = Object.create(p.ParserRuleContext.prototype);
	Ka.prototype.constructor = Ka;
	Ka.prototype.partitionSpec = function () {
		return this.getTypedRuleContext(f0, 0);
	};
	Ka.prototype.locationSpec = function () {
		return this.getTypedRuleContext(Zu, 0);
	};
	Ka.prototype.accept = function (u) {
		return u instanceof R ? u.visitPartitionSpecLocation(this) : u.visitChildren(this);
	};
	r.PartitionSpecLocationContext = Ka;
	r.prototype.partitionSpecLocation = function () {
		var u = new Ka(this, this._ctx, this.state);
		this.enterRule(u, 38, r.RULE_partitionSpecLocation);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1348),
				this.partitionSpec(),
				(this.state = 1350),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.LOCATION && ((this.state = 1349), this.locationSpec());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function f0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_partitionSpec),
			this
		);
	}
	f0.prototype = Object.create(p.ParserRuleContext.prototype);
	f0.prototype.constructor = f0;
	f0.prototype.PARTITION = function () {
		return this.getToken(r.PARTITION, 0);
	};
	f0.prototype.partitionVal = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(bs) : this.getTypedRuleContext(bs, u);
	};
	f0.prototype.accept = function (u) {
		return u instanceof R ? u.visitPartitionSpec(this) : u.visitChildren(this);
	};
	r.PartitionSpecContext = f0;
	r.prototype.partitionSpec = function () {
		var u = new f0(this, this._ctx, this.state);
		this.enterRule(u, 40, r.RULE_partitionSpec);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1352,
					this.match(r.PARTITION),
					this.state = 1353,
					this.match(r.T__1),
					this.state = 1354,
					this.partitionVal(),
					this.state = 1359,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 1355),
					this.match(r.T__3),
					(this.state = 1356),
					this.partitionVal(),
					(this.state = 1361),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 1362), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function bs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_partitionVal),
			this
		);
	}
	bs.prototype = Object.create(p.ParserRuleContext.prototype);
	bs.prototype.constructor = bs;
	bs.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	bs.prototype.EQ = function () {
		return this.getToken(r.EQ, 0);
	};
	bs.prototype.constant = function () {
		return this.getTypedRuleContext(s0, 0);
	};
	bs.prototype.accept = function (u) {
		return u instanceof R ? u.visitPartitionVal(this) : u.visitChildren(this);
	};
	r.PartitionValContext = bs;
	r.prototype.partitionVal = function () {
		var u = new bs(this, this._ctx, this.state);
		this.enterRule(u, 42, r.RULE_partitionVal);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1364),
				this.identifier(),
				(this.state = 1367),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.EQ && ((this.state = 1365), this.match(r.EQ), (this.state = 1366), this.constant());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Zt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_namespace),
			this
		);
	}
	Zt.prototype = Object.create(p.ParserRuleContext.prototype);
	Zt.prototype.constructor = Zt;
	Zt.prototype.NAMESPACE = function () {
		return this.getToken(r.NAMESPACE, 0);
	};
	Zt.prototype.DATABASE = function () {
		return this.getToken(r.DATABASE, 0);
	};
	Zt.prototype.SCHEMA = function () {
		return this.getToken(r.SCHEMA, 0);
	};
	Zt.prototype.accept = function (u) {
		return u instanceof R ? u.visitNamespace(this) : u.visitChildren(this);
	};
	r.NamespaceContext = Zt;
	r.prototype.namespace = function () {
		var u = new Zt(this, this._ctx, this.state);
		this.enterRule(u, 44, r.RULE_namespace);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1369),
				(e = this._input.LA(1)),
				e === r.DATABASE || e === r.NAMESPACE || e === r.SCHEMA
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function kr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_describeFuncName),
			this
		);
	}
	kr.prototype = Object.create(p.ParserRuleContext.prototype);
	kr.prototype.constructor = kr;
	kr.prototype.qualifiedName = function () {
		return this.getTypedRuleContext(Kt, 0);
	};
	kr.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	kr.prototype.comparisonOperator = function () {
		return this.getTypedRuleContext(Wt, 0);
	};
	kr.prototype.arithmeticOperator = function () {
		return this.getTypedRuleContext(Iu, 0);
	};
	kr.prototype.predicateOperator = function () {
		return this.getTypedRuleContext(Vs, 0);
	};
	kr.prototype.accept = function (u) {
		return u instanceof R ? u.visitDescribeFuncName(this) : u.visitChildren(this);
	};
	r.DescribeFuncNameContext = kr;
	r.prototype.describeFuncName = function () {
		var u = new kr(this, this._ctx, this.state);
		this.enterRule(u, 46, r.RULE_describeFuncName);
		try {
			(this.state = 1376), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 145, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 1371), this.qualifiedName();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 1372), this.match(r.STRING);
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 1373), this.comparisonOperator();
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 1374), this.arithmeticOperator();
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 1375), this.predicateOperator();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function r3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_describeColName),
			(this._identifier = null),
			(this.nameParts = []),
			this
		);
	}
	r3.prototype = Object.create(p.ParserRuleContext.prototype);
	r3.prototype.constructor = r3;
	r3.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(B) : this.getTypedRuleContext(B, u);
	};
	r3.prototype.accept = function (u) {
		return u instanceof R ? u.visitDescribeColName(this) : u.visitChildren(this);
	};
	r.DescribeColNameContext = r3;
	r.prototype.describeColName = function () {
		var u = new r3(this, this._ctx, this.state);
		this.enterRule(u, 48, r.RULE_describeColName);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1378,
					u._identifier = this.identifier(),
					u.nameParts.push(u._identifier),
					this.state = 1383,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__4;

			)
				(this.state = 1379),
					this.match(r.T__4),
					(this.state = 1380),
					(u._identifier = this.identifier()),
					u.nameParts.push(u._identifier),
					(this.state = 1385),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function xa(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_ctes),
			this
		);
	}
	xa.prototype = Object.create(p.ParserRuleContext.prototype);
	xa.prototype.constructor = xa;
	xa.prototype.WITH = function () {
		return this.getToken(r.WITH, 0);
	};
	xa.prototype.namedQuery = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Vr) : this.getTypedRuleContext(Vr, u);
	};
	xa.prototype.accept = function (u) {
		return u instanceof R ? u.visitCtes(this) : u.visitChildren(this);
	};
	r.CtesContext = xa;
	r.prototype.ctes = function () {
		var u = new xa(this, this._ctx, this.state);
		this.enterRule(u, 50, r.RULE_ctes);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1386,
					this.match(r.WITH),
					this.state = 1387,
					this.namedQuery(),
					this.state = 1392,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 1388),
					this.match(r.T__3),
					(this.state = 1389),
					this.namedQuery(),
					(this.state = 1394),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Vr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_namedQuery),
			(this.name = null),
			(this.columnAliases = null),
			this
		);
	}
	Vr.prototype = Object.create(p.ParserRuleContext.prototype);
	Vr.prototype.constructor = Vr;
	Vr.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	Vr.prototype.errorCapturingIdentifier = function () {
		return this.getTypedRuleContext(y0, 0);
	};
	Vr.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	Vr.prototype.identifierList = function () {
		return this.getTypedRuleContext(zu, 0);
	};
	Vr.prototype.accept = function (u) {
		return u instanceof R ? u.visitNamedQuery(this) : u.visitChildren(this);
	};
	r.NamedQueryContext = Vr;
	r.prototype.namedQuery = function () {
		var u = new Vr(this, this._ctx, this.state);
		this.enterRule(u, 52, r.RULE_namedQuery);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1395),
				(u.name = this.errorCapturingIdentifier()),
				(this.state = 1397),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 148, this._ctx);
			i === 1 && ((this.state = 1396), (u.columnAliases = this.identifierList())),
				(this.state = 1400),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.AS && ((this.state = 1399), this.match(r.AS)),
				(this.state = 1402),
				this.match(r.T__1),
				(this.state = 1403),
				this.query(),
				(this.state = 1404),
				this.match(r.T__2);
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function we(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_tableProvider),
			this
		);
	}
	we.prototype = Object.create(p.ParserRuleContext.prototype);
	we.prototype.constructor = we;
	we.prototype.USING = function () {
		return this.getToken(r.USING, 0);
	};
	we.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	we.prototype.accept = function (u) {
		return u instanceof R ? u.visitTableProvider(this) : u.visitChildren(this);
	};
	r.TableProviderContext = we;
	r.prototype.tableProvider = function () {
		var u = new we(this, this._ctx, this.state);
		this.enterRule(u, 54, r.RULE_tableProvider);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1406),
				this.match(r.USING),
				(this.state = 1407),
				this.multipartIdentifier();
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_createTableClauses),
			(this.options = null),
			(this.partitioning = null),
			(this.tableProps = null),
			this
		);
	}
	$0.prototype = Object.create(p.ParserRuleContext.prototype);
	$0.prototype.constructor = $0;
	$0.prototype.skewSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(qu) : this.getTypedRuleContext(qu, u);
	};
	$0.prototype.bucketSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(yt) : this.getTypedRuleContext(yt, u);
	};
	$0.prototype.rowFormat = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Tu) : this.getTypedRuleContext(Tu, u);
	};
	$0.prototype.createFileFormat = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ct) : this.getTypedRuleContext(Ct, u);
	};
	$0.prototype.locationSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Zu) : this.getTypedRuleContext(Zu, u);
	};
	$0.prototype.commentSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(du) : this.getTypedRuleContext(du, u);
	};
	$0.prototype.OPTIONS = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.OPTIONS) : this.getToken(r.OPTIONS, u);
	};
	$0.prototype.PARTITIONED = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.PARTITIONED) : this.getToken(r.PARTITIONED, u);
	};
	$0.prototype.BY = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.BY) : this.getToken(r.BY, u);
	};
	$0.prototype.TBLPROPERTIES = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(r.TBLPROPERTIES) : this.getToken(r.TBLPROPERTIES, u)
		);
	};
	$0.prototype.tablePropertyList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(m0) : this.getTypedRuleContext(m0, u);
	};
	$0.prototype.partitionFieldList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(oc) : this.getTypedRuleContext(oc, u);
	};
	$0.prototype.accept = function (u) {
		return u instanceof R ? u.visitCreateTableClauses(this) : u.visitChildren(this);
	};
	r.CreateTableClausesContext = $0;
	r.prototype.createTableClauses = function () {
		var u = new $0(this, this._ctx, this.state);
		this.enterRule(u, 56, r.RULE_createTableClauses);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1), this.state = 1424, this._errHandler.sync(this), e = this._input.LA(1);
				e === r.CLUSTERED ||
				e === r.COMMENT ||
				(((e - 137) & -32) == 0 &&
					((1 << (e - 137)) &
						((1 << (r.LOCATION - 137)) | (1 << (r.OPTIONS - 137)) | (1 << (r.PARTITIONED - 137)))) !==
						0) ||
				(((e - 200) & -32) == 0 &&
					((1 << (e - 200)) &
						((1 << (r.ROW - 200)) |
							(1 << (r.SKEWED - 200)) |
							(1 << (r.STORED - 200)) |
							(1 << (r.TBLPROPERTIES - 200)))) !==
						0);

			) {
				switch (((this.state = 1422), this._errHandler.sync(this), this._input.LA(1))) {
					case r.OPTIONS:
						(this.state = 1409),
							this.match(r.OPTIONS),
							(this.state = 1410),
							(u.options = this.tablePropertyList());
						break;
					case r.PARTITIONED:
						(this.state = 1411),
							this.match(r.PARTITIONED),
							(this.state = 1412),
							this.match(r.BY),
							(this.state = 1413),
							(u.partitioning = this.partitionFieldList());
						break;
					case r.SKEWED:
						(this.state = 1414), this.skewSpec();
						break;
					case r.CLUSTERED:
						(this.state = 1415), this.bucketSpec();
						break;
					case r.ROW:
						(this.state = 1416), this.rowFormat();
						break;
					case r.STORED:
						(this.state = 1417), this.createFileFormat();
						break;
					case r.LOCATION:
						(this.state = 1418), this.locationSpec();
						break;
					case r.COMMENT:
						(this.state = 1419), this.commentSpec();
						break;
					case r.TBLPROPERTIES:
						(this.state = 1420),
							this.match(r.TBLPROPERTIES),
							(this.state = 1421),
							(u.tableProps = this.tablePropertyList());
						break;
					default:
						throw new p.error.NoViableAltException(this);
				}
				(this.state = 1426), this._errHandler.sync(this), (e = this._input.LA(1));
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function m0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_tablePropertyList),
			this
		);
	}
	m0.prototype = Object.create(p.ParserRuleContext.prototype);
	m0.prototype.constructor = m0;
	m0.prototype.tableProperty = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(As) : this.getTypedRuleContext(As, u);
	};
	m0.prototype.accept = function (u) {
		return u instanceof R ? u.visitTablePropertyList(this) : u.visitChildren(this);
	};
	r.TablePropertyListContext = m0;
	r.prototype.tablePropertyList = function () {
		var u = new m0(this, this._ctx, this.state);
		this.enterRule(u, 58, r.RULE_tablePropertyList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1427,
					this.match(r.T__1),
					this.state = 1428,
					this.tableProperty(),
					this.state = 1433,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 1429),
					this.match(r.T__3),
					(this.state = 1430),
					this.tableProperty(),
					(this.state = 1435),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 1436), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function As(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_tableProperty),
			(this.key = null),
			(this.value = null),
			this
		);
	}
	As.prototype = Object.create(p.ParserRuleContext.prototype);
	As.prototype.constructor = As;
	As.prototype.tablePropertyKey = function () {
		return this.getTypedRuleContext(Oa, 0);
	};
	As.prototype.tablePropertyValue = function () {
		return this.getTypedRuleContext(Ws, 0);
	};
	As.prototype.EQ = function () {
		return this.getToken(r.EQ, 0);
	};
	As.prototype.accept = function (u) {
		return u instanceof R ? u.visitTableProperty(this) : u.visitChildren(this);
	};
	r.TablePropertyContext = As;
	r.prototype.tableProperty = function () {
		var u = new As(this, this._ctx, this.state);
		this.enterRule(u, 60, r.RULE_tableProperty);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1438),
				(u.key = this.tablePropertyKey()),
				(this.state = 1443),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === r.FALSE ||
					e === r.TRUE ||
					e === r.EQ ||
					(((e - 282) & -32) == 0 &&
						((1 << (e - 282)) &
							((1 << (r.STRING - 282)) |
								(1 << (r.INTEGER_VALUE - 282)) |
								(1 << (r.DECIMAL_VALUE - 282)))) !==
							0)) &&
					((this.state = 1440),
					this._errHandler.sync(this),
					(e = this._input.LA(1)),
					e === r.EQ && ((this.state = 1439), this.match(r.EQ)),
					(this.state = 1442),
					(u.value = this.tablePropertyValue()));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Oa(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_tablePropertyKey),
			this
		);
	}
	Oa.prototype = Object.create(p.ParserRuleContext.prototype);
	Oa.prototype.constructor = Oa;
	Oa.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(B) : this.getTypedRuleContext(B, u);
	};
	Oa.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Oa.prototype.accept = function (u) {
		return u instanceof R ? u.visitTablePropertyKey(this) : u.visitChildren(this);
	};
	r.TablePropertyKeyContext = Oa;
	r.prototype.tablePropertyKey = function () {
		var u = new Oa(this, this._ctx, this.state);
		this.enterRule(u, 62, r.RULE_tablePropertyKey);
		var e = 0;
		try {
			(this.state = 1454), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 156, this._ctx);
			switch (i) {
				case 1:
					for (
						this.enterOuterAlt(u, 1),
							this.state = 1445,
							this.identifier(),
							this.state = 1450,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.T__4;

					)
						(this.state = 1446),
							this.match(r.T__4),
							(this.state = 1447),
							this.identifier(),
							(this.state = 1452),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 1453), this.match(r.STRING);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ws(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_tablePropertyValue),
			this
		);
	}
	Ws.prototype = Object.create(p.ParserRuleContext.prototype);
	Ws.prototype.constructor = Ws;
	Ws.prototype.INTEGER_VALUE = function () {
		return this.getToken(r.INTEGER_VALUE, 0);
	};
	Ws.prototype.DECIMAL_VALUE = function () {
		return this.getToken(r.DECIMAL_VALUE, 0);
	};
	Ws.prototype.booleanValue = function () {
		return this.getTypedRuleContext(Ga, 0);
	};
	Ws.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Ws.prototype.accept = function (u) {
		return u instanceof R ? u.visitTablePropertyValue(this) : u.visitChildren(this);
	};
	r.TablePropertyValueContext = Ws;
	r.prototype.tablePropertyValue = function () {
		var u = new Ws(this, this._ctx, this.state);
		this.enterRule(u, 64, r.RULE_tablePropertyValue);
		try {
			switch (((this.state = 1460), this._errHandler.sync(this), this._input.LA(1))) {
				case r.INTEGER_VALUE:
					this.enterOuterAlt(u, 1), (this.state = 1456), this.match(r.INTEGER_VALUE);
					break;
				case r.DECIMAL_VALUE:
					this.enterOuterAlt(u, 2), (this.state = 1457), this.match(r.DECIMAL_VALUE);
					break;
				case r.FALSE:
				case r.TRUE:
					this.enterOuterAlt(u, 3), (this.state = 1458), this.booleanValue();
					break;
				case r.STRING:
					this.enterOuterAlt(u, 4), (this.state = 1459), this.match(r.STRING);
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function La(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_constantList),
			this
		);
	}
	La.prototype = Object.create(p.ParserRuleContext.prototype);
	La.prototype.constructor = La;
	La.prototype.constant = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(s0) : this.getTypedRuleContext(s0, u);
	};
	La.prototype.accept = function (u) {
		return u instanceof R ? u.visitConstantList(this) : u.visitChildren(this);
	};
	r.ConstantListContext = La;
	r.prototype.constantList = function () {
		var u = new La(this, this._ctx, this.state);
		this.enterRule(u, 66, r.RULE_constantList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1462,
					this.match(r.T__1),
					this.state = 1463,
					this.constant(),
					this.state = 1468,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 1464),
					this.match(r.T__3),
					(this.state = 1465),
					this.constant(),
					(this.state = 1470),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 1471), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function n3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_nestedConstantList),
			this
		);
	}
	n3.prototype = Object.create(p.ParserRuleContext.prototype);
	n3.prototype.constructor = n3;
	n3.prototype.constantList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(La) : this.getTypedRuleContext(La, u);
	};
	n3.prototype.accept = function (u) {
		return u instanceof R ? u.visitNestedConstantList(this) : u.visitChildren(this);
	};
	r.NestedConstantListContext = n3;
	r.prototype.nestedConstantList = function () {
		var u = new n3(this, this._ctx, this.state);
		this.enterRule(u, 68, r.RULE_nestedConstantList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1473,
					this.match(r.T__1),
					this.state = 1474,
					this.constantList(),
					this.state = 1479,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 1475),
					this.match(r.T__3),
					(this.state = 1476),
					this.constantList(),
					(this.state = 1481),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 1482), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ct(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_createFileFormat),
			this
		);
	}
	Ct.prototype = Object.create(p.ParserRuleContext.prototype);
	Ct.prototype.constructor = Ct;
	Ct.prototype.STORED = function () {
		return this.getToken(r.STORED, 0);
	};
	Ct.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	Ct.prototype.fileFormat = function () {
		return this.getTypedRuleContext(gi, 0);
	};
	Ct.prototype.BY = function () {
		return this.getToken(r.BY, 0);
	};
	Ct.prototype.storageHandler = function () {
		return this.getTypedRuleContext(Ks, 0);
	};
	Ct.prototype.accept = function (u) {
		return u instanceof R ? u.visitCreateFileFormat(this) : u.visitChildren(this);
	};
	r.CreateFileFormatContext = Ct;
	r.prototype.createFileFormat = function () {
		var u = new Ct(this, this._ctx, this.state);
		this.enterRule(u, 70, r.RULE_createFileFormat);
		try {
			(this.state = 1490), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 160, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1484),
						this.match(r.STORED),
						(this.state = 1485),
						this.match(r.AS),
						(this.state = 1486),
						this.fileFormat();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 1487),
						this.match(r.STORED),
						(this.state = 1488),
						this.match(r.BY),
						(this.state = 1489),
						this.storageHandler();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function gi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_fileFormat),
			this
		);
	}
	gi.prototype = Object.create(p.ParserRuleContext.prototype);
	gi.prototype.constructor = gi;
	gi.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function J1(u, e) {
		return gi.call(this, u), (this.inFmt = null), (this.outFmt = null), gi.prototype.copyFrom.call(this, e), this;
	}
	J1.prototype = Object.create(gi.prototype);
	J1.prototype.constructor = J1;
	r.TableFileFormatContext = J1;
	J1.prototype.INPUTFORMAT = function () {
		return this.getToken(r.INPUTFORMAT, 0);
	};
	J1.prototype.OUTPUTFORMAT = function () {
		return this.getToken(r.OUTPUTFORMAT, 0);
	};
	J1.prototype.STRING = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.STRING) : this.getToken(r.STRING, u);
	};
	J1.prototype.accept = function (u) {
		return u instanceof R ? u.visitTableFileFormat(this) : u.visitChildren(this);
	};
	function Yh(u, e) {
		return gi.call(this, u), gi.prototype.copyFrom.call(this, e), this;
	}
	Yh.prototype = Object.create(gi.prototype);
	Yh.prototype.constructor = Yh;
	r.GenericFileFormatContext = Yh;
	Yh.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Yh.prototype.accept = function (u) {
		return u instanceof R ? u.visitGenericFileFormat(this) : u.visitChildren(this);
	};
	r.FileFormatContext = gi;
	r.prototype.fileFormat = function () {
		var u = new gi(this, this._ctx, this.state);
		this.enterRule(u, 72, r.RULE_fileFormat);
		try {
			(this.state = 1497), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 161, this._ctx);
			switch (e) {
				case 1:
					(u = new J1(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 1492),
						this.match(r.INPUTFORMAT),
						(this.state = 1493),
						(u.inFmt = this.match(r.STRING)),
						(this.state = 1494),
						this.match(r.OUTPUTFORMAT),
						(this.state = 1495),
						(u.outFmt = this.match(r.STRING));
					break;
				case 2:
					(u = new Yh(this, u)), this.enterOuterAlt(u, 2), (this.state = 1496), this.identifier();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ks(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_storageHandler),
			this
		);
	}
	Ks.prototype = Object.create(p.ParserRuleContext.prototype);
	Ks.prototype.constructor = Ks;
	Ks.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Ks.prototype.WITH = function () {
		return this.getToken(r.WITH, 0);
	};
	Ks.prototype.SERDEPROPERTIES = function () {
		return this.getToken(r.SERDEPROPERTIES, 0);
	};
	Ks.prototype.tablePropertyList = function () {
		return this.getTypedRuleContext(m0, 0);
	};
	Ks.prototype.accept = function (u) {
		return u instanceof R ? u.visitStorageHandler(this) : u.visitChildren(this);
	};
	r.StorageHandlerContext = Ks;
	r.prototype.storageHandler = function () {
		var u = new Ks(this, this._ctx, this.state);
		this.enterRule(u, 74, r.RULE_storageHandler);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1499),
				this.match(r.STRING),
				(this.state = 1503),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 162, this._ctx);
			e === 1 &&
				((this.state = 1500),
				this.match(r.WITH),
				(this.state = 1501),
				this.match(r.SERDEPROPERTIES),
				(this.state = 1502),
				this.tablePropertyList());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Sa(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_resource),
			this
		);
	}
	Sa.prototype = Object.create(p.ParserRuleContext.prototype);
	Sa.prototype.constructor = Sa;
	Sa.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Sa.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Sa.prototype.accept = function (u) {
		return u instanceof R ? u.visitResource(this) : u.visitChildren(this);
	};
	r.ResourceContext = Sa;
	r.prototype.resource = function () {
		var u = new Sa(this, this._ctx, this.state);
		this.enterRule(u, 76, r.RULE_resource);
		try {
			this.enterOuterAlt(u, 1), (this.state = 1505), this.identifier(), (this.state = 1506), this.match(r.STRING);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function D0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_dmlStatementNoWith),
			this
		);
	}
	D0.prototype = Object.create(p.ParserRuleContext.prototype);
	D0.prototype.constructor = D0;
	D0.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function xs(u, e) {
		return D0.call(this, u), D0.prototype.copyFrom.call(this, e), this;
	}
	xs.prototype = Object.create(D0.prototype);
	xs.prototype.constructor = xs;
	r.DeleteFromTableContext = xs;
	xs.prototype.DELETE = function () {
		return this.getToken(r.DELETE, 0);
	};
	xs.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	xs.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	xs.prototype.tableAlias = function () {
		return this.getTypedRuleContext(Su, 0);
	};
	xs.prototype.whereClause = function () {
		return this.getTypedRuleContext(vi, 0);
	};
	xs.prototype.accept = function (u) {
		return u instanceof R ? u.visitDeleteFromTable(this) : u.visitChildren(this);
	};
	function z1(u, e) {
		return D0.call(this, u), D0.prototype.copyFrom.call(this, e), this;
	}
	z1.prototype = Object.create(D0.prototype);
	z1.prototype.constructor = z1;
	r.SingleInsertQueryContext = z1;
	z1.prototype.insertInto = function () {
		return this.getTypedRuleContext(z0, 0);
	};
	z1.prototype.queryTerm = function () {
		return this.getTypedRuleContext(xu, 0);
	};
	z1.prototype.queryOrganization = function () {
		return this.getTypedRuleContext(fu, 0);
	};
	z1.prototype.accept = function (u) {
		return u instanceof R ? u.visitSingleInsertQuery(this) : u.visitChildren(this);
	};
	function s3(u, e) {
		return D0.call(this, u), D0.prototype.copyFrom.call(this, e), this;
	}
	s3.prototype = Object.create(D0.prototype);
	s3.prototype.constructor = s3;
	r.MultiInsertQueryContext = s3;
	s3.prototype.fromClause = function () {
		return this.getTypedRuleContext(He, 0);
	};
	s3.prototype.multiInsertQueryBody = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ia) : this.getTypedRuleContext(Ia, u);
	};
	s3.prototype.accept = function (u) {
		return u instanceof R ? u.visitMultiInsertQuery(this) : u.visitChildren(this);
	};
	function Os(u, e) {
		return D0.call(this, u), D0.prototype.copyFrom.call(this, e), this;
	}
	Os.prototype = Object.create(D0.prototype);
	Os.prototype.constructor = Os;
	r.UpdateTableContext = Os;
	Os.prototype.UPDATE = function () {
		return this.getToken(r.UPDATE, 0);
	};
	Os.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Os.prototype.tableAlias = function () {
		return this.getTypedRuleContext(Su, 0);
	};
	Os.prototype.setClause = function () {
		return this.getTypedRuleContext(tc, 0);
	};
	Os.prototype.whereClause = function () {
		return this.getTypedRuleContext(vi, 0);
	};
	Os.prototype.accept = function (u) {
		return u instanceof R ? u.visitUpdateTable(this) : u.visitChildren(this);
	};
	function bt(u, e) {
		return (
			D0.call(this, u),
			(this.target = null),
			(this.targetAlias = null),
			(this.source = null),
			(this.sourceQuery = null),
			(this.sourceAlias = null),
			(this.mergeCondition = null),
			D0.prototype.copyFrom.call(this, e),
			this
		);
	}
	bt.prototype = Object.create(D0.prototype);
	bt.prototype.constructor = bt;
	r.MergeIntoTableContext = bt;
	bt.prototype.MERGE = function () {
		return this.getToken(r.MERGE, 0);
	};
	bt.prototype.INTO = function () {
		return this.getToken(r.INTO, 0);
	};
	bt.prototype.USING = function () {
		return this.getToken(r.USING, 0);
	};
	bt.prototype.ON = function () {
		return this.getToken(r.ON, 0);
	};
	bt.prototype.multipartIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(D) : this.getTypedRuleContext(D, u);
	};
	bt.prototype.tableAlias = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Su) : this.getTypedRuleContext(Su, u);
	};
	bt.prototype.booleanExpression = function () {
		return this.getTypedRuleContext(e0, 0);
	};
	bt.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	bt.prototype.matchedClause = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Me) : this.getTypedRuleContext(Me, u);
	};
	bt.prototype.notMatchedClause = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Jt) : this.getTypedRuleContext(Jt, u);
	};
	bt.prototype.accept = function (u) {
		return u instanceof R ? u.visitMergeIntoTable(this) : u.visitChildren(this);
	};
	r.DmlStatementNoWithContext = D0;
	r.prototype.dmlStatementNoWith = function () {
		var u = new D0(this, this._ctx, this.state);
		this.enterRule(u, 78, r.RULE_dmlStatementNoWith);
		var e = 0;
		try {
			switch (((this.state = 1559), this._errHandler.sync(this), this._input.LA(1))) {
				case r.INSERT:
					(u = new z1(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 1508),
						this.insertInto(),
						(this.state = 1509),
						this.queryTerm(0),
						(this.state = 1510),
						this.queryOrganization();
					break;
				case r.FROM:
					(u = new s3(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 1512),
						this.fromClause(),
						(this.state = 1514),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
					do
						(this.state = 1513),
							this.multiInsertQueryBody(),
							(this.state = 1516),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					while (e === r.INSERT);
					break;
				case r.DELETE:
					(u = new xs(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 1518),
						this.match(r.DELETE),
						(this.state = 1519),
						this.match(r.FROM),
						(this.state = 1520),
						this.multipartIdentifier(),
						(this.state = 1521),
						this.tableAlias(),
						(this.state = 1523),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.WHERE && ((this.state = 1522), this.whereClause());
					break;
				case r.UPDATE:
					(u = new Os(this, u)),
						this.enterOuterAlt(u, 4),
						(this.state = 1525),
						this.match(r.UPDATE),
						(this.state = 1526),
						this.multipartIdentifier(),
						(this.state = 1527),
						this.tableAlias(),
						(this.state = 1528),
						this.setClause(),
						(this.state = 1530),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.WHERE && ((this.state = 1529), this.whereClause());
					break;
				case r.MERGE:
					(u = new bt(this, u)),
						this.enterOuterAlt(u, 5),
						(this.state = 1532),
						this.match(r.MERGE),
						(this.state = 1533),
						this.match(r.INTO),
						(this.state = 1534),
						(u.target = this.multipartIdentifier()),
						(this.state = 1535),
						(u.targetAlias = this.tableAlias()),
						(this.state = 1536),
						this.match(r.USING),
						(this.state = 1542),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 166, this._ctx);
					switch (i) {
						case 1:
							(this.state = 1537), (u.source = this.multipartIdentifier());
							break;
						case 2:
							(this.state = 1538),
								this.match(r.T__1),
								(this.state = 1539),
								(u.sourceQuery = this.query()),
								(this.state = 1540),
								this.match(r.T__2);
							break;
					}
					(this.state = 1544),
						(u.sourceAlias = this.tableAlias()),
						(this.state = 1545),
						this.match(r.ON),
						(this.state = 1546),
						(u.mergeCondition = this.booleanExpression(0)),
						(this.state = 1550),
						this._errHandler.sync(this);
					for (
						var n = this._interp.adaptivePredict(this._input, 167, this._ctx);
						n != 2 && n != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						n === 1 && ((this.state = 1547), this.matchedClause()),
							(this.state = 1552),
							this._errHandler.sync(this),
							(n = this._interp.adaptivePredict(this._input, 167, this._ctx));
					for (this.state = 1556, this._errHandler.sync(this), e = this._input.LA(1); e === r.WHEN; )
						(this.state = 1553),
							this.notMatchedClause(),
							(this.state = 1558),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
		} catch (a) {
			if (a instanceof p.error.RecognitionException)
				(u.exception = a), this._errHandler.reportError(this, a), this._errHandler.recover(this, a);
			else throw a;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function fu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_queryOrganization),
			(this._sortItem = null),
			(this.order = []),
			(this._expression = null),
			(this.clusterBy = []),
			(this.distributeBy = []),
			(this.sort = []),
			(this.limit = null),
			this
		);
	}
	fu.prototype = Object.create(p.ParserRuleContext.prototype);
	fu.prototype.constructor = fu;
	fu.prototype.ORDER = function () {
		return this.getToken(r.ORDER, 0);
	};
	fu.prototype.BY = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.BY) : this.getToken(r.BY, u);
	};
	fu.prototype.CLUSTER = function () {
		return this.getToken(r.CLUSTER, 0);
	};
	fu.prototype.DISTRIBUTE = function () {
		return this.getToken(r.DISTRIBUTE, 0);
	};
	fu.prototype.SORT = function () {
		return this.getToken(r.SORT, 0);
	};
	fu.prototype.windowClause = function () {
		return this.getTypedRuleContext(Gs, 0);
	};
	fu.prototype.LIMIT = function () {
		return this.getToken(r.LIMIT, 0);
	};
	fu.prototype.sortItem = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(At) : this.getTypedRuleContext(At, u);
	};
	fu.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	fu.prototype.ALL = function () {
		return this.getToken(r.ALL, 0);
	};
	fu.prototype.accept = function (u) {
		return u instanceof R ? u.visitQueryOrganization(this) : u.visitChildren(this);
	};
	r.QueryOrganizationContext = fu;
	r.prototype.queryOrganization = function () {
		var u = new fu(this, this._ctx, this.state);
		this.enterRule(u, 80, r.RULE_queryOrganization);
		try {
			this.enterOuterAlt(u, 1), (this.state = 1571), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 171, this._ctx);
			if (i === 1) {
				(this.state = 1561),
					this.match(r.ORDER),
					(this.state = 1562),
					this.match(r.BY),
					(this.state = 1563),
					(u._sortItem = this.sortItem()),
					u.order.push(u._sortItem),
					(this.state = 1568),
					this._errHandler.sync(this);
				for (
					var e = this._interp.adaptivePredict(this._input, 170, this._ctx);
					e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

				)
					e === 1 &&
						((this.state = 1564),
						this.match(r.T__3),
						(this.state = 1565),
						(u._sortItem = this.sortItem()),
						u.order.push(u._sortItem)),
						(this.state = 1570),
						this._errHandler.sync(this),
						(e = this._interp.adaptivePredict(this._input, 170, this._ctx));
			}
			(this.state = 1583), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 173, this._ctx);
			if (i === 1) {
				(this.state = 1573),
					this.match(r.CLUSTER),
					(this.state = 1574),
					this.match(r.BY),
					(this.state = 1575),
					(u._expression = this.expression()),
					u.clusterBy.push(u._expression),
					(this.state = 1580),
					this._errHandler.sync(this);
				for (
					var e = this._interp.adaptivePredict(this._input, 172, this._ctx);
					e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

				)
					e === 1 &&
						((this.state = 1576),
						this.match(r.T__3),
						(this.state = 1577),
						(u._expression = this.expression()),
						u.clusterBy.push(u._expression)),
						(this.state = 1582),
						this._errHandler.sync(this),
						(e = this._interp.adaptivePredict(this._input, 172, this._ctx));
			}
			(this.state = 1595), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 175, this._ctx);
			if (i === 1) {
				(this.state = 1585),
					this.match(r.DISTRIBUTE),
					(this.state = 1586),
					this.match(r.BY),
					(this.state = 1587),
					(u._expression = this.expression()),
					u.distributeBy.push(u._expression),
					(this.state = 1592),
					this._errHandler.sync(this);
				for (
					var e = this._interp.adaptivePredict(this._input, 174, this._ctx);
					e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

				)
					e === 1 &&
						((this.state = 1588),
						this.match(r.T__3),
						(this.state = 1589),
						(u._expression = this.expression()),
						u.distributeBy.push(u._expression)),
						(this.state = 1594),
						this._errHandler.sync(this),
						(e = this._interp.adaptivePredict(this._input, 174, this._ctx));
			}
			(this.state = 1607), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 177, this._ctx);
			if (i === 1) {
				(this.state = 1597),
					this.match(r.SORT),
					(this.state = 1598),
					this.match(r.BY),
					(this.state = 1599),
					(u._sortItem = this.sortItem()),
					u.sort.push(u._sortItem),
					(this.state = 1604),
					this._errHandler.sync(this);
				for (
					var e = this._interp.adaptivePredict(this._input, 176, this._ctx);
					e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

				)
					e === 1 &&
						((this.state = 1600),
						this.match(r.T__3),
						(this.state = 1601),
						(u._sortItem = this.sortItem()),
						u.sort.push(u._sortItem)),
						(this.state = 1606),
						this._errHandler.sync(this),
						(e = this._interp.adaptivePredict(this._input, 176, this._ctx));
			}
			(this.state = 1610), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 178, this._ctx);
			i === 1 && ((this.state = 1609), this.windowClause()), (this.state = 1617), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 180, this._ctx);
			if (i === 1) {
				(this.state = 1612), this.match(r.LIMIT), (this.state = 1615), this._errHandler.sync(this);
				var i = this._interp.adaptivePredict(this._input, 179, this._ctx);
				switch (i) {
					case 1:
						(this.state = 1613), this.match(r.ALL);
						break;
					case 2:
						(this.state = 1614), (u.limit = this.expression());
						break;
				}
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ia(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_multiInsertQueryBody),
			this
		);
	}
	Ia.prototype = Object.create(p.ParserRuleContext.prototype);
	Ia.prototype.constructor = Ia;
	Ia.prototype.insertInto = function () {
		return this.getTypedRuleContext(z0, 0);
	};
	Ia.prototype.fromStatementBody = function () {
		return this.getTypedRuleContext(Ju, 0);
	};
	Ia.prototype.accept = function (u) {
		return u instanceof R ? u.visitMultiInsertQueryBody(this) : u.visitChildren(this);
	};
	r.MultiInsertQueryBodyContext = Ia;
	r.prototype.multiInsertQueryBody = function () {
		var u = new Ia(this, this._ctx, this.state);
		this.enterRule(u, 82, r.RULE_multiInsertQueryBody);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1619),
				this.insertInto(),
				(this.state = 1620),
				this.fromStatementBody();
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function xu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_queryTerm),
			this
		);
	}
	xu.prototype = Object.create(p.ParserRuleContext.prototype);
	xu.prototype.constructor = xu;
	xu.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function Gh(u, e) {
		return xu.call(this, u), xu.prototype.copyFrom.call(this, e), this;
	}
	Gh.prototype = Object.create(xu.prototype);
	Gh.prototype.constructor = Gh;
	r.QueryTermDefaultContext = Gh;
	Gh.prototype.queryPrimary = function () {
		return this.getTypedRuleContext(U0, 0);
	};
	Gh.prototype.accept = function (u) {
		return u instanceof R ? u.visitQueryTermDefault(this) : u.visitChildren(this);
	};
	function Oe(u, e) {
		return (
			xu.call(this, u),
			(this.left = null),
			(this.operator = null),
			(this.right = null),
			xu.prototype.copyFrom.call(this, e),
			this
		);
	}
	Oe.prototype = Object.create(xu.prototype);
	Oe.prototype.constructor = Oe;
	r.SetOperationContext = Oe;
	Oe.prototype.queryTerm = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(xu) : this.getTypedRuleContext(xu, u);
	};
	Oe.prototype.INTERSECT = function () {
		return this.getToken(r.INTERSECT, 0);
	};
	Oe.prototype.UNION = function () {
		return this.getToken(r.UNION, 0);
	};
	Oe.prototype.EXCEPT = function () {
		return this.getToken(r.EXCEPT, 0);
	};
	Oe.prototype.SETMINUS = function () {
		return this.getToken(r.SETMINUS, 0);
	};
	Oe.prototype.setQuantifier = function () {
		return this.getTypedRuleContext(Ns, 0);
	};
	Oe.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetOperation(this) : u.visitChildren(this);
	};
	r.prototype.queryTerm = function (u) {
		u === void 0 && (u = 0);
		var e = this._ctx,
			i = this.state,
			n = new xu(this, this._ctx, i),
			a = n,
			o = 84;
		this.enterRecursionRule(n, 84, r.RULE_queryTerm, u);
		var c = 0;
		try {
			this.enterOuterAlt(n, 1),
				(n = new Gh(this, n)),
				(this._ctx = n),
				(a = n),
				(this.state = 1623),
				this.queryPrimary(),
				(this._ctx.stop = this._input.LT(-1)),
				(this.state = 1648),
				this._errHandler.sync(this);
			for (
				var h = this._interp.adaptivePredict(this._input, 185, this._ctx);
				h != 2 && h != p.atn.ATN.INVALID_ALT_NUMBER;

			) {
				if (h === 1) {
					this._parseListeners !== null && this.triggerExitRuleEvent(),
						(a = n),
						(this.state = 1646),
						this._errHandler.sync(this);
					var _ = this._interp.adaptivePredict(this._input, 184, this._ctx);
					switch (_) {
						case 1:
							if (
								((n = new Oe(this, new xu(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_queryTerm),
								(this.state = 1625),
								!this.precpred(this._ctx, 3))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 3)');
							if (((this.state = 1626), !legacy_setops_precedence_enabled))
								throw new p.error.FailedPredicateException(this, 'legacy_setops_precedence_enabled');
							(this.state = 1627),
								(n.operator = this._input.LT(1)),
								(c = this._input.LA(1)),
								c === r.EXCEPT || c === r.INTERSECT || c === r.SETMINUS || c === r.UNION
									? (this._errHandler.reportMatch(this), this.consume())
									: (n.operator = this._errHandler.recoverInline(this)),
								(this.state = 1629),
								this._errHandler.sync(this),
								(c = this._input.LA(1)),
								(c === r.ALL || c === r.DISTINCT) && ((this.state = 1628), this.setQuantifier()),
								(this.state = 1631),
								(n.right = this.queryTerm(4));
							break;
						case 2:
							if (
								((n = new Oe(this, new xu(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_queryTerm),
								(this.state = 1632),
								!this.precpred(this._ctx, 2))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 2)');
							if (((this.state = 1633), legacy_setops_precedence_enabled))
								throw new p.error.FailedPredicateException(this, '!legacy_setops_precedence_enabled');
							(this.state = 1634),
								(n.operator = this.match(r.INTERSECT)),
								(this.state = 1636),
								this._errHandler.sync(this),
								(c = this._input.LA(1)),
								(c === r.ALL || c === r.DISTINCT) && ((this.state = 1635), this.setQuantifier()),
								(this.state = 1638),
								(n.right = this.queryTerm(3));
							break;
						case 3:
							if (
								((n = new Oe(this, new xu(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_queryTerm),
								(this.state = 1639),
								!this.precpred(this._ctx, 1))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 1)');
							if (((this.state = 1640), legacy_setops_precedence_enabled))
								throw new p.error.FailedPredicateException(this, '!legacy_setops_precedence_enabled');
							(this.state = 1641),
								(n.operator = this._input.LT(1)),
								(c = this._input.LA(1)),
								c === r.EXCEPT || c === r.SETMINUS || c === r.UNION
									? (this._errHandler.reportMatch(this), this.consume())
									: (n.operator = this._errHandler.recoverInline(this)),
								(this.state = 1643),
								this._errHandler.sync(this),
								(c = this._input.LA(1)),
								(c === r.ALL || c === r.DISTINCT) && ((this.state = 1642), this.setQuantifier()),
								(this.state = 1645),
								(n.right = this.queryTerm(2));
							break;
					}
				}
				(this.state = 1650),
					this._errHandler.sync(this),
					(h = this._interp.adaptivePredict(this._input, 185, this._ctx));
			}
		} catch (y) {
			if (y instanceof p.error.RecognitionException)
				(n.exception = y), this._errHandler.reportError(this, y), this._errHandler.recover(this, y);
			else throw y;
		} finally {
			this.unrollRecursionContexts(e);
		}
		return n;
	};
	function U0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_queryPrimary),
			this
		);
	}
	U0.prototype = Object.create(p.ParserRuleContext.prototype);
	U0.prototype.constructor = U0;
	U0.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function jh(u, e) {
		return U0.call(this, u), U0.prototype.copyFrom.call(this, e), this;
	}
	jh.prototype = Object.create(U0.prototype);
	jh.prototype.constructor = jh;
	r.SubqueryContext = jh;
	jh.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	jh.prototype.accept = function (u) {
		return u instanceof R ? u.visitSubquery(this) : u.visitChildren(this);
	};
	function Xh(u, e) {
		return U0.call(this, u), U0.prototype.copyFrom.call(this, e), this;
	}
	Xh.prototype = Object.create(U0.prototype);
	Xh.prototype.constructor = Xh;
	r.QueryPrimaryDefaultContext = Xh;
	Xh.prototype.querySpecification = function () {
		return this.getTypedRuleContext(Di, 0);
	};
	Xh.prototype.accept = function (u) {
		return u instanceof R ? u.visitQueryPrimaryDefault(this) : u.visitChildren(this);
	};
	function Qh(u, e) {
		return U0.call(this, u), U0.prototype.copyFrom.call(this, e), this;
	}
	Qh.prototype = Object.create(U0.prototype);
	Qh.prototype.constructor = Qh;
	r.InlineTableDefault1Context = Qh;
	Qh.prototype.inlineTable = function () {
		return this.getTypedRuleContext(vs, 0);
	};
	Qh.prototype.accept = function (u) {
		return u instanceof R ? u.visitInlineTableDefault1(this) : u.visitChildren(this);
	};
	function qh(u, e) {
		return U0.call(this, u), U0.prototype.copyFrom.call(this, e), this;
	}
	qh.prototype = Object.create(U0.prototype);
	qh.prototype.constructor = qh;
	r.FromStmtContext = qh;
	qh.prototype.fromStatement = function () {
		return this.getTypedRuleContext($1, 0);
	};
	qh.prototype.accept = function (u) {
		return u instanceof R ? u.visitFromStmt(this) : u.visitChildren(this);
	};
	function a3(u, e) {
		return U0.call(this, u), U0.prototype.copyFrom.call(this, e), this;
	}
	a3.prototype = Object.create(U0.prototype);
	a3.prototype.constructor = a3;
	r.TableContext = a3;
	a3.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	a3.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	a3.prototype.accept = function (u) {
		return u instanceof R ? u.visitTable(this) : u.visitChildren(this);
	};
	r.QueryPrimaryContext = U0;
	r.prototype.queryPrimary = function () {
		var u = new U0(this, this._ctx, this.state);
		this.enterRule(u, 86, r.RULE_queryPrimary);
		try {
			switch (((this.state = 1660), this._errHandler.sync(this), this._input.LA(1))) {
				case r.MAP:
				case r.REDUCE:
				case r.SELECT:
					(u = new Xh(this, u)), this.enterOuterAlt(u, 1), (this.state = 1651), this.querySpecification();
					break;
				case r.FROM:
					(u = new qh(this, u)), this.enterOuterAlt(u, 2), (this.state = 1652), this.fromStatement();
					break;
				case r.TABLE:
					(u = new a3(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 1653),
						this.match(r.TABLE),
						(this.state = 1654),
						this.multipartIdentifier();
					break;
				case r.VALUES:
					(u = new Qh(this, u)), this.enterOuterAlt(u, 4), (this.state = 1655), this.inlineTable();
					break;
				case r.T__1:
					(u = new jh(this, u)),
						this.enterOuterAlt(u, 5),
						(this.state = 1656),
						this.match(r.T__1),
						(this.state = 1657),
						this.query(),
						(this.state = 1658),
						this.match(r.T__2);
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function At(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_sortItem),
			(this.ordering = null),
			(this.nullOrder = null),
			this
		);
	}
	At.prototype = Object.create(p.ParserRuleContext.prototype);
	At.prototype.constructor = At;
	At.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	At.prototype.NULLS = function () {
		return this.getToken(r.NULLS, 0);
	};
	At.prototype.ASC = function () {
		return this.getToken(r.ASC, 0);
	};
	At.prototype.DESC = function () {
		return this.getToken(r.DESC, 0);
	};
	At.prototype.LAST = function () {
		return this.getToken(r.LAST, 0);
	};
	At.prototype.FIRST = function () {
		return this.getToken(r.FIRST, 0);
	};
	At.prototype.accept = function (u) {
		return u instanceof R ? u.visitSortItem(this) : u.visitChildren(this);
	};
	r.SortItemContext = At;
	r.prototype.sortItem = function () {
		var u = new At(this, this._ctx, this.state);
		this.enterRule(u, 88, r.RULE_sortItem);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1662),
				this.expression(),
				(this.state = 1664),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 187, this._ctx);
			i === 1 &&
				((this.state = 1663),
				(u.ordering = this._input.LT(1)),
				(e = this._input.LA(1)),
				e === r.ASC || e === r.DESC
					? (this._errHandler.reportMatch(this), this.consume())
					: (u.ordering = this._errHandler.recoverInline(this))),
				(this.state = 1668),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 188, this._ctx);
			i === 1 &&
				((this.state = 1666),
				this.match(r.NULLS),
				(this.state = 1667),
				(u.nullOrder = this._input.LT(1)),
				(e = this._input.LA(1)),
				e === r.FIRST || e === r.LAST
					? (this._errHandler.reportMatch(this), this.consume())
					: (u.nullOrder = this._errHandler.recoverInline(this)));
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_fromStatement),
			this
		);
	}
	$1.prototype = Object.create(p.ParserRuleContext.prototype);
	$1.prototype.constructor = $1;
	$1.prototype.fromClause = function () {
		return this.getTypedRuleContext(He, 0);
	};
	$1.prototype.fromStatementBody = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ju) : this.getTypedRuleContext(Ju, u);
	};
	$1.prototype.accept = function (u) {
		return u instanceof R ? u.visitFromStatement(this) : u.visitChildren(this);
	};
	r.FromStatementContext = $1;
	r.prototype.fromStatement = function () {
		var u = new $1(this, this._ctx, this.state);
		this.enterRule(u, 90, r.RULE_fromStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1670),
				this.fromClause(),
				(this.state = 1672),
				this._errHandler.sync(this);
			var e = 1;
			do {
				switch (e) {
					case 1:
						(this.state = 1671), this.fromStatementBody();
						break;
					default:
						throw new p.error.NoViableAltException(this);
				}
				(this.state = 1674),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 189, this._ctx));
			} while (e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ju(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_fromStatementBody),
			this
		);
	}
	Ju.prototype = Object.create(p.ParserRuleContext.prototype);
	Ju.prototype.constructor = Ju;
	Ju.prototype.transformClause = function () {
		return this.getTypedRuleContext(Y0, 0);
	};
	Ju.prototype.queryOrganization = function () {
		return this.getTypedRuleContext(fu, 0);
	};
	Ju.prototype.whereClause = function () {
		return this.getTypedRuleContext(vi, 0);
	};
	Ju.prototype.selectClause = function () {
		return this.getTypedRuleContext(Br, 0);
	};
	Ju.prototype.lateralView = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(_u) : this.getTypedRuleContext(_u, u);
	};
	Ju.prototype.aggregationClause = function () {
		return this.getTypedRuleContext(Lu, 0);
	};
	Ju.prototype.havingClause = function () {
		return this.getTypedRuleContext(Na, 0);
	};
	Ju.prototype.windowClause = function () {
		return this.getTypedRuleContext(Gs, 0);
	};
	Ju.prototype.accept = function (u) {
		return u instanceof R ? u.visitFromStatementBody(this) : u.visitChildren(this);
	};
	r.FromStatementBodyContext = Ju;
	r.prototype.fromStatementBody = function () {
		var u = new Ju(this, this._ctx, this.state);
		this.enterRule(u, 92, r.RULE_fromStatementBody);
		try {
			(this.state = 1703), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 196, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1676),
						this.transformClause(),
						(this.state = 1678),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 190, this._ctx);
					e === 1 && ((this.state = 1677), this.whereClause()), (this.state = 1680), this.queryOrganization();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 1682),
						this.selectClause(),
						(this.state = 1686),
						this._errHandler.sync(this);
					for (
						var i = this._interp.adaptivePredict(this._input, 191, this._ctx);
						i != 2 && i != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						i === 1 && ((this.state = 1683), this.lateralView()),
							(this.state = 1688),
							this._errHandler.sync(this),
							(i = this._interp.adaptivePredict(this._input, 191, this._ctx));
					(this.state = 1690), this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 192, this._ctx);
					e === 1 && ((this.state = 1689), this.whereClause()),
						(this.state = 1693),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 193, this._ctx);
					e === 1 && ((this.state = 1692), this.aggregationClause()),
						(this.state = 1696),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 194, this._ctx);
					e === 1 && ((this.state = 1695), this.havingClause()),
						(this.state = 1699),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 195, this._ctx);
					e === 1 && ((this.state = 1698), this.windowClause()),
						(this.state = 1701),
						this.queryOrganization();
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Di(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_querySpecification),
			this
		);
	}
	Di.prototype = Object.create(p.ParserRuleContext.prototype);
	Di.prototype.constructor = Di;
	Di.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function Ui(u, e) {
		return Di.call(this, u), Di.prototype.copyFrom.call(this, e), this;
	}
	Ui.prototype = Object.create(Di.prototype);
	Ui.prototype.constructor = Ui;
	r.RegularQuerySpecificationContext = Ui;
	Ui.prototype.selectClause = function () {
		return this.getTypedRuleContext(Br, 0);
	};
	Ui.prototype.fromClause = function () {
		return this.getTypedRuleContext(He, 0);
	};
	Ui.prototype.lateralView = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(_u) : this.getTypedRuleContext(_u, u);
	};
	Ui.prototype.whereClause = function () {
		return this.getTypedRuleContext(vi, 0);
	};
	Ui.prototype.aggregationClause = function () {
		return this.getTypedRuleContext(Lu, 0);
	};
	Ui.prototype.havingClause = function () {
		return this.getTypedRuleContext(Na, 0);
	};
	Ui.prototype.windowClause = function () {
		return this.getTypedRuleContext(Gs, 0);
	};
	Ui.prototype.accept = function (u) {
		return u instanceof R ? u.visitRegularQuerySpecification(this) : u.visitChildren(this);
	};
	function uc(u, e) {
		return Di.call(this, u), Di.prototype.copyFrom.call(this, e), this;
	}
	uc.prototype = Object.create(Di.prototype);
	uc.prototype.constructor = uc;
	r.TransformQuerySpecificationContext = uc;
	uc.prototype.transformClause = function () {
		return this.getTypedRuleContext(Y0, 0);
	};
	uc.prototype.fromClause = function () {
		return this.getTypedRuleContext(He, 0);
	};
	uc.prototype.whereClause = function () {
		return this.getTypedRuleContext(vi, 0);
	};
	uc.prototype.accept = function (u) {
		return u instanceof R ? u.visitTransformQuerySpecification(this) : u.visitChildren(this);
	};
	r.QuerySpecificationContext = Di;
	r.prototype.querySpecification = function () {
		var u = new Di(this, this._ctx, this.state);
		this.enterRule(u, 94, r.RULE_querySpecification);
		try {
			(this.state = 1734), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 205, this._ctx);
			switch (e) {
				case 1:
					(u = new uc(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 1705),
						this.transformClause(),
						(this.state = 1707),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 197, this._ctx);
					e === 1 && ((this.state = 1706), this.fromClause()),
						(this.state = 1710),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 198, this._ctx);
					e === 1 && ((this.state = 1709), this.whereClause());
					break;
				case 2:
					(u = new Ui(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 1712),
						this.selectClause(),
						(this.state = 1714),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 199, this._ctx);
					e === 1 && ((this.state = 1713), this.fromClause()),
						(this.state = 1719),
						this._errHandler.sync(this);
					for (
						var i = this._interp.adaptivePredict(this._input, 200, this._ctx);
						i != 2 && i != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						i === 1 && ((this.state = 1716), this.lateralView()),
							(this.state = 1721),
							this._errHandler.sync(this),
							(i = this._interp.adaptivePredict(this._input, 200, this._ctx));
					(this.state = 1723), this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 201, this._ctx);
					e === 1 && ((this.state = 1722), this.whereClause()),
						(this.state = 1726),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 202, this._ctx);
					e === 1 && ((this.state = 1725), this.aggregationClause()),
						(this.state = 1729),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 203, this._ctx);
					e === 1 && ((this.state = 1728), this.havingClause()),
						(this.state = 1732),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 204, this._ctx);
					e === 1 && ((this.state = 1731), this.windowClause());
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Y0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_transformClause),
			(this.kind = null),
			(this.inRowFormat = null),
			(this.recordWriter = null),
			(this.script = null),
			(this.outRowFormat = null),
			(this.recordReader = null),
			this
		);
	}
	Y0.prototype = Object.create(p.ParserRuleContext.prototype);
	Y0.prototype.constructor = Y0;
	Y0.prototype.USING = function () {
		return this.getToken(r.USING, 0);
	};
	Y0.prototype.STRING = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.STRING) : this.getToken(r.STRING, u);
	};
	Y0.prototype.SELECT = function () {
		return this.getToken(r.SELECT, 0);
	};
	Y0.prototype.namedExpressionSeq = function () {
		return this.getTypedRuleContext(Ma, 0);
	};
	Y0.prototype.TRANSFORM = function () {
		return this.getToken(r.TRANSFORM, 0);
	};
	Y0.prototype.MAP = function () {
		return this.getToken(r.MAP, 0);
	};
	Y0.prototype.REDUCE = function () {
		return this.getToken(r.REDUCE, 0);
	};
	Y0.prototype.RECORDWRITER = function () {
		return this.getToken(r.RECORDWRITER, 0);
	};
	Y0.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	Y0.prototype.RECORDREADER = function () {
		return this.getToken(r.RECORDREADER, 0);
	};
	Y0.prototype.rowFormat = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Tu) : this.getTypedRuleContext(Tu, u);
	};
	Y0.prototype.identifierSeq = function () {
		return this.getTypedRuleContext(Ua, 0);
	};
	Y0.prototype.colTypeList = function () {
		return this.getTypedRuleContext(Jr, 0);
	};
	Y0.prototype.accept = function (u) {
		return u instanceof R ? u.visitTransformClause(this) : u.visitChildren(this);
	};
	r.TransformClauseContext = Y0;
	r.prototype.transformClause = function () {
		var u = new Y0(this, this._ctx, this.state);
		this.enterRule(u, 96, r.RULE_transformClause);
		var e = 0;
		try {
			switch ((this.enterOuterAlt(u, 1), (this.state = 1746), this._errHandler.sync(this), this._input.LA(1))) {
				case r.SELECT:
					(this.state = 1736),
						this.match(r.SELECT),
						(this.state = 1737),
						(u.kind = this.match(r.TRANSFORM)),
						(this.state = 1738),
						this.match(r.T__1),
						(this.state = 1739),
						this.namedExpressionSeq(),
						(this.state = 1740),
						this.match(r.T__2);
					break;
				case r.MAP:
					(this.state = 1742), (u.kind = this.match(r.MAP)), (this.state = 1743), this.namedExpressionSeq();
					break;
				case r.REDUCE:
					(this.state = 1744),
						(u.kind = this.match(r.REDUCE)),
						(this.state = 1745),
						this.namedExpressionSeq();
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
			(this.state = 1749),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.ROW && ((this.state = 1748), (u.inRowFormat = this.rowFormat())),
				(this.state = 1753),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.RECORDWRITER &&
					((this.state = 1751),
					this.match(r.RECORDWRITER),
					(this.state = 1752),
					(u.recordWriter = this.match(r.STRING))),
				(this.state = 1755),
				this.match(r.USING),
				(this.state = 1756),
				(u.script = this.match(r.STRING)),
				(this.state = 1769),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 211, this._ctx);
			if (i === 1) {
				(this.state = 1757), this.match(r.AS), (this.state = 1767), this._errHandler.sync(this);
				var i = this._interp.adaptivePredict(this._input, 210, this._ctx);
				switch (i) {
					case 1:
						(this.state = 1758), this.identifierSeq();
						break;
					case 2:
						(this.state = 1759), this.colTypeList();
						break;
					case 3:
						(this.state = 1760), this.match(r.T__1), (this.state = 1763), this._errHandler.sync(this);
						var i = this._interp.adaptivePredict(this._input, 209, this._ctx);
						switch (i) {
							case 1:
								(this.state = 1761), this.identifierSeq();
								break;
							case 2:
								(this.state = 1762), this.colTypeList();
								break;
						}
						(this.state = 1765), this.match(r.T__2);
						break;
				}
			}
			(this.state = 1772), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 212, this._ctx);
			i === 1 && ((this.state = 1771), (u.outRowFormat = this.rowFormat())),
				(this.state = 1776),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 213, this._ctx);
			i === 1 &&
				((this.state = 1774),
				this.match(r.RECORDREADER),
				(this.state = 1775),
				(u.recordReader = this.match(r.STRING)));
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Br(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_selectClause),
			(this._hint = null),
			(this.hints = []),
			this
		);
	}
	Br.prototype = Object.create(p.ParserRuleContext.prototype);
	Br.prototype.constructor = Br;
	Br.prototype.SELECT = function () {
		return this.getToken(r.SELECT, 0);
	};
	Br.prototype.namedExpressionSeq = function () {
		return this.getTypedRuleContext(Ma, 0);
	};
	Br.prototype.setQuantifier = function () {
		return this.getTypedRuleContext(Ns, 0);
	};
	Br.prototype.hint = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ic) : this.getTypedRuleContext(ic, u);
	};
	Br.prototype.accept = function (u) {
		return u instanceof R ? u.visitSelectClause(this) : u.visitChildren(this);
	};
	r.SelectClauseContext = Br;
	r.prototype.selectClause = function () {
		var u = new Br(this, this._ctx, this.state);
		this.enterRule(u, 98, r.RULE_selectClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1778),
				this.match(r.SELECT),
				(this.state = 1782),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 214, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 1779), (u._hint = this.hint()), u.hints.push(u._hint)),
					(this.state = 1784),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 214, this._ctx));
			(this.state = 1786), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 215, this._ctx);
			i === 1 && ((this.state = 1785), this.setQuantifier()), (this.state = 1788), this.namedExpressionSeq();
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function tc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_setClause),
			this
		);
	}
	tc.prototype = Object.create(p.ParserRuleContext.prototype);
	tc.prototype.constructor = tc;
	tc.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	tc.prototype.assignmentList = function () {
		return this.getTypedRuleContext(ec, 0);
	};
	tc.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetClause(this) : u.visitChildren(this);
	};
	r.SetClauseContext = tc;
	r.prototype.setClause = function () {
		var u = new tc(this, this._ctx, this.state);
		this.enterRule(u, 100, r.RULE_setClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1790),
				this.match(r.SET),
				(this.state = 1791),
				this.assignmentList();
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Me(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_matchedClause),
			(this.matchedCond = null),
			this
		);
	}
	Me.prototype = Object.create(p.ParserRuleContext.prototype);
	Me.prototype.constructor = Me;
	Me.prototype.WHEN = function () {
		return this.getToken(r.WHEN, 0);
	};
	Me.prototype.MATCHED = function () {
		return this.getToken(r.MATCHED, 0);
	};
	Me.prototype.THEN = function () {
		return this.getToken(r.THEN, 0);
	};
	Me.prototype.matchedAction = function () {
		return this.getTypedRuleContext(Yr, 0);
	};
	Me.prototype.AND = function () {
		return this.getToken(r.AND, 0);
	};
	Me.prototype.booleanExpression = function () {
		return this.getTypedRuleContext(e0, 0);
	};
	Me.prototype.accept = function (u) {
		return u instanceof R ? u.visitMatchedClause(this) : u.visitChildren(this);
	};
	r.MatchedClauseContext = Me;
	r.prototype.matchedClause = function () {
		var u = new Me(this, this._ctx, this.state);
		this.enterRule(u, 102, r.RULE_matchedClause);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1793),
				this.match(r.WHEN),
				(this.state = 1794),
				this.match(r.MATCHED),
				(this.state = 1797),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.AND &&
					((this.state = 1795),
					this.match(r.AND),
					(this.state = 1796),
					(u.matchedCond = this.booleanExpression(0))),
				(this.state = 1799),
				this.match(r.THEN),
				(this.state = 1800),
				this.matchedAction();
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Jt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_notMatchedClause),
			(this.notMatchedCond = null),
			this
		);
	}
	Jt.prototype = Object.create(p.ParserRuleContext.prototype);
	Jt.prototype.constructor = Jt;
	Jt.prototype.WHEN = function () {
		return this.getToken(r.WHEN, 0);
	};
	Jt.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	Jt.prototype.MATCHED = function () {
		return this.getToken(r.MATCHED, 0);
	};
	Jt.prototype.THEN = function () {
		return this.getToken(r.THEN, 0);
	};
	Jt.prototype.notMatchedAction = function () {
		return this.getTypedRuleContext(Gr, 0);
	};
	Jt.prototype.AND = function () {
		return this.getToken(r.AND, 0);
	};
	Jt.prototype.booleanExpression = function () {
		return this.getTypedRuleContext(e0, 0);
	};
	Jt.prototype.accept = function (u) {
		return u instanceof R ? u.visitNotMatchedClause(this) : u.visitChildren(this);
	};
	r.NotMatchedClauseContext = Jt;
	r.prototype.notMatchedClause = function () {
		var u = new Jt(this, this._ctx, this.state);
		this.enterRule(u, 104, r.RULE_notMatchedClause);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1802),
				this.match(r.WHEN),
				(this.state = 1803),
				this.match(r.NOT),
				(this.state = 1804),
				this.match(r.MATCHED),
				(this.state = 1807),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.AND &&
					((this.state = 1805),
					this.match(r.AND),
					(this.state = 1806),
					(u.notMatchedCond = this.booleanExpression(0))),
				(this.state = 1809),
				this.match(r.THEN),
				(this.state = 1810),
				this.notMatchedAction();
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Yr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_matchedAction),
			this
		);
	}
	Yr.prototype = Object.create(p.ParserRuleContext.prototype);
	Yr.prototype.constructor = Yr;
	Yr.prototype.DELETE = function () {
		return this.getToken(r.DELETE, 0);
	};
	Yr.prototype.UPDATE = function () {
		return this.getToken(r.UPDATE, 0);
	};
	Yr.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	Yr.prototype.ASTERISK = function () {
		return this.getToken(r.ASTERISK, 0);
	};
	Yr.prototype.assignmentList = function () {
		return this.getTypedRuleContext(ec, 0);
	};
	Yr.prototype.accept = function (u) {
		return u instanceof R ? u.visitMatchedAction(this) : u.visitChildren(this);
	};
	r.MatchedActionContext = Yr;
	r.prototype.matchedAction = function () {
		var u = new Yr(this, this._ctx, this.state);
		this.enterRule(u, 106, r.RULE_matchedAction);
		try {
			(this.state = 1819), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 218, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 1812), this.match(r.DELETE);
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 1813),
						this.match(r.UPDATE),
						(this.state = 1814),
						this.match(r.SET),
						(this.state = 1815),
						this.match(r.ASTERISK);
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 1816),
						this.match(r.UPDATE),
						(this.state = 1817),
						this.match(r.SET),
						(this.state = 1818),
						this.assignmentList();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Gr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_notMatchedAction),
			(this.columns = null),
			this
		);
	}
	Gr.prototype = Object.create(p.ParserRuleContext.prototype);
	Gr.prototype.constructor = Gr;
	Gr.prototype.INSERT = function () {
		return this.getToken(r.INSERT, 0);
	};
	Gr.prototype.ASTERISK = function () {
		return this.getToken(r.ASTERISK, 0);
	};
	Gr.prototype.VALUES = function () {
		return this.getToken(r.VALUES, 0);
	};
	Gr.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	Gr.prototype.multipartIdentifierList = function () {
		return this.getTypedRuleContext(ac, 0);
	};
	Gr.prototype.accept = function (u) {
		return u instanceof R ? u.visitNotMatchedAction(this) : u.visitChildren(this);
	};
	r.NotMatchedActionContext = Gr;
	r.prototype.notMatchedAction = function () {
		var u = new Gr(this, this._ctx, this.state);
		this.enterRule(u, 108, r.RULE_notMatchedAction);
		var e = 0;
		try {
			(this.state = 1839), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 220, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1821),
						this.match(r.INSERT),
						(this.state = 1822),
						this.match(r.ASTERISK);
					break;
				case 2:
					for (
						this.enterOuterAlt(u, 2),
							this.state = 1823,
							this.match(r.INSERT),
							this.state = 1824,
							this.match(r.T__1),
							this.state = 1825,
							u.columns = this.multipartIdentifierList(),
							this.state = 1826,
							this.match(r.T__2),
							this.state = 1827,
							this.match(r.VALUES),
							this.state = 1828,
							this.match(r.T__1),
							this.state = 1829,
							this.expression(),
							this.state = 1834,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.T__3;

					)
						(this.state = 1830),
							this.match(r.T__3),
							(this.state = 1831),
							this.expression(),
							(this.state = 1836),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					(this.state = 1837), this.match(r.T__2);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ec(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_assignmentList),
			this
		);
	}
	ec.prototype = Object.create(p.ParserRuleContext.prototype);
	ec.prototype.constructor = ec;
	ec.prototype.assignment = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ls) : this.getTypedRuleContext(Ls, u);
	};
	ec.prototype.accept = function (u) {
		return u instanceof R ? u.visitAssignmentList(this) : u.visitChildren(this);
	};
	r.AssignmentListContext = ec;
	r.prototype.assignmentList = function () {
		var u = new ec(this, this._ctx, this.state);
		this.enterRule(u, 110, r.RULE_assignmentList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1841,
					this.assignment(),
					this.state = 1846,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 1842),
					this.match(r.T__3),
					(this.state = 1843),
					this.assignment(),
					(this.state = 1848),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ls(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_assignment),
			(this.key = null),
			(this.value = null),
			this
		);
	}
	Ls.prototype = Object.create(p.ParserRuleContext.prototype);
	Ls.prototype.constructor = Ls;
	Ls.prototype.EQ = function () {
		return this.getToken(r.EQ, 0);
	};
	Ls.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ls.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	Ls.prototype.accept = function (u) {
		return u instanceof R ? u.visitAssignment(this) : u.visitChildren(this);
	};
	r.AssignmentContext = Ls;
	r.prototype.assignment = function () {
		var u = new Ls(this, this._ctx, this.state);
		this.enterRule(u, 112, r.RULE_assignment);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1849),
				(u.key = this.multipartIdentifier()),
				(this.state = 1850),
				this.match(r.EQ),
				(this.state = 1851),
				(u.value = this.expression());
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function vi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_whereClause),
			this
		);
	}
	vi.prototype = Object.create(p.ParserRuleContext.prototype);
	vi.prototype.constructor = vi;
	vi.prototype.WHERE = function () {
		return this.getToken(r.WHERE, 0);
	};
	vi.prototype.booleanExpression = function () {
		return this.getTypedRuleContext(e0, 0);
	};
	vi.prototype.accept = function (u) {
		return u instanceof R ? u.visitWhereClause(this) : u.visitChildren(this);
	};
	r.WhereClauseContext = vi;
	r.prototype.whereClause = function () {
		var u = new vi(this, this._ctx, this.state);
		this.enterRule(u, 114, r.RULE_whereClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1853),
				this.match(r.WHERE),
				(this.state = 1854),
				this.booleanExpression(0);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Na(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_havingClause),
			this
		);
	}
	Na.prototype = Object.create(p.ParserRuleContext.prototype);
	Na.prototype.constructor = Na;
	Na.prototype.HAVING = function () {
		return this.getToken(r.HAVING, 0);
	};
	Na.prototype.booleanExpression = function () {
		return this.getTypedRuleContext(e0, 0);
	};
	Na.prototype.accept = function (u) {
		return u instanceof R ? u.visitHavingClause(this) : u.visitChildren(this);
	};
	r.HavingClauseContext = Na;
	r.prototype.havingClause = function () {
		var u = new Na(this, this._ctx, this.state);
		this.enterRule(u, 116, r.RULE_havingClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1856),
				this.match(r.HAVING),
				(this.state = 1857),
				this.booleanExpression(0);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ic(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_hint),
			(this._hintStatement = null),
			(this.hintStatements = []),
			this
		);
	}
	ic.prototype = Object.create(p.ParserRuleContext.prototype);
	ic.prototype.constructor = ic;
	ic.prototype.hintStatement = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Pa) : this.getTypedRuleContext(Pa, u);
	};
	ic.prototype.accept = function (u) {
		return u instanceof R ? u.visitHint(this) : u.visitChildren(this);
	};
	r.HintContext = ic;
	r.prototype.hint = function () {
		var u = new ic(this, this._ctx, this.state);
		this.enterRule(u, 118, r.RULE_hint);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1859),
				this.match(r.T__5),
				(this.state = 1860),
				(u._hintStatement = this.hintStatement()),
				u.hintStatements.push(u._hintStatement),
				(this.state = 1867),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 223, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			) {
				if (e === 1) {
					(this.state = 1862), this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 222, this._ctx);
					i === 1 && ((this.state = 1861), this.match(r.T__3)),
						(this.state = 1864),
						(u._hintStatement = this.hintStatement()),
						u.hintStatements.push(u._hintStatement);
				}
				(this.state = 1869),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 223, this._ctx));
			}
			(this.state = 1870), this.match(r.T__6);
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Pa(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_hintStatement),
			(this.hintName = null),
			(this._primaryExpression = null),
			(this.parameters = []),
			this
		);
	}
	Pa.prototype = Object.create(p.ParserRuleContext.prototype);
	Pa.prototype.constructor = Pa;
	Pa.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Pa.prototype.primaryExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(g) : this.getTypedRuleContext(g, u);
	};
	Pa.prototype.accept = function (u) {
		return u instanceof R ? u.visitHintStatement(this) : u.visitChildren(this);
	};
	r.HintStatementContext = Pa;
	r.prototype.hintStatement = function () {
		var u = new Pa(this, this._ctx, this.state);
		this.enterRule(u, 120, r.RULE_hintStatement);
		var e = 0;
		try {
			(this.state = 1885), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 225, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 1872), (u.hintName = this.identifier());
					break;
				case 2:
					for (
						this.enterOuterAlt(u, 2),
							this.state = 1873,
							u.hintName = this.identifier(),
							this.state = 1874,
							this.match(r.T__1),
							this.state = 1875,
							u._primaryExpression = this.primaryExpression(0),
							u.parameters.push(u._primaryExpression),
							this.state = 1880,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.T__3;

					)
						(this.state = 1876),
							this.match(r.T__3),
							(this.state = 1877),
							(u._primaryExpression = this.primaryExpression(0)),
							u.parameters.push(u._primaryExpression),
							(this.state = 1882),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					(this.state = 1883), this.match(r.T__2);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function He(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_fromClause),
			this
		);
	}
	He.prototype = Object.create(p.ParserRuleContext.prototype);
	He.prototype.constructor = He;
	He.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	He.prototype.relation = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ps) : this.getTypedRuleContext(Ps, u);
	};
	He.prototype.lateralView = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(_u) : this.getTypedRuleContext(_u, u);
	};
	He.prototype.pivotClause = function () {
		return this.getTypedRuleContext(wi, 0);
	};
	He.prototype.accept = function (u) {
		return u instanceof R ? u.visitFromClause(this) : u.visitChildren(this);
	};
	r.FromClauseContext = He;
	r.prototype.fromClause = function () {
		var u = new He(this, this._ctx, this.state);
		this.enterRule(u, 122, r.RULE_fromClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1887),
				this.match(r.FROM),
				(this.state = 1888),
				this.relation(),
				(this.state = 1893),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 226, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 1889), this.match(r.T__3), (this.state = 1890), this.relation()),
					(this.state = 1895),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 226, this._ctx));
			(this.state = 1899), this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 227, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 1896), this.lateralView()),
					(this.state = 1901),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 227, this._ctx));
			(this.state = 1903), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 228, this._ctx);
			i === 1 && ((this.state = 1902), this.pivotClause());
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Lu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_aggregationClause),
			(this._groupByClause = null),
			(this.groupingExpressionsWithGroupingAnalytics = []),
			(this._expression = null),
			(this.groupingExpressions = []),
			(this.kind = null),
			this
		);
	}
	Lu.prototype = Object.create(p.ParserRuleContext.prototype);
	Lu.prototype.constructor = Lu;
	Lu.prototype.GROUP = function () {
		return this.getToken(r.GROUP, 0);
	};
	Lu.prototype.BY = function () {
		return this.getToken(r.BY, 0);
	};
	Lu.prototype.groupByClause = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ga) : this.getTypedRuleContext(ga, u);
	};
	Lu.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	Lu.prototype.WITH = function () {
		return this.getToken(r.WITH, 0);
	};
	Lu.prototype.SETS = function () {
		return this.getToken(r.SETS, 0);
	};
	Lu.prototype.groupingSet = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ss) : this.getTypedRuleContext(Ss, u);
	};
	Lu.prototype.ROLLUP = function () {
		return this.getToken(r.ROLLUP, 0);
	};
	Lu.prototype.CUBE = function () {
		return this.getToken(r.CUBE, 0);
	};
	Lu.prototype.GROUPING = function () {
		return this.getToken(r.GROUPING, 0);
	};
	Lu.prototype.accept = function (u) {
		return u instanceof R ? u.visitAggregationClause(this) : u.visitChildren(this);
	};
	r.AggregationClauseContext = Lu;
	r.prototype.aggregationClause = function () {
		var u = new Lu(this, this._ctx, this.state);
		this.enterRule(u, 124, r.RULE_aggregationClause);
		var e = 0;
		try {
			(this.state = 1944), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 233, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1905),
						this.match(r.GROUP),
						(this.state = 1906),
						this.match(r.BY),
						(this.state = 1907),
						(u._groupByClause = this.groupByClause()),
						u.groupingExpressionsWithGroupingAnalytics.push(u._groupByClause),
						(this.state = 1912),
						this._errHandler.sync(this);
					for (
						var n = this._interp.adaptivePredict(this._input, 229, this._ctx);
						n != 2 && n != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						n === 1 &&
							((this.state = 1908),
							this.match(r.T__3),
							(this.state = 1909),
							(u._groupByClause = this.groupByClause()),
							u.groupingExpressionsWithGroupingAnalytics.push(u._groupByClause)),
							(this.state = 1914),
							this._errHandler.sync(this),
							(n = this._interp.adaptivePredict(this._input, 229, this._ctx));
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 1915),
						this.match(r.GROUP),
						(this.state = 1916),
						this.match(r.BY),
						(this.state = 1917),
						(u._expression = this.expression()),
						u.groupingExpressions.push(u._expression),
						(this.state = 1922),
						this._errHandler.sync(this);
					for (
						var n = this._interp.adaptivePredict(this._input, 230, this._ctx);
						n != 2 && n != p.atn.ATN.INVALID_ALT_NUMBER;

					)
						n === 1 &&
							((this.state = 1918),
							this.match(r.T__3),
							(this.state = 1919),
							(u._expression = this.expression()),
							u.groupingExpressions.push(u._expression)),
							(this.state = 1924),
							this._errHandler.sync(this),
							(n = this._interp.adaptivePredict(this._input, 230, this._ctx));
					(this.state = 1942), this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 232, this._ctx);
					if (i === 1)
						(this.state = 1925), this.match(r.WITH), (this.state = 1926), (u.kind = this.match(r.ROLLUP));
					else if (i === 2)
						(this.state = 1927), this.match(r.WITH), (this.state = 1928), (u.kind = this.match(r.CUBE));
					else if (i === 3) {
						for (
							this.state = 1929,
								u.kind = this.match(r.GROUPING),
								this.state = 1930,
								this.match(r.SETS),
								this.state = 1931,
								this.match(r.T__1),
								this.state = 1932,
								this.groupingSet(),
								this.state = 1937,
								this._errHandler.sync(this),
								e = this._input.LA(1);
							e === r.T__3;

						)
							(this.state = 1933),
								this.match(r.T__3),
								(this.state = 1934),
								this.groupingSet(),
								(this.state = 1939),
								this._errHandler.sync(this),
								(e = this._input.LA(1));
						(this.state = 1940), this.match(r.T__2);
					}
					break;
			}
		} catch (a) {
			if (a instanceof p.error.RecognitionException)
				(u.exception = a), this._errHandler.reportError(this, a), this._errHandler.recover(this, a);
			else throw a;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ga(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_groupByClause),
			this
		);
	}
	ga.prototype = Object.create(p.ParserRuleContext.prototype);
	ga.prototype.constructor = ga;
	ga.prototype.groupingAnalytics = function () {
		return this.getTypedRuleContext(jr, 0);
	};
	ga.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	ga.prototype.accept = function (u) {
		return u instanceof R ? u.visitGroupByClause(this) : u.visitChildren(this);
	};
	r.GroupByClauseContext = ga;
	r.prototype.groupByClause = function () {
		var u = new ga(this, this._ctx, this.state);
		this.enterRule(u, 126, r.RULE_groupByClause);
		try {
			(this.state = 1948), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 234, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 1946), this.groupingAnalytics();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 1947), this.expression();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function jr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_groupingAnalytics),
			this
		);
	}
	jr.prototype = Object.create(p.ParserRuleContext.prototype);
	jr.prototype.constructor = jr;
	jr.prototype.groupingSet = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ss) : this.getTypedRuleContext(Ss, u);
	};
	jr.prototype.ROLLUP = function () {
		return this.getToken(r.ROLLUP, 0);
	};
	jr.prototype.CUBE = function () {
		return this.getToken(r.CUBE, 0);
	};
	jr.prototype.GROUPING = function () {
		return this.getToken(r.GROUPING, 0);
	};
	jr.prototype.SETS = function () {
		return this.getToken(r.SETS, 0);
	};
	jr.prototype.accept = function (u) {
		return u instanceof R ? u.visitGroupingAnalytics(this) : u.visitChildren(this);
	};
	r.GroupingAnalyticsContext = jr;
	r.prototype.groupingAnalytics = function () {
		var u = new jr(this, this._ctx, this.state);
		this.enterRule(u, 128, r.RULE_groupingAnalytics);
		var e = 0;
		try {
			switch ((this.enterOuterAlt(u, 1), (this.state = 1954), this._errHandler.sync(this), this._input.LA(1))) {
				case r.ROLLUP:
					(this.state = 1950), this.match(r.ROLLUP);
					break;
				case r.CUBE:
					(this.state = 1951), this.match(r.CUBE);
					break;
				case r.GROUPING:
					(this.state = 1952), this.match(r.GROUPING), (this.state = 1953), this.match(r.SETS);
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
			for (
				this.state = 1956,
					this.match(r.T__1),
					this.state = 1957,
					this.groupingSet(),
					this.state = 1962,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 1958),
					this.match(r.T__3),
					(this.state = 1959),
					this.groupingSet(),
					(this.state = 1964),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 1965), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ss(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_groupingSet),
			this
		);
	}
	Ss.prototype = Object.create(p.ParserRuleContext.prototype);
	Ss.prototype.constructor = Ss;
	Ss.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	Ss.prototype.accept = function (u) {
		return u instanceof R ? u.visitGroupingSet(this) : u.visitChildren(this);
	};
	r.GroupingSetContext = Ss;
	r.prototype.groupingSet = function () {
		var u = new Ss(this, this._ctx, this.state);
		this.enterRule(u, 130, r.RULE_groupingSet);
		var e = 0;
		try {
			(this.state = 1980), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 239, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1967),
						this.match(r.T__1),
						(this.state = 1976),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 238, this._ctx);
					if (i === 1)
						for (
							this.state = 1968,
								this.expression(),
								this.state = 1973,
								this._errHandler.sync(this),
								e = this._input.LA(1);
							e === r.T__3;

						)
							(this.state = 1969),
								this.match(r.T__3),
								(this.state = 1970),
								this.expression(),
								(this.state = 1975),
								this._errHandler.sync(this),
								(e = this._input.LA(1));
					(this.state = 1978), this.match(r.T__2);
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 1979), this.expression();
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function wi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_pivotClause),
			(this.aggregates = null),
			(this._pivotValue = null),
			(this.pivotValues = []),
			this
		);
	}
	wi.prototype = Object.create(p.ParserRuleContext.prototype);
	wi.prototype.constructor = wi;
	wi.prototype.PIVOT = function () {
		return this.getToken(r.PIVOT, 0);
	};
	wi.prototype.FOR = function () {
		return this.getToken(r.FOR, 0);
	};
	wi.prototype.pivotColumn = function () {
		return this.getTypedRuleContext(o3, 0);
	};
	wi.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	wi.prototype.namedExpressionSeq = function () {
		return this.getTypedRuleContext(Ma, 0);
	};
	wi.prototype.pivotValue = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Is) : this.getTypedRuleContext(Is, u);
	};
	wi.prototype.accept = function (u) {
		return u instanceof R ? u.visitPivotClause(this) : u.visitChildren(this);
	};
	r.PivotClauseContext = wi;
	r.prototype.pivotClause = function () {
		var u = new wi(this, this._ctx, this.state);
		this.enterRule(u, 132, r.RULE_pivotClause);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1982,
					this.match(r.PIVOT),
					this.state = 1983,
					this.match(r.T__1),
					this.state = 1984,
					u.aggregates = this.namedExpressionSeq(),
					this.state = 1985,
					this.match(r.FOR),
					this.state = 1986,
					this.pivotColumn(),
					this.state = 1987,
					this.match(r.IN),
					this.state = 1988,
					this.match(r.T__1),
					this.state = 1989,
					u._pivotValue = this.pivotValue(),
					u.pivotValues.push(u._pivotValue),
					this.state = 1994,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 1990),
					this.match(r.T__3),
					(this.state = 1991),
					(u._pivotValue = this.pivotValue()),
					u.pivotValues.push(u._pivotValue),
					(this.state = 1996),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 1997), this.match(r.T__2), (this.state = 1998), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function o3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_pivotColumn),
			(this._identifier = null),
			(this.identifiers = []),
			this
		);
	}
	o3.prototype = Object.create(p.ParserRuleContext.prototype);
	o3.prototype.constructor = o3;
	o3.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(B) : this.getTypedRuleContext(B, u);
	};
	o3.prototype.accept = function (u) {
		return u instanceof R ? u.visitPivotColumn(this) : u.visitChildren(this);
	};
	r.PivotColumnContext = o3;
	r.prototype.pivotColumn = function () {
		var u = new o3(this, this._ctx, this.state);
		this.enterRule(u, 134, r.RULE_pivotColumn);
		var e = 0;
		try {
			(this.state = 2012), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 242, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 2e3),
						(u._identifier = this.identifier()),
						u.identifiers.push(u._identifier);
					break;
				case 2:
					for (
						this.enterOuterAlt(u, 2),
							this.state = 2001,
							this.match(r.T__1),
							this.state = 2002,
							u._identifier = this.identifier(),
							u.identifiers.push(u._identifier),
							this.state = 2007,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.T__3;

					)
						(this.state = 2003),
							this.match(r.T__3),
							(this.state = 2004),
							(u._identifier = this.identifier()),
							u.identifiers.push(u._identifier),
							(this.state = 2009),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					(this.state = 2010), this.match(r.T__2);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Is(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_pivotValue),
			this
		);
	}
	Is.prototype = Object.create(p.ParserRuleContext.prototype);
	Is.prototype.constructor = Is;
	Is.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	Is.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Is.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	Is.prototype.accept = function (u) {
		return u instanceof R ? u.visitPivotValue(this) : u.visitChildren(this);
	};
	r.PivotValueContext = Is;
	r.prototype.pivotValue = function () {
		var u = new Is(this, this._ctx, this.state);
		this.enterRule(u, 136, r.RULE_pivotValue);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2014),
				this.expression(),
				(this.state = 2019),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 244, this._ctx);
			if (e === 1) {
				(this.state = 2016), this._errHandler.sync(this);
				var e = this._interp.adaptivePredict(this._input, 243, this._ctx);
				e === 1 && ((this.state = 2015), this.match(r.AS)), (this.state = 2018), this.identifier();
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _u(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_lateralView),
			(this.tblName = null),
			(this._identifier = null),
			(this.colName = []),
			this
		);
	}
	_u.prototype = Object.create(p.ParserRuleContext.prototype);
	_u.prototype.constructor = _u;
	_u.prototype.LATERAL = function () {
		return this.getToken(r.LATERAL, 0);
	};
	_u.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	_u.prototype.qualifiedName = function () {
		return this.getTypedRuleContext(Kt, 0);
	};
	_u.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(B) : this.getTypedRuleContext(B, u);
	};
	_u.prototype.OUTER = function () {
		return this.getToken(r.OUTER, 0);
	};
	_u.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	_u.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	_u.prototype.accept = function (u) {
		return u instanceof R ? u.visitLateralView(this) : u.visitChildren(this);
	};
	r.LateralViewContext = _u;
	r.prototype.lateralView = function () {
		var u = new _u(this, this._ctx, this.state);
		this.enterRule(u, 138, r.RULE_lateralView);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2021),
				this.match(r.LATERAL),
				(this.state = 2022),
				this.match(r.VIEW),
				(this.state = 2024),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 245, this._ctx);
			i === 1 && ((this.state = 2023), this.match(r.OUTER)),
				(this.state = 2026),
				this.qualifiedName(),
				(this.state = 2027),
				this.match(r.T__1),
				(this.state = 2036),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 247, this._ctx);
			if (i === 1)
				for (
					this.state = 2028,
						this.expression(),
						this.state = 2033,
						this._errHandler.sync(this),
						e = this._input.LA(1);
					e === r.T__3;

				)
					(this.state = 2029),
						this.match(r.T__3),
						(this.state = 2030),
						this.expression(),
						(this.state = 2035),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
			(this.state = 2038),
				this.match(r.T__2),
				(this.state = 2039),
				(u.tblName = this.identifier()),
				(this.state = 2051),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 250, this._ctx);
			if (i === 1) {
				(this.state = 2041), this._errHandler.sync(this);
				var i = this._interp.adaptivePredict(this._input, 248, this._ctx);
				i === 1 && ((this.state = 2040), this.match(r.AS)),
					(this.state = 2043),
					(u._identifier = this.identifier()),
					u.colName.push(u._identifier),
					(this.state = 2048),
					this._errHandler.sync(this);
				for (
					var n = this._interp.adaptivePredict(this._input, 249, this._ctx);
					n != 2 && n != p.atn.ATN.INVALID_ALT_NUMBER;

				)
					n === 1 &&
						((this.state = 2044),
						this.match(r.T__3),
						(this.state = 2045),
						(u._identifier = this.identifier()),
						u.colName.push(u._identifier)),
						(this.state = 2050),
						this._errHandler.sync(this),
						(n = this._interp.adaptivePredict(this._input, 249, this._ctx));
			}
		} catch (a) {
			if (a instanceof p.error.RecognitionException)
				(u.exception = a), this._errHandler.reportError(this, a), this._errHandler.recover(this, a);
			else throw a;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ns(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_setQuantifier),
			this
		);
	}
	Ns.prototype = Object.create(p.ParserRuleContext.prototype);
	Ns.prototype.constructor = Ns;
	Ns.prototype.DISTINCT = function () {
		return this.getToken(r.DISTINCT, 0);
	};
	Ns.prototype.ALL = function () {
		return this.getToken(r.ALL, 0);
	};
	Ns.prototype.accept = function (u) {
		return u instanceof R ? u.visitSetQuantifier(this) : u.visitChildren(this);
	};
	r.SetQuantifierContext = Ns;
	r.prototype.setQuantifier = function () {
		var u = new Ns(this, this._ctx, this.state);
		this.enterRule(u, 140, r.RULE_setQuantifier);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2053),
				(e = this._input.LA(1)),
				e === r.ALL || e === r.DISTINCT
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ps(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_relation),
			this
		);
	}
	Ps.prototype = Object.create(p.ParserRuleContext.prototype);
	Ps.prototype.constructor = Ps;
	Ps.prototype.relationPrimary = function () {
		return this.getTypedRuleContext(O0, 0);
	};
	Ps.prototype.joinRelation = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Mi) : this.getTypedRuleContext(Mi, u);
	};
	Ps.prototype.accept = function (u) {
		return u instanceof R ? u.visitRelation(this) : u.visitChildren(this);
	};
	r.RelationContext = Ps;
	r.prototype.relation = function () {
		var u = new Ps(this, this._ctx, this.state);
		this.enterRule(u, 142, r.RULE_relation);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2055),
				this.relationPrimary(),
				(this.state = 2059),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 251, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 2056), this.joinRelation()),
					(this.state = 2061),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 251, this._ctx));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Mi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_joinRelation),
			(this.right = null),
			this
		);
	}
	Mi.prototype = Object.create(p.ParserRuleContext.prototype);
	Mi.prototype.constructor = Mi;
	Mi.prototype.JOIN = function () {
		return this.getToken(r.JOIN, 0);
	};
	Mi.prototype.relationPrimary = function () {
		return this.getTypedRuleContext(O0, 0);
	};
	Mi.prototype.joinType = function () {
		return this.getTypedRuleContext(zt, 0);
	};
	Mi.prototype.joinCriteria = function () {
		return this.getTypedRuleContext(gs, 0);
	};
	Mi.prototype.NATURAL = function () {
		return this.getToken(r.NATURAL, 0);
	};
	Mi.prototype.accept = function (u) {
		return u instanceof R ? u.visitJoinRelation(this) : u.visitChildren(this);
	};
	r.JoinRelationContext = Mi;
	r.prototype.joinRelation = function () {
		var u = new Mi(this, this._ctx, this.state);
		this.enterRule(u, 144, r.RULE_joinRelation);
		try {
			switch (((this.state = 2073), this._errHandler.sync(this), this._input.LA(1))) {
				case r.ANTI:
				case r.CROSS:
				case r.FULL:
				case r.INNER:
				case r.JOIN:
				case r.LEFT:
				case r.RIGHT:
				case r.SEMI:
					this.enterOuterAlt(u, 1),
						(this.state = 2062),
						this.joinType(),
						(this.state = 2063),
						this.match(r.JOIN),
						(this.state = 2064),
						(u.right = this.relationPrimary()),
						(this.state = 2066),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 252, this._ctx);
					e === 1 && ((this.state = 2065), this.joinCriteria());
					break;
				case r.NATURAL:
					this.enterOuterAlt(u, 2),
						(this.state = 2068),
						this.match(r.NATURAL),
						(this.state = 2069),
						this.joinType(),
						(this.state = 2070),
						this.match(r.JOIN),
						(this.state = 2071),
						(u.right = this.relationPrimary());
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function zt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_joinType),
			this
		);
	}
	zt.prototype = Object.create(p.ParserRuleContext.prototype);
	zt.prototype.constructor = zt;
	zt.prototype.INNER = function () {
		return this.getToken(r.INNER, 0);
	};
	zt.prototype.CROSS = function () {
		return this.getToken(r.CROSS, 0);
	};
	zt.prototype.LEFT = function () {
		return this.getToken(r.LEFT, 0);
	};
	zt.prototype.OUTER = function () {
		return this.getToken(r.OUTER, 0);
	};
	zt.prototype.SEMI = function () {
		return this.getToken(r.SEMI, 0);
	};
	zt.prototype.RIGHT = function () {
		return this.getToken(r.RIGHT, 0);
	};
	zt.prototype.FULL = function () {
		return this.getToken(r.FULL, 0);
	};
	zt.prototype.ANTI = function () {
		return this.getToken(r.ANTI, 0);
	};
	zt.prototype.accept = function (u) {
		return u instanceof R ? u.visitJoinType(this) : u.visitChildren(this);
	};
	r.JoinTypeContext = zt;
	r.prototype.joinType = function () {
		var u = new zt(this, this._ctx, this.state);
		this.enterRule(u, 146, r.RULE_joinType);
		var e = 0;
		try {
			(this.state = 2099), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 260, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 2076),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.INNER && ((this.state = 2075), this.match(r.INNER));
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2078), this.match(r.CROSS);
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 2079),
						this.match(r.LEFT),
						(this.state = 2081),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OUTER && ((this.state = 2080), this.match(r.OUTER));
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 2084),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.LEFT && ((this.state = 2083), this.match(r.LEFT)),
						(this.state = 2086),
						this.match(r.SEMI);
					break;
				case 5:
					this.enterOuterAlt(u, 5),
						(this.state = 2087),
						this.match(r.RIGHT),
						(this.state = 2089),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OUTER && ((this.state = 2088), this.match(r.OUTER));
					break;
				case 6:
					this.enterOuterAlt(u, 6),
						(this.state = 2091),
						this.match(r.FULL),
						(this.state = 2093),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.OUTER && ((this.state = 2092), this.match(r.OUTER));
					break;
				case 7:
					this.enterOuterAlt(u, 7),
						(this.state = 2096),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.LEFT && ((this.state = 2095), this.match(r.LEFT)),
						(this.state = 2098),
						this.match(r.ANTI);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function gs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_joinCriteria),
			this
		);
	}
	gs.prototype = Object.create(p.ParserRuleContext.prototype);
	gs.prototype.constructor = gs;
	gs.prototype.ON = function () {
		return this.getToken(r.ON, 0);
	};
	gs.prototype.booleanExpression = function () {
		return this.getTypedRuleContext(e0, 0);
	};
	gs.prototype.USING = function () {
		return this.getToken(r.USING, 0);
	};
	gs.prototype.identifierList = function () {
		return this.getTypedRuleContext(zu, 0);
	};
	gs.prototype.accept = function (u) {
		return u instanceof R ? u.visitJoinCriteria(this) : u.visitChildren(this);
	};
	r.JoinCriteriaContext = gs;
	r.prototype.joinCriteria = function () {
		var u = new gs(this, this._ctx, this.state);
		this.enterRule(u, 148, r.RULE_joinCriteria);
		try {
			switch (((this.state = 2105), this._errHandler.sync(this), this._input.LA(1))) {
				case r.ON:
					this.enterOuterAlt(u, 1),
						(this.state = 2101),
						this.match(r.ON),
						(this.state = 2102),
						this.booleanExpression(0);
					break;
				case r.USING:
					this.enterOuterAlt(u, 2),
						(this.state = 2103),
						this.match(r.USING),
						(this.state = 2104),
						this.identifierList();
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ds(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_sample),
			this
		);
	}
	Ds.prototype = Object.create(p.ParserRuleContext.prototype);
	Ds.prototype.constructor = Ds;
	Ds.prototype.TABLESAMPLE = function () {
		return this.getToken(r.TABLESAMPLE, 0);
	};
	Ds.prototype.sampleMethod = function () {
		return this.getTypedRuleContext(Eu, 0);
	};
	Ds.prototype.accept = function (u) {
		return u instanceof R ? u.visitSample(this) : u.visitChildren(this);
	};
	r.SampleContext = Ds;
	r.prototype.sample = function () {
		var u = new Ds(this, this._ctx, this.state);
		this.enterRule(u, 150, r.RULE_sample);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2107),
				this.match(r.TABLESAMPLE),
				(this.state = 2108),
				this.match(r.T__1),
				(this.state = 2110),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 262, this._ctx);
			e === 1 && ((this.state = 2109), this.sampleMethod()), (this.state = 2112), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Eu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_sampleMethod),
			this
		);
	}
	Eu.prototype = Object.create(p.ParserRuleContext.prototype);
	Eu.prototype.constructor = Eu;
	Eu.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function c3(u, e) {
		return Eu.call(this, u), Eu.prototype.copyFrom.call(this, e), this;
	}
	c3.prototype = Object.create(Eu.prototype);
	c3.prototype.constructor = c3;
	r.SampleByRowsContext = c3;
	c3.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	c3.prototype.ROWS = function () {
		return this.getToken(r.ROWS, 0);
	};
	c3.prototype.accept = function (u) {
		return u instanceof R ? u.visitSampleByRows(this) : u.visitChildren(this);
	};
	function Da(u, e) {
		return (
			Eu.call(this, u),
			(this.negativeSign = null),
			(this.percentage = null),
			Eu.prototype.copyFrom.call(this, e),
			this
		);
	}
	Da.prototype = Object.create(Eu.prototype);
	Da.prototype.constructor = Da;
	r.SampleByPercentileContext = Da;
	Da.prototype.PERCENTLIT = function () {
		return this.getToken(r.PERCENTLIT, 0);
	};
	Da.prototype.INTEGER_VALUE = function () {
		return this.getToken(r.INTEGER_VALUE, 0);
	};
	Da.prototype.DECIMAL_VALUE = function () {
		return this.getToken(r.DECIMAL_VALUE, 0);
	};
	Da.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	Da.prototype.accept = function (u) {
		return u instanceof R ? u.visitSampleByPercentile(this) : u.visitChildren(this);
	};
	function Hi(u, e) {
		return (
			Eu.call(this, u),
			(this.sampleType = null),
			(this.numerator = null),
			(this.denominator = null),
			Eu.prototype.copyFrom.call(this, e),
			this
		);
	}
	Hi.prototype = Object.create(Eu.prototype);
	Hi.prototype.constructor = Hi;
	r.SampleByBucketContext = Hi;
	Hi.prototype.OUT = function () {
		return this.getToken(r.OUT, 0);
	};
	Hi.prototype.OF = function () {
		return this.getToken(r.OF, 0);
	};
	Hi.prototype.BUCKET = function () {
		return this.getToken(r.BUCKET, 0);
	};
	Hi.prototype.INTEGER_VALUE = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(r.INTEGER_VALUE) : this.getToken(r.INTEGER_VALUE, u)
		);
	};
	Hi.prototype.ON = function () {
		return this.getToken(r.ON, 0);
	};
	Hi.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Hi.prototype.qualifiedName = function () {
		return this.getTypedRuleContext(Kt, 0);
	};
	Hi.prototype.accept = function (u) {
		return u instanceof R ? u.visitSampleByBucket(this) : u.visitChildren(this);
	};
	function Zh(u, e) {
		return Eu.call(this, u), (this.bytes = null), Eu.prototype.copyFrom.call(this, e), this;
	}
	Zh.prototype = Object.create(Eu.prototype);
	Zh.prototype.constructor = Zh;
	r.SampleByBytesContext = Zh;
	Zh.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	Zh.prototype.accept = function (u) {
		return u instanceof R ? u.visitSampleByBytes(this) : u.visitChildren(this);
	};
	r.SampleMethodContext = Eu;
	r.prototype.sampleMethod = function () {
		var u = new Eu(this, this._ctx, this.state);
		this.enterRule(u, 152, r.RULE_sampleMethod);
		var e = 0;
		try {
			(this.state = 2138), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 266, this._ctx);
			switch (i) {
				case 1:
					(u = new Da(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 2115),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 2114), (u.negativeSign = this.match(r.MINUS))),
						(this.state = 2117),
						(u.percentage = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.INTEGER_VALUE || e === r.DECIMAL_VALUE
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.percentage = this._errHandler.recoverInline(this)),
						(this.state = 2118),
						this.match(r.PERCENTLIT);
					break;
				case 2:
					(u = new c3(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 2119),
						this.expression(),
						(this.state = 2120),
						this.match(r.ROWS);
					break;
				case 3:
					if (
						((u = new Hi(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 2122),
						(u.sampleType = this.match(r.BUCKET)),
						(this.state = 2123),
						(u.numerator = this.match(r.INTEGER_VALUE)),
						(this.state = 2124),
						this.match(r.OUT),
						(this.state = 2125),
						this.match(r.OF),
						(this.state = 2126),
						(u.denominator = this.match(r.INTEGER_VALUE)),
						(this.state = 2135),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.ON)
					) {
						(this.state = 2127), this.match(r.ON), (this.state = 2133), this._errHandler.sync(this);
						var i = this._interp.adaptivePredict(this._input, 264, this._ctx);
						switch (i) {
							case 1:
								(this.state = 2128), this.identifier();
								break;
							case 2:
								(this.state = 2129),
									this.qualifiedName(),
									(this.state = 2130),
									this.match(r.T__1),
									(this.state = 2131),
									this.match(r.T__2);
								break;
						}
					}
					break;
				case 4:
					(u = new Zh(this, u)), this.enterOuterAlt(u, 4), (this.state = 2137), (u.bytes = this.expression());
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function zu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_identifierList),
			this
		);
	}
	zu.prototype = Object.create(p.ParserRuleContext.prototype);
	zu.prototype.constructor = zu;
	zu.prototype.identifierSeq = function () {
		return this.getTypedRuleContext(Ua, 0);
	};
	zu.prototype.accept = function (u) {
		return u instanceof R ? u.visitIdentifierList(this) : u.visitChildren(this);
	};
	r.IdentifierListContext = zu;
	r.prototype.identifierList = function () {
		var u = new zu(this, this._ctx, this.state);
		this.enterRule(u, 154, r.RULE_identifierList);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2140),
				this.match(r.T__1),
				(this.state = 2141),
				this.identifierSeq(),
				(this.state = 2142),
				this.match(r.T__2);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ua(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_identifierSeq),
			(this._errorCapturingIdentifier = null),
			(this.ident = []),
			this
		);
	}
	Ua.prototype = Object.create(p.ParserRuleContext.prototype);
	Ua.prototype.constructor = Ua;
	Ua.prototype.errorCapturingIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(y0) : this.getTypedRuleContext(y0, u);
	};
	Ua.prototype.accept = function (u) {
		return u instanceof R ? u.visitIdentifierSeq(this) : u.visitChildren(this);
	};
	r.IdentifierSeqContext = Ua;
	r.prototype.identifierSeq = function () {
		var u = new Ua(this, this._ctx, this.state);
		this.enterRule(u, 156, r.RULE_identifierSeq);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2144),
				(u._errorCapturingIdentifier = this.errorCapturingIdentifier()),
				u.ident.push(u._errorCapturingIdentifier),
				(this.state = 2149),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 267, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 &&
					((this.state = 2145),
					this.match(r.T__3),
					(this.state = 2146),
					(u._errorCapturingIdentifier = this.errorCapturingIdentifier()),
					u.ident.push(u._errorCapturingIdentifier)),
					(this.state = 2151),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 267, this._ctx));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function p3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_orderedIdentifierList),
			this
		);
	}
	p3.prototype = Object.create(p.ParserRuleContext.prototype);
	p3.prototype.constructor = p3;
	p3.prototype.orderedIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Us) : this.getTypedRuleContext(Us, u);
	};
	p3.prototype.accept = function (u) {
		return u instanceof R ? u.visitOrderedIdentifierList(this) : u.visitChildren(this);
	};
	r.OrderedIdentifierListContext = p3;
	r.prototype.orderedIdentifierList = function () {
		var u = new p3(this, this._ctx, this.state);
		this.enterRule(u, 158, r.RULE_orderedIdentifierList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2152,
					this.match(r.T__1),
					this.state = 2153,
					this.orderedIdentifier(),
					this.state = 2158,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 2154),
					this.match(r.T__3),
					(this.state = 2155),
					this.orderedIdentifier(),
					(this.state = 2160),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 2161), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Us(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_orderedIdentifier),
			(this.ident = null),
			(this.ordering = null),
			this
		);
	}
	Us.prototype = Object.create(p.ParserRuleContext.prototype);
	Us.prototype.constructor = Us;
	Us.prototype.errorCapturingIdentifier = function () {
		return this.getTypedRuleContext(y0, 0);
	};
	Us.prototype.ASC = function () {
		return this.getToken(r.ASC, 0);
	};
	Us.prototype.DESC = function () {
		return this.getToken(r.DESC, 0);
	};
	Us.prototype.accept = function (u) {
		return u instanceof R ? u.visitOrderedIdentifier(this) : u.visitChildren(this);
	};
	r.OrderedIdentifierContext = Us;
	r.prototype.orderedIdentifier = function () {
		var u = new Us(this, this._ctx, this.state);
		this.enterRule(u, 160, r.RULE_orderedIdentifier);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2163),
				(u.ident = this.errorCapturingIdentifier()),
				(this.state = 2165),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === r.ASC || e === r.DESC) &&
					((this.state = 2164),
					(u.ordering = this._input.LT(1)),
					(e = this._input.LA(1)),
					e === r.ASC || e === r.DESC
						? (this._errHandler.reportMatch(this), this.consume())
						: (u.ordering = this._errHandler.recoverInline(this)));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function h3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_identifierCommentList),
			this
		);
	}
	h3.prototype = Object.create(p.ParserRuleContext.prototype);
	h3.prototype.constructor = h3;
	h3.prototype.identifierComment = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(va) : this.getTypedRuleContext(va, u);
	};
	h3.prototype.accept = function (u) {
		return u instanceof R ? u.visitIdentifierCommentList(this) : u.visitChildren(this);
	};
	r.IdentifierCommentListContext = h3;
	r.prototype.identifierCommentList = function () {
		var u = new h3(this, this._ctx, this.state);
		this.enterRule(u, 162, r.RULE_identifierCommentList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2167,
					this.match(r.T__1),
					this.state = 2168,
					this.identifierComment(),
					this.state = 2173,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 2169),
					this.match(r.T__3),
					(this.state = 2170),
					this.identifierComment(),
					(this.state = 2175),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 2176), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function va(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_identifierComment),
			this
		);
	}
	va.prototype = Object.create(p.ParserRuleContext.prototype);
	va.prototype.constructor = va;
	va.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	va.prototype.commentSpec = function () {
		return this.getTypedRuleContext(du, 0);
	};
	va.prototype.accept = function (u) {
		return u instanceof R ? u.visitIdentifierComment(this) : u.visitChildren(this);
	};
	r.IdentifierCommentContext = va;
	r.prototype.identifierComment = function () {
		var u = new va(this, this._ctx, this.state);
		this.enterRule(u, 164, r.RULE_identifierComment);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2178),
				this.identifier(),
				(this.state = 2180),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.COMMENT && ((this.state = 2179), this.commentSpec());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function O0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_relationPrimary),
			this
		);
	}
	O0.prototype = Object.create(p.ParserRuleContext.prototype);
	O0.prototype.constructor = O0;
	O0.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function Jh(u, e) {
		return O0.call(this, u), O0.prototype.copyFrom.call(this, e), this;
	}
	Jh.prototype = Object.create(O0.prototype);
	Jh.prototype.constructor = Jh;
	r.TableValuedFunctionContext = Jh;
	Jh.prototype.functionTable = function () {
		return this.getTypedRuleContext(wa, 0);
	};
	Jh.prototype.accept = function (u) {
		return u instanceof R ? u.visitTableValuedFunction(this) : u.visitChildren(this);
	};
	function zh(u, e) {
		return O0.call(this, u), O0.prototype.copyFrom.call(this, e), this;
	}
	zh.prototype = Object.create(O0.prototype);
	zh.prototype.constructor = zh;
	r.InlineTableDefault2Context = zh;
	zh.prototype.inlineTable = function () {
		return this.getTypedRuleContext(vs, 0);
	};
	zh.prototype.accept = function (u) {
		return u instanceof R ? u.visitInlineTableDefault2(this) : u.visitChildren(this);
	};
	function rc(u, e) {
		return O0.call(this, u), O0.prototype.copyFrom.call(this, e), this;
	}
	rc.prototype = Object.create(O0.prototype);
	rc.prototype.constructor = rc;
	r.AliasedRelationContext = rc;
	rc.prototype.relation = function () {
		return this.getTypedRuleContext(Ps, 0);
	};
	rc.prototype.tableAlias = function () {
		return this.getTypedRuleContext(Su, 0);
	};
	rc.prototype.sample = function () {
		return this.getTypedRuleContext(Ds, 0);
	};
	rc.prototype.accept = function (u) {
		return u instanceof R ? u.visitAliasedRelation(this) : u.visitChildren(this);
	};
	function nc(u, e) {
		return O0.call(this, u), O0.prototype.copyFrom.call(this, e), this;
	}
	nc.prototype = Object.create(O0.prototype);
	nc.prototype.constructor = nc;
	r.AliasedQueryContext = nc;
	nc.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	nc.prototype.tableAlias = function () {
		return this.getTypedRuleContext(Su, 0);
	};
	nc.prototype.sample = function () {
		return this.getTypedRuleContext(Ds, 0);
	};
	nc.prototype.accept = function (u) {
		return u instanceof R ? u.visitAliasedQuery(this) : u.visitChildren(this);
	};
	function sc(u, e) {
		return O0.call(this, u), O0.prototype.copyFrom.call(this, e), this;
	}
	sc.prototype = Object.create(O0.prototype);
	sc.prototype.constructor = sc;
	r.TableNameContext = sc;
	sc.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	sc.prototype.tableAlias = function () {
		return this.getTypedRuleContext(Su, 0);
	};
	sc.prototype.sample = function () {
		return this.getTypedRuleContext(Ds, 0);
	};
	sc.prototype.accept = function (u) {
		return u instanceof R ? u.visitTableName(this) : u.visitChildren(this);
	};
	r.RelationPrimaryContext = O0;
	r.prototype.relationPrimary = function () {
		var u = new O0(this, this._ctx, this.state);
		this.enterRule(u, 166, r.RULE_relationPrimary);
		try {
			(this.state = 2206), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 275, this._ctx);
			switch (e) {
				case 1:
					(u = new sc(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 2182),
						this.multipartIdentifier(),
						(this.state = 2184),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 272, this._ctx);
					e === 1 && ((this.state = 2183), this.sample()), (this.state = 2186), this.tableAlias();
					break;
				case 2:
					(u = new nc(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 2188),
						this.match(r.T__1),
						(this.state = 2189),
						this.query(),
						(this.state = 2190),
						this.match(r.T__2),
						(this.state = 2192),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 273, this._ctx);
					e === 1 && ((this.state = 2191), this.sample()), (this.state = 2194), this.tableAlias();
					break;
				case 3:
					(u = new rc(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 2196),
						this.match(r.T__1),
						(this.state = 2197),
						this.relation(),
						(this.state = 2198),
						this.match(r.T__2),
						(this.state = 2200),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 274, this._ctx);
					e === 1 && ((this.state = 2199), this.sample()), (this.state = 2202), this.tableAlias();
					break;
				case 4:
					(u = new zh(this, u)), this.enterOuterAlt(u, 4), (this.state = 2204), this.inlineTable();
					break;
				case 5:
					(u = new Jh(this, u)), this.enterOuterAlt(u, 5), (this.state = 2205), this.functionTable();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function vs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_inlineTable),
			this
		);
	}
	vs.prototype = Object.create(p.ParserRuleContext.prototype);
	vs.prototype.constructor = vs;
	vs.prototype.VALUES = function () {
		return this.getToken(r.VALUES, 0);
	};
	vs.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	vs.prototype.tableAlias = function () {
		return this.getTypedRuleContext(Su, 0);
	};
	vs.prototype.accept = function (u) {
		return u instanceof R ? u.visitInlineTable(this) : u.visitChildren(this);
	};
	r.InlineTableContext = vs;
	r.prototype.inlineTable = function () {
		var u = new vs(this, this._ctx, this.state);
		this.enterRule(u, 168, r.RULE_inlineTable);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2208),
				this.match(r.VALUES),
				(this.state = 2209),
				this.expression(),
				(this.state = 2214),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 276, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 2210), this.match(r.T__3), (this.state = 2211), this.expression()),
					(this.state = 2216),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 276, this._ctx));
			(this.state = 2217), this.tableAlias();
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function wa(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_functionTable),
			(this.funcName = null),
			this
		);
	}
	wa.prototype = Object.create(p.ParserRuleContext.prototype);
	wa.prototype.constructor = wa;
	wa.prototype.tableAlias = function () {
		return this.getTypedRuleContext(Su, 0);
	};
	wa.prototype.functionName = function () {
		return this.getTypedRuleContext($r, 0);
	};
	wa.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	wa.prototype.accept = function (u) {
		return u instanceof R ? u.visitFunctionTable(this) : u.visitChildren(this);
	};
	r.FunctionTableContext = wa;
	r.prototype.functionTable = function () {
		var u = new wa(this, this._ctx, this.state);
		this.enterRule(u, 170, r.RULE_functionTable);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2219),
				(u.funcName = this.functionName()),
				(this.state = 2220),
				this.match(r.T__1),
				(this.state = 2229),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 278, this._ctx);
			if (i === 1)
				for (
					this.state = 2221,
						this.expression(),
						this.state = 2226,
						this._errHandler.sync(this),
						e = this._input.LA(1);
					e === r.T__3;

				)
					(this.state = 2222),
						this.match(r.T__3),
						(this.state = 2223),
						this.expression(),
						(this.state = 2228),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
			(this.state = 2231), this.match(r.T__2), (this.state = 2232), this.tableAlias();
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Su(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_tableAlias),
			this
		);
	}
	Su.prototype = Object.create(p.ParserRuleContext.prototype);
	Su.prototype.constructor = Su;
	Su.prototype.strictIdentifier = function () {
		return this.getTypedRuleContext(Ge, 0);
	};
	Su.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	Su.prototype.identifierList = function () {
		return this.getTypedRuleContext(zu, 0);
	};
	Su.prototype.accept = function (u) {
		return u instanceof R ? u.visitTableAlias(this) : u.visitChildren(this);
	};
	r.TableAliasContext = Su;
	r.prototype.tableAlias = function () {
		var u = new Su(this, this._ctx, this.state);
		this.enterRule(u, 172, r.RULE_tableAlias);
		try {
			this.enterOuterAlt(u, 1), (this.state = 2241), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 281, this._ctx);
			if (e === 1) {
				(this.state = 2235), this._errHandler.sync(this);
				var e = this._interp.adaptivePredict(this._input, 279, this._ctx);
				e === 1 && ((this.state = 2234), this.match(r.AS)),
					(this.state = 2237),
					this.strictIdentifier(),
					(this.state = 2239),
					this._errHandler.sync(this);
				var e = this._interp.adaptivePredict(this._input, 280, this._ctx);
				e === 1 && ((this.state = 2238), this.identifierList());
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Tu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_rowFormat),
			this
		);
	}
	Tu.prototype = Object.create(p.ParserRuleContext.prototype);
	Tu.prototype.constructor = Tu;
	Tu.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function Fi(u, e) {
		return Tu.call(this, u), (this.name = null), (this.props = null), Tu.prototype.copyFrom.call(this, e), this;
	}
	Fi.prototype = Object.create(Tu.prototype);
	Fi.prototype.constructor = Fi;
	r.RowFormatSerdeContext = Fi;
	Fi.prototype.ROW = function () {
		return this.getToken(r.ROW, 0);
	};
	Fi.prototype.FORMAT = function () {
		return this.getToken(r.FORMAT, 0);
	};
	Fi.prototype.SERDE = function () {
		return this.getToken(r.SERDE, 0);
	};
	Fi.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	Fi.prototype.WITH = function () {
		return this.getToken(r.WITH, 0);
	};
	Fi.prototype.SERDEPROPERTIES = function () {
		return this.getToken(r.SERDEPROPERTIES, 0);
	};
	Fi.prototype.tablePropertyList = function () {
		return this.getTypedRuleContext(m0, 0);
	};
	Fi.prototype.accept = function (u) {
		return u instanceof R ? u.visitRowFormatSerde(this) : u.visitChildren(this);
	};
	function v0(u, e) {
		return (
			Tu.call(this, u),
			(this.fieldsTerminatedBy = null),
			(this.escapedBy = null),
			(this.collectionItemsTerminatedBy = null),
			(this.keysTerminatedBy = null),
			(this.linesSeparatedBy = null),
			(this.nullDefinedAs = null),
			Tu.prototype.copyFrom.call(this, e),
			this
		);
	}
	v0.prototype = Object.create(Tu.prototype);
	v0.prototype.constructor = v0;
	r.RowFormatDelimitedContext = v0;
	v0.prototype.ROW = function () {
		return this.getToken(r.ROW, 0);
	};
	v0.prototype.FORMAT = function () {
		return this.getToken(r.FORMAT, 0);
	};
	v0.prototype.DELIMITED = function () {
		return this.getToken(r.DELIMITED, 0);
	};
	v0.prototype.FIELDS = function () {
		return this.getToken(r.FIELDS, 0);
	};
	v0.prototype.TERMINATED = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.TERMINATED) : this.getToken(r.TERMINATED, u);
	};
	v0.prototype.BY = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.BY) : this.getToken(r.BY, u);
	};
	v0.prototype.COLLECTION = function () {
		return this.getToken(r.COLLECTION, 0);
	};
	v0.prototype.ITEMS = function () {
		return this.getToken(r.ITEMS, 0);
	};
	v0.prototype.MAP = function () {
		return this.getToken(r.MAP, 0);
	};
	v0.prototype.KEYS = function () {
		return this.getToken(r.KEYS, 0);
	};
	v0.prototype.LINES = function () {
		return this.getToken(r.LINES, 0);
	};
	v0.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	v0.prototype.DEFINED = function () {
		return this.getToken(r.DEFINED, 0);
	};
	v0.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	v0.prototype.STRING = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.STRING) : this.getToken(r.STRING, u);
	};
	v0.prototype.ESCAPED = function () {
		return this.getToken(r.ESCAPED, 0);
	};
	v0.prototype.accept = function (u) {
		return u instanceof R ? u.visitRowFormatDelimited(this) : u.visitChildren(this);
	};
	r.RowFormatContext = Tu;
	r.prototype.rowFormat = function () {
		var u = new Tu(this, this._ctx, this.state);
		this.enterRule(u, 174, r.RULE_rowFormat);
		try {
			(this.state = 2292), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 289, this._ctx);
			switch (e) {
				case 1:
					(u = new Fi(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 2243),
						this.match(r.ROW),
						(this.state = 2244),
						this.match(r.FORMAT),
						(this.state = 2245),
						this.match(r.SERDE),
						(this.state = 2246),
						(u.name = this.match(r.STRING)),
						(this.state = 2250),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 282, this._ctx);
					e === 1 &&
						((this.state = 2247),
						this.match(r.WITH),
						(this.state = 2248),
						this.match(r.SERDEPROPERTIES),
						(this.state = 2249),
						(u.props = this.tablePropertyList()));
					break;
				case 2:
					(u = new v0(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 2252),
						this.match(r.ROW),
						(this.state = 2253),
						this.match(r.FORMAT),
						(this.state = 2254),
						this.match(r.DELIMITED),
						(this.state = 2264),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 284, this._ctx);
					if (e === 1) {
						(this.state = 2255),
							this.match(r.FIELDS),
							(this.state = 2256),
							this.match(r.TERMINATED),
							(this.state = 2257),
							this.match(r.BY),
							(this.state = 2258),
							(u.fieldsTerminatedBy = this.match(r.STRING)),
							(this.state = 2262),
							this._errHandler.sync(this);
						var e = this._interp.adaptivePredict(this._input, 283, this._ctx);
						e === 1 &&
							((this.state = 2259),
							this.match(r.ESCAPED),
							(this.state = 2260),
							this.match(r.BY),
							(this.state = 2261),
							(u.escapedBy = this.match(r.STRING)));
					}
					(this.state = 2271), this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 285, this._ctx);
					e === 1 &&
						((this.state = 2266),
						this.match(r.COLLECTION),
						(this.state = 2267),
						this.match(r.ITEMS),
						(this.state = 2268),
						this.match(r.TERMINATED),
						(this.state = 2269),
						this.match(r.BY),
						(this.state = 2270),
						(u.collectionItemsTerminatedBy = this.match(r.STRING))),
						(this.state = 2278),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 286, this._ctx);
					e === 1 &&
						((this.state = 2273),
						this.match(r.MAP),
						(this.state = 2274),
						this.match(r.KEYS),
						(this.state = 2275),
						this.match(r.TERMINATED),
						(this.state = 2276),
						this.match(r.BY),
						(this.state = 2277),
						(u.keysTerminatedBy = this.match(r.STRING))),
						(this.state = 2284),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 287, this._ctx);
					e === 1 &&
						((this.state = 2280),
						this.match(r.LINES),
						(this.state = 2281),
						this.match(r.TERMINATED),
						(this.state = 2282),
						this.match(r.BY),
						(this.state = 2283),
						(u.linesSeparatedBy = this.match(r.STRING))),
						(this.state = 2290),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 288, this._ctx);
					e === 1 &&
						((this.state = 2286),
						this.match(r.NULL),
						(this.state = 2287),
						this.match(r.DEFINED),
						(this.state = 2288),
						this.match(r.AS),
						(this.state = 2289),
						(u.nullDefinedAs = this.match(r.STRING)));
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ac(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_multipartIdentifierList),
			this
		);
	}
	ac.prototype = Object.create(p.ParserRuleContext.prototype);
	ac.prototype.constructor = ac;
	ac.prototype.multipartIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(D) : this.getTypedRuleContext(D, u);
	};
	ac.prototype.accept = function (u) {
		return u instanceof R ? u.visitMultipartIdentifierList(this) : u.visitChildren(this);
	};
	r.MultipartIdentifierListContext = ac;
	r.prototype.multipartIdentifierList = function () {
		var u = new ac(this, this._ctx, this.state);
		this.enterRule(u, 176, r.RULE_multipartIdentifierList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2294,
					this.multipartIdentifier(),
					this.state = 2299,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 2295),
					this.match(r.T__3),
					(this.state = 2296),
					this.multipartIdentifier(),
					(this.state = 2301),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function D(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_multipartIdentifier),
			(this._errorCapturingIdentifier = null),
			(this.parts = []),
			this
		);
	}
	D.prototype = Object.create(p.ParserRuleContext.prototype);
	D.prototype.constructor = D;
	D.prototype.errorCapturingIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(y0) : this.getTypedRuleContext(y0, u);
	};
	D.prototype.accept = function (u) {
		return u instanceof R ? u.visitMultipartIdentifier(this) : u.visitChildren(this);
	};
	r.MultipartIdentifierContext = D;
	r.prototype.multipartIdentifier = function () {
		var u = new D(this, this._ctx, this.state);
		this.enterRule(u, 178, r.RULE_multipartIdentifier);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2302),
				(u._errorCapturingIdentifier = this.errorCapturingIdentifier()),
				u.parts.push(u._errorCapturingIdentifier),
				(this.state = 2307),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 291, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 &&
					((this.state = 2303),
					this.match(r.T__4),
					(this.state = 2304),
					(u._errorCapturingIdentifier = this.errorCapturingIdentifier()),
					u.parts.push(u._errorCapturingIdentifier)),
					(this.state = 2309),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 291, this._ctx));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Xr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_tableIdentifier),
			(this.db = null),
			(this.table = null),
			this
		);
	}
	Xr.prototype = Object.create(p.ParserRuleContext.prototype);
	Xr.prototype.constructor = Xr;
	Xr.prototype.errorCapturingIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(y0) : this.getTypedRuleContext(y0, u);
	};
	Xr.prototype.accept = function (u) {
		return u instanceof R ? u.visitTableIdentifier(this) : u.visitChildren(this);
	};
	r.TableIdentifierContext = Xr;
	r.prototype.tableIdentifier = function () {
		var u = new Xr(this, this._ctx, this.state);
		this.enterRule(u, 180, r.RULE_tableIdentifier);
		try {
			this.enterOuterAlt(u, 1), (this.state = 2313), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 292, this._ctx);
			e === 1 &&
				((this.state = 2310),
				(u.db = this.errorCapturingIdentifier()),
				(this.state = 2311),
				this.match(r.T__4)),
				(this.state = 2315),
				(u.table = this.errorCapturingIdentifier());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function l3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_functionIdentifier),
			(this.db = null),
			(this.func = null),
			this
		);
	}
	l3.prototype = Object.create(p.ParserRuleContext.prototype);
	l3.prototype.constructor = l3;
	l3.prototype.errorCapturingIdentifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(y0) : this.getTypedRuleContext(y0, u);
	};
	l3.prototype.accept = function (u) {
		return u instanceof R ? u.visitFunctionIdentifier(this) : u.visitChildren(this);
	};
	r.FunctionIdentifierContext = l3;
	r.prototype.functionIdentifier = function () {
		var u = new l3(this, this._ctx, this.state);
		this.enterRule(u, 182, r.RULE_functionIdentifier);
		try {
			this.enterOuterAlt(u, 1), (this.state = 2320), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 293, this._ctx);
			e === 1 &&
				((this.state = 2317),
				(u.db = this.errorCapturingIdentifier()),
				(this.state = 2318),
				this.match(r.T__4)),
				(this.state = 2322),
				(u.func = this.errorCapturingIdentifier());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $u(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_namedExpression),
			(this.name = null),
			this
		);
	}
	$u.prototype = Object.create(p.ParserRuleContext.prototype);
	$u.prototype.constructor = $u;
	$u.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	$u.prototype.identifierList = function () {
		return this.getTypedRuleContext(zu, 0);
	};
	$u.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	$u.prototype.errorCapturingIdentifier = function () {
		return this.getTypedRuleContext(y0, 0);
	};
	$u.prototype.accept = function (u) {
		return u instanceof R ? u.visitNamedExpression(this) : u.visitChildren(this);
	};
	r.NamedExpressionContext = $u;
	r.prototype.namedExpression = function () {
		var u = new $u(this, this._ctx, this.state);
		this.enterRule(u, 184, r.RULE_namedExpression);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2324),
				this.expression(),
				(this.state = 2332),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 296, this._ctx);
			if (e === 1) {
				(this.state = 2326), this._errHandler.sync(this);
				var e = this._interp.adaptivePredict(this._input, 294, this._ctx);
				e === 1 && ((this.state = 2325), this.match(r.AS)), (this.state = 2330), this._errHandler.sync(this);
				var e = this._interp.adaptivePredict(this._input, 295, this._ctx);
				switch (e) {
					case 1:
						(this.state = 2328), (u.name = this.errorCapturingIdentifier());
						break;
					case 2:
						(this.state = 2329), this.identifierList();
						break;
				}
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ma(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_namedExpressionSeq),
			this
		);
	}
	Ma.prototype = Object.create(p.ParserRuleContext.prototype);
	Ma.prototype.constructor = Ma;
	Ma.prototype.namedExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts($u) : this.getTypedRuleContext($u, u);
	};
	Ma.prototype.accept = function (u) {
		return u instanceof R ? u.visitNamedExpressionSeq(this) : u.visitChildren(this);
	};
	r.NamedExpressionSeqContext = Ma;
	r.prototype.namedExpressionSeq = function () {
		var u = new Ma(this, this._ctx, this.state);
		this.enterRule(u, 186, r.RULE_namedExpressionSeq);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2334),
				this.namedExpression(),
				(this.state = 2339),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 297, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 2335), this.match(r.T__3), (this.state = 2336), this.namedExpression()),
					(this.state = 2341),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 297, this._ctx));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function oc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_partitionFieldList),
			(this._partitionField = null),
			(this.fields = []),
			this
		);
	}
	oc.prototype = Object.create(p.ParserRuleContext.prototype);
	oc.prototype.constructor = oc;
	oc.prototype.partitionField = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Fe) : this.getTypedRuleContext(Fe, u);
	};
	oc.prototype.accept = function (u) {
		return u instanceof R ? u.visitPartitionFieldList(this) : u.visitChildren(this);
	};
	r.PartitionFieldListContext = oc;
	r.prototype.partitionFieldList = function () {
		var u = new oc(this, this._ctx, this.state);
		this.enterRule(u, 188, r.RULE_partitionFieldList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2342,
					this.match(r.T__1),
					this.state = 2343,
					u._partitionField = this.partitionField(),
					u.fields.push(u._partitionField),
					this.state = 2348,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 2344),
					this.match(r.T__3),
					(this.state = 2345),
					(u._partitionField = this.partitionField()),
					u.fields.push(u._partitionField),
					(this.state = 2350),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 2351), this.match(r.T__2);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Fe(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_partitionField),
			this
		);
	}
	Fe.prototype = Object.create(p.ParserRuleContext.prototype);
	Fe.prototype.constructor = Fe;
	Fe.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function $h(u, e) {
		return Fe.call(this, u), Fe.prototype.copyFrom.call(this, e), this;
	}
	$h.prototype = Object.create(Fe.prototype);
	$h.prototype.constructor = $h;
	r.PartitionColumnContext = $h;
	$h.prototype.colType = function () {
		return this.getTypedRuleContext($t, 0);
	};
	$h.prototype.accept = function (u) {
		return u instanceof R ? u.visitPartitionColumn(this) : u.visitChildren(this);
	};
	function ul(u, e) {
		return Fe.call(this, u), Fe.prototype.copyFrom.call(this, e), this;
	}
	ul.prototype = Object.create(Fe.prototype);
	ul.prototype.constructor = ul;
	r.PartitionTransformContext = ul;
	ul.prototype.transform = function () {
		return this.getTypedRuleContext(ki, 0);
	};
	ul.prototype.accept = function (u) {
		return u instanceof R ? u.visitPartitionTransform(this) : u.visitChildren(this);
	};
	r.PartitionFieldContext = Fe;
	r.prototype.partitionField = function () {
		var u = new Fe(this, this._ctx, this.state);
		this.enterRule(u, 190, r.RULE_partitionField);
		try {
			(this.state = 2355), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 299, this._ctx);
			switch (e) {
				case 1:
					(u = new ul(this, u)), this.enterOuterAlt(u, 1), (this.state = 2353), this.transform();
					break;
				case 2:
					(u = new $h(this, u)), this.enterOuterAlt(u, 2), (this.state = 2354), this.colType();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ki(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_transform),
			this
		);
	}
	ki.prototype = Object.create(p.ParserRuleContext.prototype);
	ki.prototype.constructor = ki;
	ki.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function tl(u, e) {
		return ki.call(this, u), ki.prototype.copyFrom.call(this, e), this;
	}
	tl.prototype = Object.create(ki.prototype);
	tl.prototype.constructor = tl;
	r.IdentityTransformContext = tl;
	tl.prototype.qualifiedName = function () {
		return this.getTypedRuleContext(Kt, 0);
	};
	tl.prototype.accept = function (u) {
		return u instanceof R ? u.visitIdentityTransform(this) : u.visitChildren(this);
	};
	function d3(u, e) {
		return (
			ki.call(this, u),
			(this.transformName = null),
			(this._transformArgument = null),
			(this.argument = []),
			ki.prototype.copyFrom.call(this, e),
			this
		);
	}
	d3.prototype = Object.create(ki.prototype);
	d3.prototype.constructor = d3;
	r.ApplyTransformContext = d3;
	d3.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	d3.prototype.transformArgument = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ha) : this.getTypedRuleContext(Ha, u);
	};
	d3.prototype.accept = function (u) {
		return u instanceof R ? u.visitApplyTransform(this) : u.visitChildren(this);
	};
	r.TransformContext = ki;
	r.prototype.transform = function () {
		var u = new ki(this, this._ctx, this.state);
		this.enterRule(u, 192, r.RULE_transform);
		var e = 0;
		try {
			(this.state = 2370), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 301, this._ctx);
			switch (i) {
				case 1:
					(u = new tl(this, u)), this.enterOuterAlt(u, 1), (this.state = 2357), this.qualifiedName();
					break;
				case 2:
					for (
						u = new d3(this, u),
							this.enterOuterAlt(u, 2),
							this.state = 2358,
							u.transformName = this.identifier(),
							this.state = 2359,
							this.match(r.T__1),
							this.state = 2360,
							u._transformArgument = this.transformArgument(),
							u.argument.push(u._transformArgument),
							this.state = 2365,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.T__3;

					)
						(this.state = 2361),
							this.match(r.T__3),
							(this.state = 2362),
							(u._transformArgument = this.transformArgument()),
							u.argument.push(u._transformArgument),
							(this.state = 2367),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					(this.state = 2368), this.match(r.T__2);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ha(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_transformArgument),
			this
		);
	}
	Ha.prototype = Object.create(p.ParserRuleContext.prototype);
	Ha.prototype.constructor = Ha;
	Ha.prototype.qualifiedName = function () {
		return this.getTypedRuleContext(Kt, 0);
	};
	Ha.prototype.constant = function () {
		return this.getTypedRuleContext(s0, 0);
	};
	Ha.prototype.accept = function (u) {
		return u instanceof R ? u.visitTransformArgument(this) : u.visitChildren(this);
	};
	r.TransformArgumentContext = Ha;
	r.prototype.transformArgument = function () {
		var u = new Ha(this, this._ctx, this.state);
		this.enterRule(u, 194, r.RULE_transformArgument);
		try {
			(this.state = 2374), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 302, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2372), this.qualifiedName();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2373), this.constant();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function V(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_expression),
			this
		);
	}
	V.prototype = Object.create(p.ParserRuleContext.prototype);
	V.prototype.constructor = V;
	V.prototype.booleanExpression = function () {
		return this.getTypedRuleContext(e0, 0);
	};
	V.prototype.accept = function (u) {
		return u instanceof R ? u.visitExpression(this) : u.visitChildren(this);
	};
	r.ExpressionContext = V;
	r.prototype.expression = function () {
		var u = new V(this, this._ctx, this.state);
		this.enterRule(u, 196, r.RULE_expression);
		try {
			this.enterOuterAlt(u, 1), (this.state = 2376), this.booleanExpression(0);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function e0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_booleanExpression),
			this
		);
	}
	e0.prototype = Object.create(p.ParserRuleContext.prototype);
	e0.prototype.constructor = e0;
	e0.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function f3(u, e) {
		return e0.call(this, u), e0.prototype.copyFrom.call(this, e), this;
	}
	f3.prototype = Object.create(e0.prototype);
	f3.prototype.constructor = f3;
	r.LogicalNotContext = f3;
	f3.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	f3.prototype.booleanExpression = function () {
		return this.getTypedRuleContext(e0, 0);
	};
	f3.prototype.accept = function (u) {
		return u instanceof R ? u.visitLogicalNot(this) : u.visitChildren(this);
	};
	function _3(u, e) {
		return e0.call(this, u), e0.prototype.copyFrom.call(this, e), this;
	}
	_3.prototype = Object.create(e0.prototype);
	_3.prototype.constructor = _3;
	r.PredicatedContext = _3;
	_3.prototype.valueExpression = function () {
		return this.getTypedRuleContext(G, 0);
	};
	_3.prototype.predicate = function () {
		return this.getTypedRuleContext(o0, 0);
	};
	_3.prototype.accept = function (u) {
		return u instanceof R ? u.visitPredicated(this) : u.visitChildren(this);
	};
	function E3(u, e) {
		return e0.call(this, u), e0.prototype.copyFrom.call(this, e), this;
	}
	E3.prototype = Object.create(e0.prototype);
	E3.prototype.constructor = E3;
	r.ExistsContext = E3;
	E3.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	E3.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	E3.prototype.accept = function (u) {
		return u instanceof R ? u.visitExists(this) : u.visitChildren(this);
	};
	function Fa(u, e) {
		return (
			e0.call(this, u),
			(this.left = null),
			(this.operator = null),
			(this.right = null),
			e0.prototype.copyFrom.call(this, e),
			this
		);
	}
	Fa.prototype = Object.create(e0.prototype);
	Fa.prototype.constructor = Fa;
	r.LogicalBinaryContext = Fa;
	Fa.prototype.booleanExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(e0) : this.getTypedRuleContext(e0, u);
	};
	Fa.prototype.AND = function () {
		return this.getToken(r.AND, 0);
	};
	Fa.prototype.OR = function () {
		return this.getToken(r.OR, 0);
	};
	Fa.prototype.accept = function (u) {
		return u instanceof R ? u.visitLogicalBinary(this) : u.visitChildren(this);
	};
	r.prototype.booleanExpression = function (u) {
		u === void 0 && (u = 0);
		var e = this._ctx,
			i = this.state,
			n = new e0(this, this._ctx, i),
			a = n,
			o = 198;
		this.enterRecursionRule(n, 198, r.RULE_booleanExpression, u);
		try {
			this.enterOuterAlt(n, 1), (this.state = 2390), this._errHandler.sync(this);
			var c = this._interp.adaptivePredict(this._input, 304, this._ctx);
			switch (c) {
				case 1:
					(n = new f3(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2379),
						this.match(r.NOT),
						(this.state = 2380),
						this.booleanExpression(5);
					break;
				case 2:
					(n = new E3(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2381),
						this.match(r.EXISTS),
						(this.state = 2382),
						this.match(r.T__1),
						(this.state = 2383),
						this.query(),
						(this.state = 2384),
						this.match(r.T__2);
					break;
				case 3:
					(n = new _3(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2386),
						this.valueExpression(0),
						(this.state = 2388),
						this._errHandler.sync(this);
					var c = this._interp.adaptivePredict(this._input, 303, this._ctx);
					c === 1 && ((this.state = 2387), this.predicate());
					break;
			}
			(this._ctx.stop = this._input.LT(-1)), (this.state = 2400), this._errHandler.sync(this);
			for (
				var h = this._interp.adaptivePredict(this._input, 306, this._ctx);
				h != 2 && h != p.atn.ATN.INVALID_ALT_NUMBER;

			) {
				if (h === 1) {
					this._parseListeners !== null && this.triggerExitRuleEvent(),
						(a = n),
						(this.state = 2398),
						this._errHandler.sync(this);
					var c = this._interp.adaptivePredict(this._input, 305, this._ctx);
					switch (c) {
						case 1:
							if (
								((n = new Fa(this, new e0(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_booleanExpression),
								(this.state = 2392),
								!this.precpred(this._ctx, 2))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 2)');
							(this.state = 2393),
								(n.operator = this.match(r.AND)),
								(this.state = 2394),
								(n.right = this.booleanExpression(3));
							break;
						case 2:
							if (
								((n = new Fa(this, new e0(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_booleanExpression),
								(this.state = 2395),
								!this.precpred(this._ctx, 1))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 1)');
							(this.state = 2396),
								(n.operator = this.match(r.OR)),
								(this.state = 2397),
								(n.right = this.booleanExpression(2));
							break;
					}
				}
				(this.state = 2402),
					this._errHandler.sync(this),
					(h = this._interp.adaptivePredict(this._input, 306, this._ctx));
			}
		} catch (_) {
			if (_ instanceof p.error.RecognitionException)
				(n.exception = _), this._errHandler.reportError(this, _), this._errHandler.recover(this, _);
			else throw _;
		} finally {
			this.unrollRecursionContexts(e);
		}
		return n;
	};
	function o0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_predicate),
			(this.kind = null),
			(this.lower = null),
			(this.upper = null),
			(this.pattern = null),
			(this.quantifier = null),
			(this.escapeChar = null),
			(this.right = null),
			this
		);
	}
	o0.prototype = Object.create(p.ParserRuleContext.prototype);
	o0.prototype.constructor = o0;
	o0.prototype.AND = function () {
		return this.getToken(r.AND, 0);
	};
	o0.prototype.BETWEEN = function () {
		return this.getToken(r.BETWEEN, 0);
	};
	o0.prototype.valueExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(G) : this.getTypedRuleContext(G, u);
	};
	o0.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	o0.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	o0.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	o0.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	o0.prototype.RLIKE = function () {
		return this.getToken(r.RLIKE, 0);
	};
	o0.prototype.LIKE = function () {
		return this.getToken(r.LIKE, 0);
	};
	o0.prototype.ANY = function () {
		return this.getToken(r.ANY, 0);
	};
	o0.prototype.SOME = function () {
		return this.getToken(r.SOME, 0);
	};
	o0.prototype.ALL = function () {
		return this.getToken(r.ALL, 0);
	};
	o0.prototype.ESCAPE = function () {
		return this.getToken(r.ESCAPE, 0);
	};
	o0.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	o0.prototype.IS = function () {
		return this.getToken(r.IS, 0);
	};
	o0.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	o0.prototype.TRUE = function () {
		return this.getToken(r.TRUE, 0);
	};
	o0.prototype.FALSE = function () {
		return this.getToken(r.FALSE, 0);
	};
	o0.prototype.UNKNOWN = function () {
		return this.getToken(r.UNKNOWN, 0);
	};
	o0.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	o0.prototype.DISTINCT = function () {
		return this.getToken(r.DISTINCT, 0);
	};
	o0.prototype.accept = function (u) {
		return u instanceof R ? u.visitPredicate(this) : u.visitChildren(this);
	};
	r.PredicateContext = o0;
	r.prototype.predicate = function () {
		var u = new o0(this, this._ctx, this.state);
		this.enterRule(u, 200, r.RULE_predicate);
		var e = 0;
		try {
			(this.state = 2485), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 320, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 2404),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.NOT && ((this.state = 2403), this.match(r.NOT)),
						(this.state = 2406),
						(u.kind = this.match(r.BETWEEN)),
						(this.state = 2407),
						(u.lower = this.valueExpression(0)),
						(this.state = 2408),
						this.match(r.AND),
						(this.state = 2409),
						(u.upper = this.valueExpression(0));
					break;
				case 2:
					for (
						this.enterOuterAlt(u, 2),
							this.state = 2412,
							this._errHandler.sync(this),
							e = this._input.LA(1),
							e === r.NOT && ((this.state = 2411), this.match(r.NOT)),
							this.state = 2414,
							u.kind = this.match(r.IN),
							this.state = 2415,
							this.match(r.T__1),
							this.state = 2416,
							this.expression(),
							this.state = 2421,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === r.T__3;

					)
						(this.state = 2417),
							this.match(r.T__3),
							(this.state = 2418),
							this.expression(),
							(this.state = 2423),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					(this.state = 2424), this.match(r.T__2);
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 2427),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.NOT && ((this.state = 2426), this.match(r.NOT)),
						(this.state = 2429),
						(u.kind = this.match(r.IN)),
						(this.state = 2430),
						this.match(r.T__1),
						(this.state = 2431),
						this.query(),
						(this.state = 2432),
						this.match(r.T__2);
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 2435),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.NOT && ((this.state = 2434), this.match(r.NOT)),
						(this.state = 2437),
						(u.kind = this.match(r.RLIKE)),
						(this.state = 2438),
						(u.pattern = this.valueExpression(0));
					break;
				case 5:
					this.enterOuterAlt(u, 5),
						(this.state = 2440),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.NOT && ((this.state = 2439), this.match(r.NOT)),
						(this.state = 2442),
						(u.kind = this.match(r.LIKE)),
						(this.state = 2443),
						(u.quantifier = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.ALL || e === r.ANY || e === r.SOME
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.quantifier = this._errHandler.recoverInline(this)),
						(this.state = 2457),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 314, this._ctx);
					switch (i) {
						case 1:
							(this.state = 2444), this.match(r.T__1), (this.state = 2445), this.match(r.T__2);
							break;
						case 2:
							for (
								this.state = 2446,
									this.match(r.T__1),
									this.state = 2447,
									this.expression(),
									this.state = 2452,
									this._errHandler.sync(this),
									e = this._input.LA(1);
								e === r.T__3;

							)
								(this.state = 2448),
									this.match(r.T__3),
									(this.state = 2449),
									this.expression(),
									(this.state = 2454),
									this._errHandler.sync(this),
									(e = this._input.LA(1));
							(this.state = 2455), this.match(r.T__2);
							break;
					}
					break;
				case 6:
					this.enterOuterAlt(u, 6),
						(this.state = 2460),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.NOT && ((this.state = 2459), this.match(r.NOT)),
						(this.state = 2462),
						(u.kind = this.match(r.LIKE)),
						(this.state = 2463),
						(u.pattern = this.valueExpression(0)),
						(this.state = 2466),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 316, this._ctx);
					i === 1 &&
						((this.state = 2464),
						this.match(r.ESCAPE),
						(this.state = 2465),
						(u.escapeChar = this.match(r.STRING)));
					break;
				case 7:
					this.enterOuterAlt(u, 7),
						(this.state = 2468),
						this.match(r.IS),
						(this.state = 2470),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.NOT && ((this.state = 2469), this.match(r.NOT)),
						(this.state = 2472),
						(u.kind = this.match(r.NULL));
					break;
				case 8:
					this.enterOuterAlt(u, 8),
						(this.state = 2473),
						this.match(r.IS),
						(this.state = 2475),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.NOT && ((this.state = 2474), this.match(r.NOT)),
						(this.state = 2477),
						(u.kind = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.FALSE || e === r.TRUE || e === r.UNKNOWN
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.kind = this._errHandler.recoverInline(this));
					break;
				case 9:
					this.enterOuterAlt(u, 9),
						(this.state = 2478),
						this.match(r.IS),
						(this.state = 2480),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.NOT && ((this.state = 2479), this.match(r.NOT)),
						(this.state = 2482),
						(u.kind = this.match(r.DISTINCT)),
						(this.state = 2483),
						this.match(r.FROM),
						(this.state = 2484),
						(u.right = this.valueExpression(0));
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function G(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_valueExpression),
			this
		);
	}
	G.prototype = Object.create(p.ParserRuleContext.prototype);
	G.prototype.constructor = G;
	G.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function el(u, e) {
		return G.call(this, u), G.prototype.copyFrom.call(this, e), this;
	}
	el.prototype = Object.create(G.prototype);
	el.prototype.constructor = el;
	r.ValueExpressionDefaultContext = el;
	el.prototype.primaryExpression = function () {
		return this.getTypedRuleContext(g, 0);
	};
	el.prototype.accept = function (u) {
		return u instanceof R ? u.visitValueExpressionDefault(this) : u.visitChildren(this);
	};
	function T3(u, e) {
		return G.call(this, u), (this.left = null), (this.right = null), G.prototype.copyFrom.call(this, e), this;
	}
	T3.prototype = Object.create(G.prototype);
	T3.prototype.constructor = T3;
	r.ComparisonContext = T3;
	T3.prototype.comparisonOperator = function () {
		return this.getTypedRuleContext(Wt, 0);
	};
	T3.prototype.valueExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(G) : this.getTypedRuleContext(G, u);
	};
	T3.prototype.accept = function (u) {
		return u instanceof R ? u.visitComparison(this) : u.visitChildren(this);
	};
	function B0(u, e) {
		return (
			G.call(this, u),
			(this.left = null),
			(this.operator = null),
			(this.right = null),
			G.prototype.copyFrom.call(this, e),
			this
		);
	}
	B0.prototype = Object.create(G.prototype);
	B0.prototype.constructor = B0;
	r.ArithmeticBinaryContext = B0;
	B0.prototype.valueExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(G) : this.getTypedRuleContext(G, u);
	};
	B0.prototype.ASTERISK = function () {
		return this.getToken(r.ASTERISK, 0);
	};
	B0.prototype.SLASH = function () {
		return this.getToken(r.SLASH, 0);
	};
	B0.prototype.PERCENT = function () {
		return this.getToken(r.PERCENT, 0);
	};
	B0.prototype.DIV = function () {
		return this.getToken(r.DIV, 0);
	};
	B0.prototype.PLUS = function () {
		return this.getToken(r.PLUS, 0);
	};
	B0.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	B0.prototype.CONCAT_PIPE = function () {
		return this.getToken(r.CONCAT_PIPE, 0);
	};
	B0.prototype.AMPERSAND = function () {
		return this.getToken(r.AMPERSAND, 0);
	};
	B0.prototype.HAT = function () {
		return this.getToken(r.HAT, 0);
	};
	B0.prototype.PIPE = function () {
		return this.getToken(r.PIPE, 0);
	};
	B0.prototype.accept = function (u) {
		return u instanceof R ? u.visitArithmeticBinary(this) : u.visitChildren(this);
	};
	function ka(u, e) {
		return G.call(this, u), (this.operator = null), G.prototype.copyFrom.call(this, e), this;
	}
	ka.prototype = Object.create(G.prototype);
	ka.prototype.constructor = ka;
	r.ArithmeticUnaryContext = ka;
	ka.prototype.valueExpression = function () {
		return this.getTypedRuleContext(G, 0);
	};
	ka.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	ka.prototype.PLUS = function () {
		return this.getToken(r.PLUS, 0);
	};
	ka.prototype.TILDE = function () {
		return this.getToken(r.TILDE, 0);
	};
	ka.prototype.accept = function (u) {
		return u instanceof R ? u.visitArithmeticUnary(this) : u.visitChildren(this);
	};
	r.prototype.valueExpression = function (u) {
		u === void 0 && (u = 0);
		var e = this._ctx,
			i = this.state,
			n = new G(this, this._ctx, i),
			a = n,
			o = 202;
		this.enterRecursionRule(n, 202, r.RULE_valueExpression, u);
		var c = 0;
		try {
			this.enterOuterAlt(n, 1), (this.state = 2491), this._errHandler.sync(this);
			var h = this._interp.adaptivePredict(this._input, 321, this._ctx);
			switch (h) {
				case 1:
					(n = new el(this, n)), (this._ctx = n), (a = n), (this.state = 2488), this.primaryExpression(0);
					break;
				case 2:
					(n = new ka(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2489),
						(n.operator = this._input.LT(1)),
						(c = this._input.LA(1)),
						((c - 272) & -32) == 0 &&
						((1 << (c - 272)) &
							((1 << (r.PLUS - 272)) | (1 << (r.MINUS - 272)) | (1 << (r.TILDE - 272)))) !==
							0
							? (this._errHandler.reportMatch(this), this.consume())
							: (n.operator = this._errHandler.recoverInline(this)),
						(this.state = 2490),
						this.valueExpression(7);
					break;
			}
			(this._ctx.stop = this._input.LT(-1)), (this.state = 2514), this._errHandler.sync(this);
			for (
				var _ = this._interp.adaptivePredict(this._input, 323, this._ctx);
				_ != 2 && _ != p.atn.ATN.INVALID_ALT_NUMBER;

			) {
				if (_ === 1) {
					this._parseListeners !== null && this.triggerExitRuleEvent(),
						(a = n),
						(this.state = 2512),
						this._errHandler.sync(this);
					var h = this._interp.adaptivePredict(this._input, 322, this._ctx);
					switch (h) {
						case 1:
							if (
								((n = new B0(this, new G(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_valueExpression),
								(this.state = 2493),
								!this.precpred(this._ctx, 6))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 6)');
							(this.state = 2494),
								(n.operator = this._input.LT(1)),
								(c = this._input.LA(1)),
								c === r.DIV ||
								(((c - 274) & -32) == 0 &&
									((1 << (c - 274)) &
										((1 << (r.ASTERISK - 274)) |
											(1 << (r.SLASH - 274)) |
											(1 << (r.PERCENT - 274)))) !==
										0)
									? (this._errHandler.reportMatch(this), this.consume())
									: (n.operator = this._errHandler.recoverInline(this)),
								(this.state = 2495),
								(n.right = this.valueExpression(7));
							break;
						case 2:
							if (
								((n = new B0(this, new G(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_valueExpression),
								(this.state = 2496),
								!this.precpred(this._ctx, 5))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 5)');
							(this.state = 2497),
								(n.operator = this._input.LT(1)),
								(c = this._input.LA(1)),
								((c - 272) & -32) == 0 &&
								((1 << (c - 272)) &
									((1 << (r.PLUS - 272)) | (1 << (r.MINUS - 272)) | (1 << (r.CONCAT_PIPE - 272)))) !==
									0
									? (this._errHandler.reportMatch(this), this.consume())
									: (n.operator = this._errHandler.recoverInline(this)),
								(this.state = 2498),
								(n.right = this.valueExpression(6));
							break;
						case 3:
							if (
								((n = new B0(this, new G(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_valueExpression),
								(this.state = 2499),
								!this.precpred(this._ctx, 4))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 4)');
							(this.state = 2500),
								(n.operator = this.match(r.AMPERSAND)),
								(this.state = 2501),
								(n.right = this.valueExpression(5));
							break;
						case 4:
							if (
								((n = new B0(this, new G(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_valueExpression),
								(this.state = 2502),
								!this.precpred(this._ctx, 3))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 3)');
							(this.state = 2503),
								(n.operator = this.match(r.HAT)),
								(this.state = 2504),
								(n.right = this.valueExpression(4));
							break;
						case 5:
							if (
								((n = new B0(this, new G(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_valueExpression),
								(this.state = 2505),
								!this.precpred(this._ctx, 2))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 2)');
							(this.state = 2506),
								(n.operator = this.match(r.PIPE)),
								(this.state = 2507),
								(n.right = this.valueExpression(3));
							break;
						case 6:
							if (
								((n = new T3(this, new G(this, e, i))),
								(n.left = a),
								this.pushNewRecursionContext(n, o, r.RULE_valueExpression),
								(this.state = 2508),
								!this.precpred(this._ctx, 1))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 1)');
							(this.state = 2509),
								this.comparisonOperator(),
								(this.state = 2510),
								(n.right = this.valueExpression(2));
							break;
					}
				}
				(this.state = 2516),
					this._errHandler.sync(this),
					(_ = this._interp.adaptivePredict(this._input, 323, this._ctx));
			}
		} catch (y) {
			if (y instanceof p.error.RecognitionException)
				(n.exception = y), this._errHandler.reportError(this, y), this._errHandler.recover(this, y);
			else throw y;
		} finally {
			this.unrollRecursionContexts(e);
		}
		return n;
	};
	function g(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_primaryExpression),
			this
		);
	}
	g.prototype = Object.create(p.ParserRuleContext.prototype);
	g.prototype.constructor = g;
	g.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function R3(u, e) {
		return (
			g.call(this, u),
			(this._namedExpression = null),
			(this.argument = []),
			g.prototype.copyFrom.call(this, e),
			this
		);
	}
	R3.prototype = Object.create(g.prototype);
	R3.prototype.constructor = R3;
	r.StructContext = R3;
	R3.prototype.STRUCT = function () {
		return this.getToken(r.STRUCT, 0);
	};
	R3.prototype.namedExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts($u) : this.getTypedRuleContext($u, u);
	};
	R3.prototype.accept = function (u) {
		return u instanceof R ? u.visitStruct(this) : u.visitChildren(this);
	};
	function m3(u, e) {
		return g.call(this, u), (this.base = null), (this.fieldName = null), g.prototype.copyFrom.call(this, e), this;
	}
	m3.prototype = Object.create(g.prototype);
	m3.prototype.constructor = m3;
	r.DereferenceContext = m3;
	m3.prototype.primaryExpression = function () {
		return this.getTypedRuleContext(g, 0);
	};
	m3.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	m3.prototype.accept = function (u) {
		return u instanceof R ? u.visitDereference(this) : u.visitChildren(this);
	};
	function ws(u, e) {
		return (
			g.call(this, u), (this.value = null), (this.elseExpression = null), g.prototype.copyFrom.call(this, e), this
		);
	}
	ws.prototype = Object.create(g.prototype);
	ws.prototype.constructor = ws;
	r.SimpleCaseContext = ws;
	ws.prototype.CASE = function () {
		return this.getToken(r.CASE, 0);
	};
	ws.prototype.END = function () {
		return this.getToken(r.END, 0);
	};
	ws.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	ws.prototype.whenClause = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Bi) : this.getTypedRuleContext(Bi, u);
	};
	ws.prototype.ELSE = function () {
		return this.getToken(r.ELSE, 0);
	};
	ws.prototype.accept = function (u) {
		return u instanceof R ? u.visitSimpleCase(this) : u.visitChildren(this);
	};
	function il(u, e) {
		return g.call(this, u), g.prototype.copyFrom.call(this, e), this;
	}
	il.prototype = Object.create(g.prototype);
	il.prototype.constructor = il;
	r.ColumnReferenceContext = il;
	il.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	il.prototype.accept = function (u) {
		return u instanceof R ? u.visitColumnReference(this) : u.visitChildren(this);
	};
	function rl(u, e) {
		return g.call(this, u), g.prototype.copyFrom.call(this, e), this;
	}
	rl.prototype = Object.create(g.prototype);
	rl.prototype.constructor = rl;
	r.RowConstructorContext = rl;
	rl.prototype.namedExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts($u) : this.getTypedRuleContext($u, u);
	};
	rl.prototype.accept = function (u) {
		return u instanceof R ? u.visitRowConstructor(this) : u.visitChildren(this);
	};
	function Va(u, e) {
		return g.call(this, u), g.prototype.copyFrom.call(this, e), this;
	}
	Va.prototype = Object.create(g.prototype);
	Va.prototype.constructor = Va;
	r.LastContext = Va;
	Va.prototype.LAST = function () {
		return this.getToken(r.LAST, 0);
	};
	Va.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	Va.prototype.IGNORE = function () {
		return this.getToken(r.IGNORE, 0);
	};
	Va.prototype.NULLS = function () {
		return this.getToken(r.NULLS, 0);
	};
	Va.prototype.accept = function (u) {
		return u instanceof R ? u.visitLast(this) : u.visitChildren(this);
	};
	function cc(u, e) {
		return g.call(this, u), g.prototype.copyFrom.call(this, e), this;
	}
	cc.prototype = Object.create(g.prototype);
	cc.prototype.constructor = cc;
	r.StarContext = cc;
	cc.prototype.ASTERISK = function () {
		return this.getToken(r.ASTERISK, 0);
	};
	cc.prototype.qualifiedName = function () {
		return this.getTypedRuleContext(Kt, 0);
	};
	cc.prototype.accept = function (u) {
		return u instanceof R ? u.visitStar(this) : u.visitChildren(this);
	};
	function Ms(u, e) {
		return (
			g.call(this, u),
			(this.input = null),
			(this.replace = null),
			(this.position = null),
			(this.length = null),
			g.prototype.copyFrom.call(this, e),
			this
		);
	}
	Ms.prototype = Object.create(g.prototype);
	Ms.prototype.constructor = Ms;
	r.OverlayContext = Ms;
	Ms.prototype.OVERLAY = function () {
		return this.getToken(r.OVERLAY, 0);
	};
	Ms.prototype.PLACING = function () {
		return this.getToken(r.PLACING, 0);
	};
	Ms.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	Ms.prototype.valueExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(G) : this.getTypedRuleContext(G, u);
	};
	Ms.prototype.FOR = function () {
		return this.getToken(r.FOR, 0);
	};
	Ms.prototype.accept = function (u) {
		return u instanceof R ? u.visitOverlay(this) : u.visitChildren(this);
	};
	function y3(u, e) {
		return g.call(this, u), (this.value = null), (this.index = null), g.prototype.copyFrom.call(this, e), this;
	}
	y3.prototype = Object.create(g.prototype);
	y3.prototype.constructor = y3;
	r.SubscriptContext = y3;
	y3.prototype.primaryExpression = function () {
		return this.getTypedRuleContext(g, 0);
	};
	y3.prototype.valueExpression = function () {
		return this.getTypedRuleContext(G, 0);
	};
	y3.prototype.accept = function (u) {
		return u instanceof R ? u.visitSubscript(this) : u.visitChildren(this);
	};
	function nl(u, e) {
		return g.call(this, u), g.prototype.copyFrom.call(this, e), this;
	}
	nl.prototype = Object.create(g.prototype);
	nl.prototype.constructor = nl;
	r.SubqueryExpressionContext = nl;
	nl.prototype.query = function () {
		return this.getTypedRuleContext(x0, 0);
	};
	nl.prototype.accept = function (u) {
		return u instanceof R ? u.visitSubqueryExpression(this) : u.visitChildren(this);
	};
	function Hs(u, e) {
		return (
			g.call(this, u),
			(this.str = null),
			(this.pos = null),
			(this.len = null),
			g.prototype.copyFrom.call(this, e),
			this
		);
	}
	Hs.prototype = Object.create(g.prototype);
	Hs.prototype.constructor = Hs;
	r.SubstringContext = Hs;
	Hs.prototype.SUBSTR = function () {
		return this.getToken(r.SUBSTR, 0);
	};
	Hs.prototype.SUBSTRING = function () {
		return this.getToken(r.SUBSTRING, 0);
	};
	Hs.prototype.valueExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(G) : this.getTypedRuleContext(G, u);
	};
	Hs.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	Hs.prototype.FOR = function () {
		return this.getToken(r.FOR, 0);
	};
	Hs.prototype.accept = function (u) {
		return u instanceof R ? u.visitSubstring(this) : u.visitChildren(this);
	};
	function C3(u, e) {
		return g.call(this, u), (this.name = null), g.prototype.copyFrom.call(this, e), this;
	}
	C3.prototype = Object.create(g.prototype);
	C3.prototype.constructor = C3;
	r.CurrentDatetimeContext = C3;
	C3.prototype.CURRENT_DATE = function () {
		return this.getToken(r.CURRENT_DATE, 0);
	};
	C3.prototype.CURRENT_TIMESTAMP = function () {
		return this.getToken(r.CURRENT_TIMESTAMP, 0);
	};
	C3.prototype.accept = function (u) {
		return u instanceof R ? u.visitCurrentDatetime(this) : u.visitChildren(this);
	};
	function Fs(u, e) {
		return g.call(this, u), (this.name = null), g.prototype.copyFrom.call(this, e), this;
	}
	Fs.prototype = Object.create(g.prototype);
	Fs.prototype.constructor = Fs;
	r.CastContext = Fs;
	Fs.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	Fs.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	Fs.prototype.dataType = function () {
		return this.getTypedRuleContext(l0, 0);
	};
	Fs.prototype.CAST = function () {
		return this.getToken(r.CAST, 0);
	};
	Fs.prototype.TRY_CAST = function () {
		return this.getToken(r.TRY_CAST, 0);
	};
	Fs.prototype.accept = function (u) {
		return u instanceof R ? u.visitCast(this) : u.visitChildren(this);
	};
	function sl(u, e) {
		return g.call(this, u), g.prototype.copyFrom.call(this, e), this;
	}
	sl.prototype = Object.create(g.prototype);
	sl.prototype.constructor = sl;
	r.ConstantDefaultContext = sl;
	sl.prototype.constant = function () {
		return this.getTypedRuleContext(s0, 0);
	};
	sl.prototype.accept = function (u) {
		return u instanceof R ? u.visitConstantDefault(this) : u.visitChildren(this);
	};
	function pc(u, e) {
		return g.call(this, u), g.prototype.copyFrom.call(this, e), this;
	}
	pc.prototype = Object.create(g.prototype);
	pc.prototype.constructor = pc;
	r.LambdaContext = pc;
	pc.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(B) : this.getTypedRuleContext(B, u);
	};
	pc.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	pc.prototype.accept = function (u) {
		return u instanceof R ? u.visitLambda(this) : u.visitChildren(this);
	};
	function al(u, e) {
		return g.call(this, u), g.prototype.copyFrom.call(this, e), this;
	}
	al.prototype = Object.create(g.prototype);
	al.prototype.constructor = al;
	r.ParenthesizedExpressionContext = al;
	al.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	al.prototype.accept = function (u) {
		return u instanceof R ? u.visitParenthesizedExpression(this) : u.visitChildren(this);
	};
	function Ba(u, e) {
		return g.call(this, u), (this.field = null), (this.source = null), g.prototype.copyFrom.call(this, e), this;
	}
	Ba.prototype = Object.create(g.prototype);
	Ba.prototype.constructor = Ba;
	r.ExtractContext = Ba;
	Ba.prototype.EXTRACT = function () {
		return this.getToken(r.EXTRACT, 0);
	};
	Ba.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	Ba.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Ba.prototype.valueExpression = function () {
		return this.getTypedRuleContext(G, 0);
	};
	Ba.prototype.accept = function (u) {
		return u instanceof R ? u.visitExtract(this) : u.visitChildren(this);
	};
	function Qr(u, e) {
		return (
			g.call(this, u),
			(this.trimOption = null),
			(this.trimStr = null),
			(this.srcStr = null),
			g.prototype.copyFrom.call(this, e),
			this
		);
	}
	Qr.prototype = Object.create(g.prototype);
	Qr.prototype.constructor = Qr;
	r.TrimContext = Qr;
	Qr.prototype.TRIM = function () {
		return this.getToken(r.TRIM, 0);
	};
	Qr.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	Qr.prototype.valueExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(G) : this.getTypedRuleContext(G, u);
	};
	Qr.prototype.BOTH = function () {
		return this.getToken(r.BOTH, 0);
	};
	Qr.prototype.LEADING = function () {
		return this.getToken(r.LEADING, 0);
	};
	Qr.prototype.TRAILING = function () {
		return this.getToken(r.TRAILING, 0);
	};
	Qr.prototype.accept = function (u) {
		return u instanceof R ? u.visitTrim(this) : u.visitChildren(this);
	};
	function ut(u, e) {
		return (
			g.call(this, u),
			(this._expression = null),
			(this.argument = []),
			(this.where = null),
			(this.nullsOption = null),
			g.prototype.copyFrom.call(this, e),
			this
		);
	}
	ut.prototype = Object.create(g.prototype);
	ut.prototype.constructor = ut;
	r.FunctionCallContext = ut;
	ut.prototype.functionName = function () {
		return this.getTypedRuleContext($r, 0);
	};
	ut.prototype.FILTER = function () {
		return this.getToken(r.FILTER, 0);
	};
	ut.prototype.WHERE = function () {
		return this.getToken(r.WHERE, 0);
	};
	ut.prototype.NULLS = function () {
		return this.getToken(r.NULLS, 0);
	};
	ut.prototype.OVER = function () {
		return this.getToken(r.OVER, 0);
	};
	ut.prototype.windowSpec = function () {
		return this.getTypedRuleContext(Be, 0);
	};
	ut.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	ut.prototype.booleanExpression = function () {
		return this.getTypedRuleContext(e0, 0);
	};
	ut.prototype.IGNORE = function () {
		return this.getToken(r.IGNORE, 0);
	};
	ut.prototype.RESPECT = function () {
		return this.getToken(r.RESPECT, 0);
	};
	ut.prototype.setQuantifier = function () {
		return this.getTypedRuleContext(Ns, 0);
	};
	ut.prototype.accept = function (u) {
		return u instanceof R ? u.visitFunctionCall(this) : u.visitChildren(this);
	};
	function ks(u, e) {
		return g.call(this, u), (this.elseExpression = null), g.prototype.copyFrom.call(this, e), this;
	}
	ks.prototype = Object.create(g.prototype);
	ks.prototype.constructor = ks;
	r.SearchedCaseContext = ks;
	ks.prototype.CASE = function () {
		return this.getToken(r.CASE, 0);
	};
	ks.prototype.END = function () {
		return this.getToken(r.END, 0);
	};
	ks.prototype.whenClause = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Bi) : this.getTypedRuleContext(Bi, u);
	};
	ks.prototype.ELSE = function () {
		return this.getToken(r.ELSE, 0);
	};
	ks.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	ks.prototype.accept = function (u) {
		return u instanceof R ? u.visitSearchedCase(this) : u.visitChildren(this);
	};
	function hc(u, e) {
		return g.call(this, u), (this.substr = null), (this.str = null), g.prototype.copyFrom.call(this, e), this;
	}
	hc.prototype = Object.create(g.prototype);
	hc.prototype.constructor = hc;
	r.PositionContext = hc;
	hc.prototype.POSITION = function () {
		return this.getToken(r.POSITION, 0);
	};
	hc.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	hc.prototype.valueExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(G) : this.getTypedRuleContext(G, u);
	};
	hc.prototype.accept = function (u) {
		return u instanceof R ? u.visitPosition(this) : u.visitChildren(this);
	};
	function Ya(u, e) {
		return g.call(this, u), g.prototype.copyFrom.call(this, e), this;
	}
	Ya.prototype = Object.create(g.prototype);
	Ya.prototype.constructor = Ya;
	r.FirstContext = Ya;
	Ya.prototype.FIRST = function () {
		return this.getToken(r.FIRST, 0);
	};
	Ya.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	Ya.prototype.IGNORE = function () {
		return this.getToken(r.IGNORE, 0);
	};
	Ya.prototype.NULLS = function () {
		return this.getToken(r.NULLS, 0);
	};
	Ya.prototype.accept = function (u) {
		return u instanceof R ? u.visitFirst(this) : u.visitChildren(this);
	};
	r.prototype.primaryExpression = function (u) {
		u === void 0 && (u = 0);
		var e = this._ctx,
			i = this.state,
			n = new g(this, this._ctx, i),
			a = n,
			o = 204;
		this.enterRecursionRule(n, 204, r.RULE_primaryExpression, u);
		var c = 0;
		try {
			this.enterOuterAlt(n, 1), (this.state = 2705), this._errHandler.sync(this);
			var h = this._interp.adaptivePredict(this._input, 344, this._ctx);
			switch (h) {
				case 1:
					(n = new C3(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2518),
						(n.name = this._input.LT(1)),
						(c = this._input.LA(1)),
						c === r.CURRENT_DATE || c === r.CURRENT_TIMESTAMP
							? (this._errHandler.reportMatch(this), this.consume())
							: (n.name = this._errHandler.recoverInline(this));
					break;
				case 2:
					(n = new ks(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2519),
						this.match(r.CASE),
						(this.state = 2521),
						this._errHandler.sync(this),
						(c = this._input.LA(1));
					do
						(this.state = 2520),
							this.whenClause(),
							(this.state = 2523),
							this._errHandler.sync(this),
							(c = this._input.LA(1));
					while (c === r.WHEN);
					(this.state = 2527),
						this._errHandler.sync(this),
						(c = this._input.LA(1)),
						c === r.ELSE &&
							((this.state = 2525),
							this.match(r.ELSE),
							(this.state = 2526),
							(n.elseExpression = this.expression())),
						(this.state = 2529),
						this.match(r.END);
					break;
				case 3:
					(n = new ws(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2531),
						this.match(r.CASE),
						(this.state = 2532),
						(n.value = this.expression()),
						(this.state = 2534),
						this._errHandler.sync(this),
						(c = this._input.LA(1));
					do
						(this.state = 2533),
							this.whenClause(),
							(this.state = 2536),
							this._errHandler.sync(this),
							(c = this._input.LA(1));
					while (c === r.WHEN);
					(this.state = 2540),
						this._errHandler.sync(this),
						(c = this._input.LA(1)),
						c === r.ELSE &&
							((this.state = 2538),
							this.match(r.ELSE),
							(this.state = 2539),
							(n.elseExpression = this.expression())),
						(this.state = 2542),
						this.match(r.END);
					break;
				case 4:
					(n = new Fs(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2544),
						(n.name = this._input.LT(1)),
						(c = this._input.LA(1)),
						c === r.CAST || c === r.TRY_CAST
							? (this._errHandler.reportMatch(this), this.consume())
							: (n.name = this._errHandler.recoverInline(this)),
						(this.state = 2545),
						this.match(r.T__1),
						(this.state = 2546),
						this.expression(),
						(this.state = 2547),
						this.match(r.AS),
						(this.state = 2548),
						this.dataType(),
						(this.state = 2549),
						this.match(r.T__2);
					break;
				case 5:
					(n = new R3(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2551),
						this.match(r.STRUCT),
						(this.state = 2552),
						this.match(r.T__1),
						(this.state = 2561),
						this._errHandler.sync(this);
					var h = this._interp.adaptivePredict(this._input, 329, this._ctx);
					if (h === 1)
						for (
							this.state = 2553,
								n._namedExpression = this.namedExpression(),
								n.argument.push(n._namedExpression),
								this.state = 2558,
								this._errHandler.sync(this),
								c = this._input.LA(1);
							c === r.T__3;

						)
							(this.state = 2554),
								this.match(r.T__3),
								(this.state = 2555),
								(n._namedExpression = this.namedExpression()),
								n.argument.push(n._namedExpression),
								(this.state = 2560),
								this._errHandler.sync(this),
								(c = this._input.LA(1));
					(this.state = 2563), this.match(r.T__2);
					break;
				case 6:
					(n = new Ya(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2564),
						this.match(r.FIRST),
						(this.state = 2565),
						this.match(r.T__1),
						(this.state = 2566),
						this.expression(),
						(this.state = 2569),
						this._errHandler.sync(this),
						(c = this._input.LA(1)),
						c === r.IGNORE &&
							((this.state = 2567), this.match(r.IGNORE), (this.state = 2568), this.match(r.NULLS)),
						(this.state = 2571),
						this.match(r.T__2);
					break;
				case 7:
					(n = new Va(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2573),
						this.match(r.LAST),
						(this.state = 2574),
						this.match(r.T__1),
						(this.state = 2575),
						this.expression(),
						(this.state = 2578),
						this._errHandler.sync(this),
						(c = this._input.LA(1)),
						c === r.IGNORE &&
							((this.state = 2576), this.match(r.IGNORE), (this.state = 2577), this.match(r.NULLS)),
						(this.state = 2580),
						this.match(r.T__2);
					break;
				case 8:
					(n = new hc(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2582),
						this.match(r.POSITION),
						(this.state = 2583),
						this.match(r.T__1),
						(this.state = 2584),
						(n.substr = this.valueExpression(0)),
						(this.state = 2585),
						this.match(r.IN),
						(this.state = 2586),
						(n.str = this.valueExpression(0)),
						(this.state = 2587),
						this.match(r.T__2);
					break;
				case 9:
					(n = new sl(this, n)), (this._ctx = n), (a = n), (this.state = 2589), this.constant();
					break;
				case 10:
					(n = new cc(this, n)), (this._ctx = n), (a = n), (this.state = 2590), this.match(r.ASTERISK);
					break;
				case 11:
					(n = new cc(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2591),
						this.qualifiedName(),
						(this.state = 2592),
						this.match(r.T__4),
						(this.state = 2593),
						this.match(r.ASTERISK);
					break;
				case 12:
					(n = new rl(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2595),
						this.match(r.T__1),
						(this.state = 2596),
						this.namedExpression(),
						(this.state = 2599),
						this._errHandler.sync(this),
						(c = this._input.LA(1));
					do
						(this.state = 2597),
							this.match(r.T__3),
							(this.state = 2598),
							this.namedExpression(),
							(this.state = 2601),
							this._errHandler.sync(this),
							(c = this._input.LA(1));
					while (c === r.T__3);
					(this.state = 2603), this.match(r.T__2);
					break;
				case 13:
					(n = new nl(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2605),
						this.match(r.T__1),
						(this.state = 2606),
						this.query(),
						(this.state = 2607),
						this.match(r.T__2);
					break;
				case 14:
					(n = new ut(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2609),
						this.functionName(),
						(this.state = 2610),
						this.match(r.T__1),
						(this.state = 2622),
						this._errHandler.sync(this);
					var h = this._interp.adaptivePredict(this._input, 335, this._ctx);
					if (h === 1) {
						(this.state = 2612), this._errHandler.sync(this);
						var h = this._interp.adaptivePredict(this._input, 333, this._ctx);
						for (
							h === 1 && ((this.state = 2611), this.setQuantifier()),
								this.state = 2614,
								n._expression = this.expression(),
								n.argument.push(n._expression),
								this.state = 2619,
								this._errHandler.sync(this),
								c = this._input.LA(1);
							c === r.T__3;

						)
							(this.state = 2615),
								this.match(r.T__3),
								(this.state = 2616),
								(n._expression = this.expression()),
								n.argument.push(n._expression),
								(this.state = 2621),
								this._errHandler.sync(this),
								(c = this._input.LA(1));
					}
					(this.state = 2624), this.match(r.T__2), (this.state = 2631), this._errHandler.sync(this);
					var h = this._interp.adaptivePredict(this._input, 336, this._ctx);
					h === 1 &&
						((this.state = 2625),
						this.match(r.FILTER),
						(this.state = 2626),
						this.match(r.T__1),
						(this.state = 2627),
						this.match(r.WHERE),
						(this.state = 2628),
						(n.where = this.booleanExpression(0)),
						(this.state = 2629),
						this.match(r.T__2)),
						(this.state = 2635),
						this._errHandler.sync(this);
					var h = this._interp.adaptivePredict(this._input, 337, this._ctx);
					h === 1 &&
						((this.state = 2633),
						(n.nullsOption = this._input.LT(1)),
						(c = this._input.LA(1)),
						c === r.IGNORE || c === r.RESPECT
							? (this._errHandler.reportMatch(this), this.consume())
							: (n.nullsOption = this._errHandler.recoverInline(this)),
						(this.state = 2634),
						this.match(r.NULLS)),
						(this.state = 2639),
						this._errHandler.sync(this);
					var h = this._interp.adaptivePredict(this._input, 338, this._ctx);
					h === 1 && ((this.state = 2637), this.match(r.OVER), (this.state = 2638), this.windowSpec());
					break;
				case 15:
					(n = new pc(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2641),
						this.identifier(),
						(this.state = 2642),
						this.match(r.T__7),
						(this.state = 2643),
						this.expression();
					break;
				case 16:
					(n = new pc(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2645),
						this.match(r.T__1),
						(this.state = 2646),
						this.identifier(),
						(this.state = 2649),
						this._errHandler.sync(this),
						(c = this._input.LA(1));
					do
						(this.state = 2647),
							this.match(r.T__3),
							(this.state = 2648),
							this.identifier(),
							(this.state = 2651),
							this._errHandler.sync(this),
							(c = this._input.LA(1));
					while (c === r.T__3);
					(this.state = 2653),
						this.match(r.T__2),
						(this.state = 2654),
						this.match(r.T__7),
						(this.state = 2655),
						this.expression();
					break;
				case 17:
					(n = new il(this, n)), (this._ctx = n), (a = n), (this.state = 2657), this.identifier();
					break;
				case 18:
					(n = new al(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2658),
						this.match(r.T__1),
						(this.state = 2659),
						this.expression(),
						(this.state = 2660),
						this.match(r.T__2);
					break;
				case 19:
					(n = new Ba(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2662),
						this.match(r.EXTRACT),
						(this.state = 2663),
						this.match(r.T__1),
						(this.state = 2664),
						(n.field = this.identifier()),
						(this.state = 2665),
						this.match(r.FROM),
						(this.state = 2666),
						(n.source = this.valueExpression(0)),
						(this.state = 2667),
						this.match(r.T__2);
					break;
				case 20:
					(n = new Hs(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2669),
						(c = this._input.LA(1)),
						c === r.SUBSTR || c === r.SUBSTRING
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 2670),
						this.match(r.T__1),
						(this.state = 2671),
						(n.str = this.valueExpression(0)),
						(this.state = 2672),
						(c = this._input.LA(1)),
						c === r.T__3 || c === r.FROM
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 2673),
						(n.pos = this.valueExpression(0)),
						(this.state = 2676),
						this._errHandler.sync(this),
						(c = this._input.LA(1)),
						(c === r.T__3 || c === r.FOR) &&
							((this.state = 2674),
							(c = this._input.LA(1)),
							c === r.T__3 || c === r.FOR
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 2675),
							(n.len = this.valueExpression(0))),
						(this.state = 2678),
						this.match(r.T__2);
					break;
				case 21:
					(n = new Qr(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2680),
						this.match(r.TRIM),
						(this.state = 2681),
						this.match(r.T__1),
						(this.state = 2683),
						this._errHandler.sync(this);
					var h = this._interp.adaptivePredict(this._input, 341, this._ctx);
					h === 1 &&
						((this.state = 2682),
						(n.trimOption = this._input.LT(1)),
						(c = this._input.LA(1)),
						c === r.BOTH || c === r.LEADING || c === r.TRAILING
							? (this._errHandler.reportMatch(this), this.consume())
							: (n.trimOption = this._errHandler.recoverInline(this))),
						(this.state = 2686),
						this._errHandler.sync(this);
					var h = this._interp.adaptivePredict(this._input, 342, this._ctx);
					h === 1 && ((this.state = 2685), (n.trimStr = this.valueExpression(0))),
						(this.state = 2688),
						this.match(r.FROM),
						(this.state = 2689),
						(n.srcStr = this.valueExpression(0)),
						(this.state = 2690),
						this.match(r.T__2);
					break;
				case 22:
					(n = new Ms(this, n)),
						(this._ctx = n),
						(a = n),
						(this.state = 2692),
						this.match(r.OVERLAY),
						(this.state = 2693),
						this.match(r.T__1),
						(this.state = 2694),
						(n.input = this.valueExpression(0)),
						(this.state = 2695),
						this.match(r.PLACING),
						(this.state = 2696),
						(n.replace = this.valueExpression(0)),
						(this.state = 2697),
						this.match(r.FROM),
						(this.state = 2698),
						(n.position = this.valueExpression(0)),
						(this.state = 2701),
						this._errHandler.sync(this),
						(c = this._input.LA(1)),
						c === r.FOR &&
							((this.state = 2699),
							this.match(r.FOR),
							(this.state = 2700),
							(n.length = this.valueExpression(0))),
						(this.state = 2703),
						this.match(r.T__2);
					break;
			}
			(this._ctx.stop = this._input.LT(-1)), (this.state = 2717), this._errHandler.sync(this);
			for (
				var _ = this._interp.adaptivePredict(this._input, 346, this._ctx);
				_ != 2 && _ != p.atn.ATN.INVALID_ALT_NUMBER;

			) {
				if (_ === 1) {
					this._parseListeners !== null && this.triggerExitRuleEvent(),
						(a = n),
						(this.state = 2715),
						this._errHandler.sync(this);
					var h = this._interp.adaptivePredict(this._input, 345, this._ctx);
					switch (h) {
						case 1:
							if (
								((n = new y3(this, new g(this, e, i))),
								(n.value = a),
								this.pushNewRecursionContext(n, o, r.RULE_primaryExpression),
								(this.state = 2707),
								!this.precpred(this._ctx, 8))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 8)');
							(this.state = 2708),
								this.match(r.T__8),
								(this.state = 2709),
								(n.index = this.valueExpression(0)),
								(this.state = 2710),
								this.match(r.T__9);
							break;
						case 2:
							if (
								((n = new m3(this, new g(this, e, i))),
								(n.base = a),
								this.pushNewRecursionContext(n, o, r.RULE_primaryExpression),
								(this.state = 2712),
								!this.precpred(this._ctx, 6))
							)
								throw new p.error.FailedPredicateException(this, 'this.precpred(this._ctx, 6)');
							(this.state = 2713),
								this.match(r.T__4),
								(this.state = 2714),
								(n.fieldName = this.identifier());
							break;
					}
				}
				(this.state = 2719),
					this._errHandler.sync(this),
					(_ = this._interp.adaptivePredict(this._input, 346, this._ctx));
			}
		} catch (y) {
			if (y instanceof p.error.RecognitionException)
				(n.exception = y), this._errHandler.reportError(this, y), this._errHandler.recover(this, y);
			else throw y;
		} finally {
			this.unrollRecursionContexts(e);
		}
		return n;
	};
	function s0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_constant),
			this
		);
	}
	s0.prototype = Object.create(p.ParserRuleContext.prototype);
	s0.prototype.constructor = s0;
	s0.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function ol(u, e) {
		return s0.call(this, u), s0.prototype.copyFrom.call(this, e), this;
	}
	ol.prototype = Object.create(s0.prototype);
	ol.prototype.constructor = ol;
	r.NullLiteralContext = ol;
	ol.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	ol.prototype.accept = function (u) {
		return u instanceof R ? u.visitNullLiteral(this) : u.visitChildren(this);
	};
	function cl(u, e) {
		return s0.call(this, u), s0.prototype.copyFrom.call(this, e), this;
	}
	cl.prototype = Object.create(s0.prototype);
	cl.prototype.constructor = cl;
	r.StringLiteralContext = cl;
	cl.prototype.STRING = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.STRING) : this.getToken(r.STRING, u);
	};
	cl.prototype.accept = function (u) {
		return u instanceof R ? u.visitStringLiteral(this) : u.visitChildren(this);
	};
	function b3(u, e) {
		return s0.call(this, u), s0.prototype.copyFrom.call(this, e), this;
	}
	b3.prototype = Object.create(s0.prototype);
	b3.prototype.constructor = b3;
	r.TypeConstructorContext = b3;
	b3.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	b3.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	b3.prototype.accept = function (u) {
		return u instanceof R ? u.visitTypeConstructor(this) : u.visitChildren(this);
	};
	function pl(u, e) {
		return s0.call(this, u), s0.prototype.copyFrom.call(this, e), this;
	}
	pl.prototype = Object.create(s0.prototype);
	pl.prototype.constructor = pl;
	r.IntervalLiteralContext = pl;
	pl.prototype.interval = function () {
		return this.getTypedRuleContext(Bs, 0);
	};
	pl.prototype.accept = function (u) {
		return u instanceof R ? u.visitIntervalLiteral(this) : u.visitChildren(this);
	};
	function hl(u, e) {
		return s0.call(this, u), s0.prototype.copyFrom.call(this, e), this;
	}
	hl.prototype = Object.create(s0.prototype);
	hl.prototype.constructor = hl;
	r.NumericLiteralContext = hl;
	hl.prototype.number = function () {
		return this.getTypedRuleContext(q, 0);
	};
	hl.prototype.accept = function (u) {
		return u instanceof R ? u.visitNumericLiteral(this) : u.visitChildren(this);
	};
	function ll(u, e) {
		return s0.call(this, u), s0.prototype.copyFrom.call(this, e), this;
	}
	ll.prototype = Object.create(s0.prototype);
	ll.prototype.constructor = ll;
	r.BooleanLiteralContext = ll;
	ll.prototype.booleanValue = function () {
		return this.getTypedRuleContext(Ga, 0);
	};
	ll.prototype.accept = function (u) {
		return u instanceof R ? u.visitBooleanLiteral(this) : u.visitChildren(this);
	};
	r.ConstantContext = s0;
	r.prototype.constant = function () {
		var u = new s0(this, this._ctx, this.state);
		this.enterRule(u, 206, r.RULE_constant);
		try {
			(this.state = 2732), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 348, this._ctx);
			switch (e) {
				case 1:
					(u = new ol(this, u)), this.enterOuterAlt(u, 1), (this.state = 2720), this.match(r.NULL);
					break;
				case 2:
					(u = new pl(this, u)), this.enterOuterAlt(u, 2), (this.state = 2721), this.interval();
					break;
				case 3:
					(u = new b3(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 2722),
						this.identifier(),
						(this.state = 2723),
						this.match(r.STRING);
					break;
				case 4:
					(u = new hl(this, u)), this.enterOuterAlt(u, 4), (this.state = 2725), this.number();
					break;
				case 5:
					(u = new ll(this, u)), this.enterOuterAlt(u, 5), (this.state = 2726), this.booleanValue();
					break;
				case 6:
					(u = new cl(this, u)), this.enterOuterAlt(u, 6), (this.state = 2728), this._errHandler.sync(this);
					var i = 1;
					do {
						switch (i) {
							case 1:
								(this.state = 2727), this.match(r.STRING);
								break;
							default:
								throw new p.error.NoViableAltException(this);
						}
						(this.state = 2730),
							this._errHandler.sync(this),
							(i = this._interp.adaptivePredict(this._input, 347, this._ctx));
					} while (i != 2 && i != p.atn.ATN.INVALID_ALT_NUMBER);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Wt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_comparisonOperator),
			this
		);
	}
	Wt.prototype = Object.create(p.ParserRuleContext.prototype);
	Wt.prototype.constructor = Wt;
	Wt.prototype.EQ = function () {
		return this.getToken(r.EQ, 0);
	};
	Wt.prototype.NEQ = function () {
		return this.getToken(r.NEQ, 0);
	};
	Wt.prototype.NEQJ = function () {
		return this.getToken(r.NEQJ, 0);
	};
	Wt.prototype.LT = function () {
		return this.getToken(r.LT, 0);
	};
	Wt.prototype.LTE = function () {
		return this.getToken(r.LTE, 0);
	};
	Wt.prototype.GT = function () {
		return this.getToken(r.GT, 0);
	};
	Wt.prototype.GTE = function () {
		return this.getToken(r.GTE, 0);
	};
	Wt.prototype.NSEQ = function () {
		return this.getToken(r.NSEQ, 0);
	};
	Wt.prototype.accept = function (u) {
		return u instanceof R ? u.visitComparisonOperator(this) : u.visitChildren(this);
	};
	r.ComparisonOperatorContext = Wt;
	r.prototype.comparisonOperator = function () {
		var u = new Wt(this, this._ctx, this.state);
		this.enterRule(u, 208, r.RULE_comparisonOperator);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2734),
				(e = this._input.LA(1)),
				((e - 264) & -32) == 0 &&
				((1 << (e - 264)) &
					((1 << (r.EQ - 264)) |
						(1 << (r.NSEQ - 264)) |
						(1 << (r.NEQ - 264)) |
						(1 << (r.NEQJ - 264)) |
						(1 << (r.LT - 264)) |
						(1 << (r.LTE - 264)) |
						(1 << (r.GT - 264)) |
						(1 << (r.GTE - 264)))) !==
					0
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Iu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_arithmeticOperator),
			this
		);
	}
	Iu.prototype = Object.create(p.ParserRuleContext.prototype);
	Iu.prototype.constructor = Iu;
	Iu.prototype.PLUS = function () {
		return this.getToken(r.PLUS, 0);
	};
	Iu.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	Iu.prototype.ASTERISK = function () {
		return this.getToken(r.ASTERISK, 0);
	};
	Iu.prototype.SLASH = function () {
		return this.getToken(r.SLASH, 0);
	};
	Iu.prototype.PERCENT = function () {
		return this.getToken(r.PERCENT, 0);
	};
	Iu.prototype.DIV = function () {
		return this.getToken(r.DIV, 0);
	};
	Iu.prototype.TILDE = function () {
		return this.getToken(r.TILDE, 0);
	};
	Iu.prototype.AMPERSAND = function () {
		return this.getToken(r.AMPERSAND, 0);
	};
	Iu.prototype.PIPE = function () {
		return this.getToken(r.PIPE, 0);
	};
	Iu.prototype.CONCAT_PIPE = function () {
		return this.getToken(r.CONCAT_PIPE, 0);
	};
	Iu.prototype.HAT = function () {
		return this.getToken(r.HAT, 0);
	};
	Iu.prototype.accept = function (u) {
		return u instanceof R ? u.visitArithmeticOperator(this) : u.visitChildren(this);
	};
	r.ArithmeticOperatorContext = Iu;
	r.prototype.arithmeticOperator = function () {
		var u = new Iu(this, this._ctx, this.state);
		this.enterRule(u, 210, r.RULE_arithmeticOperator);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2736),
				(e = this._input.LA(1)),
				e === r.DIV ||
				(((e - 272) & -32) == 0 &&
					((1 << (e - 272)) &
						((1 << (r.PLUS - 272)) |
							(1 << (r.MINUS - 272)) |
							(1 << (r.ASTERISK - 272)) |
							(1 << (r.SLASH - 272)) |
							(1 << (r.PERCENT - 272)) |
							(1 << (r.TILDE - 272)) |
							(1 << (r.AMPERSAND - 272)) |
							(1 << (r.PIPE - 272)) |
							(1 << (r.CONCAT_PIPE - 272)) |
							(1 << (r.HAT - 272)))) !==
						0)
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Vs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_predicateOperator),
			this
		);
	}
	Vs.prototype = Object.create(p.ParserRuleContext.prototype);
	Vs.prototype.constructor = Vs;
	Vs.prototype.OR = function () {
		return this.getToken(r.OR, 0);
	};
	Vs.prototype.AND = function () {
		return this.getToken(r.AND, 0);
	};
	Vs.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	Vs.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	Vs.prototype.accept = function (u) {
		return u instanceof R ? u.visitPredicateOperator(this) : u.visitChildren(this);
	};
	r.PredicateOperatorContext = Vs;
	r.prototype.predicateOperator = function () {
		var u = new Vs(this, this._ctx, this.state);
		this.enterRule(u, 212, r.RULE_predicateOperator);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2738),
				(e = this._input.LA(1)),
				e === r.AND || e === r.IN || e === r.NOT || e === r.OR
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ga(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_booleanValue),
			this
		);
	}
	Ga.prototype = Object.create(p.ParserRuleContext.prototype);
	Ga.prototype.constructor = Ga;
	Ga.prototype.TRUE = function () {
		return this.getToken(r.TRUE, 0);
	};
	Ga.prototype.FALSE = function () {
		return this.getToken(r.FALSE, 0);
	};
	Ga.prototype.accept = function (u) {
		return u instanceof R ? u.visitBooleanValue(this) : u.visitChildren(this);
	};
	r.BooleanValueContext = Ga;
	r.prototype.booleanValue = function () {
		var u = new Ga(this, this._ctx, this.state);
		this.enterRule(u, 214, r.RULE_booleanValue);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2740),
				(e = this._input.LA(1)),
				e === r.FALSE || e === r.TRUE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Bs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_interval),
			this
		);
	}
	Bs.prototype = Object.create(p.ParserRuleContext.prototype);
	Bs.prototype.constructor = Bs;
	Bs.prototype.INTERVAL = function () {
		return this.getToken(r.INTERVAL, 0);
	};
	Bs.prototype.errorCapturingMultiUnitsInterval = function () {
		return this.getTypedRuleContext(lc, 0);
	};
	Bs.prototype.errorCapturingUnitToUnitInterval = function () {
		return this.getTypedRuleContext(dc, 0);
	};
	Bs.prototype.accept = function (u) {
		return u instanceof R ? u.visitInterval(this) : u.visitChildren(this);
	};
	r.IntervalContext = Bs;
	r.prototype.interval = function () {
		var u = new Bs(this, this._ctx, this.state);
		this.enterRule(u, 216, r.RULE_interval);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2742),
				this.match(r.INTERVAL),
				(this.state = 2745),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 349, this._ctx);
			e === 1
				? ((this.state = 2743), this.errorCapturingMultiUnitsInterval())
				: e === 2 && ((this.state = 2744), this.errorCapturingUnitToUnitInterval());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function lc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_errorCapturingMultiUnitsInterval),
			this
		);
	}
	lc.prototype = Object.create(p.ParserRuleContext.prototype);
	lc.prototype.constructor = lc;
	lc.prototype.multiUnitsInterval = function () {
		return this.getTypedRuleContext(ja, 0);
	};
	lc.prototype.unitToUnitInterval = function () {
		return this.getTypedRuleContext(qr, 0);
	};
	lc.prototype.accept = function (u) {
		return u instanceof R ? u.visitErrorCapturingMultiUnitsInterval(this) : u.visitChildren(this);
	};
	r.ErrorCapturingMultiUnitsIntervalContext = lc;
	r.prototype.errorCapturingMultiUnitsInterval = function () {
		var u = new lc(this, this._ctx, this.state);
		this.enterRule(u, 218, r.RULE_errorCapturingMultiUnitsInterval);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2747),
				this.multiUnitsInterval(),
				(this.state = 2749),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 350, this._ctx);
			e === 1 && ((this.state = 2748), this.unitToUnitInterval());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ja(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_multiUnitsInterval),
			(this._identifier = null),
			(this.unit = []),
			this
		);
	}
	ja.prototype = Object.create(p.ParserRuleContext.prototype);
	ja.prototype.constructor = ja;
	ja.prototype.intervalValue = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ke) : this.getTypedRuleContext(ke, u);
	};
	ja.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(B) : this.getTypedRuleContext(B, u);
	};
	ja.prototype.accept = function (u) {
		return u instanceof R ? u.visitMultiUnitsInterval(this) : u.visitChildren(this);
	};
	r.MultiUnitsIntervalContext = ja;
	r.prototype.multiUnitsInterval = function () {
		var u = new ja(this, this._ctx, this.state);
		this.enterRule(u, 220, r.RULE_multiUnitsInterval);
		try {
			this.enterOuterAlt(u, 1), (this.state = 2754), this._errHandler.sync(this);
			var e = 1;
			do {
				switch (e) {
					case 1:
						(this.state = 2751),
							this.intervalValue(),
							(this.state = 2752),
							(u._identifier = this.identifier()),
							u.unit.push(u._identifier);
						break;
					default:
						throw new p.error.NoViableAltException(this);
				}
				(this.state = 2756),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 351, this._ctx));
			} while (e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function dc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_errorCapturingUnitToUnitInterval),
			(this.body = null),
			(this.error1 = null),
			(this.error2 = null),
			this
		);
	}
	dc.prototype = Object.create(p.ParserRuleContext.prototype);
	dc.prototype.constructor = dc;
	dc.prototype.unitToUnitInterval = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(qr) : this.getTypedRuleContext(qr, u);
	};
	dc.prototype.multiUnitsInterval = function () {
		return this.getTypedRuleContext(ja, 0);
	};
	dc.prototype.accept = function (u) {
		return u instanceof R ? u.visitErrorCapturingUnitToUnitInterval(this) : u.visitChildren(this);
	};
	r.ErrorCapturingUnitToUnitIntervalContext = dc;
	r.prototype.errorCapturingUnitToUnitInterval = function () {
		var u = new dc(this, this._ctx, this.state);
		this.enterRule(u, 222, r.RULE_errorCapturingUnitToUnitInterval);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2758),
				(u.body = this.unitToUnitInterval()),
				(this.state = 2761),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 352, this._ctx);
			e === 1
				? ((this.state = 2759), (u.error1 = this.multiUnitsInterval()))
				: e === 2 && ((this.state = 2760), (u.error2 = this.unitToUnitInterval()));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_unitToUnitInterval),
			(this.value = null),
			(this.from = null),
			(this.to = null),
			this
		);
	}
	qr.prototype = Object.create(p.ParserRuleContext.prototype);
	qr.prototype.constructor = qr;
	qr.prototype.TO = function () {
		return this.getToken(r.TO, 0);
	};
	qr.prototype.intervalValue = function () {
		return this.getTypedRuleContext(ke, 0);
	};
	qr.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(B) : this.getTypedRuleContext(B, u);
	};
	qr.prototype.accept = function (u) {
		return u instanceof R ? u.visitUnitToUnitInterval(this) : u.visitChildren(this);
	};
	r.UnitToUnitIntervalContext = qr;
	r.prototype.unitToUnitInterval = function () {
		var u = new qr(this, this._ctx, this.state);
		this.enterRule(u, 224, r.RULE_unitToUnitInterval);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2763),
				(u.value = this.intervalValue()),
				(this.state = 2764),
				(u.from = this.identifier()),
				(this.state = 2765),
				this.match(r.TO),
				(this.state = 2766),
				(u.to = this.identifier());
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ke(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_intervalValue),
			this
		);
	}
	ke.prototype = Object.create(p.ParserRuleContext.prototype);
	ke.prototype.constructor = ke;
	ke.prototype.INTEGER_VALUE = function () {
		return this.getToken(r.INTEGER_VALUE, 0);
	};
	ke.prototype.DECIMAL_VALUE = function () {
		return this.getToken(r.DECIMAL_VALUE, 0);
	};
	ke.prototype.PLUS = function () {
		return this.getToken(r.PLUS, 0);
	};
	ke.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	ke.prototype.STRING = function () {
		return this.getToken(r.STRING, 0);
	};
	ke.prototype.accept = function (u) {
		return u instanceof R ? u.visitIntervalValue(this) : u.visitChildren(this);
	};
	r.IntervalValueContext = ke;
	r.prototype.intervalValue = function () {
		var u = new ke(this, this._ctx, this.state);
		this.enterRule(u, 226, r.RULE_intervalValue);
		var e = 0;
		try {
			switch (((this.state = 2773), this._errHandler.sync(this), this._input.LA(1))) {
				case r.PLUS:
				case r.MINUS:
				case r.INTEGER_VALUE:
				case r.DECIMAL_VALUE:
					this.enterOuterAlt(u, 1),
						(this.state = 2769),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.PLUS || e === r.MINUS) &&
							((this.state = 2768),
							(e = this._input.LA(1)),
							e === r.PLUS || e === r.MINUS
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this)),
						(this.state = 2771),
						(e = this._input.LA(1)),
						e === r.INTEGER_VALUE || e === r.DECIMAL_VALUE
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this);
					break;
				case r.STRING:
					this.enterOuterAlt(u, 2), (this.state = 2772), this.match(r.STRING);
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Zr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_colPosition),
			(this.position = null),
			(this.afterCol = null),
			this
		);
	}
	Zr.prototype = Object.create(p.ParserRuleContext.prototype);
	Zr.prototype.constructor = Zr;
	Zr.prototype.FIRST = function () {
		return this.getToken(r.FIRST, 0);
	};
	Zr.prototype.AFTER = function () {
		return this.getToken(r.AFTER, 0);
	};
	Zr.prototype.errorCapturingIdentifier = function () {
		return this.getTypedRuleContext(y0, 0);
	};
	Zr.prototype.accept = function (u) {
		return u instanceof R ? u.visitColPosition(this) : u.visitChildren(this);
	};
	r.ColPositionContext = Zr;
	r.prototype.colPosition = function () {
		var u = new Zr(this, this._ctx, this.state);
		this.enterRule(u, 228, r.RULE_colPosition);
		try {
			switch (((this.state = 2778), this._errHandler.sync(this), this._input.LA(1))) {
				case r.FIRST:
					this.enterOuterAlt(u, 1), (this.state = 2775), (u.position = this.match(r.FIRST));
					break;
				case r.AFTER:
					this.enterOuterAlt(u, 2),
						(this.state = 2776),
						(u.position = this.match(r.AFTER)),
						(this.state = 2777),
						(u.afterCol = this.errorCapturingIdentifier());
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function l0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_dataType),
			this
		);
	}
	l0.prototype = Object.create(p.ParserRuleContext.prototype);
	l0.prototype.constructor = l0;
	l0.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function Xa(u, e) {
		return (
			l0.call(this, u),
			(this.complex = null),
			(this.key = null),
			(this.val = null),
			l0.prototype.copyFrom.call(this, e),
			this
		);
	}
	Xa.prototype = Object.create(l0.prototype);
	Xa.prototype.constructor = Xa;
	r.MapDataTypeContext = Xa;
	Xa.prototype.LT = function () {
		return this.getToken(r.LT, 0);
	};
	Xa.prototype.GT = function () {
		return this.getToken(r.GT, 0);
	};
	Xa.prototype.MAP = function () {
		return this.getToken(r.MAP, 0);
	};
	Xa.prototype.dataType = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(l0) : this.getTypedRuleContext(l0, u);
	};
	Xa.prototype.accept = function (u) {
		return u instanceof R ? u.visitMapDataType(this) : u.visitChildren(this);
	};
	function Ys(u, e) {
		return l0.call(this, u), (this.complex = null), l0.prototype.copyFrom.call(this, e), this;
	}
	Ys.prototype = Object.create(l0.prototype);
	Ys.prototype.constructor = Ys;
	r.StructDataTypeContext = Ys;
	Ys.prototype.STRUCT = function () {
		return this.getToken(r.STRUCT, 0);
	};
	Ys.prototype.LT = function () {
		return this.getToken(r.LT, 0);
	};
	Ys.prototype.GT = function () {
		return this.getToken(r.GT, 0);
	};
	Ys.prototype.NEQ = function () {
		return this.getToken(r.NEQ, 0);
	};
	Ys.prototype.complexColTypeList = function () {
		return this.getTypedRuleContext(W3, 0);
	};
	Ys.prototype.accept = function (u) {
		return u instanceof R ? u.visitStructDataType(this) : u.visitChildren(this);
	};
	function Qa(u, e) {
		return l0.call(this, u), (this.complex = null), l0.prototype.copyFrom.call(this, e), this;
	}
	Qa.prototype = Object.create(l0.prototype);
	Qa.prototype.constructor = Qa;
	r.ArrayDataTypeContext = Qa;
	Qa.prototype.LT = function () {
		return this.getToken(r.LT, 0);
	};
	Qa.prototype.dataType = function () {
		return this.getTypedRuleContext(l0, 0);
	};
	Qa.prototype.GT = function () {
		return this.getToken(r.GT, 0);
	};
	Qa.prototype.ARRAY = function () {
		return this.getToken(r.ARRAY, 0);
	};
	Qa.prototype.accept = function (u) {
		return u instanceof R ? u.visitArrayDataType(this) : u.visitChildren(this);
	};
	function A3(u, e) {
		return (
			l0.call(this, u), (this.precision = null), (this.scale = null), l0.prototype.copyFrom.call(this, e), this
		);
	}
	A3.prototype = Object.create(l0.prototype);
	A3.prototype.constructor = A3;
	r.PrimitiveDataTypeContext = A3;
	A3.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	A3.prototype.INTEGER_VALUE = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(r.INTEGER_VALUE) : this.getToken(r.INTEGER_VALUE, u)
		);
	};
	A3.prototype.accept = function (u) {
		return u instanceof R ? u.visitPrimitiveDataType(this) : u.visitChildren(this);
	};
	r.DataTypeContext = l0;
	r.prototype.dataType = function () {
		var u = new l0(this, this._ctx, this.state);
		this.enterRule(u, 230, r.RULE_dataType);
		var e = 0;
		try {
			(this.state = 2814), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 360, this._ctx);
			switch (i) {
				case 1:
					(u = new Qa(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 2780),
						(u.complex = this.match(r.ARRAY)),
						(this.state = 2781),
						this.match(r.LT),
						(this.state = 2782),
						this.dataType(),
						(this.state = 2783),
						this.match(r.GT);
					break;
				case 2:
					(u = new Xa(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 2785),
						(u.complex = this.match(r.MAP)),
						(this.state = 2786),
						this.match(r.LT),
						(this.state = 2787),
						(u.key = this.dataType()),
						(this.state = 2788),
						this.match(r.T__3),
						(this.state = 2789),
						(u.val = this.dataType()),
						(this.state = 2790),
						this.match(r.GT);
					break;
				case 3:
					switch (
						((u = new Ys(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 2792),
						(u.complex = this.match(r.STRUCT)),
						(this.state = 2799),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case r.LT:
							(this.state = 2793), this.match(r.LT), (this.state = 2795), this._errHandler.sync(this);
							var i = this._interp.adaptivePredict(this._input, 356, this._ctx);
							i === 1 && ((this.state = 2794), this.complexColTypeList()),
								(this.state = 2797),
								this.match(r.GT);
							break;
						case r.NEQ:
							(this.state = 2798), this.match(r.NEQ);
							break;
						default:
							throw new p.error.NoViableAltException(this);
					}
					break;
				case 4:
					(u = new A3(this, u)),
						this.enterOuterAlt(u, 4),
						(this.state = 2801),
						this.identifier(),
						(this.state = 2812),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 359, this._ctx);
					if (i === 1) {
						for (
							this.state = 2802,
								this.match(r.T__1),
								this.state = 2803,
								u.precision = this.match(r.INTEGER_VALUE),
								this.state = 2808,
								this._errHandler.sync(this),
								e = this._input.LA(1);
							e === r.T__3;

						)
							(this.state = 2804),
								this.match(r.T__3),
								(this.state = 2805),
								(u.scale = this.match(r.INTEGER_VALUE)),
								(this.state = 2810),
								this._errHandler.sync(this),
								(e = this._input.LA(1));
						(this.state = 2811), this.match(r.T__2);
					}
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function fc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_qualifiedColTypeWithPositionList),
			this
		);
	}
	fc.prototype = Object.create(p.ParserRuleContext.prototype);
	fc.prototype.constructor = fc;
	fc.prototype.qualifiedColTypeWithPosition = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ve) : this.getTypedRuleContext(Ve, u);
	};
	fc.prototype.accept = function (u) {
		return u instanceof R ? u.visitQualifiedColTypeWithPositionList(this) : u.visitChildren(this);
	};
	r.QualifiedColTypeWithPositionListContext = fc;
	r.prototype.qualifiedColTypeWithPositionList = function () {
		var u = new fc(this, this._ctx, this.state);
		this.enterRule(u, 232, r.RULE_qualifiedColTypeWithPositionList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2816,
					this.qualifiedColTypeWithPosition(),
					this.state = 2821,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 2817),
					this.match(r.T__3),
					(this.state = 2818),
					this.qualifiedColTypeWithPosition(),
					(this.state = 2823),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ve(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_qualifiedColTypeWithPosition),
			(this.name = null),
			this
		);
	}
	Ve.prototype = Object.create(p.ParserRuleContext.prototype);
	Ve.prototype.constructor = Ve;
	Ve.prototype.dataType = function () {
		return this.getTypedRuleContext(l0, 0);
	};
	Ve.prototype.multipartIdentifier = function () {
		return this.getTypedRuleContext(D, 0);
	};
	Ve.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	Ve.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	Ve.prototype.commentSpec = function () {
		return this.getTypedRuleContext(du, 0);
	};
	Ve.prototype.colPosition = function () {
		return this.getTypedRuleContext(Zr, 0);
	};
	Ve.prototype.accept = function (u) {
		return u instanceof R ? u.visitQualifiedColTypeWithPosition(this) : u.visitChildren(this);
	};
	r.QualifiedColTypeWithPositionContext = Ve;
	r.prototype.qualifiedColTypeWithPosition = function () {
		var u = new Ve(this, this._ctx, this.state);
		this.enterRule(u, 234, r.RULE_qualifiedColTypeWithPosition);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2824),
				(u.name = this.multipartIdentifier()),
				(this.state = 2825),
				this.dataType(),
				(this.state = 2828),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.NOT && ((this.state = 2826), this.match(r.NOT), (this.state = 2827), this.match(r.NULL)),
				(this.state = 2831),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.COMMENT && ((this.state = 2830), this.commentSpec()),
				(this.state = 2834),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === r.AFTER || e === r.FIRST) && ((this.state = 2833), this.colPosition());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Jr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_colTypeList),
			this
		);
	}
	Jr.prototype = Object.create(p.ParserRuleContext.prototype);
	Jr.prototype.constructor = Jr;
	Jr.prototype.colType = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts($t) : this.getTypedRuleContext($t, u);
	};
	Jr.prototype.accept = function (u) {
		return u instanceof R ? u.visitColTypeList(this) : u.visitChildren(this);
	};
	r.ColTypeListContext = Jr;
	r.prototype.colTypeList = function () {
		var u = new Jr(this, this._ctx, this.state);
		this.enterRule(u, 236, r.RULE_colTypeList);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2836),
				this.colType(),
				(this.state = 2841),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 365, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 2837), this.match(r.T__3), (this.state = 2838), this.colType()),
					(this.state = 2843),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 365, this._ctx));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $t(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_colType),
			(this.colName = null),
			this
		);
	}
	$t.prototype = Object.create(p.ParserRuleContext.prototype);
	$t.prototype.constructor = $t;
	$t.prototype.dataType = function () {
		return this.getTypedRuleContext(l0, 0);
	};
	$t.prototype.errorCapturingIdentifier = function () {
		return this.getTypedRuleContext(y0, 0);
	};
	$t.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	$t.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	$t.prototype.commentSpec = function () {
		return this.getTypedRuleContext(du, 0);
	};
	$t.prototype.accept = function (u) {
		return u instanceof R ? u.visitColType(this) : u.visitChildren(this);
	};
	r.ColTypeContext = $t;
	r.prototype.colType = function () {
		var u = new $t(this, this._ctx, this.state);
		this.enterRule(u, 238, r.RULE_colType);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2844),
				(u.colName = this.errorCapturingIdentifier()),
				(this.state = 2845),
				this.dataType(),
				(this.state = 2848),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 366, this._ctx);
			e === 1 && ((this.state = 2846), this.match(r.NOT), (this.state = 2847), this.match(r.NULL)),
				(this.state = 2851),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 367, this._ctx);
			e === 1 && ((this.state = 2850), this.commentSpec());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function W3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_complexColTypeList),
			this
		);
	}
	W3.prototype = Object.create(p.ParserRuleContext.prototype);
	W3.prototype.constructor = W3;
	W3.prototype.complexColType = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Vi) : this.getTypedRuleContext(Vi, u);
	};
	W3.prototype.accept = function (u) {
		return u instanceof R ? u.visitComplexColTypeList(this) : u.visitChildren(this);
	};
	r.ComplexColTypeListContext = W3;
	r.prototype.complexColTypeList = function () {
		var u = new W3(this, this._ctx, this.state);
		this.enterRule(u, 240, r.RULE_complexColTypeList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2853,
					this.complexColType(),
					this.state = 2858,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 2854),
					this.match(r.T__3),
					(this.state = 2855),
					this.complexColType(),
					(this.state = 2860),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Vi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_complexColType),
			this
		);
	}
	Vi.prototype = Object.create(p.ParserRuleContext.prototype);
	Vi.prototype.constructor = Vi;
	Vi.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	Vi.prototype.dataType = function () {
		return this.getTypedRuleContext(l0, 0);
	};
	Vi.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	Vi.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	Vi.prototype.commentSpec = function () {
		return this.getTypedRuleContext(du, 0);
	};
	Vi.prototype.accept = function (u) {
		return u instanceof R ? u.visitComplexColType(this) : u.visitChildren(this);
	};
	r.ComplexColTypeContext = Vi;
	r.prototype.complexColType = function () {
		var u = new Vi(this, this._ctx, this.state);
		this.enterRule(u, 242, r.RULE_complexColType);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2861),
				this.identifier(),
				(this.state = 2862),
				this.match(r.T__10),
				(this.state = 2863),
				this.dataType(),
				(this.state = 2866),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.NOT && ((this.state = 2864), this.match(r.NOT), (this.state = 2865), this.match(r.NULL)),
				(this.state = 2869),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === r.COMMENT && ((this.state = 2868), this.commentSpec());
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Bi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_whenClause),
			(this.condition = null),
			(this.result = null),
			this
		);
	}
	Bi.prototype = Object.create(p.ParserRuleContext.prototype);
	Bi.prototype.constructor = Bi;
	Bi.prototype.WHEN = function () {
		return this.getToken(r.WHEN, 0);
	};
	Bi.prototype.THEN = function () {
		return this.getToken(r.THEN, 0);
	};
	Bi.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	Bi.prototype.accept = function (u) {
		return u instanceof R ? u.visitWhenClause(this) : u.visitChildren(this);
	};
	r.WhenClauseContext = Bi;
	r.prototype.whenClause = function () {
		var u = new Bi(this, this._ctx, this.state);
		this.enterRule(u, 244, r.RULE_whenClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2871),
				this.match(r.WHEN),
				(this.state = 2872),
				(u.condition = this.expression()),
				(this.state = 2873),
				this.match(r.THEN),
				(this.state = 2874),
				(u.result = this.expression());
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Gs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_windowClause),
			this
		);
	}
	Gs.prototype = Object.create(p.ParserRuleContext.prototype);
	Gs.prototype.constructor = Gs;
	Gs.prototype.WINDOW = function () {
		return this.getToken(r.WINDOW, 0);
	};
	Gs.prototype.namedWindow = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(js) : this.getTypedRuleContext(js, u);
	};
	Gs.prototype.accept = function (u) {
		return u instanceof R ? u.visitWindowClause(this) : u.visitChildren(this);
	};
	r.WindowClauseContext = Gs;
	r.prototype.windowClause = function () {
		var u = new Gs(this, this._ctx, this.state);
		this.enterRule(u, 246, r.RULE_windowClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2876),
				this.match(r.WINDOW),
				(this.state = 2877),
				this.namedWindow(),
				(this.state = 2882),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 371, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 2878), this.match(r.T__3), (this.state = 2879), this.namedWindow()),
					(this.state = 2884),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 371, this._ctx));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function js(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_namedWindow),
			(this.name = null),
			this
		);
	}
	js.prototype = Object.create(p.ParserRuleContext.prototype);
	js.prototype.constructor = js;
	js.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	js.prototype.windowSpec = function () {
		return this.getTypedRuleContext(Be, 0);
	};
	js.prototype.errorCapturingIdentifier = function () {
		return this.getTypedRuleContext(y0, 0);
	};
	js.prototype.accept = function (u) {
		return u instanceof R ? u.visitNamedWindow(this) : u.visitChildren(this);
	};
	r.NamedWindowContext = js;
	r.prototype.namedWindow = function () {
		var u = new js(this, this._ctx, this.state);
		this.enterRule(u, 248, r.RULE_namedWindow);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2885),
				(u.name = this.errorCapturingIdentifier()),
				(this.state = 2886),
				this.match(r.AS),
				(this.state = 2887),
				this.windowSpec();
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Be(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_windowSpec),
			this
		);
	}
	Be.prototype = Object.create(p.ParserRuleContext.prototype);
	Be.prototype.constructor = Be;
	Be.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function K3(u, e) {
		return Be.call(this, u), (this.name = null), Be.prototype.copyFrom.call(this, e), this;
	}
	K3.prototype = Object.create(Be.prototype);
	K3.prototype.constructor = K3;
	r.WindowRefContext = K3;
	K3.prototype.errorCapturingIdentifier = function () {
		return this.getTypedRuleContext(y0, 0);
	};
	K3.prototype.accept = function (u) {
		return u instanceof R ? u.visitWindowRef(this) : u.visitChildren(this);
	};
	function ue(u, e) {
		return (
			Be.call(this, u),
			(this._expression = null),
			(this.partition = []),
			Be.prototype.copyFrom.call(this, e),
			this
		);
	}
	ue.prototype = Object.create(Be.prototype);
	ue.prototype.constructor = ue;
	r.WindowDefContext = ue;
	ue.prototype.CLUSTER = function () {
		return this.getToken(r.CLUSTER, 0);
	};
	ue.prototype.BY = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.BY) : this.getToken(r.BY, u);
	};
	ue.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(V) : this.getTypedRuleContext(V, u);
	};
	ue.prototype.windowFrame = function () {
		return this.getTypedRuleContext(zr, 0);
	};
	ue.prototype.sortItem = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(At) : this.getTypedRuleContext(At, u);
	};
	ue.prototype.PARTITION = function () {
		return this.getToken(r.PARTITION, 0);
	};
	ue.prototype.DISTRIBUTE = function () {
		return this.getToken(r.DISTRIBUTE, 0);
	};
	ue.prototype.ORDER = function () {
		return this.getToken(r.ORDER, 0);
	};
	ue.prototype.SORT = function () {
		return this.getToken(r.SORT, 0);
	};
	ue.prototype.accept = function (u) {
		return u instanceof R ? u.visitWindowDef(this) : u.visitChildren(this);
	};
	r.WindowSpecContext = Be;
	r.prototype.windowSpec = function () {
		var u = new Be(this, this._ctx, this.state);
		this.enterRule(u, 250, r.RULE_windowSpec);
		var e = 0;
		try {
			(this.state = 2935), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 379, this._ctx);
			switch (i) {
				case 1:
					(u = new K3(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 2889),
						(u.name = this.errorCapturingIdentifier());
					break;
				case 2:
					(u = new K3(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 2890),
						this.match(r.T__1),
						(this.state = 2891),
						(u.name = this.errorCapturingIdentifier()),
						(this.state = 2892),
						this.match(r.T__2);
					break;
				case 3:
					switch (
						((u = new ue(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 2894),
						this.match(r.T__1),
						(this.state = 2929),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case r.CLUSTER:
							for (
								this.state = 2895,
									this.match(r.CLUSTER),
									this.state = 2896,
									this.match(r.BY),
									this.state = 2897,
									u._expression = this.expression(),
									u.partition.push(u._expression),
									this.state = 2902,
									this._errHandler.sync(this),
									e = this._input.LA(1);
								e === r.T__3;

							)
								(this.state = 2898),
									this.match(r.T__3),
									(this.state = 2899),
									(u._expression = this.expression()),
									u.partition.push(u._expression),
									(this.state = 2904),
									this._errHandler.sync(this),
									(e = this._input.LA(1));
							break;
						case r.T__2:
						case r.DISTRIBUTE:
						case r.ORDER:
						case r.PARTITION:
						case r.RANGE:
						case r.ROWS:
						case r.SORT:
							if (
								((this.state = 2915),
								this._errHandler.sync(this),
								(e = this._input.LA(1)),
								e === r.DISTRIBUTE || e === r.PARTITION)
							)
								for (
									this.state = 2905,
										e = this._input.LA(1),
										e === r.DISTRIBUTE || e === r.PARTITION
											? (this._errHandler.reportMatch(this), this.consume())
											: this._errHandler.recoverInline(this),
										this.state = 2906,
										this.match(r.BY),
										this.state = 2907,
										u._expression = this.expression(),
										u.partition.push(u._expression),
										this.state = 2912,
										this._errHandler.sync(this),
										e = this._input.LA(1);
									e === r.T__3;

								)
									(this.state = 2908),
										this.match(r.T__3),
										(this.state = 2909),
										(u._expression = this.expression()),
										u.partition.push(u._expression),
										(this.state = 2914),
										this._errHandler.sync(this),
										(e = this._input.LA(1));
							if (
								((this.state = 2927),
								this._errHandler.sync(this),
								(e = this._input.LA(1)),
								e === r.ORDER || e === r.SORT)
							)
								for (
									this.state = 2917,
										e = this._input.LA(1),
										e === r.ORDER || e === r.SORT
											? (this._errHandler.reportMatch(this), this.consume())
											: this._errHandler.recoverInline(this),
										this.state = 2918,
										this.match(r.BY),
										this.state = 2919,
										this.sortItem(),
										this.state = 2924,
										this._errHandler.sync(this),
										e = this._input.LA(1);
									e === r.T__3;

								)
									(this.state = 2920),
										this.match(r.T__3),
										(this.state = 2921),
										this.sortItem(),
										(this.state = 2926),
										this._errHandler.sync(this),
										(e = this._input.LA(1));
							break;
						default:
							throw new p.error.NoViableAltException(this);
					}
					(this.state = 2932),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === r.RANGE || e === r.ROWS) && ((this.state = 2931), this.windowFrame()),
						(this.state = 2934),
						this.match(r.T__2);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function zr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_windowFrame),
			(this.frameType = null),
			(this.start = null),
			(this.end = null),
			this
		);
	}
	zr.prototype = Object.create(p.ParserRuleContext.prototype);
	zr.prototype.constructor = zr;
	zr.prototype.RANGE = function () {
		return this.getToken(r.RANGE, 0);
	};
	zr.prototype.frameBound = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ye) : this.getTypedRuleContext(Ye, u);
	};
	zr.prototype.ROWS = function () {
		return this.getToken(r.ROWS, 0);
	};
	zr.prototype.BETWEEN = function () {
		return this.getToken(r.BETWEEN, 0);
	};
	zr.prototype.AND = function () {
		return this.getToken(r.AND, 0);
	};
	zr.prototype.accept = function (u) {
		return u instanceof R ? u.visitWindowFrame(this) : u.visitChildren(this);
	};
	r.WindowFrameContext = zr;
	r.prototype.windowFrame = function () {
		var u = new zr(this, this._ctx, this.state);
		this.enterRule(u, 252, r.RULE_windowFrame);
		try {
			(this.state = 2953), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 380, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 2937),
						(u.frameType = this.match(r.RANGE)),
						(this.state = 2938),
						(u.start = this.frameBound());
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 2939),
						(u.frameType = this.match(r.ROWS)),
						(this.state = 2940),
						(u.start = this.frameBound());
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 2941),
						(u.frameType = this.match(r.RANGE)),
						(this.state = 2942),
						this.match(r.BETWEEN),
						(this.state = 2943),
						(u.start = this.frameBound()),
						(this.state = 2944),
						this.match(r.AND),
						(this.state = 2945),
						(u.end = this.frameBound());
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 2947),
						(u.frameType = this.match(r.ROWS)),
						(this.state = 2948),
						this.match(r.BETWEEN),
						(this.state = 2949),
						(u.start = this.frameBound()),
						(this.state = 2950),
						this.match(r.AND),
						(this.state = 2951),
						(u.end = this.frameBound());
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ye(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_frameBound),
			(this.boundType = null),
			this
		);
	}
	Ye.prototype = Object.create(p.ParserRuleContext.prototype);
	Ye.prototype.constructor = Ye;
	Ye.prototype.UNBOUNDED = function () {
		return this.getToken(r.UNBOUNDED, 0);
	};
	Ye.prototype.PRECEDING = function () {
		return this.getToken(r.PRECEDING, 0);
	};
	Ye.prototype.FOLLOWING = function () {
		return this.getToken(r.FOLLOWING, 0);
	};
	Ye.prototype.ROW = function () {
		return this.getToken(r.ROW, 0);
	};
	Ye.prototype.CURRENT = function () {
		return this.getToken(r.CURRENT, 0);
	};
	Ye.prototype.expression = function () {
		return this.getTypedRuleContext(V, 0);
	};
	Ye.prototype.accept = function (u) {
		return u instanceof R ? u.visitFrameBound(this) : u.visitChildren(this);
	};
	r.FrameBoundContext = Ye;
	r.prototype.frameBound = function () {
		var u = new Ye(this, this._ctx, this.state);
		this.enterRule(u, 254, r.RULE_frameBound);
		var e = 0;
		try {
			(this.state = 2962), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 381, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 2955),
						this.match(r.UNBOUNDED),
						(this.state = 2956),
						(u.boundType = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.FOLLOWING || e === r.PRECEDING
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.boundType = this._errHandler.recoverInline(this));
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 2957),
						(u.boundType = this.match(r.CURRENT)),
						(this.state = 2958),
						this.match(r.ROW);
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 2959),
						this.expression(),
						(this.state = 2960),
						(u.boundType = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.FOLLOWING || e === r.PRECEDING
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.boundType = this._errHandler.recoverInline(this));
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function dl(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_qualifiedNameList),
			this
		);
	}
	dl.prototype = Object.create(p.ParserRuleContext.prototype);
	dl.prototype.constructor = dl;
	dl.prototype.qualifiedName = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Kt) : this.getTypedRuleContext(Kt, u);
	};
	dl.prototype.accept = function (u) {
		return u instanceof R ? u.visitQualifiedNameList(this) : u.visitChildren(this);
	};
	r.QualifiedNameListContext = dl;
	r.prototype.qualifiedNameList = function () {
		var u = new dl(this, this._ctx, this.state);
		this.enterRule(u, 256, r.RULE_qualifiedNameList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2964,
					this.qualifiedName(),
					this.state = 2969,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === r.T__3;

			)
				(this.state = 2965),
					this.match(r.T__3),
					(this.state = 2966),
					this.qualifiedName(),
					(this.state = 2971),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $r(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_functionName),
			this
		);
	}
	$r.prototype = Object.create(p.ParserRuleContext.prototype);
	$r.prototype.constructor = $r;
	$r.prototype.qualifiedName = function () {
		return this.getTypedRuleContext(Kt, 0);
	};
	$r.prototype.FILTER = function () {
		return this.getToken(r.FILTER, 0);
	};
	$r.prototype.LEFT = function () {
		return this.getToken(r.LEFT, 0);
	};
	$r.prototype.RIGHT = function () {
		return this.getToken(r.RIGHT, 0);
	};
	$r.prototype.accept = function (u) {
		return u instanceof R ? u.visitFunctionName(this) : u.visitChildren(this);
	};
	r.FunctionNameContext = $r;
	r.prototype.functionName = function () {
		var u = new $r(this, this._ctx, this.state);
		this.enterRule(u, 258, r.RULE_functionName);
		try {
			(this.state = 2976), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 383, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2972), this.qualifiedName();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2973), this.match(r.FILTER);
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 2974), this.match(r.LEFT);
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 2975), this.match(r.RIGHT);
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Kt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_qualifiedName),
			this
		);
	}
	Kt.prototype = Object.create(p.ParserRuleContext.prototype);
	Kt.prototype.constructor = Kt;
	Kt.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(B) : this.getTypedRuleContext(B, u);
	};
	Kt.prototype.accept = function (u) {
		return u instanceof R ? u.visitQualifiedName(this) : u.visitChildren(this);
	};
	r.QualifiedNameContext = Kt;
	r.prototype.qualifiedName = function () {
		var u = new Kt(this, this._ctx, this.state);
		this.enterRule(u, 260, r.RULE_qualifiedName);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2978),
				this.identifier(),
				(this.state = 2983),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 384, this._ctx);
				e != 2 && e != p.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 2979), this.match(r.T__4), (this.state = 2980), this.identifier()),
					(this.state = 2985),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 384, this._ctx));
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function y0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_errorCapturingIdentifier),
			this
		);
	}
	y0.prototype = Object.create(p.ParserRuleContext.prototype);
	y0.prototype.constructor = y0;
	y0.prototype.identifier = function () {
		return this.getTypedRuleContext(B, 0);
	};
	y0.prototype.errorCapturingIdentifierExtra = function () {
		return this.getTypedRuleContext(Yi, 0);
	};
	y0.prototype.accept = function (u) {
		return u instanceof R ? u.visitErrorCapturingIdentifier(this) : u.visitChildren(this);
	};
	r.ErrorCapturingIdentifierContext = y0;
	r.prototype.errorCapturingIdentifier = function () {
		var u = new y0(this, this._ctx, this.state);
		this.enterRule(u, 262, r.RULE_errorCapturingIdentifier);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2986),
				this.identifier(),
				(this.state = 2987),
				this.errorCapturingIdentifierExtra();
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Yi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_errorCapturingIdentifierExtra),
			this
		);
	}
	Yi.prototype = Object.create(p.ParserRuleContext.prototype);
	Yi.prototype.constructor = Yi;
	Yi.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function x3(u, e) {
		return Yi.call(this, u), Yi.prototype.copyFrom.call(this, e), this;
	}
	x3.prototype = Object.create(Yi.prototype);
	x3.prototype.constructor = x3;
	r.ErrorIdentContext = x3;
	x3.prototype.MINUS = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(r.MINUS) : this.getToken(r.MINUS, u);
	};
	x3.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(B) : this.getTypedRuleContext(B, u);
	};
	x3.prototype.accept = function (u) {
		return u instanceof R ? u.visitErrorIdent(this) : u.visitChildren(this);
	};
	function Dl(u, e) {
		return Yi.call(this, u), Yi.prototype.copyFrom.call(this, e), this;
	}
	Dl.prototype = Object.create(Yi.prototype);
	Dl.prototype.constructor = Dl;
	r.RealIdentContext = Dl;
	Dl.prototype.accept = function (u) {
		return u instanceof R ? u.visitRealIdent(this) : u.visitChildren(this);
	};
	r.ErrorCapturingIdentifierExtraContext = Yi;
	r.prototype.errorCapturingIdentifierExtra = function () {
		var u = new Yi(this, this._ctx, this.state);
		this.enterRule(u, 264, r.RULE_errorCapturingIdentifierExtra);
		try {
			(this.state = 2996), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 386, this._ctx);
			switch (e) {
				case 1:
					(u = new x3(this, u)), this.enterOuterAlt(u, 1), (this.state = 2991), this._errHandler.sync(this);
					var i = 1;
					do {
						switch (i) {
							case 1:
								(this.state = 2989), this.match(r.MINUS), (this.state = 2990), this.identifier();
								break;
							default:
								throw new p.error.NoViableAltException(this);
						}
						(this.state = 2993),
							this._errHandler.sync(this),
							(i = this._interp.adaptivePredict(this._input, 385, this._ctx));
					} while (i != 2 && i != p.atn.ATN.INVALID_ALT_NUMBER);
					break;
				case 2:
					(u = new Dl(this, u)), this.enterOuterAlt(u, 2);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function B(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_identifier),
			this
		);
	}
	B.prototype = Object.create(p.ParserRuleContext.prototype);
	B.prototype.constructor = B;
	B.prototype.strictIdentifier = function () {
		return this.getTypedRuleContext(Ge, 0);
	};
	B.prototype.strictNonReserved = function () {
		return this.getTypedRuleContext(w0, 0);
	};
	B.prototype.accept = function (u) {
		return u instanceof R ? u.visitIdentifier(this) : u.visitChildren(this);
	};
	r.IdentifierContext = B;
	r.prototype.identifier = function () {
		var u = new B(this, this._ctx, this.state);
		this.enterRule(u, 266, r.RULE_identifier);
		try {
			(this.state = 3001), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 387, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2998), this.strictIdentifier();
					break;
				case 2:
					if ((this.enterOuterAlt(u, 2), (this.state = 2999), SQL_standard_keyword_behavior))
						throw new p.error.FailedPredicateException(this, '!SQL_standard_keyword_behavior');
					(this.state = 3e3), this.strictNonReserved();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ge(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_strictIdentifier),
			this
		);
	}
	Ge.prototype = Object.create(p.ParserRuleContext.prototype);
	Ge.prototype.constructor = Ge;
	Ge.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function fl(u, e) {
		return Ge.call(this, u), Ge.prototype.copyFrom.call(this, e), this;
	}
	fl.prototype = Object.create(Ge.prototype);
	fl.prototype.constructor = fl;
	r.QuotedIdentifierAlternativeContext = fl;
	fl.prototype.quotedIdentifier = function () {
		return this.getTypedRuleContext(qa, 0);
	};
	fl.prototype.accept = function (u) {
		return u instanceof R ? u.visitQuotedIdentifierAlternative(this) : u.visitChildren(this);
	};
	function ds(u, e) {
		return Ge.call(this, u), Ge.prototype.copyFrom.call(this, e), this;
	}
	ds.prototype = Object.create(Ge.prototype);
	ds.prototype.constructor = ds;
	r.UnquotedIdentifierContext = ds;
	ds.prototype.IDENTIFIER = function () {
		return this.getToken(r.IDENTIFIER, 0);
	};
	ds.prototype.ansiNonReserved = function () {
		return this.getTypedRuleContext(A, 0);
	};
	ds.prototype.nonReserved = function () {
		return this.getTypedRuleContext(m, 0);
	};
	ds.prototype.accept = function (u) {
		return u instanceof R ? u.visitUnquotedIdentifier(this) : u.visitChildren(this);
	};
	r.StrictIdentifierContext = Ge;
	r.prototype.strictIdentifier = function () {
		var u = new Ge(this, this._ctx, this.state);
		this.enterRule(u, 268, r.RULE_strictIdentifier);
		try {
			(this.state = 3009), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 388, this._ctx);
			switch (e) {
				case 1:
					(u = new ds(this, u)), this.enterOuterAlt(u, 1), (this.state = 3003), this.match(r.IDENTIFIER);
					break;
				case 2:
					(u = new fl(this, u)), this.enterOuterAlt(u, 2), (this.state = 3004), this.quotedIdentifier();
					break;
				case 3:
					if (
						((u = new ds(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 3005),
						!SQL_standard_keyword_behavior)
					)
						throw new p.error.FailedPredicateException(this, 'SQL_standard_keyword_behavior');
					(this.state = 3006), this.ansiNonReserved();
					break;
				case 4:
					if (
						((u = new ds(this, u)),
						this.enterOuterAlt(u, 4),
						(this.state = 3007),
						SQL_standard_keyword_behavior)
					)
						throw new p.error.FailedPredicateException(this, '!SQL_standard_keyword_behavior');
					(this.state = 3008), this.nonReserved();
					break;
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qa(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_quotedIdentifier),
			this
		);
	}
	qa.prototype = Object.create(p.ParserRuleContext.prototype);
	qa.prototype.constructor = qa;
	qa.prototype.BACKQUOTED_IDENTIFIER = function () {
		return this.getToken(r.BACKQUOTED_IDENTIFIER, 0);
	};
	qa.prototype.accept = function (u) {
		return u instanceof R ? u.visitQuotedIdentifier(this) : u.visitChildren(this);
	};
	r.QuotedIdentifierContext = qa;
	r.prototype.quotedIdentifier = function () {
		var u = new qa(this, this._ctx, this.state);
		this.enterRule(u, 270, r.RULE_quotedIdentifier);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3011), this.match(r.BACKQUOTED_IDENTIFIER);
		} catch (e) {
			if (e instanceof p.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function q(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_number),
			this
		);
	}
	q.prototype = Object.create(p.ParserRuleContext.prototype);
	q.prototype.constructor = q;
	q.prototype.copyFrom = function (u) {
		p.ParserRuleContext.prototype.copyFrom.call(this, u);
	};
	function O3(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	O3.prototype = Object.create(q.prototype);
	O3.prototype.constructor = O3;
	r.DecimalLiteralContext = O3;
	O3.prototype.DECIMAL_VALUE = function () {
		return this.getToken(r.DECIMAL_VALUE, 0);
	};
	O3.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	O3.prototype.accept = function (u) {
		return u instanceof R ? u.visitDecimalLiteral(this) : u.visitChildren(this);
	};
	function L3(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	L3.prototype = Object.create(q.prototype);
	L3.prototype.constructor = L3;
	r.BigIntLiteralContext = L3;
	L3.prototype.BIGINT_LITERAL = function () {
		return this.getToken(r.BIGINT_LITERAL, 0);
	};
	L3.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	L3.prototype.accept = function (u) {
		return u instanceof R ? u.visitBigIntLiteral(this) : u.visitChildren(this);
	};
	function S3(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	S3.prototype = Object.create(q.prototype);
	S3.prototype.constructor = S3;
	r.TinyIntLiteralContext = S3;
	S3.prototype.TINYINT_LITERAL = function () {
		return this.getToken(r.TINYINT_LITERAL, 0);
	};
	S3.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	S3.prototype.accept = function (u) {
		return u instanceof R ? u.visitTinyIntLiteral(this) : u.visitChildren(this);
	};
	function _c(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	_c.prototype = Object.create(q.prototype);
	_c.prototype.constructor = _c;
	r.LegacyDecimalLiteralContext = _c;
	_c.prototype.EXPONENT_VALUE = function () {
		return this.getToken(r.EXPONENT_VALUE, 0);
	};
	_c.prototype.DECIMAL_VALUE = function () {
		return this.getToken(r.DECIMAL_VALUE, 0);
	};
	_c.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	_c.prototype.accept = function (u) {
		return u instanceof R ? u.visitLegacyDecimalLiteral(this) : u.visitChildren(this);
	};
	function I3(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	I3.prototype = Object.create(q.prototype);
	I3.prototype.constructor = I3;
	r.BigDecimalLiteralContext = I3;
	I3.prototype.BIGDECIMAL_LITERAL = function () {
		return this.getToken(r.BIGDECIMAL_LITERAL, 0);
	};
	I3.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	I3.prototype.accept = function (u) {
		return u instanceof R ? u.visitBigDecimalLiteral(this) : u.visitChildren(this);
	};
	function N3(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	N3.prototype = Object.create(q.prototype);
	N3.prototype.constructor = N3;
	r.ExponentLiteralContext = N3;
	N3.prototype.EXPONENT_VALUE = function () {
		return this.getToken(r.EXPONENT_VALUE, 0);
	};
	N3.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	N3.prototype.accept = function (u) {
		return u instanceof R ? u.visitExponentLiteral(this) : u.visitChildren(this);
	};
	function P3(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	P3.prototype = Object.create(q.prototype);
	P3.prototype.constructor = P3;
	r.DoubleLiteralContext = P3;
	P3.prototype.DOUBLE_LITERAL = function () {
		return this.getToken(r.DOUBLE_LITERAL, 0);
	};
	P3.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	P3.prototype.accept = function (u) {
		return u instanceof R ? u.visitDoubleLiteral(this) : u.visitChildren(this);
	};
	function g3(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	g3.prototype = Object.create(q.prototype);
	g3.prototype.constructor = g3;
	r.IntegerLiteralContext = g3;
	g3.prototype.INTEGER_VALUE = function () {
		return this.getToken(r.INTEGER_VALUE, 0);
	};
	g3.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	g3.prototype.accept = function (u) {
		return u instanceof R ? u.visitIntegerLiteral(this) : u.visitChildren(this);
	};
	function D3(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	D3.prototype = Object.create(q.prototype);
	D3.prototype.constructor = D3;
	r.FloatLiteralContext = D3;
	D3.prototype.FLOAT_LITERAL = function () {
		return this.getToken(r.FLOAT_LITERAL, 0);
	};
	D3.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	D3.prototype.accept = function (u) {
		return u instanceof R ? u.visitFloatLiteral(this) : u.visitChildren(this);
	};
	function U3(u, e) {
		return q.call(this, u), q.prototype.copyFrom.call(this, e), this;
	}
	U3.prototype = Object.create(q.prototype);
	U3.prototype.constructor = U3;
	r.SmallIntLiteralContext = U3;
	U3.prototype.SMALLINT_LITERAL = function () {
		return this.getToken(r.SMALLINT_LITERAL, 0);
	};
	U3.prototype.MINUS = function () {
		return this.getToken(r.MINUS, 0);
	};
	U3.prototype.accept = function (u) {
		return u instanceof R ? u.visitSmallIntLiteral(this) : u.visitChildren(this);
	};
	r.NumberContext = q;
	r.prototype.number = function () {
		var u = new q(this, this._ctx, this.state);
		this.enterRule(u, 272, r.RULE_number);
		var e = 0;
		try {
			(this.state = 3056), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 399, this._ctx);
			switch (i) {
				case 1:
					if (
						((u = new N3(this, u)),
						this.enterOuterAlt(u, 1),
						(this.state = 3013),
						legacy_exponent_literal_as_decimal_enabled)
					)
						throw new p.error.FailedPredicateException(this, '!legacy_exponent_literal_as_decimal_enabled');
					(this.state = 3015),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3014), this.match(r.MINUS)),
						(this.state = 3017),
						this.match(r.EXPONENT_VALUE);
					break;
				case 2:
					if (
						((u = new O3(this, u)),
						this.enterOuterAlt(u, 2),
						(this.state = 3018),
						legacy_exponent_literal_as_decimal_enabled)
					)
						throw new p.error.FailedPredicateException(this, '!legacy_exponent_literal_as_decimal_enabled');
					(this.state = 3020),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3019), this.match(r.MINUS)),
						(this.state = 3022),
						this.match(r.DECIMAL_VALUE);
					break;
				case 3:
					if (
						((u = new _c(this, u)),
						this.enterOuterAlt(u, 3),
						(this.state = 3023),
						!legacy_exponent_literal_as_decimal_enabled)
					)
						throw new p.error.FailedPredicateException(this, 'legacy_exponent_literal_as_decimal_enabled');
					(this.state = 3025),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3024), this.match(r.MINUS)),
						(this.state = 3027),
						(e = this._input.LA(1)),
						e === r.EXPONENT_VALUE || e === r.DECIMAL_VALUE
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this);
					break;
				case 4:
					(u = new g3(this, u)),
						this.enterOuterAlt(u, 4),
						(this.state = 3029),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3028), this.match(r.MINUS)),
						(this.state = 3031),
						this.match(r.INTEGER_VALUE);
					break;
				case 5:
					(u = new L3(this, u)),
						this.enterOuterAlt(u, 5),
						(this.state = 3033),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3032), this.match(r.MINUS)),
						(this.state = 3035),
						this.match(r.BIGINT_LITERAL);
					break;
				case 6:
					(u = new U3(this, u)),
						this.enterOuterAlt(u, 6),
						(this.state = 3037),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3036), this.match(r.MINUS)),
						(this.state = 3039),
						this.match(r.SMALLINT_LITERAL);
					break;
				case 7:
					(u = new S3(this, u)),
						this.enterOuterAlt(u, 7),
						(this.state = 3041),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3040), this.match(r.MINUS)),
						(this.state = 3043),
						this.match(r.TINYINT_LITERAL);
					break;
				case 8:
					(u = new P3(this, u)),
						this.enterOuterAlt(u, 8),
						(this.state = 3045),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3044), this.match(r.MINUS)),
						(this.state = 3047),
						this.match(r.DOUBLE_LITERAL);
					break;
				case 9:
					(u = new D3(this, u)),
						this.enterOuterAlt(u, 9),
						(this.state = 3049),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3048), this.match(r.MINUS)),
						(this.state = 3051),
						this.match(r.FLOAT_LITERAL);
					break;
				case 10:
					(u = new I3(this, u)),
						this.enterOuterAlt(u, 10),
						(this.state = 3053),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === r.MINUS && ((this.state = 3052), this.match(r.MINUS)),
						(this.state = 3055),
						this.match(r.BIGDECIMAL_LITERAL);
					break;
			}
		} catch (n) {
			if (n instanceof p.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function te(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_alterColumnAction),
			(this.setOrDrop = null),
			this
		);
	}
	te.prototype = Object.create(p.ParserRuleContext.prototype);
	te.prototype.constructor = te;
	te.prototype.TYPE = function () {
		return this.getToken(r.TYPE, 0);
	};
	te.prototype.dataType = function () {
		return this.getTypedRuleContext(l0, 0);
	};
	te.prototype.commentSpec = function () {
		return this.getTypedRuleContext(du, 0);
	};
	te.prototype.colPosition = function () {
		return this.getTypedRuleContext(Zr, 0);
	};
	te.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	te.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	te.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	te.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	te.prototype.accept = function (u) {
		return u instanceof R ? u.visitAlterColumnAction(this) : u.visitChildren(this);
	};
	r.AlterColumnActionContext = te;
	r.prototype.alterColumnAction = function () {
		var u = new te(this, this._ctx, this.state);
		this.enterRule(u, 274, r.RULE_alterColumnAction);
		var e = 0;
		try {
			switch (((this.state = 3065), this._errHandler.sync(this), this._input.LA(1))) {
				case r.TYPE:
					this.enterOuterAlt(u, 1),
						(this.state = 3058),
						this.match(r.TYPE),
						(this.state = 3059),
						this.dataType();
					break;
				case r.COMMENT:
					this.enterOuterAlt(u, 2), (this.state = 3060), this.commentSpec();
					break;
				case r.AFTER:
				case r.FIRST:
					this.enterOuterAlt(u, 3), (this.state = 3061), this.colPosition();
					break;
				case r.DROP:
				case r.SET:
					this.enterOuterAlt(u, 4),
						(this.state = 3062),
						(u.setOrDrop = this._input.LT(1)),
						(e = this._input.LA(1)),
						e === r.DROP || e === r.SET
							? (this._errHandler.reportMatch(this), this.consume())
							: (u.setOrDrop = this._errHandler.recoverInline(this)),
						(this.state = 3063),
						this.match(r.NOT),
						(this.state = 3064),
						this.match(r.NULL);
					break;
				default:
					throw new p.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function A(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_ansiNonReserved),
			this
		);
	}
	A.prototype = Object.create(p.ParserRuleContext.prototype);
	A.prototype.constructor = A;
	A.prototype.ADD = function () {
		return this.getToken(r.ADD, 0);
	};
	A.prototype.AFTER = function () {
		return this.getToken(r.AFTER, 0);
	};
	A.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	A.prototype.ANALYZE = function () {
		return this.getToken(r.ANALYZE, 0);
	};
	A.prototype.ANTI = function () {
		return this.getToken(r.ANTI, 0);
	};
	A.prototype.ARCHIVE = function () {
		return this.getToken(r.ARCHIVE, 0);
	};
	A.prototype.ARRAY = function () {
		return this.getToken(r.ARRAY, 0);
	};
	A.prototype.ASC = function () {
		return this.getToken(r.ASC, 0);
	};
	A.prototype.AT = function () {
		return this.getToken(r.AT, 0);
	};
	A.prototype.BETWEEN = function () {
		return this.getToken(r.BETWEEN, 0);
	};
	A.prototype.BUCKET = function () {
		return this.getToken(r.BUCKET, 0);
	};
	A.prototype.BUCKETS = function () {
		return this.getToken(r.BUCKETS, 0);
	};
	A.prototype.BY = function () {
		return this.getToken(r.BY, 0);
	};
	A.prototype.CACHE = function () {
		return this.getToken(r.CACHE, 0);
	};
	A.prototype.CASCADE = function () {
		return this.getToken(r.CASCADE, 0);
	};
	A.prototype.CHANGE = function () {
		return this.getToken(r.CHANGE, 0);
	};
	A.prototype.CLEAR = function () {
		return this.getToken(r.CLEAR, 0);
	};
	A.prototype.CLUSTER = function () {
		return this.getToken(r.CLUSTER, 0);
	};
	A.prototype.CLUSTERED = function () {
		return this.getToken(r.CLUSTERED, 0);
	};
	A.prototype.CODEGEN = function () {
		return this.getToken(r.CODEGEN, 0);
	};
	A.prototype.COLLECTION = function () {
		return this.getToken(r.COLLECTION, 0);
	};
	A.prototype.COLUMNS = function () {
		return this.getToken(r.COLUMNS, 0);
	};
	A.prototype.COMMENT = function () {
		return this.getToken(r.COMMENT, 0);
	};
	A.prototype.COMMIT = function () {
		return this.getToken(r.COMMIT, 0);
	};
	A.prototype.COMPACT = function () {
		return this.getToken(r.COMPACT, 0);
	};
	A.prototype.COMPACTIONS = function () {
		return this.getToken(r.COMPACTIONS, 0);
	};
	A.prototype.COMPUTE = function () {
		return this.getToken(r.COMPUTE, 0);
	};
	A.prototype.CONCATENATE = function () {
		return this.getToken(r.CONCATENATE, 0);
	};
	A.prototype.COST = function () {
		return this.getToken(r.COST, 0);
	};
	A.prototype.CUBE = function () {
		return this.getToken(r.CUBE, 0);
	};
	A.prototype.CURRENT = function () {
		return this.getToken(r.CURRENT, 0);
	};
	A.prototype.DATA = function () {
		return this.getToken(r.DATA, 0);
	};
	A.prototype.DATABASE = function () {
		return this.getToken(r.DATABASE, 0);
	};
	A.prototype.DATABASES = function () {
		return this.getToken(r.DATABASES, 0);
	};
	A.prototype.DBPROPERTIES = function () {
		return this.getToken(r.DBPROPERTIES, 0);
	};
	A.prototype.DEFINED = function () {
		return this.getToken(r.DEFINED, 0);
	};
	A.prototype.DELETE = function () {
		return this.getToken(r.DELETE, 0);
	};
	A.prototype.DELIMITED = function () {
		return this.getToken(r.DELIMITED, 0);
	};
	A.prototype.DESC = function () {
		return this.getToken(r.DESC, 0);
	};
	A.prototype.DESCRIBE = function () {
		return this.getToken(r.DESCRIBE, 0);
	};
	A.prototype.DFS = function () {
		return this.getToken(r.DFS, 0);
	};
	A.prototype.DIRECTORIES = function () {
		return this.getToken(r.DIRECTORIES, 0);
	};
	A.prototype.DIRECTORY = function () {
		return this.getToken(r.DIRECTORY, 0);
	};
	A.prototype.DISTRIBUTE = function () {
		return this.getToken(r.DISTRIBUTE, 0);
	};
	A.prototype.DIV = function () {
		return this.getToken(r.DIV, 0);
	};
	A.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	A.prototype.ESCAPED = function () {
		return this.getToken(r.ESCAPED, 0);
	};
	A.prototype.EXCHANGE = function () {
		return this.getToken(r.EXCHANGE, 0);
	};
	A.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	A.prototype.EXPLAIN = function () {
		return this.getToken(r.EXPLAIN, 0);
	};
	A.prototype.EXPORT = function () {
		return this.getToken(r.EXPORT, 0);
	};
	A.prototype.EXTENDED = function () {
		return this.getToken(r.EXTENDED, 0);
	};
	A.prototype.EXTERNAL = function () {
		return this.getToken(r.EXTERNAL, 0);
	};
	A.prototype.EXTRACT = function () {
		return this.getToken(r.EXTRACT, 0);
	};
	A.prototype.FIELDS = function () {
		return this.getToken(r.FIELDS, 0);
	};
	A.prototype.FILEFORMAT = function () {
		return this.getToken(r.FILEFORMAT, 0);
	};
	A.prototype.FIRST = function () {
		return this.getToken(r.FIRST, 0);
	};
	A.prototype.FOLLOWING = function () {
		return this.getToken(r.FOLLOWING, 0);
	};
	A.prototype.FORMAT = function () {
		return this.getToken(r.FORMAT, 0);
	};
	A.prototype.FORMATTED = function () {
		return this.getToken(r.FORMATTED, 0);
	};
	A.prototype.FUNCTION = function () {
		return this.getToken(r.FUNCTION, 0);
	};
	A.prototype.FUNCTIONS = function () {
		return this.getToken(r.FUNCTIONS, 0);
	};
	A.prototype.GLOBAL = function () {
		return this.getToken(r.GLOBAL, 0);
	};
	A.prototype.GROUPING = function () {
		return this.getToken(r.GROUPING, 0);
	};
	A.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	A.prototype.IGNORE = function () {
		return this.getToken(r.IGNORE, 0);
	};
	A.prototype.IMPORT = function () {
		return this.getToken(r.IMPORT, 0);
	};
	A.prototype.INDEX = function () {
		return this.getToken(r.INDEX, 0);
	};
	A.prototype.INDEXES = function () {
		return this.getToken(r.INDEXES, 0);
	};
	A.prototype.INPATH = function () {
		return this.getToken(r.INPATH, 0);
	};
	A.prototype.INPUTFORMAT = function () {
		return this.getToken(r.INPUTFORMAT, 0);
	};
	A.prototype.INSERT = function () {
		return this.getToken(r.INSERT, 0);
	};
	A.prototype.INTERVAL = function () {
		return this.getToken(r.INTERVAL, 0);
	};
	A.prototype.ITEMS = function () {
		return this.getToken(r.ITEMS, 0);
	};
	A.prototype.KEYS = function () {
		return this.getToken(r.KEYS, 0);
	};
	A.prototype.LAST = function () {
		return this.getToken(r.LAST, 0);
	};
	A.prototype.LATERAL = function () {
		return this.getToken(r.LATERAL, 0);
	};
	A.prototype.LAZY = function () {
		return this.getToken(r.LAZY, 0);
	};
	A.prototype.LIKE = function () {
		return this.getToken(r.LIKE, 0);
	};
	A.prototype.LIMIT = function () {
		return this.getToken(r.LIMIT, 0);
	};
	A.prototype.LINES = function () {
		return this.getToken(r.LINES, 0);
	};
	A.prototype.LIST = function () {
		return this.getToken(r.LIST, 0);
	};
	A.prototype.LOAD = function () {
		return this.getToken(r.LOAD, 0);
	};
	A.prototype.LOCAL = function () {
		return this.getToken(r.LOCAL, 0);
	};
	A.prototype.LOCATION = function () {
		return this.getToken(r.LOCATION, 0);
	};
	A.prototype.LOCK = function () {
		return this.getToken(r.LOCK, 0);
	};
	A.prototype.LOCKS = function () {
		return this.getToken(r.LOCKS, 0);
	};
	A.prototype.LOGICAL = function () {
		return this.getToken(r.LOGICAL, 0);
	};
	A.prototype.MACRO = function () {
		return this.getToken(r.MACRO, 0);
	};
	A.prototype.MAP = function () {
		return this.getToken(r.MAP, 0);
	};
	A.prototype.MATCHED = function () {
		return this.getToken(r.MATCHED, 0);
	};
	A.prototype.MERGE = function () {
		return this.getToken(r.MERGE, 0);
	};
	A.prototype.MSCK = function () {
		return this.getToken(r.MSCK, 0);
	};
	A.prototype.NAMESPACE = function () {
		return this.getToken(r.NAMESPACE, 0);
	};
	A.prototype.NAMESPACES = function () {
		return this.getToken(r.NAMESPACES, 0);
	};
	A.prototype.NO = function () {
		return this.getToken(r.NO, 0);
	};
	A.prototype.NULLS = function () {
		return this.getToken(r.NULLS, 0);
	};
	A.prototype.OF = function () {
		return this.getToken(r.OF, 0);
	};
	A.prototype.OPTION = function () {
		return this.getToken(r.OPTION, 0);
	};
	A.prototype.OPTIONS = function () {
		return this.getToken(r.OPTIONS, 0);
	};
	A.prototype.OUT = function () {
		return this.getToken(r.OUT, 0);
	};
	A.prototype.OUTPUTFORMAT = function () {
		return this.getToken(r.OUTPUTFORMAT, 0);
	};
	A.prototype.OVER = function () {
		return this.getToken(r.OVER, 0);
	};
	A.prototype.OVERLAY = function () {
		return this.getToken(r.OVERLAY, 0);
	};
	A.prototype.OVERWRITE = function () {
		return this.getToken(r.OVERWRITE, 0);
	};
	A.prototype.PARTITION = function () {
		return this.getToken(r.PARTITION, 0);
	};
	A.prototype.PARTITIONED = function () {
		return this.getToken(r.PARTITIONED, 0);
	};
	A.prototype.PARTITIONS = function () {
		return this.getToken(r.PARTITIONS, 0);
	};
	A.prototype.PERCENTLIT = function () {
		return this.getToken(r.PERCENTLIT, 0);
	};
	A.prototype.PIVOT = function () {
		return this.getToken(r.PIVOT, 0);
	};
	A.prototype.PLACING = function () {
		return this.getToken(r.PLACING, 0);
	};
	A.prototype.POSITION = function () {
		return this.getToken(r.POSITION, 0);
	};
	A.prototype.PRECEDING = function () {
		return this.getToken(r.PRECEDING, 0);
	};
	A.prototype.PRINCIPALS = function () {
		return this.getToken(r.PRINCIPALS, 0);
	};
	A.prototype.PROPERTIES = function () {
		return this.getToken(r.PROPERTIES, 0);
	};
	A.prototype.PURGE = function () {
		return this.getToken(r.PURGE, 0);
	};
	A.prototype.QUERY = function () {
		return this.getToken(r.QUERY, 0);
	};
	A.prototype.RANGE = function () {
		return this.getToken(r.RANGE, 0);
	};
	A.prototype.RECORDREADER = function () {
		return this.getToken(r.RECORDREADER, 0);
	};
	A.prototype.RECORDWRITER = function () {
		return this.getToken(r.RECORDWRITER, 0);
	};
	A.prototype.RECOVER = function () {
		return this.getToken(r.RECOVER, 0);
	};
	A.prototype.REDUCE = function () {
		return this.getToken(r.REDUCE, 0);
	};
	A.prototype.REFRESH = function () {
		return this.getToken(r.REFRESH, 0);
	};
	A.prototype.RENAME = function () {
		return this.getToken(r.RENAME, 0);
	};
	A.prototype.REPAIR = function () {
		return this.getToken(r.REPAIR, 0);
	};
	A.prototype.REPLACE = function () {
		return this.getToken(r.REPLACE, 0);
	};
	A.prototype.RESET = function () {
		return this.getToken(r.RESET, 0);
	};
	A.prototype.RESPECT = function () {
		return this.getToken(r.RESPECT, 0);
	};
	A.prototype.RESTRICT = function () {
		return this.getToken(r.RESTRICT, 0);
	};
	A.prototype.REVOKE = function () {
		return this.getToken(r.REVOKE, 0);
	};
	A.prototype.RLIKE = function () {
		return this.getToken(r.RLIKE, 0);
	};
	A.prototype.ROLE = function () {
		return this.getToken(r.ROLE, 0);
	};
	A.prototype.ROLES = function () {
		return this.getToken(r.ROLES, 0);
	};
	A.prototype.ROLLBACK = function () {
		return this.getToken(r.ROLLBACK, 0);
	};
	A.prototype.ROLLUP = function () {
		return this.getToken(r.ROLLUP, 0);
	};
	A.prototype.ROW = function () {
		return this.getToken(r.ROW, 0);
	};
	A.prototype.ROWS = function () {
		return this.getToken(r.ROWS, 0);
	};
	A.prototype.SCHEMA = function () {
		return this.getToken(r.SCHEMA, 0);
	};
	A.prototype.SEMI = function () {
		return this.getToken(r.SEMI, 0);
	};
	A.prototype.SEPARATED = function () {
		return this.getToken(r.SEPARATED, 0);
	};
	A.prototype.SERDE = function () {
		return this.getToken(r.SERDE, 0);
	};
	A.prototype.SERDEPROPERTIES = function () {
		return this.getToken(r.SERDEPROPERTIES, 0);
	};
	A.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	A.prototype.SETMINUS = function () {
		return this.getToken(r.SETMINUS, 0);
	};
	A.prototype.SETS = function () {
		return this.getToken(r.SETS, 0);
	};
	A.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	A.prototype.SKEWED = function () {
		return this.getToken(r.SKEWED, 0);
	};
	A.prototype.SORT = function () {
		return this.getToken(r.SORT, 0);
	};
	A.prototype.SORTED = function () {
		return this.getToken(r.SORTED, 0);
	};
	A.prototype.START = function () {
		return this.getToken(r.START, 0);
	};
	A.prototype.STATISTICS = function () {
		return this.getToken(r.STATISTICS, 0);
	};
	A.prototype.STORED = function () {
		return this.getToken(r.STORED, 0);
	};
	A.prototype.STRATIFY = function () {
		return this.getToken(r.STRATIFY, 0);
	};
	A.prototype.STRUCT = function () {
		return this.getToken(r.STRUCT, 0);
	};
	A.prototype.SUBSTR = function () {
		return this.getToken(r.SUBSTR, 0);
	};
	A.prototype.SUBSTRING = function () {
		return this.getToken(r.SUBSTRING, 0);
	};
	A.prototype.SYNC = function () {
		return this.getToken(r.SYNC, 0);
	};
	A.prototype.TABLES = function () {
		return this.getToken(r.TABLES, 0);
	};
	A.prototype.TABLESAMPLE = function () {
		return this.getToken(r.TABLESAMPLE, 0);
	};
	A.prototype.TBLPROPERTIES = function () {
		return this.getToken(r.TBLPROPERTIES, 0);
	};
	A.prototype.TEMPORARY = function () {
		return this.getToken(r.TEMPORARY, 0);
	};
	A.prototype.TERMINATED = function () {
		return this.getToken(r.TERMINATED, 0);
	};
	A.prototype.TOUCH = function () {
		return this.getToken(r.TOUCH, 0);
	};
	A.prototype.TRANSACTION = function () {
		return this.getToken(r.TRANSACTION, 0);
	};
	A.prototype.TRANSACTIONS = function () {
		return this.getToken(r.TRANSACTIONS, 0);
	};
	A.prototype.TRANSFORM = function () {
		return this.getToken(r.TRANSFORM, 0);
	};
	A.prototype.TRIM = function () {
		return this.getToken(r.TRIM, 0);
	};
	A.prototype.TRUE = function () {
		return this.getToken(r.TRUE, 0);
	};
	A.prototype.TRUNCATE = function () {
		return this.getToken(r.TRUNCATE, 0);
	};
	A.prototype.TRY_CAST = function () {
		return this.getToken(r.TRY_CAST, 0);
	};
	A.prototype.TYPE = function () {
		return this.getToken(r.TYPE, 0);
	};
	A.prototype.UNARCHIVE = function () {
		return this.getToken(r.UNARCHIVE, 0);
	};
	A.prototype.UNBOUNDED = function () {
		return this.getToken(r.UNBOUNDED, 0);
	};
	A.prototype.UNCACHE = function () {
		return this.getToken(r.UNCACHE, 0);
	};
	A.prototype.UNLOCK = function () {
		return this.getToken(r.UNLOCK, 0);
	};
	A.prototype.UNSET = function () {
		return this.getToken(r.UNSET, 0);
	};
	A.prototype.UPDATE = function () {
		return this.getToken(r.UPDATE, 0);
	};
	A.prototype.USE = function () {
		return this.getToken(r.USE, 0);
	};
	A.prototype.VALUES = function () {
		return this.getToken(r.VALUES, 0);
	};
	A.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	A.prototype.VIEWS = function () {
		return this.getToken(r.VIEWS, 0);
	};
	A.prototype.WINDOW = function () {
		return this.getToken(r.WINDOW, 0);
	};
	A.prototype.ZONE = function () {
		return this.getToken(r.ZONE, 0);
	};
	A.prototype.accept = function (u) {
		return u instanceof R ? u.visitAnsiNonReserved(this) : u.visitChildren(this);
	};
	r.AnsiNonReservedContext = A;
	r.prototype.ansiNonReserved = function () {
		var u = new A(this, this._ctx, this.state);
		this.enterRule(u, 276, r.RULE_ansiNonReserved);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3067),
				(e = this._input.LA(1)),
				(((e - 12) & -32) == 0 &&
					((1 << (e - 12)) &
						((1 << (r.ADD - 12)) |
							(1 << (r.AFTER - 12)) |
							(1 << (r.ALTER - 12)) |
							(1 << (r.ANALYZE - 12)) |
							(1 << (r.ANTI - 12)) |
							(1 << (r.ARCHIVE - 12)) |
							(1 << (r.ARRAY - 12)) |
							(1 << (r.ASC - 12)) |
							(1 << (r.AT - 12)) |
							(1 << (r.BETWEEN - 12)) |
							(1 << (r.BUCKET - 12)) |
							(1 << (r.BUCKETS - 12)) |
							(1 << (r.BY - 12)) |
							(1 << (r.CACHE - 12)) |
							(1 << (r.CASCADE - 12)) |
							(1 << (r.CHANGE - 12)) |
							(1 << (r.CLEAR - 12)) |
							(1 << (r.CLUSTER - 12)) |
							(1 << (r.CLUSTERED - 12)) |
							(1 << (r.CODEGEN - 12)) |
							(1 << (r.COLLECTION - 12)))) !==
						0) ||
				(((e - 44) & -32) == 0 &&
					((1 << (e - 44)) &
						((1 << (r.COLUMNS - 44)) |
							(1 << (r.COMMENT - 44)) |
							(1 << (r.COMMIT - 44)) |
							(1 << (r.COMPACT - 44)) |
							(1 << (r.COMPACTIONS - 44)) |
							(1 << (r.COMPUTE - 44)) |
							(1 << (r.CONCATENATE - 44)) |
							(1 << (r.COST - 44)) |
							(1 << (r.CUBE - 44)) |
							(1 << (r.CURRENT - 44)) |
							(1 << (r.DATA - 44)) |
							(1 << (r.DATABASE - 44)) |
							(1 << (r.DATABASES - 44)) |
							(1 << (r.DBPROPERTIES - 44)) |
							(1 << (r.DEFINED - 44)) |
							(1 << (r.DELETE - 44)) |
							(1 << (r.DELIMITED - 44)) |
							(1 << (r.DESC - 44)) |
							(1 << (r.DESCRIBE - 44)) |
							(1 << (r.DFS - 44)) |
							(1 << (r.DIRECTORIES - 44)) |
							(1 << (r.DIRECTORY - 44)) |
							(1 << (r.DISTRIBUTE - 44)) |
							(1 << (r.DIV - 44)))) !==
						0) ||
				(((e - 76) & -32) == 0 &&
					((1 << (e - 76)) &
						((1 << (r.DROP - 76)) |
							(1 << (r.ESCAPED - 76)) |
							(1 << (r.EXCHANGE - 76)) |
							(1 << (r.EXISTS - 76)) |
							(1 << (r.EXPLAIN - 76)) |
							(1 << (r.EXPORT - 76)) |
							(1 << (r.EXTENDED - 76)) |
							(1 << (r.EXTERNAL - 76)) |
							(1 << (r.EXTRACT - 76)) |
							(1 << (r.FIELDS - 76)) |
							(1 << (r.FILEFORMAT - 76)) |
							(1 << (r.FIRST - 76)) |
							(1 << (r.FOLLOWING - 76)) |
							(1 << (r.FORMAT - 76)) |
							(1 << (r.FORMATTED - 76)) |
							(1 << (r.FUNCTION - 76)) |
							(1 << (r.FUNCTIONS - 76)) |
							(1 << (r.GLOBAL - 76)) |
							(1 << (r.GROUPING - 76)))) !==
						0) ||
				(((e - 109) & -32) == 0 &&
					((1 << (e - 109)) &
						((1 << (r.IF - 109)) |
							(1 << (r.IGNORE - 109)) |
							(1 << (r.IMPORT - 109)) |
							(1 << (r.INDEX - 109)) |
							(1 << (r.INDEXES - 109)) |
							(1 << (r.INPATH - 109)) |
							(1 << (r.INPUTFORMAT - 109)) |
							(1 << (r.INSERT - 109)) |
							(1 << (r.INTERVAL - 109)) |
							(1 << (r.ITEMS - 109)) |
							(1 << (r.KEYS - 109)) |
							(1 << (r.LAST - 109)) |
							(1 << (r.LATERAL - 109)) |
							(1 << (r.LAZY - 109)) |
							(1 << (r.LIKE - 109)) |
							(1 << (r.LIMIT - 109)) |
							(1 << (r.LINES - 109)) |
							(1 << (r.LIST - 109)) |
							(1 << (r.LOAD - 109)) |
							(1 << (r.LOCAL - 109)) |
							(1 << (r.LOCATION - 109)) |
							(1 << (r.LOCK - 109)) |
							(1 << (r.LOCKS - 109)) |
							(1 << (r.LOGICAL - 109)))) !==
						0) ||
				(((e - 141) & -32) == 0 &&
					((1 << (e - 141)) &
						((1 << (r.MACRO - 141)) |
							(1 << (r.MAP - 141)) |
							(1 << (r.MATCHED - 141)) |
							(1 << (r.MERGE - 141)) |
							(1 << (r.MSCK - 141)) |
							(1 << (r.NAMESPACE - 141)) |
							(1 << (r.NAMESPACES - 141)) |
							(1 << (r.NO - 141)) |
							(1 << (r.NULLS - 141)) |
							(1 << (r.OF - 141)) |
							(1 << (r.OPTION - 141)) |
							(1 << (r.OPTIONS - 141)) |
							(1 << (r.OUT - 141)) |
							(1 << (r.OUTPUTFORMAT - 141)) |
							(1 << (r.OVER - 141)) |
							(1 << (r.OVERLAY - 141)) |
							(1 << (r.OVERWRITE - 141)) |
							(1 << (r.PARTITION - 141)) |
							(1 << (r.PARTITIONED - 141)) |
							(1 << (r.PARTITIONS - 141)) |
							(1 << (r.PERCENTLIT - 141)) |
							(1 << (r.PIVOT - 141)) |
							(1 << (r.PLACING - 141)))) !==
						0) ||
				(((e - 173) & -32) == 0 &&
					((1 << (e - 173)) &
						((1 << (r.POSITION - 173)) |
							(1 << (r.PRECEDING - 173)) |
							(1 << (r.PRINCIPALS - 173)) |
							(1 << (r.PROPERTIES - 173)) |
							(1 << (r.PURGE - 173)) |
							(1 << (r.QUERY - 173)) |
							(1 << (r.RANGE - 173)) |
							(1 << (r.RECORDREADER - 173)) |
							(1 << (r.RECORDWRITER - 173)) |
							(1 << (r.RECOVER - 173)) |
							(1 << (r.REDUCE - 173)) |
							(1 << (r.REFRESH - 173)) |
							(1 << (r.RENAME - 173)) |
							(1 << (r.REPAIR - 173)) |
							(1 << (r.REPLACE - 173)) |
							(1 << (r.RESET - 173)) |
							(1 << (r.RESPECT - 173)) |
							(1 << (r.RESTRICT - 173)) |
							(1 << (r.REVOKE - 173)) |
							(1 << (r.RLIKE - 173)) |
							(1 << (r.ROLE - 173)) |
							(1 << (r.ROLES - 173)) |
							(1 << (r.ROLLBACK - 173)) |
							(1 << (r.ROLLUP - 173)) |
							(1 << (r.ROW - 173)) |
							(1 << (r.ROWS - 173)) |
							(1 << (r.SCHEMA - 173)) |
							(1 << (r.SEMI - 173)))) !==
						0) ||
				(((e - 205) & -32) == 0 &&
					((1 << (e - 205)) &
						((1 << (r.SEPARATED - 205)) |
							(1 << (r.SERDE - 205)) |
							(1 << (r.SERDEPROPERTIES - 205)) |
							(1 << (r.SET - 205)) |
							(1 << (r.SETMINUS - 205)) |
							(1 << (r.SETS - 205)) |
							(1 << (r.SHOW - 205)) |
							(1 << (r.SKEWED - 205)) |
							(1 << (r.SORT - 205)) |
							(1 << (r.SORTED - 205)) |
							(1 << (r.START - 205)) |
							(1 << (r.STATISTICS - 205)) |
							(1 << (r.STORED - 205)) |
							(1 << (r.STRATIFY - 205)) |
							(1 << (r.STRUCT - 205)) |
							(1 << (r.SUBSTR - 205)) |
							(1 << (r.SUBSTRING - 205)) |
							(1 << (r.SYNC - 205)) |
							(1 << (r.TABLES - 205)) |
							(1 << (r.TABLESAMPLE - 205)) |
							(1 << (r.TBLPROPERTIES - 205)) |
							(1 << (r.TEMPORARY - 205)) |
							(1 << (r.TERMINATED - 205)) |
							(1 << (r.TOUCH - 205)) |
							(1 << (r.TRANSACTION - 205)))) !==
						0) ||
				(((e - 237) & -32) == 0 &&
					((1 << (e - 237)) &
						((1 << (r.TRANSACTIONS - 237)) |
							(1 << (r.TRANSFORM - 237)) |
							(1 << (r.TRIM - 237)) |
							(1 << (r.TRUE - 237)) |
							(1 << (r.TRUNCATE - 237)) |
							(1 << (r.TRY_CAST - 237)) |
							(1 << (r.TYPE - 237)) |
							(1 << (r.UNARCHIVE - 237)) |
							(1 << (r.UNBOUNDED - 237)) |
							(1 << (r.UNCACHE - 237)) |
							(1 << (r.UNLOCK - 237)) |
							(1 << (r.UNSET - 237)) |
							(1 << (r.UPDATE - 237)) |
							(1 << (r.USE - 237)) |
							(1 << (r.VALUES - 237)) |
							(1 << (r.VIEW - 237)) |
							(1 << (r.VIEWS - 237)) |
							(1 << (r.WINDOW - 237)) |
							(1 << (r.ZONE - 237)))) !==
						0)
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function w0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_strictNonReserved),
			this
		);
	}
	w0.prototype = Object.create(p.ParserRuleContext.prototype);
	w0.prototype.constructor = w0;
	w0.prototype.ANTI = function () {
		return this.getToken(r.ANTI, 0);
	};
	w0.prototype.CROSS = function () {
		return this.getToken(r.CROSS, 0);
	};
	w0.prototype.EXCEPT = function () {
		return this.getToken(r.EXCEPT, 0);
	};
	w0.prototype.FULL = function () {
		return this.getToken(r.FULL, 0);
	};
	w0.prototype.INNER = function () {
		return this.getToken(r.INNER, 0);
	};
	w0.prototype.INTERSECT = function () {
		return this.getToken(r.INTERSECT, 0);
	};
	w0.prototype.JOIN = function () {
		return this.getToken(r.JOIN, 0);
	};
	w0.prototype.LEFT = function () {
		return this.getToken(r.LEFT, 0);
	};
	w0.prototype.NATURAL = function () {
		return this.getToken(r.NATURAL, 0);
	};
	w0.prototype.ON = function () {
		return this.getToken(r.ON, 0);
	};
	w0.prototype.RIGHT = function () {
		return this.getToken(r.RIGHT, 0);
	};
	w0.prototype.SEMI = function () {
		return this.getToken(r.SEMI, 0);
	};
	w0.prototype.SETMINUS = function () {
		return this.getToken(r.SETMINUS, 0);
	};
	w0.prototype.UNION = function () {
		return this.getToken(r.UNION, 0);
	};
	w0.prototype.USING = function () {
		return this.getToken(r.USING, 0);
	};
	w0.prototype.accept = function (u) {
		return u instanceof R ? u.visitStrictNonReserved(this) : u.visitChildren(this);
	};
	r.StrictNonReservedContext = w0;
	r.prototype.strictNonReserved = function () {
		var u = new w0(this, this._ctx, this.state);
		this.enterRule(u, 278, r.RULE_strictNonReserved);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3069),
				(e = this._input.LA(1)),
				e === r.ANTI ||
				e === r.CROSS ||
				e === r.EXCEPT ||
				(((e - 101) & -32) == 0 &&
					((1 << (e - 101)) &
						((1 << (r.FULL - 101)) |
							(1 << (r.INNER - 101)) |
							(1 << (r.INTERSECT - 101)) |
							(1 << (r.JOIN - 101)) |
							(1 << (r.LEFT - 101)))) !==
						0) ||
				e === r.NATURAL ||
				e === r.ON ||
				(((e - 194) & -32) == 0 &&
					((1 << (e - 194)) &
						((1 << (r.RIGHT - 194)) | (1 << (r.SEMI - 194)) | (1 << (r.SETMINUS - 194)))) !==
						0) ||
				e === r.UNION ||
				e === r.USING
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function m(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			p.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = r.RULE_nonReserved),
			this
		);
	}
	m.prototype = Object.create(p.ParserRuleContext.prototype);
	m.prototype.constructor = m;
	m.prototype.ADD = function () {
		return this.getToken(r.ADD, 0);
	};
	m.prototype.AFTER = function () {
		return this.getToken(r.AFTER, 0);
	};
	m.prototype.ALL = function () {
		return this.getToken(r.ALL, 0);
	};
	m.prototype.ALTER = function () {
		return this.getToken(r.ALTER, 0);
	};
	m.prototype.ANALYZE = function () {
		return this.getToken(r.ANALYZE, 0);
	};
	m.prototype.AND = function () {
		return this.getToken(r.AND, 0);
	};
	m.prototype.ANY = function () {
		return this.getToken(r.ANY, 0);
	};
	m.prototype.ARCHIVE = function () {
		return this.getToken(r.ARCHIVE, 0);
	};
	m.prototype.ARRAY = function () {
		return this.getToken(r.ARRAY, 0);
	};
	m.prototype.AS = function () {
		return this.getToken(r.AS, 0);
	};
	m.prototype.ASC = function () {
		return this.getToken(r.ASC, 0);
	};
	m.prototype.AT = function () {
		return this.getToken(r.AT, 0);
	};
	m.prototype.AUTHORIZATION = function () {
		return this.getToken(r.AUTHORIZATION, 0);
	};
	m.prototype.BETWEEN = function () {
		return this.getToken(r.BETWEEN, 0);
	};
	m.prototype.BOTH = function () {
		return this.getToken(r.BOTH, 0);
	};
	m.prototype.BUCKET = function () {
		return this.getToken(r.BUCKET, 0);
	};
	m.prototype.BUCKETS = function () {
		return this.getToken(r.BUCKETS, 0);
	};
	m.prototype.BY = function () {
		return this.getToken(r.BY, 0);
	};
	m.prototype.CACHE = function () {
		return this.getToken(r.CACHE, 0);
	};
	m.prototype.CASCADE = function () {
		return this.getToken(r.CASCADE, 0);
	};
	m.prototype.CASE = function () {
		return this.getToken(r.CASE, 0);
	};
	m.prototype.CAST = function () {
		return this.getToken(r.CAST, 0);
	};
	m.prototype.CHANGE = function () {
		return this.getToken(r.CHANGE, 0);
	};
	m.prototype.CHECK = function () {
		return this.getToken(r.CHECK, 0);
	};
	m.prototype.CLEAR = function () {
		return this.getToken(r.CLEAR, 0);
	};
	m.prototype.CLUSTER = function () {
		return this.getToken(r.CLUSTER, 0);
	};
	m.prototype.CLUSTERED = function () {
		return this.getToken(r.CLUSTERED, 0);
	};
	m.prototype.CODEGEN = function () {
		return this.getToken(r.CODEGEN, 0);
	};
	m.prototype.COLLATE = function () {
		return this.getToken(r.COLLATE, 0);
	};
	m.prototype.COLLECTION = function () {
		return this.getToken(r.COLLECTION, 0);
	};
	m.prototype.COLUMN = function () {
		return this.getToken(r.COLUMN, 0);
	};
	m.prototype.COLUMNS = function () {
		return this.getToken(r.COLUMNS, 0);
	};
	m.prototype.COMMENT = function () {
		return this.getToken(r.COMMENT, 0);
	};
	m.prototype.COMMIT = function () {
		return this.getToken(r.COMMIT, 0);
	};
	m.prototype.COMPACT = function () {
		return this.getToken(r.COMPACT, 0);
	};
	m.prototype.COMPACTIONS = function () {
		return this.getToken(r.COMPACTIONS, 0);
	};
	m.prototype.COMPUTE = function () {
		return this.getToken(r.COMPUTE, 0);
	};
	m.prototype.CONCATENATE = function () {
		return this.getToken(r.CONCATENATE, 0);
	};
	m.prototype.CONSTRAINT = function () {
		return this.getToken(r.CONSTRAINT, 0);
	};
	m.prototype.COST = function () {
		return this.getToken(r.COST, 0);
	};
	m.prototype.CREATE = function () {
		return this.getToken(r.CREATE, 0);
	};
	m.prototype.CUBE = function () {
		return this.getToken(r.CUBE, 0);
	};
	m.prototype.CURRENT = function () {
		return this.getToken(r.CURRENT, 0);
	};
	m.prototype.CURRENT_DATE = function () {
		return this.getToken(r.CURRENT_DATE, 0);
	};
	m.prototype.CURRENT_TIME = function () {
		return this.getToken(r.CURRENT_TIME, 0);
	};
	m.prototype.CURRENT_TIMESTAMP = function () {
		return this.getToken(r.CURRENT_TIMESTAMP, 0);
	};
	m.prototype.CURRENT_USER = function () {
		return this.getToken(r.CURRENT_USER, 0);
	};
	m.prototype.DATA = function () {
		return this.getToken(r.DATA, 0);
	};
	m.prototype.DATABASE = function () {
		return this.getToken(r.DATABASE, 0);
	};
	m.prototype.DATABASES = function () {
		return this.getToken(r.DATABASES, 0);
	};
	m.prototype.DBPROPERTIES = function () {
		return this.getToken(r.DBPROPERTIES, 0);
	};
	m.prototype.DEFINED = function () {
		return this.getToken(r.DEFINED, 0);
	};
	m.prototype.DELETE = function () {
		return this.getToken(r.DELETE, 0);
	};
	m.prototype.DELIMITED = function () {
		return this.getToken(r.DELIMITED, 0);
	};
	m.prototype.DESC = function () {
		return this.getToken(r.DESC, 0);
	};
	m.prototype.DESCRIBE = function () {
		return this.getToken(r.DESCRIBE, 0);
	};
	m.prototype.DFS = function () {
		return this.getToken(r.DFS, 0);
	};
	m.prototype.DIRECTORIES = function () {
		return this.getToken(r.DIRECTORIES, 0);
	};
	m.prototype.DIRECTORY = function () {
		return this.getToken(r.DIRECTORY, 0);
	};
	m.prototype.DISTINCT = function () {
		return this.getToken(r.DISTINCT, 0);
	};
	m.prototype.DISTRIBUTE = function () {
		return this.getToken(r.DISTRIBUTE, 0);
	};
	m.prototype.DIV = function () {
		return this.getToken(r.DIV, 0);
	};
	m.prototype.DROP = function () {
		return this.getToken(r.DROP, 0);
	};
	m.prototype.ELSE = function () {
		return this.getToken(r.ELSE, 0);
	};
	m.prototype.END = function () {
		return this.getToken(r.END, 0);
	};
	m.prototype.ESCAPE = function () {
		return this.getToken(r.ESCAPE, 0);
	};
	m.prototype.ESCAPED = function () {
		return this.getToken(r.ESCAPED, 0);
	};
	m.prototype.EXCHANGE = function () {
		return this.getToken(r.EXCHANGE, 0);
	};
	m.prototype.EXISTS = function () {
		return this.getToken(r.EXISTS, 0);
	};
	m.prototype.EXPLAIN = function () {
		return this.getToken(r.EXPLAIN, 0);
	};
	m.prototype.EXPORT = function () {
		return this.getToken(r.EXPORT, 0);
	};
	m.prototype.EXTENDED = function () {
		return this.getToken(r.EXTENDED, 0);
	};
	m.prototype.EXTERNAL = function () {
		return this.getToken(r.EXTERNAL, 0);
	};
	m.prototype.EXTRACT = function () {
		return this.getToken(r.EXTRACT, 0);
	};
	m.prototype.FALSE = function () {
		return this.getToken(r.FALSE, 0);
	};
	m.prototype.FETCH = function () {
		return this.getToken(r.FETCH, 0);
	};
	m.prototype.FILTER = function () {
		return this.getToken(r.FILTER, 0);
	};
	m.prototype.FIELDS = function () {
		return this.getToken(r.FIELDS, 0);
	};
	m.prototype.FILEFORMAT = function () {
		return this.getToken(r.FILEFORMAT, 0);
	};
	m.prototype.FIRST = function () {
		return this.getToken(r.FIRST, 0);
	};
	m.prototype.FOLLOWING = function () {
		return this.getToken(r.FOLLOWING, 0);
	};
	m.prototype.FOR = function () {
		return this.getToken(r.FOR, 0);
	};
	m.prototype.FOREIGN = function () {
		return this.getToken(r.FOREIGN, 0);
	};
	m.prototype.FORMAT = function () {
		return this.getToken(r.FORMAT, 0);
	};
	m.prototype.FORMATTED = function () {
		return this.getToken(r.FORMATTED, 0);
	};
	m.prototype.FROM = function () {
		return this.getToken(r.FROM, 0);
	};
	m.prototype.FUNCTION = function () {
		return this.getToken(r.FUNCTION, 0);
	};
	m.prototype.FUNCTIONS = function () {
		return this.getToken(r.FUNCTIONS, 0);
	};
	m.prototype.GLOBAL = function () {
		return this.getToken(r.GLOBAL, 0);
	};
	m.prototype.GRANT = function () {
		return this.getToken(r.GRANT, 0);
	};
	m.prototype.GROUP = function () {
		return this.getToken(r.GROUP, 0);
	};
	m.prototype.GROUPING = function () {
		return this.getToken(r.GROUPING, 0);
	};
	m.prototype.HAVING = function () {
		return this.getToken(r.HAVING, 0);
	};
	m.prototype.IF = function () {
		return this.getToken(r.IF, 0);
	};
	m.prototype.IGNORE = function () {
		return this.getToken(r.IGNORE, 0);
	};
	m.prototype.IMPORT = function () {
		return this.getToken(r.IMPORT, 0);
	};
	m.prototype.IN = function () {
		return this.getToken(r.IN, 0);
	};
	m.prototype.INDEX = function () {
		return this.getToken(r.INDEX, 0);
	};
	m.prototype.INDEXES = function () {
		return this.getToken(r.INDEXES, 0);
	};
	m.prototype.INPATH = function () {
		return this.getToken(r.INPATH, 0);
	};
	m.prototype.INPUTFORMAT = function () {
		return this.getToken(r.INPUTFORMAT, 0);
	};
	m.prototype.INSERT = function () {
		return this.getToken(r.INSERT, 0);
	};
	m.prototype.INTERVAL = function () {
		return this.getToken(r.INTERVAL, 0);
	};
	m.prototype.INTO = function () {
		return this.getToken(r.INTO, 0);
	};
	m.prototype.IS = function () {
		return this.getToken(r.IS, 0);
	};
	m.prototype.ITEMS = function () {
		return this.getToken(r.ITEMS, 0);
	};
	m.prototype.KEYS = function () {
		return this.getToken(r.KEYS, 0);
	};
	m.prototype.LAST = function () {
		return this.getToken(r.LAST, 0);
	};
	m.prototype.LATERAL = function () {
		return this.getToken(r.LATERAL, 0);
	};
	m.prototype.LAZY = function () {
		return this.getToken(r.LAZY, 0);
	};
	m.prototype.LEADING = function () {
		return this.getToken(r.LEADING, 0);
	};
	m.prototype.LIKE = function () {
		return this.getToken(r.LIKE, 0);
	};
	m.prototype.LIMIT = function () {
		return this.getToken(r.LIMIT, 0);
	};
	m.prototype.LINES = function () {
		return this.getToken(r.LINES, 0);
	};
	m.prototype.LIST = function () {
		return this.getToken(r.LIST, 0);
	};
	m.prototype.LOAD = function () {
		return this.getToken(r.LOAD, 0);
	};
	m.prototype.LOCAL = function () {
		return this.getToken(r.LOCAL, 0);
	};
	m.prototype.LOCATION = function () {
		return this.getToken(r.LOCATION, 0);
	};
	m.prototype.LOCK = function () {
		return this.getToken(r.LOCK, 0);
	};
	m.prototype.LOCKS = function () {
		return this.getToken(r.LOCKS, 0);
	};
	m.prototype.LOGICAL = function () {
		return this.getToken(r.LOGICAL, 0);
	};
	m.prototype.MACRO = function () {
		return this.getToken(r.MACRO, 0);
	};
	m.prototype.MAP = function () {
		return this.getToken(r.MAP, 0);
	};
	m.prototype.MATCHED = function () {
		return this.getToken(r.MATCHED, 0);
	};
	m.prototype.MERGE = function () {
		return this.getToken(r.MERGE, 0);
	};
	m.prototype.MSCK = function () {
		return this.getToken(r.MSCK, 0);
	};
	m.prototype.NAMESPACE = function () {
		return this.getToken(r.NAMESPACE, 0);
	};
	m.prototype.NAMESPACES = function () {
		return this.getToken(r.NAMESPACES, 0);
	};
	m.prototype.NO = function () {
		return this.getToken(r.NO, 0);
	};
	m.prototype.NOT = function () {
		return this.getToken(r.NOT, 0);
	};
	m.prototype.NULL = function () {
		return this.getToken(r.NULL, 0);
	};
	m.prototype.NULLS = function () {
		return this.getToken(r.NULLS, 0);
	};
	m.prototype.OF = function () {
		return this.getToken(r.OF, 0);
	};
	m.prototype.ONLY = function () {
		return this.getToken(r.ONLY, 0);
	};
	m.prototype.OPTION = function () {
		return this.getToken(r.OPTION, 0);
	};
	m.prototype.OPTIONS = function () {
		return this.getToken(r.OPTIONS, 0);
	};
	m.prototype.OR = function () {
		return this.getToken(r.OR, 0);
	};
	m.prototype.ORDER = function () {
		return this.getToken(r.ORDER, 0);
	};
	m.prototype.OUT = function () {
		return this.getToken(r.OUT, 0);
	};
	m.prototype.OUTER = function () {
		return this.getToken(r.OUTER, 0);
	};
	m.prototype.OUTPUTFORMAT = function () {
		return this.getToken(r.OUTPUTFORMAT, 0);
	};
	m.prototype.OVER = function () {
		return this.getToken(r.OVER, 0);
	};
	m.prototype.OVERLAPS = function () {
		return this.getToken(r.OVERLAPS, 0);
	};
	m.prototype.OVERLAY = function () {
		return this.getToken(r.OVERLAY, 0);
	};
	m.prototype.OVERWRITE = function () {
		return this.getToken(r.OVERWRITE, 0);
	};
	m.prototype.PARTITION = function () {
		return this.getToken(r.PARTITION, 0);
	};
	m.prototype.PARTITIONED = function () {
		return this.getToken(r.PARTITIONED, 0);
	};
	m.prototype.PARTITIONS = function () {
		return this.getToken(r.PARTITIONS, 0);
	};
	m.prototype.PERCENTLIT = function () {
		return this.getToken(r.PERCENTLIT, 0);
	};
	m.prototype.PIVOT = function () {
		return this.getToken(r.PIVOT, 0);
	};
	m.prototype.PLACING = function () {
		return this.getToken(r.PLACING, 0);
	};
	m.prototype.POSITION = function () {
		return this.getToken(r.POSITION, 0);
	};
	m.prototype.PRECEDING = function () {
		return this.getToken(r.PRECEDING, 0);
	};
	m.prototype.PRIMARY = function () {
		return this.getToken(r.PRIMARY, 0);
	};
	m.prototype.PRINCIPALS = function () {
		return this.getToken(r.PRINCIPALS, 0);
	};
	m.prototype.PROPERTIES = function () {
		return this.getToken(r.PROPERTIES, 0);
	};
	m.prototype.PURGE = function () {
		return this.getToken(r.PURGE, 0);
	};
	m.prototype.QUERY = function () {
		return this.getToken(r.QUERY, 0);
	};
	m.prototype.RANGE = function () {
		return this.getToken(r.RANGE, 0);
	};
	m.prototype.RECORDREADER = function () {
		return this.getToken(r.RECORDREADER, 0);
	};
	m.prototype.RECORDWRITER = function () {
		return this.getToken(r.RECORDWRITER, 0);
	};
	m.prototype.RECOVER = function () {
		return this.getToken(r.RECOVER, 0);
	};
	m.prototype.REDUCE = function () {
		return this.getToken(r.REDUCE, 0);
	};
	m.prototype.REFERENCES = function () {
		return this.getToken(r.REFERENCES, 0);
	};
	m.prototype.REFRESH = function () {
		return this.getToken(r.REFRESH, 0);
	};
	m.prototype.RENAME = function () {
		return this.getToken(r.RENAME, 0);
	};
	m.prototype.REPAIR = function () {
		return this.getToken(r.REPAIR, 0);
	};
	m.prototype.REPLACE = function () {
		return this.getToken(r.REPLACE, 0);
	};
	m.prototype.RESET = function () {
		return this.getToken(r.RESET, 0);
	};
	m.prototype.RESPECT = function () {
		return this.getToken(r.RESPECT, 0);
	};
	m.prototype.RESTRICT = function () {
		return this.getToken(r.RESTRICT, 0);
	};
	m.prototype.REVOKE = function () {
		return this.getToken(r.REVOKE, 0);
	};
	m.prototype.RLIKE = function () {
		return this.getToken(r.RLIKE, 0);
	};
	m.prototype.ROLE = function () {
		return this.getToken(r.ROLE, 0);
	};
	m.prototype.ROLES = function () {
		return this.getToken(r.ROLES, 0);
	};
	m.prototype.ROLLBACK = function () {
		return this.getToken(r.ROLLBACK, 0);
	};
	m.prototype.ROLLUP = function () {
		return this.getToken(r.ROLLUP, 0);
	};
	m.prototype.ROW = function () {
		return this.getToken(r.ROW, 0);
	};
	m.prototype.ROWS = function () {
		return this.getToken(r.ROWS, 0);
	};
	m.prototype.SCHEMA = function () {
		return this.getToken(r.SCHEMA, 0);
	};
	m.prototype.SELECT = function () {
		return this.getToken(r.SELECT, 0);
	};
	m.prototype.SEPARATED = function () {
		return this.getToken(r.SEPARATED, 0);
	};
	m.prototype.SERDE = function () {
		return this.getToken(r.SERDE, 0);
	};
	m.prototype.SERDEPROPERTIES = function () {
		return this.getToken(r.SERDEPROPERTIES, 0);
	};
	m.prototype.SESSION_USER = function () {
		return this.getToken(r.SESSION_USER, 0);
	};
	m.prototype.SET = function () {
		return this.getToken(r.SET, 0);
	};
	m.prototype.SETS = function () {
		return this.getToken(r.SETS, 0);
	};
	m.prototype.SHOW = function () {
		return this.getToken(r.SHOW, 0);
	};
	m.prototype.SKEWED = function () {
		return this.getToken(r.SKEWED, 0);
	};
	m.prototype.SOME = function () {
		return this.getToken(r.SOME, 0);
	};
	m.prototype.SORT = function () {
		return this.getToken(r.SORT, 0);
	};
	m.prototype.SORTED = function () {
		return this.getToken(r.SORTED, 0);
	};
	m.prototype.START = function () {
		return this.getToken(r.START, 0);
	};
	m.prototype.STATISTICS = function () {
		return this.getToken(r.STATISTICS, 0);
	};
	m.prototype.STORED = function () {
		return this.getToken(r.STORED, 0);
	};
	m.prototype.STRATIFY = function () {
		return this.getToken(r.STRATIFY, 0);
	};
	m.prototype.STRUCT = function () {
		return this.getToken(r.STRUCT, 0);
	};
	m.prototype.SUBSTR = function () {
		return this.getToken(r.SUBSTR, 0);
	};
	m.prototype.SUBSTRING = function () {
		return this.getToken(r.SUBSTRING, 0);
	};
	m.prototype.SYNC = function () {
		return this.getToken(r.SYNC, 0);
	};
	m.prototype.TABLE = function () {
		return this.getToken(r.TABLE, 0);
	};
	m.prototype.TABLES = function () {
		return this.getToken(r.TABLES, 0);
	};
	m.prototype.TABLESAMPLE = function () {
		return this.getToken(r.TABLESAMPLE, 0);
	};
	m.prototype.TBLPROPERTIES = function () {
		return this.getToken(r.TBLPROPERTIES, 0);
	};
	m.prototype.TEMPORARY = function () {
		return this.getToken(r.TEMPORARY, 0);
	};
	m.prototype.TERMINATED = function () {
		return this.getToken(r.TERMINATED, 0);
	};
	m.prototype.THEN = function () {
		return this.getToken(r.THEN, 0);
	};
	m.prototype.TIME = function () {
		return this.getToken(r.TIME, 0);
	};
	m.prototype.TO = function () {
		return this.getToken(r.TO, 0);
	};
	m.prototype.TOUCH = function () {
		return this.getToken(r.TOUCH, 0);
	};
	m.prototype.TRAILING = function () {
		return this.getToken(r.TRAILING, 0);
	};
	m.prototype.TRANSACTION = function () {
		return this.getToken(r.TRANSACTION, 0);
	};
	m.prototype.TRANSACTIONS = function () {
		return this.getToken(r.TRANSACTIONS, 0);
	};
	m.prototype.TRANSFORM = function () {
		return this.getToken(r.TRANSFORM, 0);
	};
	m.prototype.TRIM = function () {
		return this.getToken(r.TRIM, 0);
	};
	m.prototype.TRUE = function () {
		return this.getToken(r.TRUE, 0);
	};
	m.prototype.TRUNCATE = function () {
		return this.getToken(r.TRUNCATE, 0);
	};
	m.prototype.TRY_CAST = function () {
		return this.getToken(r.TRY_CAST, 0);
	};
	m.prototype.TYPE = function () {
		return this.getToken(r.TYPE, 0);
	};
	m.prototype.UNARCHIVE = function () {
		return this.getToken(r.UNARCHIVE, 0);
	};
	m.prototype.UNBOUNDED = function () {
		return this.getToken(r.UNBOUNDED, 0);
	};
	m.prototype.UNCACHE = function () {
		return this.getToken(r.UNCACHE, 0);
	};
	m.prototype.UNIQUE = function () {
		return this.getToken(r.UNIQUE, 0);
	};
	m.prototype.UNKNOWN = function () {
		return this.getToken(r.UNKNOWN, 0);
	};
	m.prototype.UNLOCK = function () {
		return this.getToken(r.UNLOCK, 0);
	};
	m.prototype.UNSET = function () {
		return this.getToken(r.UNSET, 0);
	};
	m.prototype.UPDATE = function () {
		return this.getToken(r.UPDATE, 0);
	};
	m.prototype.USE = function () {
		return this.getToken(r.USE, 0);
	};
	m.prototype.USER = function () {
		return this.getToken(r.USER, 0);
	};
	m.prototype.VALUES = function () {
		return this.getToken(r.VALUES, 0);
	};
	m.prototype.VIEW = function () {
		return this.getToken(r.VIEW, 0);
	};
	m.prototype.VIEWS = function () {
		return this.getToken(r.VIEWS, 0);
	};
	m.prototype.WHEN = function () {
		return this.getToken(r.WHEN, 0);
	};
	m.prototype.WHERE = function () {
		return this.getToken(r.WHERE, 0);
	};
	m.prototype.WINDOW = function () {
		return this.getToken(r.WINDOW, 0);
	};
	m.prototype.WITH = function () {
		return this.getToken(r.WITH, 0);
	};
	m.prototype.ZONE = function () {
		return this.getToken(r.ZONE, 0);
	};
	m.prototype.accept = function (u) {
		return u instanceof R ? u.visitNonReserved(this) : u.visitChildren(this);
	};
	r.NonReservedContext = m;
	r.prototype.nonReserved = function () {
		var u = new m(this, this._ctx, this.state);
		this.enterRule(u, 280, r.RULE_nonReserved);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3071),
				(e = this._input.LA(1)),
				(((e - 12) & -32) == 0 &&
					((1 << (e - 12)) &
						((1 << (r.ADD - 12)) |
							(1 << (r.AFTER - 12)) |
							(1 << (r.ALL - 12)) |
							(1 << (r.ALTER - 12)) |
							(1 << (r.ANALYZE - 12)) |
							(1 << (r.AND - 12)) |
							(1 << (r.ANY - 12)) |
							(1 << (r.ARCHIVE - 12)) |
							(1 << (r.ARRAY - 12)) |
							(1 << (r.AS - 12)) |
							(1 << (r.ASC - 12)) |
							(1 << (r.AT - 12)) |
							(1 << (r.AUTHORIZATION - 12)) |
							(1 << (r.BETWEEN - 12)) |
							(1 << (r.BOTH - 12)) |
							(1 << (r.BUCKET - 12)) |
							(1 << (r.BUCKETS - 12)) |
							(1 << (r.BY - 12)) |
							(1 << (r.CACHE - 12)) |
							(1 << (r.CASCADE - 12)) |
							(1 << (r.CASE - 12)) |
							(1 << (r.CAST - 12)) |
							(1 << (r.CHANGE - 12)) |
							(1 << (r.CHECK - 12)) |
							(1 << (r.CLEAR - 12)) |
							(1 << (r.CLUSTER - 12)) |
							(1 << (r.CLUSTERED - 12)) |
							(1 << (r.CODEGEN - 12)) |
							(1 << (r.COLLATE - 12)) |
							(1 << (r.COLLECTION - 12)) |
							(1 << (r.COLUMN - 12)))) !==
						0) ||
				(((e - 44) & -32) == 0 &&
					((1 << (e - 44)) &
						((1 << (r.COLUMNS - 44)) |
							(1 << (r.COMMENT - 44)) |
							(1 << (r.COMMIT - 44)) |
							(1 << (r.COMPACT - 44)) |
							(1 << (r.COMPACTIONS - 44)) |
							(1 << (r.COMPUTE - 44)) |
							(1 << (r.CONCATENATE - 44)) |
							(1 << (r.CONSTRAINT - 44)) |
							(1 << (r.COST - 44)) |
							(1 << (r.CREATE - 44)) |
							(1 << (r.CUBE - 44)) |
							(1 << (r.CURRENT - 44)) |
							(1 << (r.CURRENT_DATE - 44)) |
							(1 << (r.CURRENT_TIME - 44)) |
							(1 << (r.CURRENT_TIMESTAMP - 44)) |
							(1 << (r.CURRENT_USER - 44)) |
							(1 << (r.DATA - 44)) |
							(1 << (r.DATABASE - 44)) |
							(1 << (r.DATABASES - 44)) |
							(1 << (r.DBPROPERTIES - 44)) |
							(1 << (r.DEFINED - 44)) |
							(1 << (r.DELETE - 44)) |
							(1 << (r.DELIMITED - 44)) |
							(1 << (r.DESC - 44)) |
							(1 << (r.DESCRIBE - 44)) |
							(1 << (r.DFS - 44)) |
							(1 << (r.DIRECTORIES - 44)) |
							(1 << (r.DIRECTORY - 44)) |
							(1 << (r.DISTINCT - 44)) |
							(1 << (r.DISTRIBUTE - 44)) |
							(1 << (r.DIV - 44)))) !==
						0) ||
				(((e - 76) & -32) == 0 &&
					((1 << (e - 76)) &
						((1 << (r.DROP - 76)) |
							(1 << (r.ELSE - 76)) |
							(1 << (r.END - 76)) |
							(1 << (r.ESCAPE - 76)) |
							(1 << (r.ESCAPED - 76)) |
							(1 << (r.EXCHANGE - 76)) |
							(1 << (r.EXISTS - 76)) |
							(1 << (r.EXPLAIN - 76)) |
							(1 << (r.EXPORT - 76)) |
							(1 << (r.EXTENDED - 76)) |
							(1 << (r.EXTERNAL - 76)) |
							(1 << (r.EXTRACT - 76)) |
							(1 << (r.FALSE - 76)) |
							(1 << (r.FETCH - 76)) |
							(1 << (r.FIELDS - 76)) |
							(1 << (r.FILTER - 76)) |
							(1 << (r.FILEFORMAT - 76)) |
							(1 << (r.FIRST - 76)) |
							(1 << (r.FOLLOWING - 76)) |
							(1 << (r.FOR - 76)) |
							(1 << (r.FOREIGN - 76)) |
							(1 << (r.FORMAT - 76)) |
							(1 << (r.FORMATTED - 76)) |
							(1 << (r.FROM - 76)) |
							(1 << (r.FUNCTION - 76)) |
							(1 << (r.FUNCTIONS - 76)) |
							(1 << (r.GLOBAL - 76)) |
							(1 << (r.GRANT - 76)) |
							(1 << (r.GROUP - 76)) |
							(1 << (r.GROUPING - 76)))) !==
						0) ||
				(((e - 108) & -32) == 0 &&
					((1 << (e - 108)) &
						((1 << (r.HAVING - 108)) |
							(1 << (r.IF - 108)) |
							(1 << (r.IGNORE - 108)) |
							(1 << (r.IMPORT - 108)) |
							(1 << (r.IN - 108)) |
							(1 << (r.INDEX - 108)) |
							(1 << (r.INDEXES - 108)) |
							(1 << (r.INPATH - 108)) |
							(1 << (r.INPUTFORMAT - 108)) |
							(1 << (r.INSERT - 108)) |
							(1 << (r.INTERVAL - 108)) |
							(1 << (r.INTO - 108)) |
							(1 << (r.IS - 108)) |
							(1 << (r.ITEMS - 108)) |
							(1 << (r.KEYS - 108)) |
							(1 << (r.LAST - 108)) |
							(1 << (r.LATERAL - 108)) |
							(1 << (r.LAZY - 108)) |
							(1 << (r.LEADING - 108)) |
							(1 << (r.LIKE - 108)) |
							(1 << (r.LIMIT - 108)) |
							(1 << (r.LINES - 108)) |
							(1 << (r.LIST - 108)) |
							(1 << (r.LOAD - 108)) |
							(1 << (r.LOCAL - 108)) |
							(1 << (r.LOCATION - 108)) |
							(1 << (r.LOCK - 108)) |
							(1 << (r.LOCKS - 108)))) !==
						0) ||
				(((e - 140) & -32) == 0 &&
					((1 << (e - 140)) &
						((1 << (r.LOGICAL - 140)) |
							(1 << (r.MACRO - 140)) |
							(1 << (r.MAP - 140)) |
							(1 << (r.MATCHED - 140)) |
							(1 << (r.MERGE - 140)) |
							(1 << (r.MSCK - 140)) |
							(1 << (r.NAMESPACE - 140)) |
							(1 << (r.NAMESPACES - 140)) |
							(1 << (r.NO - 140)) |
							(1 << (r.NOT - 140)) |
							(1 << (r.NULL - 140)) |
							(1 << (r.NULLS - 140)) |
							(1 << (r.OF - 140)) |
							(1 << (r.ONLY - 140)) |
							(1 << (r.OPTION - 140)) |
							(1 << (r.OPTIONS - 140)) |
							(1 << (r.OR - 140)) |
							(1 << (r.ORDER - 140)) |
							(1 << (r.OUT - 140)) |
							(1 << (r.OUTER - 140)) |
							(1 << (r.OUTPUTFORMAT - 140)) |
							(1 << (r.OVER - 140)) |
							(1 << (r.OVERLAPS - 140)) |
							(1 << (r.OVERLAY - 140)) |
							(1 << (r.OVERWRITE - 140)) |
							(1 << (r.PARTITION - 140)) |
							(1 << (r.PARTITIONED - 140)) |
							(1 << (r.PARTITIONS - 140)) |
							(1 << (r.PERCENTLIT - 140)) |
							(1 << (r.PIVOT - 140)))) !==
						0) ||
				(((e - 172) & -32) == 0 &&
					((1 << (e - 172)) &
						((1 << (r.PLACING - 172)) |
							(1 << (r.POSITION - 172)) |
							(1 << (r.PRECEDING - 172)) |
							(1 << (r.PRIMARY - 172)) |
							(1 << (r.PRINCIPALS - 172)) |
							(1 << (r.PROPERTIES - 172)) |
							(1 << (r.PURGE - 172)) |
							(1 << (r.QUERY - 172)) |
							(1 << (r.RANGE - 172)) |
							(1 << (r.RECORDREADER - 172)) |
							(1 << (r.RECORDWRITER - 172)) |
							(1 << (r.RECOVER - 172)) |
							(1 << (r.REDUCE - 172)) |
							(1 << (r.REFERENCES - 172)) |
							(1 << (r.REFRESH - 172)) |
							(1 << (r.RENAME - 172)) |
							(1 << (r.REPAIR - 172)) |
							(1 << (r.REPLACE - 172)) |
							(1 << (r.RESET - 172)) |
							(1 << (r.RESPECT - 172)) |
							(1 << (r.RESTRICT - 172)) |
							(1 << (r.REVOKE - 172)) |
							(1 << (r.RLIKE - 172)) |
							(1 << (r.ROLE - 172)) |
							(1 << (r.ROLES - 172)) |
							(1 << (r.ROLLBACK - 172)) |
							(1 << (r.ROLLUP - 172)) |
							(1 << (r.ROW - 172)) |
							(1 << (r.ROWS - 172)) |
							(1 << (r.SCHEMA - 172)) |
							(1 << (r.SELECT - 172)))) !==
						0) ||
				(((e - 205) & -32) == 0 &&
					((1 << (e - 205)) &
						((1 << (r.SEPARATED - 205)) |
							(1 << (r.SERDE - 205)) |
							(1 << (r.SERDEPROPERTIES - 205)) |
							(1 << (r.SESSION_USER - 205)) |
							(1 << (r.SET - 205)) |
							(1 << (r.SETS - 205)) |
							(1 << (r.SHOW - 205)) |
							(1 << (r.SKEWED - 205)) |
							(1 << (r.SOME - 205)) |
							(1 << (r.SORT - 205)) |
							(1 << (r.SORTED - 205)) |
							(1 << (r.START - 205)) |
							(1 << (r.STATISTICS - 205)) |
							(1 << (r.STORED - 205)) |
							(1 << (r.STRATIFY - 205)) |
							(1 << (r.STRUCT - 205)) |
							(1 << (r.SUBSTR - 205)) |
							(1 << (r.SUBSTRING - 205)) |
							(1 << (r.SYNC - 205)) |
							(1 << (r.TABLE - 205)) |
							(1 << (r.TABLES - 205)) |
							(1 << (r.TABLESAMPLE - 205)) |
							(1 << (r.TBLPROPERTIES - 205)) |
							(1 << (r.TEMPORARY - 205)) |
							(1 << (r.TERMINATED - 205)) |
							(1 << (r.THEN - 205)) |
							(1 << (r.TIME - 205)) |
							(1 << (r.TO - 205)) |
							(1 << (r.TOUCH - 205)) |
							(1 << (r.TRAILING - 205)) |
							(1 << (r.TRANSACTION - 205)))) !==
						0) ||
				(((e - 237) & -32) == 0 &&
					((1 << (e - 237)) &
						((1 << (r.TRANSACTIONS - 237)) |
							(1 << (r.TRANSFORM - 237)) |
							(1 << (r.TRIM - 237)) |
							(1 << (r.TRUE - 237)) |
							(1 << (r.TRUNCATE - 237)) |
							(1 << (r.TRY_CAST - 237)) |
							(1 << (r.TYPE - 237)) |
							(1 << (r.UNARCHIVE - 237)) |
							(1 << (r.UNBOUNDED - 237)) |
							(1 << (r.UNCACHE - 237)) |
							(1 << (r.UNIQUE - 237)) |
							(1 << (r.UNKNOWN - 237)) |
							(1 << (r.UNLOCK - 237)) |
							(1 << (r.UNSET - 237)) |
							(1 << (r.UPDATE - 237)) |
							(1 << (r.USE - 237)) |
							(1 << (r.USER - 237)) |
							(1 << (r.VALUES - 237)) |
							(1 << (r.VIEW - 237)) |
							(1 << (r.VIEWS - 237)) |
							(1 << (r.WHEN - 237)) |
							(1 << (r.WHERE - 237)) |
							(1 << (r.WINDOW - 237)) |
							(1 << (r.WITH - 237)) |
							(1 << (r.ZONE - 237)))) !==
						0)
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof p.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	r.prototype.sempred = function (u, e, i) {
		switch (e) {
			case 42:
				return this.queryTerm_sempred(u, i);
			case 99:
				return this.booleanExpression_sempred(u, i);
			case 101:
				return this.valueExpression_sempred(u, i);
			case 102:
				return this.primaryExpression_sempred(u, i);
			case 133:
				return this.identifier_sempred(u, i);
			case 134:
				return this.strictIdentifier_sempred(u, i);
			case 136:
				return this.number_sempred(u, i);
			default:
				throw 'No predicate with index:' + e;
		}
	};
	r.prototype.queryTerm_sempred = function (u, e) {
		switch (e) {
			case 0:
				return this.precpred(this._ctx, 3);
			case 1:
				return legacy_setops_precedence_enabled;
			case 2:
				return this.precpred(this._ctx, 2);
			case 3:
				return !legacy_setops_precedence_enabled;
			case 4:
				return this.precpred(this._ctx, 1);
			case 5:
				return !legacy_setops_precedence_enabled;
			default:
				throw 'No predicate with index:' + e;
		}
	};
	r.prototype.booleanExpression_sempred = function (u, e) {
		switch (e) {
			case 6:
				return this.precpred(this._ctx, 2);
			case 7:
				return this.precpred(this._ctx, 1);
			default:
				throw 'No predicate with index:' + e;
		}
	};
	r.prototype.valueExpression_sempred = function (u, e) {
		switch (e) {
			case 8:
				return this.precpred(this._ctx, 6);
			case 9:
				return this.precpred(this._ctx, 5);
			case 10:
				return this.precpred(this._ctx, 4);
			case 11:
				return this.precpred(this._ctx, 3);
			case 12:
				return this.precpred(this._ctx, 2);
			case 13:
				return this.precpred(this._ctx, 1);
			default:
				throw 'No predicate with index:' + e;
		}
	};
	r.prototype.primaryExpression_sempred = function (u, e) {
		switch (e) {
			case 14:
				return this.precpred(this._ctx, 8);
			case 15:
				return this.precpred(this._ctx, 6);
			default:
				throw 'No predicate with index:' + e;
		}
	};
	r.prototype.identifier_sempred = function (u, e) {
		switch (e) {
			case 16:
				return !SQL_standard_keyword_behavior;
			default:
				throw 'No predicate with index:' + e;
		}
	};
	r.prototype.strictIdentifier_sempred = function (u, e) {
		switch (e) {
			case 17:
				return SQL_standard_keyword_behavior;
			case 18:
				return !SQL_standard_keyword_behavior;
			default:
				throw 'No predicate with index:' + e;
		}
	};
	r.prototype.number_sempred = function (u, e) {
		switch (e) {
			case 19:
				return !legacy_exponent_literal_as_decimal_enabled;
			case 20:
				return !legacy_exponent_literal_as_decimal_enabled;
			case 21:
				return legacy_exponent_literal_as_decimal_enabled;
			default:
				throw 'No predicate with index:' + e;
		}
	};
	G7.SqlBaseParser = r;
});
var e5 = Z((EO, X7) => {
	var { SqlBaseVisitor: w9 } = zf(),
		{ dependencies: M9 } = ca(),
		t5 = class extends w9 {
			visitSingleStatement(e) {
				return this.visit(e.statement());
			}
			visitCreateTable(e) {
				let i = this.visit(e.createTableHeader()),
					n = this.visitIfExists(e, 'colTypeList'),
					a = this.visit(e.createTableClauses()),
					o = this.visitIfExists(e, 'query'),
					c = this.visitIfExists(e, 'tableProvider'),
					h = a.createFileFormat?.serDeLibrary;
				return {
					isExternal: i.isExternal,
					isTemporary: i.isTemporary,
					tableName: i.tableName,
					colList: n,
					using: c,
					tableProvider: h,
					bucketsNum: a.bucketSpec?.bucketsNum,
					clusteredBy: a.bucketSpec?.clusteredBy,
					sortedBy: a.bucketSpec?.sortedBy,
					commentSpec: a.commentSpec,
					location: a.locationSpec,
					options: a.options,
					partitionBy: a.partitionBy,
					serDeLibrary: a.rowFormat?.serDeLibrary,
					serDeProperties: a.rowFormat?.serDeProperties,
					rowFormat: a.rowFormat?.format,
					fieldsTerminatedBy: a.rowFormat?.fieldsTerminatedBy,
					escapedBy: a.rowFormat?.escapedBy,
					keysTerminatedBy: a.rowFormat?.keysTerminatedBy,
					linesSeparatedBy: a.rowFormat?.linesSeparatedBy,
					nullDefinedAs: a.rowFormat?.nullDefinedAs,
					collectionItemsTerminatedBy: a.rowFormat?.collectionItemsTerminatedBy,
					skewedBy: a.skewSpec?.skewedBy,
					skewedOn: a.skewSpec?.skewedOn,
					tableProperties: a.tableProperties,
					query: o,
				};
			}
			visitCreateView(e) {
				let i = tt(e.multipartIdentifier());
				return {
					orReplace: this.visitFlagValue(e, 'REPLACE'),
					global: this.visitFlagValue(e, 'GLOBAL'),
					temporary: this.visitFlagValue(e, 'TEMPORARY'),
					ifNotExists: this.visitFlagValue(e, 'EXISTS'),
					identifier: i.split('.')[1],
					dbName: i.split('.')[0] || '',
					colList: this.visitIfExists(e, 'identifierCommentList'),
					comment: this.visitIfExists(e, 'commentSpec', '')[0] || '',
					selectStatement: this.visitIfExists(e, 'query'),
					tblProperties: tt(e.tablePropertyList()[0]),
				};
			}
			visitIdentifierCommentList(e) {
				return this.visit(e.identifierComment());
			}
			visitIdentifierComment(e) {
				return { identifier: tt(e.identifier()), comment: this.visitIfExists(e, 'commentSpec', '') };
			}
			visitQuery(e) {
				return { select: { start: e.start.start, stop: e.stop.stop + 1 } };
			}
			visitCreateTableHeader(e) {
				return {
					isExternal: this.visitFlagValue(e, 'EXTERNAL'),
					isTemporary: this.visitFlagValue(e, 'TEMPORARY'),
					tableName: tt(e.multipartIdentifier()),
				};
			}
			visitColTypeList(e) {
				return this.visit(e.colType());
			}
			visitColType(e) {
				return {
					colName: tt(e.errorCapturingIdentifier()),
					colType: this.visit(e.dataType()),
					isNotNull: this.visitFlagValue(e, 'NULL'),
					colComment: this.visitIfExists(e, 'commentSpec', ''),
				};
			}
			visitMapDataType(e) {
				return { type: 'map', key: this.visit(e.key), val: this.visit(e.val) };
			}
			visitStructDataType(e) {
				return { type: 'struct', params: this.visitIfExists(e, 'complexColTypeList', '') };
			}
			visitArrayDataType(e) {
				return { type: 'array', elements: this.visit(e.dataType()) };
			}
			visitPrimitiveDataType(e) {
				return { type: tt(e.identifier()).toLowerCase(), precision: Gi(e, 'precision'), scale: Gi(e, 'scale') };
			}
			visitComplexColTypeList(e) {
				return this.visit(e.complexColType());
			}
			visitComplexColType(e) {
				return {
					colName: tt(e.identifier()),
					colType: this.visit(e.dataType()),
					isNotNull: this.visitFlagValue(e, 'NULL'),
					colComment: this.visitIfExists(e, 'commentSpec', ''),
				};
			}
			visitCreateTableClauses(e) {
				return {
					options: tt(e.options),
					partitionBy: this.visitIfExists(e, 'partitionFieldList', [])[0],
					skewSpec: this.visitIfExists(e, 'skewSpec', [])[0],
					bucketSpec: this.visitIfExists(e, 'bucketSpec', [])[0],
					rowFormat: this.visitIfExists(e, 'rowFormat', [])[0],
					createFileFormat: this.visitIfExists(e, 'createFileFormat', [])[0],
					locationSpec: this.visitIfExists(e, 'locationSpec', [])[0],
					commentSpec: this.visitIfExists(e, 'commentSpec', [])[0],
					tableProperties: this.visitIfExists(e, 'tablePropertyList', { start: 0, stop: 0 }),
				};
			}
			visitTablePropertyList(e) {
				return { start: e.start.start, stop: e.stop.stop };
			}
			visitLocationSpec(e) {
				return Gi(e, 'location');
			}
			visitCommentSpec(e) {
				return Gi(e, 'comment');
			}
			visitCreateFileFormat(e) {
				return this.visit(e.fileFormat());
			}
			visitTableFileFormat(e) {
				return { inputFormatClassname: Gi(e, 'inFmt'), outputFormatClassname: Gi(e, 'outFmt') };
			}
			visitGenericFileFormat(e) {
				return { serDeLibrary: tt(e.identifier()) };
			}
			visitRowFormatDelimited(e) {
				return {
					format: 'delimited',
					fieldsTerminatedBy: Gi(e, 'fieldsTerminatedBy'),
					escapedBy: Gi(e, 'escapedBy'),
					keysTerminatedBy: Gi(e, 'keysTerminatedBy'),
					linesSeparatedBy: Gi(e, 'linesSeparatedBy'),
					nullDefinedAs: Gi(e, 'nullDefinedAs'),
					collectionItemsTerminatedBy: Gi(e, 'collectionItemsTerminatedBy'),
				};
			}
			visitRowFormatSerde(e) {
				return { format: 'SerDe', serDeLibrary: Gi(e, 'name'), serDeProperties: tt(e.tablePropertyList()) };
			}
			visitSkewSpec(e) {
				return {
					skewedBy: this.visit(e.identifierList()),
					skewedOn: tt(e.constantList()) || tt(e.nestedConstantList()),
				};
			}
			visitBucketSpec(e) {
				return {
					clusteredBy: this.visit(e.identifierList()),
					sortedBy: this.visitIfExists(e, 'orderedIdentifierList'),
					bucketsNum: tt(e.INTEGER_VALUE()),
				};
			}
			visitOrderedIdentifierList(e) {
				return this.visit(e.orderedIdentifier());
			}
			visitOrderedIdentifier(e) {
				let i = this.visitFlagValue(e, 'DESC');
				return { name: tt(e.errorCapturingIdentifier()), ordering: i ? 'DESC' : 'ASC' };
			}
			visitPartitionFieldList(e) {
				return this.visit(e.partitionField());
			}
			visitPartitionTransform(e) {
				return tt(e.transform());
			}
			visitIdentifierList(e) {
				return this.visit(e.identifierSeq());
			}
			visitIdentifierSeq(e) {
				return this.visit(e.errorCapturingIdentifier());
			}
			visitErrorCapturingIdentifier(e) {
				return tt(e.identifier());
			}
			visitTableProvider(e) {
				return tt(e.multipartIdentifier());
			}
			visitIfExists(e, i, n) {
				try {
					return this.visit(e[i]());
				} catch {
					return n;
				}
			}
			visitFlagValue(e, i) {
				try {
					return this.visit(e[i]()), !0;
				} catch {
					return !1;
				}
			}
		},
		Gi = (u, e) => (u[e]?.text ? j7(u[e]?.text) : ''),
		tt = u => (!u || M9.lodash.isEmpty(u) ? '' : j7(u.getText())),
		j7 = u => u.replace(/['`"]+/gm, '');
	X7.exports = t5;
});
var Jd = Z((TO, Q7) => {
	var H9 = (ls(), ra(hs)),
		i5 = class extends H9.error.ErrorListener {
			syntaxError(e, i, n, a, o, c) {
				throw new Error(`line ${n}:${a} ${o}`);
			}
		};
	Q7.exports = i5;
});
var z7 = Z((RO, J7) => {
	var q7 = (u, e) => {
			if (u.type === 'array') return { subtype: `${e}<array>`, properties: [Kd(u)] };
			if (u.type === 'map') return { subtype: `${e}<map>`, properties: [Kd(u)] };
			if (u.type === 'struct') return { subtype: `${e}<struct>`, properties: [Kd(u)] };
			switch (u.type) {
				case 'tinyint':
				case 'smallint':
				case 'int':
				case 'bigint':
				case 'float':
				case 'double':
				case 'decimal':
					return { subtype: `${e}<num>` };
				case 'char':
				case 'varchar':
				case 'string':
					return { subtype: `${e}<txt>` };
				case 'binary':
					return { subtype: `${e}<bin>` };
				case 'boolean':
					return { subtype: `${e}<bool>` };
				case 'date':
					return { subtype: `${e}<date>` };
				case 'timestamp':
					return { subtype: `${e}<ts>` };
				case 'interval':
					return { subtype: `${e}<intrvl>` };
				case 'union':
					return { subtype: `${e}<union>` };
				default:
					return { subtype: `${e}<txt>` };
			}
		},
		Kd = u => {
			if (u.type === 'array') return { type: 'array', ...q7(u.elements, 'array') };
			if (u.type === 'struct')
				return { subtype: 'struct<str>', keyType: 'string', properties: u.params.map(e => Z7(e)) };
			if (u.type === 'map') {
				let e = Kd(u.key);
				return { type: 'document', childType: 'map', keyType: e.type, keySubtype: e.mode, ...q7(u.val, 'map') };
			}
			switch (u.type) {
				case 'tinyint':
				case 'smallint':
				case 'int':
				case 'bigint':
				case 'float':
				case 'double':
				case 'decimal':
					return { type: 'numeric', mode: u.type, precision: u.precision, scale: u.scale };
				case 'char':
				case 'varchar':
				case 'string':
					return { type: 'text', mode: u.type };
				case 'boolean':
					return { type: 'bool' };
				case 'binary':
					return { type: 'binary', mode: u.type };
				case 'timestamp':
					return { type: 'timestamp' };
				case 'date':
					return { type: 'date' };
				case 'interval':
					return { type: 'interval' };
				default:
					return { type: 'text' };
			}
		},
		Z7 = u => ({ ...Kd(u.colType), name: u.colName, comments: u.colComment });
	J7.exports = { reverseTableColumn: Z7 };
});
var i6 = Z((mO, e6) => {
	var F9 = Jf(),
		k9 = u5(),
		V9 = e5(),
		$7 = Jd(),
		B9 = z7(),
		u6 = (ls(), ra(hs)),
		{ dependencies: r5 } = ca(),
		Y9 = async (u, e, i) => {
			let { ddl: n, nullableMap: a, indexes: o } = u,
				c = {};
			try {
				c = G9(n);
			} catch {
				return (
					i.log(
						'info',
						e,
						`Error parsing ddl statement below. Falling back on alternate method. 
${n}
`,
						e.hiddenKeys,
					),
					{}
				);
			}
			let h = j9(o),
				_ = c.properties.map(O => ({ ...O, required: a[O.name] !== 'true' })),
				y = _.reduce((O, S) => ({ ...O, [S.name]: S }), {}),
				W = _.filter(O => O.required).map(O => O.name);
			return (
				(c = { ...c, properties: _, schema: y, requiredColumns: W }),
				r5.lodash.isEmpty(h) ? c : Object.assign(c, { propertiesPane: { ...c.propertiesPane, BloomIndxs: h } })
			);
		},
		G9 = u => {
			let e = new u6.InputStream(u),
				i = new F9.SqlBaseLexer(e);
			i.removeErrorListeners(), i.addErrorListener(new $7());
			let n = new u6.CommonTokenStream(i),
				a = new k9.SqlBaseParser(n);
			a.removeErrorListeners(), a.addErrorListener(new $7());
			let o = a.singleStatement(),
				c = new V9(),
				h = o.accept(c);
			r5.lodash.isEmpty(h.query) || (h.query = u.substring(h.query.select.start, h.query.select.stop));
			let _ = h.colList.map(W => B9.reverseTableColumn(W)),
				y = h.tableProperties[0] || { start: 0, stop: 0 };
			return {
				properties: _,
				propertiesPane: {
					code: h.table,
					temporaryTable: h.isTemporary,
					externalTable: h.isExternal,
					using: t6(h.using),
					storedAsTable: t6(h.tableProvider),
					rowFormat: h.rowFormat,
					fieldsTerminatedBy: h.fieldsTerminatedBy,
					fieldsescapedBy: h.escapedBy,
					collectionItemsTerminatedBy: h.collectionItemsTerminatedBy,
					mapKeysTerminatedBy: h.keysTerminatedBy,
					linesTerminatedBy: h.linesSeparatedBy,
					nullDefinedAs: h.nullDefinedAs,
					serDeLibrary: h.serDeLibrary,
					serDeProperties: h.serDeProperties,
					inputFormatClassname: h.createFileFormat?.inputFormatClassname,
					outputFormatClassname: h.createFileFormat?.outputFormatClassname,
					compositePartitionKey: h.partitionBy?.map(W => ({ name: W })),
					compositeClusteringKey: h.clusteredBy?.map(W => ({ name: W })),
					sortedByKey: h.sortedBy,
					numBuckets: h.bucketsNum,
					skewedby: h.skewedBy?.map(W => ({ name: W })),
					skewedOn: h.skewedOn,
					location: h.location,
					tableProperties: u.slice(y.start + 1, y.stop),
					comments: h.commentSpec,
				},
			};
		},
		t6 = u => {
			switch (u?.toLowerCase()) {
				case 'orc':
					return 'ORC';
				case 'parquet':
					return 'Parquet';
				case 'avro':
					return 'Avro';
				case 'hive':
					return 'Hive';
				case 'rcfile':
					return 'RCfile';
				case 'jsonfile':
					return 'JSONfile';
				case 'csv':
					return 'CSVfile';
				case 'libsvm':
					return 'LIBSVM';
				default:
					return u?.toLowerCase();
			}
		},
		j9 = u => {
			let e = Object.keys(u)
				.filter(i => !r5.lodash.isEmpty(u[i]))
				.reduce((i, n) => {
					let a = u[n],
						o = `fpp = ${a['delta.bloomFilter.fpp']}, numItems = ${a['delta.bloomFilter.numItems']}, maxExpectedFpp = ${a['delta.bloomFilter.maxExpectedFpp']}, enabled = ${a['delta.bloomFilter.enabled']}`;
					return i[o] ? { ...i, [o]: [...i[o], n] } : { ...i, [o]: [n] };
				}, {});
			return Object.keys(e).map(i => ({ options: i, forColumns: e[i] }));
		};
	e6.exports = { getTableData: Y9 };
});
var a6 = Z((yO, s6) => {
	var X9 = Jf(),
		Q9 = u5(),
		q9 = e5(),
		r6 = Jd(),
		n6 = (ls(), ra(hs)),
		{ dependencies: Z9 } = ca(),
		J9 = u => {
			let e = new n6.InputStream(u),
				i = new X9.SqlBaseLexer(e);
			i.removeErrorListeners(), i.addErrorListener(new r6());
			let n = new n6.CommonTokenStream(i),
				a = new Q9.SqlBaseParser(n);
			a.removeErrorListeners(), a.addErrorListener(new r6());
			let o = a.singleStatement(),
				c = new q9(),
				h = o.accept(c);
			return (
				Z9.lodash.isEmpty(h.selectStatement) ||
					(h.selectStatement = u.substring(h.selectStatement.select.start, h.selectStatement.select.stop)),
				{
					code: h.identifier,
					global: h.global,
					viewOrReplace: h.orReplace,
					viewIfNotExist: h.ifNotExists,
					viewTemporary: h.temporary,
					description: h.comment,
					selectStatement: h.selectStatement,
					tableProperties: h.tblProperties,
				}
			);
		};
	s6.exports = { getViewDataFromDDl: J9 };
});
var p6 = Z((CO, c6) => {
	'use strict';
	var { dependencies: n5 } = ca(),
		Ec = mf(),
		{ convertCustomTags: z9, cleanEntityName: $9, isSupportGettingListOfViews: uE } = Yl(),
		tE = (u, e, i, n) => Ec.fetchCreateStatementRequest(`\`${e}\`.\`${i}\``, u, n),
		eE = async (u, e, i) => {
			let n = n5.lodash,
				a = await Ec.fetchClusterDatabasesNames(u);
			if ((i.log('info', a, 'Database list'), n.isEmpty(a))) return;
			let o = n.first(a),
				c = await Ec.fetchClusterTablesNames(o, u);
			i.log('info', c, `Tables list in ${o} database`);
			let h = await o6(o, u, e, i);
			i.log('info', h, `Views list in ${o} database`);
		},
		iE = async (u, e, i) => {
			try {
				let n = await Ec.fetchDatabaseViewsNamesViaPython(u, e);
				return JSON.parse(n).map(o => [u, o]);
			} catch (n) {
				return i.log('warning', n, `Error getting view names from ${u} database via Python.`), [];
			}
		},
		rE = (u, e, i) => {
			try {
				return Ec.fetchDatabaseViewsNames(u, e);
			} catch (n) {
				return (
					i.log(
						'warning',
						n,
						`Error getting view names from ${u} database via SQL. Run fallback via Python.`,
					),
					iE(u, e, i)
				);
			}
		},
		o6 = async (u, e, i, n) => {
			let a = [],
				o = [];
			return uE(i)
				? ((o = (await rE(u, e, n)).map(([h, _]) => _)),
				  (a = o.map(h => `${h} (v)`)),
				  { views: a, viewNames: o })
				: { views: a, viewNames: o };
		},
		nE = async (u, e, i) => {
			let n = await Ec.fetchClusterDatabasesNames(u);
			return (
				i.log('info', n, 'Database names list'),
				await Promise.all(
					n.map(async a => {
						let { views: o, viewNames: c } = await o6(a, u, e, i),
							y = [
								...(await Ec.fetchClusterTablesNames(a, u)).reduce(
									(W, [O, S]) => (c.includes(S) ? W : [...W, S]),
									[],
								),
								...o,
							];
						return { dbName: a, dbCollections: y, isEmpty: n5.lodash.isEmpty(y) };
					}),
				)
			);
		},
		sE = async (u, e) => {
			let i = await Ec.fetchClusterProperties(u);
			return {
				dbVersion: aE(i.spark_version),
				modelName: i.cluster_name,
				author: i.creator_user_name,
				host: u.host,
				port: i.jdbc_port,
				cluster_name: i.cluster_name,
				min_workers: i.num_workers,
				max_workers: i.num_workers,
				spark_version: i.spark_version,
				spark_conf: JSON.stringify(i.spark_conf),
				node_type_id: i.node_type_id,
				driver_node_type_id: i.driver_node_type_id,
				custom_tags: z9(i.custom_tags, e),
				autotermination_minutes: i.autotermination_minutes,
				enable_elastic_disk: i.enable_elastic_disk,
				aws_attributes: i.aws_attributes,
				isRunning: i.state === 'RUNNING',
				state: i.state,
			};
		},
		aE = (u = '') => `Runtime ${u.split('.')[0]}`,
		oE = (u, e, i, n, a) =>
			n5.lodash
				.flatMap(e, c => (i[c] || []).map(h => ({ dbName: c, name: h })))
				.map(async c => {
					let h = $9(n, c.name),
						_ = await tE(u, c.dbName, h, a);
					return { [`${c.dbName}.${h}`]: _ };
				}),
		cE = (u, e, i, n) => Ec.fetchClusterData(u, i, e, n);
	c6.exports = {
		getFirstDatabaseCollectionName: eE,
		getDatabaseCollectionNames: nE,
		getClusterStateInfo: sE,
		getClusterData: cE,
		getEntitiesDDL: oE,
	};
});
var l6 = Z(h6 => {
	var _l = (ls(), ra(hs)),
		pE = [
			'\u608B\uA72A\u8133\uB9ED\u417C\u3BE7\u7786\u5964',
			'\u0185\u0EE7\b		',
			'			\x07	',
			`\x07\b	\b			
	
\v	\v`,
			'\f	\f\r	\r		',
			'				',
			'			',
			'				',
			'\x1B	\x1B		',
			'		 	 !	!"	"#',
			"	#$	$%	%&	&'	'(	()	)",
			'*	*+	+,	,-	-.	./	/0	0',
			'1	12	23	34	45	56	67	7',
			'8	89	9:	:;	;<	<=	=>	>',
			'?	?@	@A	AB	BC	CD	DE	E',
			'F	FG	GH	HI	IJ	JK	KL	L',
			'M	MN	NO	OP	PQ	QR	RS	S',
			'T	TU	UV	VW	WX	XY	YZ	Z',
			'[	[\\	\\]	]^	^_	_`	`a	a',
			'b	bc	cd	de	ef	fg	gh	h',
			'i	ij	jk	kl	lm	mn	no	o',
			'p	pq	qr	rs	st	tu	uv	v',
			'w	wx	xy	yz	z{	{|	|}	}',
			'~	~\x7F	\x7F\x80	\x80\x81	\x81',
			'\x82	\x82\x83	\x83\x84	\x84\x85	',
			'\x85\x86	\x86\x87	\x87\x88	\x88',
			'\x89	\x89\x8A	\x8A\x8B	\x8B\x8C	',
			'\x8C\x8D	\x8D\x8E	\x8E\x8F	\x8F',
			'\x90	\x90\x91	\x91\x92	\x92\x93	',
			'\x93\x94	\x94\x95	\x95\x96	\x96',
			'\x97	\x97\x98	\x98\x99	\x99\x9A	',
			'\x9A\x9B	\x9B\x9C	\x9C\x9D	\x9D',
			'\x9E	\x9E\x9F	\x9F\xA0	\xA0\xA1	',
			'\xA1\xA2	\xA2\xA3	\xA3\xA4	\xA4',
			'\xA5	\xA5\xA6	\xA6\xA7	\xA7\xA8	',
			'\xA8\xA9	\xA9\xAA	\xAA\xAB	\xAB',
			'\xAC	\xAC\xAD	\xAD\xAE	\xAE\xAF	',
			'\xAF\xB0	\xB0\xB1	\xB1\xB2	\xB2',
			'\xB3	\xB3\xB4	\xB4\xB5	\xB5\xB6	',
			'\xB6\xB7	\xB7\xB8	\xB8\xB9	\xB9',
			'\xBA	\xBA\xBB	\xBB\xBC	\xBC\xBD	',
			'\xBD\xBE	\xBE\xBF	\xBF\xC0	\xC0',
			'\xC1	\xC1\xC2	\xC2\xC3	\xC3\xC4	',
			'\xC4\xC5	\xC5\xC6	\xC6\xC7	\xC7',
			'\xC8	\xC8\xC9	\xC9\xCA	\xCA\xCB	',
			'\xCB\xCC	\xCC\xCD	\xCD\xCE	\xCE',
			'\xCF	\xCF\xD0	\xD0\xD1	\xD1\xD2	',
			'\xD2\xD3	\xD3\xD4	\xD4\xD5	\xD5',
			'\xD6	\xD6\xD7	\xD7\xD8	\xD8\xD9	',
			'\xD9\xDA	\xDA\xDB	\xDB\xDC	\xDC',
			'\xDD	\xDD\xDE	\xDE\xDF	\xDF\xE0	',
			'\xE0\xE1	\xE1\xE2	\xE2\xE3	\xE3',
			'\xE4	\xE4\xE5	\xE5\xE6	\xE6\xE7	',
			'\xE7\xE8	\xE8\xE9	\xE9\xEA	\xEA',
			'\xEB	\xEB\xEC	\xEC\xED	\xED\xEE	',
			'\xEE\xEF	\xEF\xF0	\xF0\xF1	\xF1',
			'\xF2	\xF2\xF3	\xF3\xF4	\xF4\xF5	',
			'\xF5\xF6	\xF6\xF7	\xF7\xF8	\xF8',
			'\xF9	\xF9\xFA	\xFA\xFB	\xFB\xFC	',
			'\xFC\xFD	\xFD\xFE	\xFE\xFF	\xFF',
			'\u0100	\u0100\u0101	\u0101\u0102	\u0102\u0103	',
			'\u0103\u0104	\u0104\u0105	\u0105\u0106	\u0106',
			'\u0107	\u0107\u0108	\u0108\u0109	\u0109\u010A	',
			'\u010A\u010B	\u010B\u010C	\u010C\u010D	\u010D',
			'\u010E	\u010E\u010F	\u010F\u0110	\u0110\u0111	',
			'\u0111\u0112	\u0112\u0113	\u0113\u0114	\u0114',
			'\u0115	\u0115\u0116	\u0116\u0117	\u0117\u0118	',
			'\u0118\u0119	\u0119\u011A	\u011A\u011B	\u011B',
			'\u011C	\u011C\u011D	\u011D\u011E	\u011E\u011F	',
			'\u011F\u0120	\u0120\u0121	\u0121\u0122	\u0122',
			'\u0123	\u0123\u0124	\u0124\u0125	\u0125\u0126	',
			'\u0126\u0127	\u0127\u0128	\u0128\u0129	\u0129',
			'\u012A	\u012A\u012B	\u012B\u012C	\u012C\u012D	',
			'\u012D\u012E	\u012E\u012F	\u012F\u0130	\u0130',
			'\u0131	\u0131\u0132	\u0132\u0133	\u0133\u0134	',
			'\u0134\u0135	\u0135\u0136	\u0136\u0137	\u0137',
			'\u0138	\u0138\u0139	\u0139\u013A	\u013A\u013B	',
			'\u013B\u013C	\u013C\u013D	\u013D\u013E	\u013E',
			'\u013F	\u013F\u0140	\u0140\u0141	\u0141\u0142	',
			'\u0142\u0143	\u0143\u0144	\u0144\u0145	\u0145',
			'\u0146	\u0146\u0147	\u0147\u0148	\u0148\u0149	',
			'\u0149\u014A	\u014A\u014B	\u014B\u014C	\u014C',
			'\u014D	\u014D\u014E	\u014E\u014F	\u014F\u0150	',
			'\u0150\u0151	\u0151\u0152	\u0152\u0153	\u0153',
			'\u0154	\u0154\u0155	\u0155\u0156	\u0156\u0157	',
			'\u0157\u0158	\u0158\u0159	\u0159\u015A	\u015A',
			'\u015B	\u015B\u015C	\u015C\u015D	\u015D\u015E	',
			'\u015E\u015F	\u015F\u0160	\u0160\u0161	\u0161',
			'\u0162	\u0162\u0163	\u0163\u0164	\u0164\u0165	',
			'\u0165\u0166	\u0166\u0167	\u0167\u0168	\u0168',
			'\u0169	\u0169\u016A	\u016A\u016B	\u016B\u016C	',
			'\u016C\u016D	\u016D\u016E	\u016E\u016F	\u016F',
			'\u0170	\u0170\u0171	\u0171\u0172	\u0172\u0173	',
			'\u0173\u0174	\u0174\u0175	\u0175\u0176	\u0176',
			'\u0177	\u0177\u0178	\u0178\u0179	\u0179\u017A	',
			'\u017A\u017B	\u017B\u017C	\u017C\u017D	\u017D',
			'\u017E	\u017E\u017F	\u017F\u0180	\u0180\u0181	',
			'\u0181\u0182	\u0182\u0183	\u0183\u0184	\u0184',
			'\u0185	\u0185\u0186	\u0186\u0187	\u0187\u0188	',
			'\u0188\u0189	\u0189\u018A	\u018A\u018B	\u018B',
			'\u018C	\u018C\u018D	\u018D\u018E	\u018E\u018F	',
			'\u018F\u0190	\u0190\u0191	\u0191\u0192	\u0192',
			'\u0193	\u0193\u0194	\u0194\u0195	\u0195\u0196	',
			'\u0196\u0197	\u0197\u0198	\u0198\u0199	\u0199',
			'\u019A	\u019A\u019B	\u019B\u019C	\u019C\u019D	',
			'\u019D\u019E	\u019E\u019F	\u019F\u01A0	\u01A0',
			'\u01A1	\u01A1\u01A2	\u01A2\u01A3	\u01A3',
			'',
			'',
			'',
			'\x07',
			'\x07\x07\b\b\b\b\b\b\u0368',
			`
\b					


`,
			`
\v\v\v\f\f\f`,
			'\f\f\f\f\r\r\r\r',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			'\x1B\x1B\x1B',
			'\x1B\x1B\x1B\x1B\x1B\x1B',
			'\x1B',
			'',
			'',
			'',
			'',
			'     !!',
			'!!!!"""""',
			'###$$$$$$',
			'$$$$%%%%%%',
			'%%%%%&&&&&',
			"&'''''''(",
			'((((((()))',
			')))*******',
			'*++++++++,',
			',,,,,,,,,-',
			'----...../',
			'//////0000',
			'0000001111',
			'1122222222',
			'2233333344',
			'4444445555',
			'5555555666',
			'6677777788',
			'8888899999',
			':::::::;;;',
			';;;;<<<<<<',
			'<<<<<<====',
			'=====>>>>>',
			'???????@@@',
			'AAAAABBBBB',
			'BBCCCCCCCC',
			'CDDDDDDEEE',
			'EEEEFFFFFF',
			'FGGGGGGHHH',
			'HHHIIIIIII',
			'IIJJJJJKKK',
			'KKKKLLLMMM',
			'MMMMMNNNNN',
			'NNNOOOOOOO',
			'OPPPPPPPPP',
			'QQQQQQQQQQ',
			`QQQ\u0559
QRRRRRR`,
			'RSSSSSSTTT',
			'TTTTUUUUUU',
			'UUUUVVVVVW',
			'WWWWWWWWXX',
			'XXXXXXXXYY',
			'YYYYYYYYYY',
			'YYYYYZZZZZ',
			'[[[[[\\\\\\\\',
			'\\\\\\\\\\]]]]',
			']]]]]]]]]]',
			`]]]\u05C5
]^^^^^^`,
			'^_____````',
			'````aaaaaa',
			'bbbbbbbccc',
			'cddddddddd',
			'deeeeeeeff',
			'ffffffffff',
			'gggggggggg',
			'hhhhhhhiii',
			'iijjjjjjjj',
			'kkkklllllm',
			'mmmmmmnnnn',
			'nnnnnnoooo',
			'oooppppppp',
			'ppppqqqqqq',
			'qqrrrrrrrr',
			'rrrsssssst',
			'ttttuuuuuu',
			'vvvvvwwwww',
			'wxxxxxxxyy',
			'yyyyyyyyyz',
			'zzzzzzzzzz',
			'z{{{{{{{{{',
			'{{{{||||||',
			'||||||}}}}',
			'}}}}}}}}}~',
			'~~~~~~\x7F\x7F\x7F',
			'\x7F\x7F\x7F\x7F\x7F\x80',
			'\x80\x80\x80\x80\x80\x80',
			'\x80\x80\x81\x81\x81\x81',
			'\x81\x81\x81\x81\x81\x81',
			'\x81\x81\x82\x82\x82\x82',
			'\x82\x82\x82\x83\x83\x83',
			'\x83\x84\x84\x84\x85\x85',
			'\x85\x85\x85\x85\x85\x85',
			'\x86\x86\x86\x86\x86\x87',
			'\x87\x87\x87\x88\x88\x88',
			'\x88\x88\x88\x88\x88\x89',
			'\x89\x89\x89\x89\x89\x8A',
			'\x8A\x8A\x8A\x8A\x8A\x8A',
			'\x8B\x8B\x8B\x8B\x8B\x8B',
			'\x8B\x8B\x8B\x8B\x8C\x8C',
			'\x8C\x8C\x8C\x8C\x8C\x8C',
			'\x8C\x8D\x8D\x8D\x8D\x8D',
			'\x8D\x8E\x8E\x8E\x8E\x8E',
			'\x8F\x8F\x8F\x8F\x90\x90',
			'\x90\x90\x90\x90\x90\x90',
			'\x91\x91\x91\x91\x91\x91',
			'\x91\x91\x91\x92\x92\x92',
			'\x92\x92\x92\x92\x92\x92',
			'\x92\x93\x93\x93\x93\x93',
			'\x93\x93\x93\x93\x93\x93',
			'\x94\x94\x94\x94\x94\x94',
			'\x94\x94\x95\x95\x95\x95',
			'\x95\x95\x96\x96\x96\x96',
			'\x96\x97\x97\x97\x97\x97',
			'\x97\x97\x97\x97\x98\x98',
			'\x98\x98\x98\x98\x98\x98',
			'\x98\x98\x98\x98\x98\x98',
			'\x98\x98\x99\x99\x99\x99',
			'\x99\x99\x99\x99\x99\x99',
			'\x99\x99\x99\x9A\x9A\x9A',
			'\x9A\x9A\x9A\x9B\x9B\x9B',
			'\x9B\x9B\x9B\x9B\x9C\x9C',
			'\x9C\x9C\x9D\x9D\x9D\x9D',
			'\x9D\x9D\x9E\x9E\x9E\x9E',
			'\x9E\x9E\x9E\x9E\x9E\x9E',
			'\x9E\x9E\x9E\x9E\x9F\x9F',
			'\x9F\x9F\x9F\x9F\x9F\x9F',
			'\x9F\x9F\x9F\x9F\x9F\x9F',
			'\xA0\xA0\xA0\xA0\xA0\xA0',
			'\xA0\xA0\xA1\xA1\xA1\xA1',
			'\xA1\xA1\xA1\xA2\xA2\xA2',
			'\xA2\xA2\xA2\xA2\xA2\xA3',
			'\xA3\xA3\xA3\xA3\xA4\xA4',
			'\xA4\xA4\xA4\xA5\xA5\xA5',
			'\xA5\xA5\xA6\xA6\xA6\xA6',
			'\xA6\xA7\xA7\xA7\xA7\xA8',
			'\xA8\xA8\xA8\xA8\xA8\xA8',
			'\xA8\xA9\xA9\xA9\xA9\xA9',
			'\xA9\xA9\xA9\xA9\xA9\xA9',
			'\xA9\xAA\xAA\xAA\xAA\xAA',
			'\xAA\xAA\xAA\xAA\xAA\xAA',
			'\xAA\xAA\xAA\xAB\xAB\xAB',
			'\xAB\xAC\xAC\xAC\xAC\xAC',
			'\xAC\xAC\xAC\xAC\xAC\xAC',
			'\xAC\xAC\xAD\xAD\xAD\xAD',
			'\xAD\xAE\xAE\xAE\xAE\xAE',
			'\xAE\xAE\xAF\xAF\xAF\xAF',
			'\xAF\xB0\xB0\xB0\xB0\xB0',
			'\xB0\xB1\xB1\xB1\xB1\xB1',
			'\xB1\xB2\xB2\xB2\xB2\xB2',
			'\xB2\xB2\xB2\xB2\xB2\xB3',
			'\xB3\xB3\xB3\xB3\xB4\xB4',
			'\xB4\xB4\xB4\xB4\xB5\xB5',
			'\xB5\xB6\xB6\xB6\xB6\xB6',
			'\xB6\xB6\xB6\xB6\xB7\xB7',
			'\xB7\xB7\xB7\xB7\xB7\xB7',
			'\xB7\xB7\xB8\xB8\xB8\xB8',
			'\xB8\xB8\xB8\xB8\xB8\xB8',
			'\xB8\xB8\xB8\xB9\xB9\xB9',
			'\xB9\xB9\xB9\xB9\xBA\xBA',
			'\xBA\xBA\xBA\xBA\xBA\xBA',
			'\xBB\xBB\xBB\xBB\xBB\xBB',
			'\xBC\xBC\xBC\xBC\xBC\xBC',
			'\xBC\xBD\xBD\xBD\xBD\xBE',
			'\xBE\xBE\xBE\xBE\xBF\xBF',
			'\xBF\xBF\xBF\xC0\xC0\xC0',
			'\xC0\xC0\xC0\xC1\xC1\xC1',
			'\xC1\xC1\xC1\xC1\xC2\xC2',
			'\xC2\xC2\xC2\xC2\xC2\xC3',
			'\xC3\xC3\xC3\xC3\xC3\xC3',
			'\xC3\xC3\xC3\xC4\xC4\xC4',
			'\xC4\xC4\xC4\xC4\xC4\xC4',
			'\xC4\xC5\xC5\xC5\xC5\xC5',
			'\xC5\xC5\xC5\xC5\xC6\xC6',
			'\xC6\xC6\xC6\xC6\xC7\xC7',
			'\xC7\xC7\xC7\xC8\xC8\xC8',
			'\xC8\xC8\xC8\xC9\xC9\xC9',
			'\xC9\xC9\xC9\xCA\xCA\xCA',
			'\xCA\xCA\xCA\xCB\xCB\xCB',
			'\xCB\xCB\xCB\xCB\xCB\xCC',
			'\xCC\xCC\xCC\xCC\xCC\xCC',
			'\xCD\xCD\xCD\xCD\xCD\xCD',
			'\xCD\xCD\xCE\xCE\xCE\xCE',
			'\xCE\xCF\xCF\xCF\xCF\xCF',
			'\xCF\xCF\xD0\xD0\xD0\xD0',
			'\xD0\xD0\xD1\xD1\xD1\xD1',
			'\xD1\xD1\xD1\xD1\xD1\xD2',
			'\xD2\xD2\xD2\xD2\xD2\xD2',
			'\xD3\xD3\xD3\xD3\xD3\xD3',
			'\xD3\xD3\xD4\xD4\xD4\xD4',
			'\xD4\xD4\xD4\xD4\xD4\xD4',
			'\xD4\xD4\xD4\xD5\xD5\xD5',
			'\xD5\xD5\xD5\xD5\xD5\xD5',
			'\xD5\xD5\xD5\xD5\xD6\xD6',
			'\xD6\xD6\xD6\xD7\xD7\xD7',
			'\xD7\xD7\xD7\xD7\xD7\xD8',
			'\xD8\xD8\xD8\xD8\xD8\xD9',
			'\xD9\xD9\xD9\xD9\xD9\xD9',
			'\xD9\xDA\xDA\xDA\xDA\xDA',
			'\xDA\xDA\xDA\xDA\xDA\xDB',
			'\xDB\xDB\xDB\xDB\xDB\xDB',
			'\xDB\xDC\xDC\xDC\xDC\xDC',
			'\xDC\xDC\xDC\xDC\xDC\xDC',
			'\xDD\xDD\xDD\xDD\xDE\xDE',
			'\xDE\xDE\xDE\xDE\xDE\xDE',
			'\xDF\xDF\xDF\xDF\xDF\xDF',
			'\xDF\xE0\xE0\xE0\xE0\xE0',
			'\xE0\xE0\xE0\xE0\xE0\xE0',
			'\xE0\xE1\xE1\xE1\xE1\xE1',
			'\xE1\xE1\xE1\xE1\xE1\xE1',
			'\xE1\xE1\xE1\xE2\xE2\xE2',
			'\xE2\xE2\xE2\xE2\xE3\xE3',
			'\xE3\xE3\xE3\xE3\xE3\xE3',
			'\xE3\xE4\xE4\xE4\xE4\xE4',
			'\xE4\xE4\xE4\xE5\xE5\xE5',
			'\xE5\xE5\xE5\xE5\xE6\xE6',
			'\xE6\xE6\xE6\xE6\xE6\xE7',
			'\xE7\xE7\xE7\xE7\xE8\xE8',
			'\xE8\xE8\xE8\xE8\xE8\xE8',
			'\xE8\xE8\xE8\xE8\xE9\xE9',
			'\xE9\xE9\xEA\xEA\xEA\xEA',
			'\xEA\xEA\xEA\xEB\xEB\xEB',
			'\xEB\xEB\xEB\xEB\xEB\xEB',
			'\xEB\xEC\xEC\xEC\xEC\xEC',
			'\xEC\xEC\xEC\xEC\xEC\xED',
			'\xED\xED\xED\xED\xED\xED',
			'\xED\xED\xED\xEE\xEE\xEE',
			'\xEE\xEE\xEE\xEE\xEE\xEF',
			'\xEF\xEF\xEF\xEF\xEF\xEF',
			'\xEF\xEF\xEF\xEF\xEF\xEF',
			'\xF0\xF0\xF0\xF0\xF0\xF0',
			'\xF0\xF0\xF0\xF0\xF0\xF0',
			'\xF0\xF0\xF0\xF0\xF0\xF0',
			'\xF1\xF1\xF1\xF1\xF1\xF2',
			'\xF2\xF2\xF2\xF2\xF3\xF3',
			'\xF3\xF3\xF3\xF4\xF4\xF4',
			'\xF4\xF4\xF4\xF4\xF4\xF4',
			'\xF5\xF5\xF5\xF5\xF5\xF6',
			'\xF6\xF6\xF6\xF6\xF6\xF6',
			'\xF6\xF6\xF7\xF7\xF7\xF7',
			'\xF7\xF7\xF7\xF8\xF8\xF8',
			'\xF8\xF8\xF9\xF9\xF9\xF9',
			'\xF9\xFA\xFA\xFA\xFA\xFA',
			'\xFA\xFB\xFB\xFB\xFB\xFB',
			'\xFB\xFC\xFC\xFC\xFC\xFC',
			'\xFC\xFC\xFC\xFC\xFD\xFD',
			'\xFD\xFD\xFE\xFE\xFE\xFE',
			'\xFE\xFE\xFE\xFF\xFF\xFF',
			'\xFF\xFF\xFF\u0100\u0100\u0100',
			'\u0100\u0100\u0100\u0101\u0101\u0101',
			'\u0101\u0101\u0101\u0101\u0101\u0101',
			'\u0101\u0101\u0102\u0102\u0102\u0102',
			'\u0102\u0102\u0102\u0102\u0103\u0103',
			'\u0103\u0103\u0103\u0103\u0103\u0103',
			'\u0103\u0103\u0103\u0103\u0104\u0104',
			'\u0104\u0104\u0104\u0104\u0104\u0104',
			'\u0104\u0104\u0104\u0104\u0104\u0105',
			'\u0105\u0105\u0105\u0105\u0105\u0105',
			'\u0105\u0106\u0106\u0106\u0106\u0106',
			'\u0106\u0106\u0106\u0106\u0106\u0106',
			'\u0106\u0106\u0106\u0107\u0107\u0107',
			'\u0107\u0107\u0107\u0107\u0107\u0107',
			'\u0107\u0107\u0107\u0107\u0107\u0107',
			'\u0108\u0108\u0108\u0108\u0108\u0109',
			'\u0109\u0109\u0109\u0109\u0109\u0109',
			'\u010A\u010A\u010A\u010A\u010A\u010A',
			'\u010A\u010B\u010B\u010B\u010B\u010B',
			'\u010B\u010B\u010B\u010B\u010B\u010B',
			`\u010B\u0B1A
\u010B\u010C\u010C\u010C`,
			'\u010C\u010C\u010C\u010D\u010D\u010D',
			'\u010D\u010D\u010D\u010D\u010D\u010E',
			'\u010E\u010E\u010E\u010E\u010E\u010E',
			'\u010E\u010E\u010E\u010E\u010E\u010E',
			`\u010E\u0B37
\u010E\u010F\u010F\u010F\u010F`,
			'\u010F\u010F\u010F\u010F\u010F\u010F',
			`\u010F\u010F\u0B44
\u010F\u0110\u0110`,
			'\u0110\u0110\u0110\u0110\u0110\u0110',
			`\u0110\u0110\u0B4F
\u0110\u0111\u0111\u0111`,
			'\u0111\u0112\u0112\u0112\u0112\u0112',
			'\u0112\u0112\u0112\u0112\u0112\u0112',
			`\u0112\u0B60
\u0112\u0113\u0113\u0113`,
			'\u0113\u0113\u0113\u0113\u0113\u0113',
			'\u0113\u0113\u0113\u0113\u0113\u0113',
			`\u0113\u0B71
\u0113\u0114\u0114\u0114\u0114`,
			'\u0114\u0114\u0114\u0114\u0114\u0114',
			'\u0114\u0114\u0114\u0114\u0114\u0114',
			`\u0B82
\u0114\u0115\u0115\u0115\u0115`,
			'\u0115\u0115\u0116\u0116\u0116\u0116',
			'\u0116\u0116\u0116\u0116\u0116\u0116',
			'\u0116\u0116\u0117\u0117\u0117\u0117',
			'\u0117\u0117\u0117\u0118\u0118\u0118',
			'\u0118\u0118\u0118\u0118\u0118\u0118',
			'\u0119\u0119\u0119\u0119\u0119\u011A',
			'\u011A\u011A\u011A\u011A\u011B\u011B',
			'\u011B\u011B\u011B\u011B\u011C\u011C',
			'\u011C\u011C\u011C\u011C\u011C\u011C',
			'\u011C\u011C\u011D\u011D\u011D\u011D',
			'\u011D\u011D\u011E\u011E\u011E\u011E',
			'\u011E\u011E\u011E\u011E\u011E\u011F',
			'\u011F\u011F\u011F\u011F\u011F\u011F',
			'\u011F\u011F\u011F\u011F\u0120\u0120',
			'\u0120\u0120\u0120\u0120\u0121\u0121',
			'\u0121\u0121\u0121\u0121\u0121\u0121',
			'\u0122\u0122\u0122\u0122\u0122\u0122',
			'\u0122\u0122\u0123\u0123\u0123\u0123',
			'\u0123\u0123\u0123\u0123\u0123\u0123',
			'\u0123\u0124\u0124\u0124\u0124\u0124',
			'\u0124\u0124\u0124\u0124\u0124\u0124',
			'\u0125\u0125\u0125\u0125\u0125\u0125',
			'\u0125\u0125\u0125\u0126\u0126\u0126',
			'\u0126\u0126\u0126\u0126\u0126\u0126',
			'\u0127\u0127\u0127\u0127\u0127\u0127',
			'\u0127\u0127\u0127\u0127\u0127\u0128',
			'\u0128\u0128\u0128\u0128\u0129\u0129',
			'\u0129\u0129\u0129\u0129\u0129\u012A',
			'\u012A\u012A\u012A\u012A\u012A\u012A',
			'\u012B\u012B\u012B\u012B\u012C\u012C',
			'\u012C\u012C\u012C\u012C\u012D\u012D',
			'\u012D\u012D\u012D\u012D\u012D\u012D',
			'\u012E\u012E\u012E\u012E\u012E\u012E',
			'\u012F\u012F\u012F\u012F\u012F\u012F',
			'\u0130\u0130\u0130\u0130\u0130\u0130',
			'\u0130\u0130\u0131\u0131\u0131\u0131',
			'\u0131\u0132\u0132\u0132\u0132\u0132',
			'\u0133\u0133\u0133\u0133\u0133\u0133',
			'\u0133\u0134\u0134\u0134\u0134\u0134',
			'\u0134\u0134\u0134\u0134\u0134\u0134',
			'\u0134\u0134\u0134\u0135\u0135\u0135',
			'\u0135\u0135\u0135\u0135\u0135\u0136',
			'\u0136\u0136\u0136\u0136\u0136\u0136',
			'\u0136\u0136\u0137\u0137\u0137\u0137',
			'\u0137\u0137\u0137\u0137\u0137\u0137',
			'\u0137\u0138\u0138\u0138\u0138\u0138',
			'\u0138\u0138\u0139\u0139\u0139\u0139',
			'\u0139\u013A\u013A\u013A\u013A\u013A',
			'\u013A\u013A\u013A\u013A\u013B\u013B',
			'\u013B\u013B\u013B\u013C\u013C\u013C',
			'\u013C\u013C\u013C\u013C\u013C\u013C',
			'\u013C\u013C\u013C\u013C\u013C\u013C',
			'\u013C\u013C\u013C\u013D\u013D\u013D',
			'\u013D\u013D\u013D\u013E\u013E\u013E',
			'\u013E\u013E\u013E\u013E\u013E\u013E',
			'\u013F\u013F\u013F\u013F\u013F\u013F',
			'\u013F\u013F\u0140\u0140\u0140\u0140',
			'\u0140\u0140\u0141\u0141\u0141\u0141',
			'\u0141\u0142\u0142\u0142\u0142\u0142',
			'\u0143\u0143\u0143\u0144\u0144\u0144',
			'\u0144\u0144\u0144\u0144\u0144\u0144',
			'\u0144\u0144\u0144\u0144\u0144\u0144',
			'\u0145\u0145\u0145\u0145\u0145\u0145',
			'\u0145\u0145\u0145\u0145\u0145\u0145',
			'\u0145\u0145\u0145\u0145\u0145\u0145',
			'\u0146\u0146\u0146\u0146\u0146\u0147',
			'\u0147\u0147\u0147\u0147\u0147\u0147',
			'\u0147\u0148\u0148\u0148\u0148\u0148',
			'\u0148\u0148\u0148\u0148\u0149\u0149',
			'\u0149\u0149\u0149\u0149\u0149\u0149',
			'\u0149\u0149\u0149\u014A\u014A\u014A',
			'\u014A\u014A\u014A\u014A\u014B\u014B',
			'\u014B\u014B\u014B\u014B\u014B\u014B',
			'\u014B\u014B\u014C\u014C\u014C\u014C',
			'\u014C\u014C\u014C\u014C\u014C\u014C',
			'\u014C\u014C\u014D\u014D\u014D\u014D',
			'\u014D\u014E\u014E\u014E\u014E\u014E',
			'\u014E\u014E\u014E\u014E\u014E\u014E',
			'\u014E\u014E\u014F\u014F\u014F\u014F',
			'\u014F\u014F\u014F\u014F\u014F\u0150',
			'\u0150\u0150\u0150\u0150\u0150\u0150',
			'\u0151\u0151\u0151\u0151\u0152\u0152',
			'\u0152\u0152\u0152\u0152\u0152\u0152',
			'\u0153\u0153\u0153\u0153\u0153\u0153',
			'\u0154\u0154\u0154\u0154\u0154\u0155',
			'\u0155\u0155\u0155\u0156\u0156\u0156',
			'\u0156\u0156\u0157\u0157\u0157\u0157',
			'\u0157\u0157\u0157\u0157\u0157\u0158',
			'\u0158\u0158\u0158\u0158\u0158\u0158',
			'\u0158\u0158\u0158\u0158\u0158\u0159',
			'\u0159\u015A\u015A\u015B\u015B\u015C',
			'\u015C\u015D\u015D\u015E\u015E\u015F',
			'\u015F\u0160\u0160\u0161\u0161\u0162',
			`\u0162\u0163\u0163\u0163\u0163\u0DBA
\u0163`,
			'\u0164\u0164\u0164\u0164\u0165\u0165',
			`\u0165\u0165\u0165\u0DC4
\u0165\u0166`,
			'\u0166\u0166\u0167\u0167\u0168\u0168',
			'\u0168\u0169\u0169\u016A\u016A\u016B',
			'\u016B\u016C\u016C\u016D\u016D\u016E',
			'\u016E\u016F\u016F\u016F\u016F\u0170',
			'\u0170\u0171\u0171\u0172\u0172\u0173',
			'\u0173\u0173\u0174\u0174\u0175\u0175',
			'\u0176\u0176\u0177\u0177\u0178\u0178',
			'\u0179\u0179\u017A\u017A\u017A\u017A\u0DF6',
			`
\u017A\u017A\u017A\u0DF9
\u017A\r\u017A\u017A\u0DFA`,
			'\u017B\u017B\u017B\u017B\u017B\u017B',
			'\u017B\u017B\u017B\u017B\u017B\u017B',
			`\u017B\u017B\u017B\u017B\u017B\u0E0D
`,
			'\u017B\u017C\u017C\u017D\u017D\u017E',
			'\u017E\u017F\u017F\u0180\u0180\u0181',
			'\u0181\u0182\u0182\u0183\u0183\u0184',
			'\u0184\u0185\u0185\u0186\u0186\u0187',
			'\u0187\u0188\u0188\u0189\u0189\u018A',
			'\u018A\u018B\u018B\u018C\u018C\u018D',
			'\u018D\u018E\u018E\u018F\u018F\u0190',
			'\u0190\u0191\u0191\u0192\u0192\u0193',
			'\u0193\u0194\u0194\u0195\u0195\u0196',
			`\u0196\u0196\u0196\x07\u0196\u0E47
\u0196\f\u0196`,
			'\u0196\u0E4A\v\u0196\u0196\u0196\u0196\u0196',
			`\u0196\x07\u0196\u0E51
\u0196\f\u0196\u0196\u0E54\v`,
			`\u0196\u0196\u0196\u0E57
\u0196\r\u0196\u0196\u0E58`,
			'\u0197\u0197\u0197\u0197\u0197\u0197',
			`\u0E60
\u0197\r\u0197\u0197\u0E61\u0197\u0E64
\u0197`,
			`\u0198\u0198\u0E67
\u0198\r\u0198\u0198\u0E68\u0198`,
			'\u0198\u0199\u0199\u0199\u0199\u0199',
			`\u0E71
\u0199\u019A\u019A\u0E74
\u019A\r\u019A\u019A`,
			`\u0E75\u019A\u019A\u019B\u019B\u0E7B
\u019B`,
			'\r\u019B\u019B\u0E7C\u019B\u019B\x07\u019B\u0E81',
			`
\u019B\f\u019B\u019B\u0E84\v\u019B\u019B\u019B`,
			`\u0E87
\u019B\u019B\u019B\u0E8A
\u019B\u019C`,
			`\u019C\u019C\u0E8E
\u019C\u019C\u019C\u019C`,
			`\x07\u019C\u0E93
\u019C\f\u019C\u019C\u0E96\v\u019C`,
			`\u019C\u019C\u019C\u019C\u0E9B
\u019C\r\u019C`,
			`\u019C\u0E9C\u019C\u019C\u019C\u0EA1
\u019C`,
			`\u019D\u019D\u019D\u019D\x07\u019D\u0EA7
\u019D`,
			'\f\u019D\u019D\u0EAA\v\u019D\u019D\u019D',
			`\u019E\u019E\u019E\u019E\u019E\u0EB2
\u019E`,
			'\r\u019E\u019E\u0EB3\u019F\u019F\u019F',
			'\u019F\u01A0\u01A0\u01A0\u01A0\x07\u01A0\u0EBE',
			`
\u01A0\f\u01A0\u01A0\u0EC1\v\u01A0\u01A0\u01A0`,
			`\u01A1\u01A1\u01A1\u0EC7
\u01A1\u01A2`,
			'\u01A2\u01A2\u01A2\u01A2\u01A2\x07\u01A2\u0ECF',
			`
\u01A2\f\u01A2\u01A2\u0ED2\v\u01A2\u01A2\u01A2`,
			'\u01A2\u01A2\u01A2\u01A3\u01A3\u01A3',
			`\u01A3\u01A3\x07\u01A3\u0EDE
\u01A3\f\u01A3\u01A3`,
			'\u0EE1\v\u01A3\u01A3\u01A3\u01A3\u01A3',
			'\u01A3\u0ED0\u0EDF\u01A4\x07',
			`	\v\x07\r\b	
\v\f\r`,
			'\x1B!#%',
			"')+-/13\x1B579",
			`;= ?!A"C#E$G%I&K'M(O)Q*S+U,W-Y.[/]0_1a2c3e4g5i6k7m8o9q:s;u<`,
			'w=y>{?}@\x7FA\x81B\x83C\x85D\x87E\x89F\x8BG\x8DH\x8F',
			'I\x91J\x93K\x95L\x97M\x99N\x9BO\x9DP\x9FQ\xA1R\xA3',
			'S\xA5T\xA7U\xA9V\xABW\xADX\xAFY\xB1Z\xB3[\xB5\\\xB7',
			']\xB9^\xBB_\xBD`\xBFa\xC1b\xC3c\xC5d\xC7e\xC9f\xCB',
			'g\xCDh\xCFi\xD1j\xD3k\xD5l\xD7m\xD9n\xDBo\xDDp\xDF',
			'q\xE1r\xE3s\xE5t\xE7u\xE9v\xEBw\xEDx\xEFy\xF1z\xF3',
			'{\xF5|\xF7}\xF9~\xFB\x7F\xFD\x80\xFF\x81\u0101\x82',
			'\u0103\x83\u0105\x84\u0107\x85\u0109\x86\u010B\x87\u010D\x88',
			'\u010F\x89\u0111\x8A\u0113\x8B\u0115\x8C\u0117\x8D\u0119\x8E',
			'\u011B\x8F\u011D\x90\u011F\x91\u0121\x92\u0123\x93\u0125\x94',
			'\u0127\x95\u0129\x96\u012B\x97\u012D\x98\u012F\x99\u0131\x9A',
			'\u0133\x9B\u0135\x9C\u0137\x9D\u0139\x9E\u013B\x9F\u013D\xA0',
			'\u013F\xA1\u0141\xA2\u0143\xA3\u0145\xA4\u0147\xA5\u0149\xA6',
			'\u014B\xA7\u014D\xA8\u014F\xA9\u0151\xAA\u0153\xAB\u0155\xAC',
			'\u0157\xAD\u0159\xAE\u015B\xAF\u015D\xB0\u015F\xB1\u0161\xB2',
			'\u0163\xB3\u0165\xB4\u0167\xB5\u0169\xB6\u016B\xB7\u016D\xB8',
			'\u016F\xB9\u0171\xBA\u0173\xBB\u0175\xBC\u0177\xBD\u0179\xBE',
			'\u017B\xBF\u017D\xC0\u017F\xC1\u0181\xC2\u0183\xC3\u0185\xC4',
			'\u0187\xC5\u0189\xC6\u018B\xC7\u018D\xC8\u018F\xC9\u0191\xCA',
			'\u0193\xCB\u0195\xCC\u0197\xCD\u0199\xCE\u019B\xCF\u019D\xD0',
			'\u019F\xD1\u01A1\xD2\u01A3\xD3\u01A5\xD4\u01A7\xD5\u01A9\xD6',
			'\u01AB\xD7\u01AD\xD8\u01AF\xD9\u01B1\xDA\u01B3\xDB\u01B5\xDC',
			'\u01B7\xDD\u01B9\xDE\u01BB\xDF\u01BD\xE0\u01BF\xE1\u01C1\xE2',
			'\u01C3\xE3\u01C5\xE4\u01C7\xE5\u01C9\xE6\u01CB\xE7\u01CD\xE8',
			'\u01CF\xE9\u01D1\xEA\u01D3\xEB\u01D5\xEC\u01D7\xED\u01D9\xEE',
			'\u01DB\xEF\u01DD\xF0\u01DF\xF1\u01E1\xF2\u01E3\xF3\u01E5\xF4',
			'\u01E7\xF5\u01E9\xF6\u01EB\xF7\u01ED\xF8\u01EF\xF9\u01F1\xFA',
			'\u01F3\xFB\u01F5\xFC\u01F7\xFD\u01F9\xFE\u01FB\xFF\u01FD\u0100',
			'\u01FF\u0101\u0201\u0102\u0203\u0103\u0205\u0104\u0207\u0105\u0209\u0106',
			'\u020B\u0107\u020D\u0108\u020F\u0109\u0211\u010A\u0213\u010B\u0215\u010C',
			'\u0217\u010D\u0219\u010E\u021B\u010F\u021D\u0110\u021F\u0111\u0221\u0112',
			'\u0223\u0113\u0225\u0114\u0227\u0115\u0229\u0116\u022B\u0117\u022D\u0118',
			'\u022F\u0119\u0231\u011A\u0233\u011B\u0235\u011C\u0237\u011D\u0239\u011E',
			'\u023B\u011F\u023D\u0120\u023F\u0121\u0241\u0122\u0243\u0123\u0245\u0124',
			'\u0247\u0125\u0249\u0126\u024B\u0127\u024D\u0128\u024F\u0129\u0251\u012A',
			'\u0253\u012B\u0255\u012C\u0257\u012D\u0259\u012E\u025B\u012F\u025D\u0130',
			'\u025F\u0131\u0261\u0132\u0263\u0133\u0265\u0134\u0267\u0135\u0269\u0136',
			'\u026B\u0137\u026D\u0138\u026F\u0139\u0271\u013A\u0273\u013B\u0275\u013C',
			'\u0277\u013D\u0279\u013E\u027B\u013F\u027D\u0140\u027F\u0141\u0281\u0142',
			'\u0283\u0143\u0285\u0144\u0287\u0145\u0289\u0146\u028B\u0147\u028D\u0148',
			'\u028F\u0149\u0291\u014A\u0293\u014B\u0295\u014C\u0297\u014D\u0299\u014E',
			'\u029B\u014F\u029D\u0150\u029F\u0151\u02A1\u0152\u02A3\u0153\u02A5\u0154',
			'\u02A7\u0155\u02A9\u0156\u02AB\u0157\u02AD\u0158\u02AF\u0159\u02B1\u015A',
			'\u02B3\u015B\u02B5\u015C\u02B7\u015D\u02B9\u015E\u02BB\u015F\u02BD\u0160',
			'\u02BF\u0161\u02C1\u0162\u02C3\u0163\u02C5\u0164\u02C7\u0165\u02C9\u0166',
			'\u02CB\u0167\u02CD\u0168\u02CF\u0169\u02D1\u016A\u02D3\u016B\u02D5\u016C',
			'\u02D7\u016D\u02D9\u016E\u02DB\u016F\u02DD\u0170\u02DF\u0171\u02E1\u0172',
			'\u02E3\u0173\u02E5\u0174\u02E7\u0175\u02E9\u0176\u02EB\u0177\u02ED',
			'\u02EF\u02F1\u02F3\u02F5\u02F7\u02F9',
			'\u02FB\u02FD\u02FF\u0301\u0303\u0305',
			'\u0307\u0309\u030B\u030D\u030F\u0311',
			'\u0313\u0315\u0317\u0319\u031B\u031D',
			'\u031F\u0321\u0323\u0325\u0327\u0329',
			'\u032B\u0178\u032D\u0179\u032F\u017A\u0331\u017B\u0333\u017C\u0335\u017D',
			'\u0337\u017E\u0339\u017F\u033B\u0180\u033D\u0181\u033F\u0182\u0341\u0183',
			"\u0343\u0184\u0345\u0185'C\\c|",
			'CHchGGgg2;C\\aac|CCcc',
			'DDddEEeeFFffHHhhIIi',
			'iJJjjKKkkLLllMMmm',
			'NNnnOOooPPppQQqq',
			'RRrrSSssTTttUUuuVVv',
			'vWWwwXXxxYYyyZZzz',
			'[[{{\\\\||))^^$$^^',
			`NNUU[[
DDIIMMOOddiimmoobb/0<<aa`,
			'\v\f""\f\f\u0F08',
			'',
			'\x07	',
			'\v\r',
			'',
			'',
			'',
			'\x1B',
			'!',
			'#%',
			"')+",
			'-/',
			'13',
			'57',
			'9;',
			'=?A',
			'CE',
			'GI',
			'KM',
			'OQ',
			'SUW',
			'Y[',
			']_',
			'ac',
			'eg',
			'ikm',
			'oq',
			'su',
			'wy',
			'{}',
			'\x7F\x81',
			'\x83\x85',
			'\x87\x89',
			'\x8B\x8D',
			'\x8F\x91',
			'\x93\x95',
			'\x97\x99',
			'\x9B\x9D',
			'\x9F\xA1',
			'\xA3\xA5',
			'\xA7\xA9',
			'\xAB\xAD',
			'\xAF\xB1',
			'\xB3\xB5',
			'\xB7\xB9',
			'\xBB\xBD',
			'\xBF\xC1',
			'\xC3\xC5',
			'\xC7\xC9',
			'\xCB\xCD',
			'\xCF\xD1',
			'\xD3\xD5',
			'\xD7\xD9',
			'\xDB\xDD',
			'\xDF\xE1',
			'\xE3\xE5',
			'\xE7\xE9',
			'\xEB\xED',
			'\xEF\xF1',
			'\xF3\xF5',
			'\xF7\xF9',
			'\xFB\xFD',
			'\xFF\u0101',
			'\u0103\u0105',
			'\u0107\u0109',
			'\u010B\u010D',
			'\u010F\u0111',
			'\u0113\u0115',
			'\u0117\u0119',
			'\u011B\u011D',
			'\u011F\u0121',
			'\u0123\u0125',
			'\u0127\u0129',
			'\u012B\u012D',
			'\u012F\u0131',
			'\u0133\u0135',
			'\u0137\u0139',
			'\u013B\u013D',
			'\u013F\u0141',
			'\u0143\u0145',
			'\u0147\u0149',
			'\u014B\u014D',
			'\u014F\u0151',
			'\u0153\u0155',
			'\u0157\u0159',
			'\u015B\u015D',
			'\u015F\u0161',
			'\u0163\u0165',
			'\u0167\u0169',
			'\u016B\u016D',
			'\u016F\u0171',
			'\u0173\u0175',
			'\u0177\u0179',
			'\u017B\u017D',
			'\u017F\u0181',
			'\u0183\u0185',
			'\u0187\u0189',
			'\u018B\u018D',
			'\u018F\u0191',
			'\u0193\u0195',
			'\u0197\u0199',
			'\u019B\u019D',
			'\u019F\u01A1',
			'\u01A3\u01A5',
			'\u01A7\u01A9',
			'\u01AB\u01AD',
			'\u01AF\u01B1',
			'\u01B3\u01B5',
			'\u01B7\u01B9',
			'\u01BB\u01BD',
			'\u01BF\u01C1',
			'\u01C3\u01C5',
			'\u01C7\u01C9',
			'\u01CB\u01CD',
			'\u01CF\u01D1',
			'\u01D3\u01D5',
			'\u01D7\u01D9',
			'\u01DB\u01DD',
			'\u01DF\u01E1',
			'\u01E3\u01E5',
			'\u01E7\u01E9',
			'\u01EB\u01ED',
			'\u01EF\u01F1',
			'\u01F3\u01F5',
			'\u01F7\u01F9',
			'\u01FB\u01FD',
			'\u01FF\u0201',
			'\u0203\u0205',
			'\u0207\u0209',
			'\u020B\u020D',
			'\u020F\u0211',
			'\u0213\u0215',
			'\u0217\u0219',
			'\u021B\u021D',
			'\u021F\u0221',
			'\u0223\u0225',
			'\u0227\u0229',
			'\u022B\u022D',
			'\u022F\u0231',
			'\u0233\u0235',
			'\u0237\u0239',
			'\u023B\u023D',
			'\u023F\u0241',
			'\u0243\u0245',
			'\u0247\u0249',
			'\u024B\u024D',
			'\u024F\u0251',
			'\u0253\u0255',
			'\u0257\u0259',
			'\u025B\u025D',
			'\u025F\u0261',
			'\u0263\u0265',
			'\u0267\u0269',
			'\u026B\u026D',
			'\u026F\u0271',
			'\u0273\u0275',
			'\u0277\u0279',
			'\u027B\u027D',
			'\u027F\u0281',
			'\u0283\u0285',
			'\u0287\u0289',
			'\u028B\u028D',
			'\u028F\u0291',
			'\u0293\u0295',
			'\u0297\u0299',
			'\u029B\u029D',
			'\u029F\u02A1',
			'\u02A3\u02A5',
			'\u02A7\u02A9',
			'\u02AB\u02AD',
			'\u02AF\u02B1',
			'\u02B3\u02B5',
			'\u02B7\u02B9',
			'\u02BB\u02BD',
			'\u02BF\u02C1',
			'\u02C3\u02C5',
			'\u02C7\u02C9',
			'\u02CB\u02CD',
			'\u02CF\u02D1',
			'\u02D3\u02D5',
			'\u02D7\u02D9',
			'\u02DB\u02DD',
			'\u02DF\u02E1',
			'\u02E3\u02E5',
			'\u02E7\u02E9',
			'\u02EB\u032B',
			'\u032D\u032F',
			'\u0331\u0333',
			'\u0335\u0337',
			'\u0339\u033B',
			'\u033D\u033F',
			'\u0341\u0343',
			'\u0345\u0347',
			'\u034C\x07\u0352	',
			'\u0356\v\u035B\r',
			'\u035F\u0367',
			'\u0369\u036E',
			'\u0372\u0375',
			'\u037C\x1B\u0380',
			'\u0385\u038B!',
			'\u0390#\u0396%\u039C',
			"'\u039F)\u03A6",
			'+\u03AC-\u03B1',
			'/\u03B41\u03BB',
			'3\u03C45\u03CB',
			'7\u03D59\u03DB;\u03E6',
			'=\u03EF?\u03F4',
			'A\u03F9C\u03FF',
			'E\u0404G\u0407',
			'I\u0411K\u041C',
			'M\u0422O\u0429Q\u0431',
			'S\u0437U\u043F',
			'W\u0447Y\u0451',
			'[\u0456]\u045B',
			'_\u0462a\u046C',
			'c\u0472e\u047Cg\u0482',
			'i\u048Ak\u0495',
			'm\u049Ao\u04A0',
			'q\u04A7s\u04AC',
			'u\u04B3w\u04BA',
			'y\u04C6{\u04CF}\u04D4',
			'\x7F\u04DB\x81\u04DE',
			'\x83\u04E3\x85\u04EA',
			'\x87\u04F3\x89\u04F9',
			'\x8B\u0500\x8D\u0507',
			'\x8F\u050D\x91\u0513',
			'\x93\u051C\x95\u0521',
			'\x97\u0528\x99\u052B',
			'\x9B\u0533\x9D\u053B',
			'\x9F\u0543\xA1\u0558',
			'\xA3\u055A\xA5\u0561',
			'\xA7\u0567\xA9\u056E',
			'\xAB\u0578\xAD\u057D',
			'\xAF\u0586\xB1\u0590',
			'\xB3\u05A1\xB5\u05A6',
			'\xB7\u05AB\xB9\u05C4',
			'\xBB\u05C6\xBD\u05CD',
			'\xBF\u05D2\xC1\u05DA',
			'\xC3\u05E0\xC5\u05E7',
			'\xC7\u05EB\xC9\u05F5',
			'\xCB\u05FC\xCD\u0608',
			'\xCF\u0612\xD1\u0619',
			'\xD3\u061E\xD5\u0626',
			'\xD7\u062A\xD9\u062F',
			'\xDB\u0636\xDD\u0640',
			'\xDF\u0647\xE1\u0652',
			'\xE3\u065A\xE5\u0665',
			'\xE7\u066B\xE9\u0670',
			'\xEB\u0676\xED\u067B',
			'\xEF\u0681\xF1\u0688',
			'\xF3\u0693\xF5\u069F',
			'\xF7\u06AC\xF9\u06B8',
			'\xFB\u06C5\xFD\u06CC',
			'\xFF\u06D4\u0101\u06DD',
			'\u0103\u06E9\u0105\u06F0',
			'\u0107\u06F4\u0109\u06F7',
			'\u010B\u06FF\u010D\u0704',
			'\u010F\u0708\u0111\u0710',
			'\u0113\u0716\u0115\u071D',
			'\u0117\u0727\u0119\u0730',
			'\u011B\u0736\u011D\u073B',
			'\u011F\u073F\u0121\u0747',
			'\u0123\u0750\u0125\u075A',
			'\u0127\u0765\u0129\u076D',
			'\u012B\u0773\u012D\u0778',
			'\u012F\u0781\u0131\u0791',
			'\u0133\u079E\u0135\u07A4',
			'\u0137\u07AB\u0139\u07AF',
			'\u013B\u07B5\u013D\u07C3',
			'\u013F\u07D1\u0141\u07D9',
			'\u0143\u07E0\u0145\u07E8',
			'\u0147\u07ED\u0149\u07F2',
			'\u014B\u07F7\u014D\u07FC',
			'\u014F\u0800\u0151\u0808',
			'\u0153\u0814\u0155\u0822',
			'\u0157\u0826\u0159\u0833',
			'\u015B\u0838\u015D\u083F',
			'\u015F\u0844\u0161\u084A',
			'\u0163\u0850\u0165\u085A',
			'\u0167\u085F\u0169\u0865',
			'\u016B\u0868\u016D\u0871',
			'\u016F\u087B\u0171\u0888',
			'\u0173\u088F\u0175\u0897',
			'\u0177\u089D\u0179\u08A4',
			'\u017B\u08A8\u017D\u08AD',
			'\u017F\u08B2\u0181\u08B8',
			'\u0183\u08BF\u0185\u08C6',
			'\u0187\u08D0\u0189\u08DA',
			'\u018B\u08E3\u018D\u08E9',
			'\u018F\u08EE\u0191\u08F4',
			'\u0193\u08FA\u0195\u0900',
			'\u0197\u0908\u0199\u090F',
			'\u019B\u0917\u019D\u091C',
			'\u019F\u0923\u01A1\u0929',
			'\u01A3\u0932\u01A5\u0939',
			'\u01A7\u0941\u01A9\u094E',
			'\u01AB\u095B\u01AD\u0960',
			'\u01AF\u0968\u01B1\u096E',
			'\u01B3\u0976\u01B5\u0980',
			'\u01B7\u0988\u01B9\u0993',
			'\u01BB\u0997\u01BD\u099F',
			'\u01BF\u09A6\u01C1\u09B2',
			'\u01C3\u09C0\u01C5\u09C7',
			'\u01C7\u09D0\u01C9\u09D8',
			'\u01CB\u09DF\u01CD\u09E6',
			'\u01CF\u09EB\u01D1\u09F7',
			'\u01D3\u09FB\u01D5\u0A02',
			'\u01D7\u0A0C\u01D9\u0A16',
			'\u01DB\u0A20\u01DD\u0A28',
			'\u01DF\u0A35\u01E1\u0A47',
			'\u01E3\u0A4C\u01E5\u0A51',
			'\u01E7\u0A56\u01E9\u0A5F',
			'\u01EB\u0A64\u01ED\u0A6D',
			'\u01EF\u0A74\u01F1\u0A79',
			'\u01F3\u0A7E\u01F5\u0A84',
			'\u01F7\u0A8A\u01F9\u0A93',
			'\u01FB\u0A97\u01FD\u0A9E',
			'\u01FF\u0AA4\u0201\u0AAA',
			'\u0203\u0AB5\u0205\u0ABD',
			'\u0207\u0AC9\u0209\u0AD6',
			'\u020B\u0ADE\u020D\u0AEC',
			'\u020F\u0AFB\u0211\u0B00',
			'\u0213\u0B07\u0215\u0B19',
			'\u0217\u0B1B\u0219\u0B21',
			'\u021B\u0B36\u021D\u0B43',
			'\u021F\u0B4E\u0221\u0B50',
			'\u0223\u0B5F\u0225\u0B70',
			'\u0227\u0B81\u0229\u0B83',
			'\u022B\u0B89\u022D\u0B95',
			'\u022F\u0B9C\u0231\u0BA5',
			'\u0233\u0BAA\u0235\u0BAF',
			'\u0237\u0BB5\u0239\u0BBF',
			'\u023B\u0BC5\u023D\u0BCE',
			'\u023F\u0BD9\u0241\u0BDF',
			'\u0243\u0BE7\u0245\u0BEF',
			'\u0247\u0BFA\u0249\u0C05',
			'\u024B\u0C0E\u024D\u0C17',
			'\u024F\u0C22\u0251\u0C27',
			'\u0253\u0C2E\u0255\u0C35',
			'\u0257\u0C39\u0259\u0C3F',
			'\u025B\u0C47\u025D\u0C4D',
			'\u025F\u0C53\u0261\u0C5B',
			'\u0263\u0C60\u0265\u0C65',
			'\u0267\u0C6C\u0269\u0C7A',
			'\u026B\u0C82\u026D\u0C8B',
			'\u026F\u0C96\u0271\u0C9D',
			'\u0273\u0CA2\u0275\u0CAB',
			'\u0277\u0CB0\u0279\u0CC2',
			'\u027B\u0CC8\u027D\u0CD1',
			'\u027F\u0CD9\u0281\u0CDF',
			'\u0283\u0CE4\u0285\u0CE9',
			'\u0287\u0CEC\u0289\u0CFB',
			'\u028B\u0D0D\u028D\u0D12',
			'\u028F\u0D1A\u0291\u0D23',
			'\u0293\u0D2E\u0295\u0D35',
			'\u0297\u0D3F\u0299\u0D4B',
			'\u029B\u0D50\u029D\u0D5D',
			'\u029F\u0D66\u02A1\u0D6D',
			'\u02A3\u0D71\u02A5\u0D79',
			'\u02A7\u0D7F\u02A9\u0D84',
			'\u02AB\u0D88\u02AD\u0D8D',
			'\u02AF\u0D96\u02B1\u0DA2',
			'\u02B3\u0DA4\u02B5\u0DA6',
			'\u02B7\u0DA8\u02B9\u0DAA',
			'\u02BB\u0DAC\u02BD\u0DAE',
			'\u02BF\u0DB0\u02C1\u0DB2',
			'\u02C3\u0DB4\u02C5\u0DB9',
			'\u02C7\u0DBB\u02C9\u0DC3',
			'\u02CB\u0DC5\u02CD\u0DC8',
			'\u02CF\u0DCA\u02D1\u0DCD',
			'\u02D3\u0DCF\u02D5\u0DD1',
			'\u02D7\u0DD3\u02D9\u0DD5',
			'\u02DB\u0DD7\u02DD\u0DD9',
			'\u02DF\u0DDD\u02E1\u0DDF',
			'\u02E3\u0DE1\u02E5\u0DE3',
			'\u02E7\u0DE6\u02E9\u0DE8',
			'\u02EB\u0DEA\u02ED\u0DEC',
			'\u02EF\u0DEE\u02F1\u0DF0',
			'\u02F3\u0DF2\u02F5\u0E0C',
			'\u02F7\u0E0E\u02F9\u0E10',
			'\u02FB\u0E12\u02FD\u0E14',
			'\u02FF\u0E16\u0301\u0E18',
			'\u0303\u0E1A\u0305\u0E1C',
			'\u0307\u0E1E\u0309\u0E20',
			'\u030B\u0E22\u030D\u0E24',
			'\u030F\u0E26\u0311\u0E28',
			'\u0313\u0E2A\u0315\u0E2C',
			'\u0317\u0E2E\u0319\u0E30',
			'\u031B\u0E32\u031D\u0E34',
			'\u031F\u0E36\u0321\u0E38',
			'\u0323\u0E3A\u0325\u0E3C',
			'\u0327\u0E3E\u0329\u0E40',
			'\u032B\u0E56\u032D\u0E63',
			'\u032F\u0E66\u0331\u0E6C',
			'\u0333\u0E73\u0335\u0E7A',
			'\u0337\u0EA0\u0339\u0EA2',
			'\u033B\u0EAD\u033D\u0EB5',
			'\u033F\u0EB9\u0341\u0EC6',
			'\u0343\u0EC8\u0345\u0ED8',
			'\u0347\u0348\u031D\u018F\u0348\u0349',
			'\u0319\u018D\u0349\u034A\u031F\u0190\u034A\u034B',
			'\u02FF\u0180\u034B\u034C\u034D',
			'\u0301\u0181\u034D\u034E\u02F7\u017C\u034E\u034F',
			'\u030D\u0187\u034F\u0350\u031B\u018E\u0350\u0351',
			'\u02FF\u0180\u0351\u0352\u0353',
			'\u02F7\u017C\u0353\u0354\u030D\u0187\u0354\u0355',
			'\u030D\u0187\u0355\b\u0356\u0357',
			'\u0311\u0189\u0357\u0358\u0313\u018A\u0358\u0359',
			`\u0311\u0189\u0359\u035A\u02FF\u0180\u035A
`,
			'\u035B\u035C\u02F7\u017C\u035C\u035D',
			'\u0311\u0189\u035D\u035E\u02FD\u017F\u035E\f',
			'\u035F\u0360\u0313\u018A\u0360\u0361',
			'\u0319\u018D\u0361\u0362\u0363',
			'\u0311\u0189\u0363\u0364\u0313\u018A\u0364\u0365',
			'\u031D\u018F\u0365\u0368\u0366\u0368',
			'\x07#\u0367\u0362\u0367\u0366',
			'\u0368\u0369\u036A',
			'\u030D\u0187\u036A\u036B\u0307\u0184\u036B\u036C',
			'\u030B\u0186\u036C\u036D\u02FF\u0180\u036D',
			'\u036E\u036F\u02F7\u017C\u036F\u0370',
			'\u0311\u0189\u0370\u0371\u0327\u0194\u0371',
			'\u0372\u0373\u0307\u0184\u0373\u0374',
			'\u0301\u0181\u0374\u0375\u0376',
			'\u02FF\u0180\u0376\u0377\u0325\u0193\u0377\u0378',
			'\u0307\u0184\u0378\u0379\u031B\u018E\u0379\u037A',
			'\u031D\u018F\u037A\u037B\u031B\u018E\u037B',
			'\u037C\u037D\u02F7\u017C\u037D\u037E',
			'\u031B\u018E\u037E\u037F\u02FB\u017E\u037F',
			'\u0380\u0381\u02FD\u017F\u0381\u0382',
			'\u02FF\u0180\u0382\u0383\u031B\u018E\u0383\u0384',
			'\u02FB\u017E\u0384\u0385\u0386',
			'\u0311\u0189\u0386\u0387\u031F\u0190\u0387\u0388',
			'\u030D\u0187\u0388\u0389\u030D\u0187\u0389\u038A',
			'\u031B\u018E\u038A\u038B\u038C',
			'\u030D\u0187\u038C\u038D\u02F7\u017C\u038D\u038E',
			'\u031B\u018E\u038E\u038F\u031D\u018F\u038F ',
			'\u0390\u0391\u0313\u018A\u0391\u0392',
			'\u0319\u018D\u0392\u0393\u02FD\u017F\u0393\u0394',
			'\u02FF\u0180\u0394\u0395\u0319\u018D\u0395"',
			'\u0396\u0397\u0303\u0182\u0397\u0398',
			'\u0319\u018D\u0398\u0399\u0313\u018A\u0399\u039A',
			'\u031F\u0190\u039A\u039B\u0315\u018B\u039B$',
			'\u039C\u039D\u02F9\u017D\u039D\u039E',
			'\u0327\u0194\u039E&\u039F\u03A0',
			'\u0305\u0183\u03A0\u03A1\u02F7\u017C\u03A1\u03A2',
			'\u0321\u0191\u03A2\u03A3\u0307\u0184\u03A3\u03A4',
			'\u0311\u0189\u03A4\u03A5\u0303\u0182\u03A5(',
			'\u03A6\u03A7\u0323\u0192\u03A7\u03A8',
			'\u0305\u0183\u03A8\u03A9\u02FF\u0180\u03A9\u03AA',
			'\u0319\u018D\u03AA\u03AB\u02FF\u0180\u03AB*',
			'\u03AC\u03AD\u0301\u0181\u03AD\u03AE',
			'\u0319\u018D\u03AE\u03AF\u0313\u018A\u03AF\u03B0',
			'\u030F\u0188\u03B0,\u03B1\u03B2',
			'\u02F7\u017C\u03B2\u03B3\u031B\u018E\u03B3.',
			'\u03B4\u03B5\u031B\u018E\u03B5\u03B6',
			'\u02FF\u0180\u03B6\u03B7\u030D\u0187\u03B7\u03B8',
			'\u02FF\u0180\u03B8\u03B9\u02FB\u017E\u03B9\u03BA',
			'\u031D\u018F\u03BA0\u03BB\u03BC',
			'\u02FD\u017F\u03BC\u03BD\u0307\u0184\u03BD\u03BE',
			'\u031B\u018E\u03BE\u03BF\u031D\u018F\u03BF\u03C0',
			'\u0307\u0184\u03C0\u03C1\u0311\u0189\u03C1\u03C2',
			'\u02FB\u017E\u03C2\u03C3\u031D\u018F\u03C32',
			'\u03C4\u03C5\u0307\u0184\u03C5\u03C6',
			'\u0311\u0189\u03C6\u03C7\u031B\u018E\u03C7\u03C8',
			'\u02FF\u0180\u03C8\u03C9\u0319\u018D\u03C9\u03CA',
			'\u031D\u018F\u03CA4\u03CB\u03CC',
			'\u0313\u018A\u03CC\u03CD\u0321\u0191\u03CD\u03CE',
			'\u02FF\u0180\u03CE\u03CF\u0319\u018D\u03CF\u03D0',
			'\u0323\u0192\u03D0\u03D1\u0319\u018D\u03D1\u03D2',
			'\u0307\u0184\u03D2\u03D3\u031D\u018F\u03D3\u03D4',
			'\u02FF\u0180\u03D46\u03D5\u03D6',
			'\u0313\u018A\u03D6\u03D7\u031F\u0190\u03D7\u03D8',
			'\u031D\u018F\u03D8\u03D9\u02FF\u0180\u03D9\u03DA',
			'\u0319\u018D\u03DA8\u03DB\u03DC',
			'\u031F\u0190\u03DC\u03DD\u0311\u0189\u03DD\u03DE',
			'\u0307\u0184\u03DE\u03DF\u0317\u018C\u03DF\u03E0',
			'\u031F\u0190\u03E0\u03E1\u02FF\u0180\u03E1\u03E2',
			'\u0309\u0185\u03E2\u03E3\u0313\u018A\u03E3\u03E4',
			'\u0307\u0184\u03E4\u03E5\u0311\u0189\u03E5:',
			'\u03E6\u03E7\u0315\u018B\u03E7\u03E8',
			'\u0319\u018D\u03E8\u03E9\u02FF\u0180\u03E9\u03EA',
			'\u031B\u018E\u03EA\u03EB\u02FF\u0180\u03EB\u03EC',
			'\u0319\u018D\u03EC\u03ED\u0321\u0191\u03ED\u03EE',
			'\u02FF\u0180\u03EE<\u03EF\u03F0',
			'\u0309\u0185\u03F0\u03F1\u0313\u018A\u03F1\u03F2',
			'\u0307\u0184\u03F2\u03F3\u0311\u0189\u03F3>',
			'\u03F4\u03F5\u030D\u0187\u03F5\u03F6',
			'\u02FF\u0180\u03F6\u03F7\u0301\u0181\u03F7\u03F8',
			'\u031D\u018F\u03F8@\u03F9\u03FA',
			'\u0319\u018D\u03FA\u03FB\u0307\u0184\u03FB\u03FC',
			'\u0303\u0182\u03FC\u03FD\u0305\u0183\u03FD\u03FE',
			'\u031D\u018F\u03FEB\u03FF\u0400',
			'\u0301\u0181\u0400\u0401\u031F\u0190\u0401\u0402',
			'\u030D\u0187\u0402\u0403\u030D\u0187\u0403D',
			'\u0404\u0405\u0313\u018A\u0405\u0406',
			'\u0311\u0189\u0406F\u0407\u0408',
			'\u0315\u018B\u0408\u0409\u02F7\u017C\u0409\u040A',
			'\u0319\u018D\u040A\u040B\u031D\u018F\u040B\u040C',
			'\u0307\u0184\u040C\u040D\u031D\u018F\u040D\u040E',
			'\u0307\u0184\u040E\u040F\u0313\u018A\u040F\u0410',
			'\u0311\u0189\u0410H\u0411\u0412',
			'\u0315\u018B\u0412\u0413\u02F7\u017C\u0413\u0414',
			'\u0319\u018D\u0414\u0415\u031D\u018F\u0415\u0416',
			'\u0307\u0184\u0416\u0417\u031D\u018F\u0417\u0418',
			'\u0307\u0184\u0418\u0419\u0313\u018A\u0419\u041A',
			'\u0311\u0189\u041A\u041B\u031B\u018E\u041BJ',
			'\u041C\u041D\u031D\u018F\u041D\u041E',
			'\u02F7\u017C\u041E\u041F\u02F9\u017D\u041F\u0420',
			'\u030D\u0187\u0420\u0421\u02FF\u0180\u0421L',
			'\u0422\u0423\u031D\u018F\u0423\u0424',
			'\u02F7\u017C\u0424\u0425\u02F9\u017D\u0425\u0426',
			'\u030D\u0187\u0426\u0427\u02FF\u0180\u0427\u0428',
			'\u031B\u018E\u0428N\u0429\u042A',
			'\u02FB\u017E\u042A\u042B\u0313\u018A\u042B\u042C',
			'\u030D\u0187\u042C\u042D\u031F\u0190\u042D\u042E',
			'\u030F\u0188\u042E\u042F\u0311\u0189\u042F\u0430',
			'\u031B\u018E\u0430P\u0431\u0432',
			'\u0307\u0184\u0432\u0433\u0311\u0189\u0433\u0434',
			'\u02FD\u017F\u0434\u0435\u02FF\u0180\u0435\u0436',
			'\u0325\u0193\u0436R\u0437\u0438',
			'\u0307\u0184\u0438\u0439\u0311\u0189\u0439\u043A',
			'\u02FD\u017F\u043A\u043B\u02FF\u0180\u043B\u043C',
			'\u0325\u0193\u043C\u043D\u02FF\u0180\u043D\u043E',
			'\u031B\u018E\u043ET\u043F\u0440',
			'\u0319\u018D\u0440\u0441\u02FF\u0180\u0441\u0442',
			'\u02F9\u017D\u0442\u0443\u031F\u0190\u0443\u0444',
			'\u0307\u0184\u0444\u0445\u030D\u0187\u0445\u0446',
			'\u02FD\u017F\u0446V\u0447\u0448',
			'\u0301\u0181\u0448\u0449\u031F\u0190\u0449\u044A',
			'\u0311\u0189\u044A\u044B\u02FB\u017E\u044B\u044C',
			'\u031D\u018F\u044C\u044D\u0307\u0184\u044D\u044E',
			'\u0313\u018A\u044E\u044F\u0311\u0189\u044F\u0450',
			'\u031B\u018E\u0450X\u0451\u0452',
			'\u031B\u018E\u0452\u0453\u0305\u0183\u0453\u0454',
			'\u0313\u018A\u0454\u0455\u0323\u0192\u0455Z',
			'\u0456\u0457\u030F\u0188\u0457\u0458',
			'\u031B\u018E\u0458\u0459\u02FB\u017E\u0459\u045A',
			'\u030B\u0186\u045A\\\u045B\u045C',
			'\u0319\u018D\u045C\u045D\u02FF\u0180\u045D\u045E',
			'\u0315\u018B\u045E\u045F\u02F7\u017C\u045F\u0460',
			'\u0307\u0184\u0460\u0461\u0319\u018D\u0461^',
			'\u0462\u0463\u02FD\u017F\u0463\u0464',
			'\u0307\u0184\u0464\u0465\u0319\u018D\u0465\u0466',
			'\u02FF\u0180\u0466\u0467\u02FB\u017E\u0467\u0468',
			'\u031D\u018F\u0468\u0469\u0313\u018A\u0469\u046A',
			'\u0319\u018D\u046A\u046B\u0327\u0194\u046B`',
			'\u046C\u046D\u030D\u0187\u046D\u046E',
			'\u0313\u018A\u046E\u046F\u02FB\u017E\u046F\u0470',
			'\u02F7\u017C\u0470\u0471\u030D\u0187\u0471b',
			'\u0472\u0473\u031D\u018F\u0473\u0474',
			'\u0319\u018D\u0474\u0475\u02F7\u017C\u0475\u0476',
			'\u0311\u0189\u0476\u0477\u031B\u018E\u0477\u0478',
			'\u0301\u0181\u0478\u0479\u0313\u018A\u0479\u047A',
			'\u0319\u018D\u047A\u047B\u030F\u0188\u047Bd',
			'\u047C\u047D\u031F\u0190\u047D\u047E',
			'\u031B\u018E\u047E\u047F\u0307\u0184\u047F\u0480',
			'\u0311\u0189\u0480\u0481\u0303\u0182\u0481f',
			'\u0482\u0483\u02FB\u017E\u0483\u0484',
			'\u030D\u0187\u0484\u0485\u031F\u0190\u0485\u0486',
			'\u031B\u018E\u0486\u0487\u031D\u018F\u0487\u0488',
			'\u02FF\u0180\u0488\u0489\u0319\u018D\u0489h',
			'\u048A\u048B\u02FD\u017F\u048B\u048C',
			'\u0307\u0184\u048C\u048D\u031B\u018E\u048D\u048E',
			'\u031D\u018F\u048E\u048F\u0319\u018D\u048F\u0490',
			'\u0307\u0184\u0490\u0491\u02F9\u017D\u0491\u0492',
			'\u031F\u0190\u0492\u0493\u031D\u018F\u0493\u0494',
			'\u02FF\u0180\u0494j\u0495\u0496',
			'\u031B\u018E\u0496\u0497\u0313\u018A\u0497\u0498',
			'\u0319\u018D\u0498\u0499\u031D\u018F\u0499l',
			'\u049A\u049B\u031F\u0190\u049B\u049C',
			'\u0311\u0189\u049C\u049D\u0307\u0184\u049D\u049E',
			'\u0313\u018A\u049E\u049F\u0311\u0189\u049Fn',
			'\u04A0\u04A1\u02FF\u0180\u04A1\u04A2',
			'\u0325\u0193\u04A2\u04A3\u02FB\u017E\u04A3\u04A4',
			'\u02FF\u0180\u04A4\u04A5\u0315\u018B\u04A5\u04A6',
			'\u031D\u018F\u04A6p\u04A7\u04A8',
			'\u030D\u0187\u04A8\u04A9\u0313\u018A\u04A9\u04AA',
			'\u02F7\u017C\u04AA\u04AB\u02FD\u017F\u04ABr',
			'\u04AC\u04AD\u02FF\u0180\u04AD\u04AE',
			'\u0325\u0193\u04AE\u04AF\u0315\u018B\u04AF\u04B0',
			'\u0313\u018A\u04B0\u04B1\u0319\u018D\u04B1\u04B2',
			'\u031D\u018F\u04B2t\u04B3\u04B4',
			'\u0307\u0184\u04B4\u04B5\u030F\u0188\u04B5\u04B6',
			'\u0315\u018B\u04B6\u04B7\u0313\u018A\u04B7\u04B8',
			'\u0319\u018D\u04B8\u04B9\u031D\u018F\u04B9v',
			'\u04BA\u04BB\u0319\u018D\u04BB\u04BC',
			'\u02FF\u0180\u04BC\u04BD\u0315\u018B\u04BD\u04BE',
			'\u030D\u0187\u04BE\u04BF\u0307\u0184\u04BF\u04C0',
			'\u02FB\u017E\u04C0\u04C1\u02F7\u017C\u04C1\u04C2',
			'\u031D\u018F\u04C2\u04C3\u0307\u0184\u04C3\u04C4',
			'\u0313\u018A\u04C4\u04C5\u0311\u0189\u04C5x',
			'\u04C6\u04C7\u030F\u0188\u04C7\u04C8',
			'\u02FF\u0180\u04C8\u04C9\u031D\u018F\u04C9\u04CA',
			'\u02F7\u017C\u04CA\u04CB\u02FD\u017F\u04CB\u04CC',
			'\u02F7\u017C\u04CC\u04CD\u031D\u018F\u04CD\u04CE',
			'\u02F7\u017C\u04CEz\u04CF\u04D0',
			'\u02FD\u017F\u04D0\u04D1\u02F7\u017C\u04D1\u04D2',
			'\u031D\u018F\u04D2\u04D3\u02F7\u017C\u04D3|',
			'\u04D4\u04D5\u0307\u0184\u04D5\u04D6',
			'\u0311\u0189\u04D6\u04D7\u0315\u018B\u04D7\u04D8',
			'\u02F7\u017C\u04D8\u04D9\u031D\u018F\u04D9\u04DA',
			'\u0305\u0183\u04DA~\u04DB\u04DC',
			'\u0307\u0184\u04DC\u04DD\u031B\u018E\u04DD\x80',
			'\u04DE\u04DF\u0311\u0189\u04DF\u04E0',
			'\u031F\u0190\u04E0\u04E1\u030D\u0187\u04E1\u04E2',
			'\u030D\u0187\u04E2\x82\u04E3\u04E4',
			'\u02FB\u017E\u04E4\u04E5\u0319\u018D\u04E5\u04E6',
			'\u02FF\u0180\u04E6\u04E7\u02F7\u017C\u04E7\u04E8',
			'\u031D\u018F\u04E8\u04E9\u02FF\u0180\u04E9\x84',
			'\u04EA\u04EB\u02FF\u0180\u04EB\u04EC',
			'\u0325\u0193\u04EC\u04ED\u031D\u018F\u04ED\u04EE',
			'\u02FF\u0180\u04EE\u04EF\u0319\u018D\u04EF\u04F0',
			'\u0311\u0189\u04F0\u04F1\u02F7\u017C\u04F1\u04F2',
			'\u030D\u0187\u04F2\x86\u04F3\u04F4',
			'\u02F7\u017C\u04F4\u04F5\u030D\u0187\u04F5\u04F6',
			'\u031D\u018F\u04F6\u04F7\u02FF\u0180\u04F7\u04F8',
			'\u0319\u018D\u04F8\x88\u04F9\u04FA',
			'\u02FB\u017E\u04FA\u04FB\u0305\u0183\u04FB\u04FC',
			'\u02F7\u017C\u04FC\u04FD\u0311\u0189\u04FD\u04FE',
			'\u0303\u0182\u04FE\u04FF\u02FF\u0180\u04FF\x8A',
			'\u0500\u0501\u02FB\u017E\u0501\u0502',
			'\u0313\u018A\u0502\u0503\u030D\u0187\u0503\u0504',
			'\u031F\u0190\u0504\u0505\u030F\u0188\u0505\u0506',
			'\u0311\u0189\u0506\x8C\u0507\u0508',
			'\u0301\u0181\u0508\u0509\u0307\u0184\u0509\u050A',
			'\u0319\u018D\u050A\u050B\u031B\u018E\u050B\u050C',
			'\u031D\u018F\u050C\x8E\u050D\u050E',
			'\u02F7\u017C\u050E\u050F\u0301\u0181\u050F\u0510',
			'\u031D\u018F\u0510\u0511\u02FF\u0180\u0511\u0512',
			'\u0319\u018D\u0512\x90\u0513\u0514',
			'\u02FD\u017F\u0514\u0515\u02FF\u0180\u0515\u0516',
			'\u031B\u018E\u0516\u0517\u02FB\u017E\u0517\u0518',
			'\u0319\u018D\u0518\u0519\u0307\u0184\u0519\u051A',
			'\u02F9\u017D\u051A\u051B\u02FF\u0180\u051B\x92',
			'\u051C\u051D\u02FD\u017F\u051D\u051E',
			'\u0319\u018D\u051E\u051F\u0313\u018A\u051F\u0520',
			'\u0315\u018B\u0520\x94\u0521\u0522',
			'\u0319\u018D\u0522\u0523\u02FF\u0180\u0523\u0524',
			'\u0311\u0189\u0524\u0525\u02F7\u017C\u0525\u0526',
			'\u030F\u0188\u0526\u0527\u02FF\u0180\u0527\x96',
			'\u0528\u0529\u031D\u018F\u0529\u052A',
			'\u0313\u018A\u052A\x98\u052B\u052C',
			'\u02FB\u017E\u052C\u052D\u0313\u018A\u052D\u052E',
			'\u030F\u0188\u052E\u052F\u030F\u0188\u052F\u0530',
			'\u02FF\u0180\u0530\u0531\u0311\u0189\u0531\u0532',
			'\u031D\u018F\u0532\x9A\u0533\u0534',
			'\u02F9\u017D\u0534\u0535\u0313\u018A\u0535\u0536',
			'\u0313\u018A\u0536\u0537\u030D\u0187\u0537\u0538',
			'\u02FF\u0180\u0538\u0539\u02F7\u017C\u0539\u053A',
			'\u0311\u0189\u053A\x9C\u053B\u053C',
			'\u031D\u018F\u053C\u053D\u0307\u0184\u053D\u053E',
			'\u0311\u0189\u053E\u053F\u0327\u0194\u053F\u0540',
			'\u0307\u0184\u0540\u0541\u0311\u0189\u0541\u0542',
			'\u031D\u018F\u0542\x9E\u0543\u0544',
			'\u031B\u018E\u0544\u0545\u030F\u0188\u0545\u0546',
			'\u02F7\u017C\u0546\u0547\u030D\u0187\u0547\u0548',
			'\u030D\u0187\u0548\u0549\u0307\u0184\u0549\u054A',
			'\u0311\u0189\u054A\u054B\u031D\u018F\u054B\xA0',
			'\u054C\u054D\u0307\u0184\u054D\u054E',
			'\u0311\u0189\u054E\u054F\u031D\u018F\u054F\u0559',
			'\u0550\u0551\u0307\u0184\u0551\u0552',
			'\u0311\u0189\u0552\u0553\u031D\u018F\u0553\u0554',
			'\u02FF\u0180\u0554\u0555\u0303\u0182\u0555\u0556',
			'\u02FF\u0180\u0556\u0557\u0319\u018D\u0557\u0559',
			'\u0558\u054C\u0558\u0550',
			'\u0559\xA2\u055A\u055B',
			'\u02F9\u017D\u055B\u055C\u0307\u0184\u055C\u055D',
			'\u0303\u0182\u055D\u055E\u0307\u0184\u055E\u055F',
			'\u0311\u0189\u055F\u0560\u031D\u018F\u0560\xA4',
			'\u0561\u0562\u0301\u0181\u0562\u0563',
			'\u030D\u0187\u0563\u0564\u0313\u018A\u0564\u0565',
			'\u02F7\u017C\u0565\u0566\u031D\u018F\u0566\xA6',
			'\u0567\u0568\u02FD\u017F\u0568\u0569',
			'\u0313\u018A\u0569\u056A\u031F\u0190\u056A\u056B',
			'\u02F9\u017D\u056B\u056C\u030D\u0187\u056C\u056D',
			'\u02FF\u0180\u056D\xA8\u056E\u056F',
			'\u0315\u018B\u056F\u0570\u0319\u018D\u0570\u0571',
			'\u02FF\u0180\u0571\u0572\u02FB\u017E\u0572\u0573',
			'\u0307\u0184\u0573\u0574\u031B\u018E\u0574\u0575',
			'\u0307\u0184\u0575\u0576\u0313\u018A\u0576\u0577',
			'\u0311\u0189\u0577\xAA\u0578\u0579',
			'\u02FD\u017F\u0579\u057A\u02F7\u017C\u057A\u057B',
			'\u031D\u018F\u057B\u057C\u02FF\u0180\u057C\xAC',
			'\u057D\u057E\u02FD\u017F\u057E\u057F',
			'\u02F7\u017C\u057F\u0580\u031D\u018F\u0580\u0581',
			'\u02FF\u0180\u0581\u0582\u031D\u018F\u0582\u0583',
			'\u0307\u0184\u0583\u0584\u030F\u0188\u0584\u0585',
			'\u02FF\u0180\u0585\xAE\u0586\u0587',
			'\u031D\u018F\u0587\u0588\u0307\u0184\u0588\u0589',
			'\u030F\u0188\u0589\u058A\u02FF\u0180\u058A\u058B',
			'\u031B\u018E\u058B\u058C\u031D\u018F\u058C\u058D',
			'\u02F7\u017C\u058D\u058E\u030F\u0188\u058E\u058F',
			'\u0315\u018B\u058F\xB0\u0590\u0591',
			'\u031D\u018F\u0591\u0592\u0307\u0184\u0592\u0593',
			'\u030F\u0188\u0593\u0594\u02FF\u0180\u0594\u0595',
			'\u031B\u018E\u0595\u0596\u031D\u018F\u0596\u0597',
			'\u02F7\u017C\u0597\u0598\u030F\u0188\u0598\u0599',
			'\u0315\u018B\u0599\u059A\u030D\u0187\u059A\u059B',
			'\u0313\u018A\u059B\u059C\u02FB\u017E\u059C\u059D',
			'\u02F7\u017C\u059D\u059E\u030D\u0187\u059E\u059F',
			'\u031D\u018F\u059F\u05A0\u0329\u0195\u05A0\xB2',
			'\u05A1\u05A2\u031D\u018F\u05A2\u05A3',
			'\u0307\u0184\u05A3\u05A4\u030F\u0188\u05A4\u05A5',
			'\u02FF\u0180\u05A5\xB4\u05A6\u05A7',
			'\u0329\u0195\u05A7\u05A8\u0313\u018A\u05A8\u05A9',
			'\u0311\u0189\u05A9\u05AA\u02FF\u0180\u05AA\xB6',
			'\u05AB\u05AC\u0307\u0184\u05AC\u05AD',
			'\u0311\u0189\u05AD\u05AE\u031D\u018F\u05AE\u05AF',
			'\u02FF\u0180\u05AF\u05B0\u0319\u018D\u05B0\u05B1',
			'\u0321\u0191\u05B1\u05B2\u02F7\u017C\u05B2\u05B3',
			'\u030D\u0187\u05B3\xB8\u05B4\u05B5',
			'\u02FD\u017F\u05B5\u05B6\u02FF\u0180\u05B6\u05B7',
			'\u02FB\u017E\u05B7\u05B8\u0307\u0184\u05B8\u05B9',
			'\u030F\u0188\u05B9\u05BA\u02F7\u017C\u05BA\u05BB',
			'\u030D\u0187\u05BB\u05C5\u05BC\u05BD',
			'\u0311\u0189\u05BD\u05BE\u031F\u0190\u05BE\u05BF',
			'\u030F\u0188\u05BF\u05C0\u02FF\u0180\u05C0\u05C1',
			'\u0319\u018D\u05C1\u05C2\u0307\u0184\u05C2\u05C3',
			'\u02FB\u017E\u05C3\u05C5\u05C4\u05B4',
			'\u05C4\u05BC\u05C5\xBA',
			'\u05C6\u05C7\u031B\u018E\u05C7\u05C8',
			'\u031D\u018F\u05C8\u05C9\u0319\u018D\u05C9\u05CA',
			'\u0307\u0184\u05CA\u05CB\u0311\u0189\u05CB\u05CC',
			'\u0303\u0182\u05CC\xBC\u05CD\u05CE',
			'\u02FB\u017E\u05CE\u05CF\u0305\u0183\u05CF\u05D0',
			'\u02F7\u017C\u05D0\u05D1\u0319\u018D\u05D1\xBE',
			'\u05D2\u05D3\u0321\u0191\u05D3\u05D4',
			'\u02F7\u017C\u05D4\u05D5\u0319\u018D\u05D5\u05D6',
			'\u02FB\u017E\u05D6\u05D7\u0305\u0183\u05D7\u05D8',
			'\u02F7\u017C\u05D8\u05D9\u0319\u018D\u05D9\xC0',
			'\u05DA\u05DB\u02F7\u017C\u05DB\u05DC',
			'\u0319\u018D\u05DC\u05DD\u0319\u018D\u05DD\u05DE',
			'\u02F7\u017C\u05DE\u05DF\u0327\u0194\u05DF\xC2',
			'\u05E0\u05E1\u031B\u018E\u05E1\u05E2',
			'\u031D\u018F\u05E2\u05E3\u0319\u018D\u05E3\u05E4',
			'\u031F\u0190\u05E4\u05E5\u02FB\u017E\u05E5\u05E6',
			'\u031D\u018F\u05E6\xC4\u05E7\u05E8',
			'\u030F\u0188\u05E8\u05E9\u02F7\u017C\u05E9\u05EA',
			'\u0315\u018B\u05EA\xC6\u05EB\u05EC',
			'\u031F\u0190\u05EC\u05ED\u0311\u0189\u05ED\u05EE',
			'\u0307\u0184\u05EE\u05EF\u0313\u018A\u05EF\u05F0',
			'\u0311\u0189\u05F0\u05F1\u031D\u018F\u05F1\u05F2',
			'\u0327\u0194\u05F2\u05F3\u0315\u018B\u05F3\u05F4',
			'\u02FF\u0180\u05F4\xC8\u05F5\u05F6',
			'\u0319\u018D\u05F6\u05F7\u02FF\u0180\u05F7\u05F8',
			'\u02FD\u017F\u05F8\u05F9\u031F\u0190\u05F9\u05FA',
			'\u02FB\u017E\u05FA\u05FB\u02FF\u0180\u05FB\xCA',
			'\u05FC\u05FD\u0315\u018B\u05FD\u05FE',
			'\u02F7\u017C\u05FE\u05FF\u0319\u018D\u05FF\u0600',
			'\u031D\u018F\u0600\u0601\u0307\u0184\u0601\u0602',
			'\u031D\u018F\u0602\u0603\u0307\u0184\u0603\u0604',
			'\u0313\u018A\u0604\u0605\u0311\u0189\u0605\u0606',
			'\u02FF\u0180\u0606\u0607\u02FD\u017F\u0607\xCC',
			'\u0608\u0609\u02FB\u017E\u0609\u060A',
			'\u030D\u0187\u060A\u060B\u031F\u0190\u060B\u060C',
			'\u031B\u018E\u060C\u060D\u031D\u018F\u060D\u060E',
			'\u02FF\u0180\u060E\u060F\u0319\u018D\u060F\u0610',
			'\u02FF\u0180\u0610\u0611\u02FD\u017F\u0611\xCE',
			'\u0612\u0613\u031B\u018E\u0613\u0614',
			'\u0313\u018A\u0614\u0615\u0319\u018D\u0615\u0616',
			'\u031D\u018F\u0616\u0617\u02FF\u0180\u0617\u0618',
			'\u02FD\u017F\u0618\xD0\u0619\u061A',
			'\u0307\u0184\u061A\u061B\u0311\u0189\u061B\u061C',
			'\u031D\u018F\u061C\u061D\u0313\u018A\u061D\xD2',
			'\u061E\u061F\u02F9\u017D\u061F\u0620',
			'\u031F\u0190\u0620\u0621\u02FB\u017E\u0621\u0622',
			'\u030B\u0186\u0622\u0623\u02FF\u0180\u0623\u0624',
			'\u031D\u018F\u0624\u0625\u031B\u018E\u0625\xD4',
			'\u0626\u0627\u0319\u018D\u0627\u0628',
			'\u0313\u018A\u0628\u0629\u0323\u0192\u0629\xD6',
			'\u062A\u062B\u0319\u018D\u062B\u062C',
			'\u0313\u018A\u062C\u062D\u0323\u0192\u062D\u062E',
			'\u031B\u018E\u062E\xD8\u062F\u0630',
			'\u0301\u0181\u0630\u0631\u0313\u018A\u0631\u0632',
			'\u0319\u018D\u0632\u0633\u030F\u0188\u0633\u0634',
			'\u02F7\u017C\u0634\u0635\u031D\u018F\u0635\xDA',
			'\u0636\u0637\u02FD\u017F\u0637\u0638',
			'\u02FF\u0180\u0638\u0639\u030D\u0187\u0639\u063A',
			'\u0307\u0184\u063A\u063B\u030F\u0188\u063B\u063C',
			'\u0307\u0184\u063C\u063D\u031D\u018F\u063D\u063E',
			'\u02FF\u0180\u063E\u063F\u02FD\u017F\u063F\xDC',
			'\u0640\u0641\u0301\u0181\u0641\u0642',
			'\u0307\u0184\u0642\u0643\u02FF\u0180\u0643\u0644',
			'\u030D\u0187\u0644\u0645\u02FD\u017F\u0645\u0646',
			'\u031B\u018E\u0646\xDE\u0647\u0648',
			'\u031D\u018F\u0648\u0649\u02FF\u0180\u0649\u064A',
			'\u0319\u018D\u064A\u064B\u030F\u0188\u064B\u064C',
			'\u0307\u0184\u064C\u064D\u0311\u0189\u064D\u064E',
			'\u02F7\u017C\u064E\u064F\u031D\u018F\u064F\u0650',
			'\u02FF\u0180\u0650\u0651\u02FD\u017F\u0651\xE0',
			'\u0652\u0653\u02FF\u0180\u0653\u0654',
			'\u031B\u018E\u0654\u0655\u02FB\u017E\u0655\u0656',
			'\u02F7\u017C\u0656\u0657\u0315\u018B\u0657\u0658',
			'\u02FF\u0180\u0658\u0659\u02FD\u017F\u0659\xE2',
			'\u065A\u065B\u02FB\u017E\u065B\u065C',
			'\u0313\u018A\u065C\u065D\u030D\u0187\u065D\u065E',
			'\u030D\u0187\u065E\u065F\u02FF\u0180\u065F\u0660',
			'\u02FB\u017E\u0660\u0661\u031D\u018F\u0661\u0662',
			'\u0307\u0184\u0662\u0663\u0313\u018A\u0663\u0664',
			'\u0311\u0189\u0664\xE4\u0665\u0666',
			'\u0307\u0184\u0666\u0667\u031D\u018F\u0667\u0668',
			'\u02FF\u0180\u0668\u0669\u030F\u0188\u0669\u066A',
			'\u031B\u018E\u066A\xE6\u066B\u066C',
			'\u030B\u0186\u066C\u066D\u02FF\u0180\u066D\u066E',
			'\u0327\u0194\u066E\u066F\u031B\u018E\u066F\xE8',
			'\u0670\u0671\x07&\u0671\u0672',
			'\u030B\u0186\u0672\u0673\u02FF\u0180\u0673\u0674',
			'\u0327\u0194\u0674\u0675\x07&\u0675\xEA',
			'\u0676\u0677\u030B\u0186\u0677\u0678',
			'\u0307\u0184\u0678\u0679\u030D\u0187\u0679\u067A',
			'\u030D\u0187\u067A\xEC\u067B\u067C',
			'\u030D\u0187\u067C\u067D\u0307\u0184\u067D\u067E',
			'\u0311\u0189\u067E\u067F\u02FF\u0180\u067F\u0680',
			'\u031B\u018E\u0680\xEE\u0681\u0682',
			'\u031B\u018E\u0682\u0683\u031D\u018F\u0683\u0684',
			'\u0313\u018A\u0684\u0685\u0319\u018D\u0685\u0686',
			'\u02FF\u0180\u0686\u0687\u02FD\u017F\u0687\xF0',
			'\u0688\u0689\u0301\u0181\u0689\u068A',
			'\u0307\u0184\u068A\u068B\u030D\u0187\u068B\u068C',
			'\u02FF\u0180\u068C\u068D\u0301\u0181\u068D\u068E',
			'\u0313\u018A\u068E\u068F\u0319\u018D\u068F\u0690',
			'\u030F\u0188\u0690\u0691\u02F7\u017C\u0691\u0692',
			'\u031D\u018F\u0692\xF2\u0693\u0694',
			'\u0307\u0184\u0694\u0695\u0311\u0189\u0695\u0696',
			'\u0315\u018B\u0696\u0697\u031F\u0190\u0697\u0698',
			'\u031D\u018F\u0698\u0699\u0301\u0181\u0699\u069A',
			'\u0313\u018A\u069A\u069B\u0319\u018D\u069B\u069C',
			'\u030F\u0188\u069C\u069D\u02F7\u017C\u069D\u069E',
			'\u031D\u018F\u069E\xF4\u069F\u06A0',
			'\u0313\u018A\u06A0\u06A1\u031F\u0190\u06A1\u06A2',
			'\u031D\u018F\u06A2\u06A3\u0315\u018B\u06A3\u06A4',
			'\u031F\u0190\u06A4\u06A5\u031D\u018F\u06A5\u06A6',
			'\u0301\u0181\u06A6\u06A7\u0313\u018A\u06A7\u06A8',
			'\u0319\u018D\u06A8\u06A9\u030F\u0188\u06A9\u06AA',
			'\u02F7\u017C\u06AA\u06AB\u031D\u018F\u06AB\xF6',
			'\u06AC\u06AD\u0307\u0184\u06AD\u06AE',
			'\u0311\u0189\u06AE\u06AF\u0315\u018B\u06AF\u06B0',
			'\u031F\u0190\u06B0\u06B1\u031D\u018F\u06B1\u06B2',
			'\u02FD\u017F\u06B2\u06B3\u0319\u018D\u06B3\u06B4',
			'\u0307\u0184\u06B4\u06B5\u0321\u0191\u06B5\u06B6',
			'\u02FF\u0180\u06B6\u06B7\u0319\u018D\u06B7\xF8',
			'\u06B8\u06B9\u0313\u018A\u06B9\u06BA',
			'\u031F\u0190\u06BA\u06BB\u031D\u018F\u06BB\u06BC',
			'\u0315\u018B\u06BC\u06BD\u031F\u0190\u06BD\u06BE',
			'\u031D\u018F\u06BE\u06BF\u02FD\u017F\u06BF\u06C0',
			'\u0319\u018D\u06C0\u06C1\u0307\u0184\u06C1\u06C2',
			'\u0321\u0191\u06C2\u06C3\u02FF\u0180\u06C3\u06C4',
			'\u0319\u018D\u06C4\xFA\u06C5\u06C6',
			'\u02FF\u0180\u06C6\u06C7\u0311\u0189\u06C7\u06C8',
			'\u02F7\u017C\u06C8\u06C9\u02F9\u017D\u06C9\u06CA',
			'\u030D\u0187\u06CA\u06CB\u02FF\u0180\u06CB\xFC',
			'\u06CC\u06CD\u02FD\u017F\u06CD\u06CE',
			'\u0307\u0184\u06CE\u06CF\u031B\u018E\u06CF\u06D0',
			'\u02F7\u017C\u06D0\u06D1\u02F9\u017D\u06D1\u06D2',
			'\u030D\u0187\u06D2\u06D3\u02FF\u0180\u06D3\xFE',
			'\u06D4\u06D5\u030D\u0187\u06D5\u06D6',
			'\u0313\u018A\u06D6\u06D7\u02FB\u017E\u06D7\u06D8',
			'\u02F7\u017C\u06D8\u06D9\u031D\u018F\u06D9\u06DA',
			'\u0307\u0184\u06DA\u06DB\u0313\u018A\u06DB\u06DC',
			'\u0311\u0189\u06DC\u0100\u06DD\u06DE',
			'\u031D\u018F\u06DE\u06DF\u02F7\u017C\u06DF\u06E0',
			'\u02F9\u017D\u06E0\u06E1\u030D\u0187\u06E1\u06E2',
			'\u02FF\u0180\u06E2\u06E3\u031B\u018E\u06E3\u06E4',
			'\u02F7\u017C\u06E4\u06E5\u030F\u0188\u06E5\u06E6',
			'\u0315\u018B\u06E6\u06E7\u030D\u0187\u06E7\u06E8',
			'\u02FF\u0180\u06E8\u0102\u06E9\u06EA',
			'\u02F9\u017D\u06EA\u06EB\u031F\u0190\u06EB\u06EC',
			'\u02FB\u017E\u06EC\u06ED\u030B\u0186\u06ED\u06EE',
			'\u02FF\u0180\u06EE\u06EF\u031D\u018F\u06EF\u0104',
			'\u06F0\u06F1\u0313\u018A\u06F1\u06F2',
			'\u031F\u0190\u06F2\u06F3\u031D\u018F\u06F3\u0106',
			'\u06F4\u06F5\u0313\u018A\u06F5\u06F6',
			'\u0301\u0181\u06F6\u0108\u06F7\u06F8',
			'\u0315\u018B\u06F8\u06F9\u02FF\u0180\u06F9\u06FA',
			'\u0319\u018D\u06FA\u06FB\u02FB\u017E\u06FB\u06FC',
			'\u02FF\u0180\u06FC\u06FD\u0311\u0189\u06FD\u06FE',
			'\u031D\u018F\u06FE\u010A\u06FF\u0700',
			'\u02FB\u017E\u0700\u0701\u02F7\u017C\u0701\u0702',
			'\u031B\u018E\u0702\u0703\u031D\u018F\u0703\u010C',
			'\u0704\u0705\u02F7\u017C\u0705\u0706',
			'\u02FD\u017F\u0706\u0707\u02FD\u017F\u0707\u010E',
			'\u0708\u0709\u0319\u018D\u0709\u070A',
			'\u02FF\u0180\u070A\u070B\u0315\u018B\u070B\u070C',
			'\u030D\u0187\u070C\u070D\u02F7\u017C\u070D\u070E',
			'\u02FB\u017E\u070E\u070F\u02FF\u0180\u070F\u0110',
			'\u0710\u0711\u0319\u018D\u0711\u0712',
			'\u030D\u0187\u0712\u0713\u0307\u0184\u0713\u0714',
			'\u030B\u0186\u0714\u0715\u02FF\u0180\u0715\u0112',
			'\u0716\u0717\u0319\u018D\u0717\u0718',
			'\u02FF\u0180\u0718\u0719\u0303\u0182\u0719\u071A',
			'\u02FF\u0180\u071A\u071B\u0325\u0193\u071B\u071C',
			'\u0315\u018B\u071C\u0114\u071D\u071E',
			'\u031D\u018F\u071E\u071F\u02FF\u0180\u071F\u0720',
			'\u030F\u0188\u0720\u0721\u0315\u018B\u0721\u0722',
			'\u0313\u018A\u0722\u0723\u0319\u018D\u0723\u0724',
			'\u02F7\u017C\u0724\u0725\u0319\u018D\u0725\u0726',
			'\u0327\u0194\u0726\u0116\u0727\u0728',
			'\u0301\u0181\u0728\u0729\u031F\u0190\u0729\u072A',
			'\u0311\u0189\u072A\u072B\u02FB\u017E\u072B\u072C',
			'\u031D\u018F\u072C\u072D\u0307\u0184\u072D\u072E',
			'\u0313\u018A\u072E\u072F\u0311\u0189\u072F\u0118',
			'\u0730\u0731\u030F\u0188\u0731\u0732',
			'\u02F7\u017C\u0732\u0733\u02FB\u017E\u0733\u0734',
			'\u0319\u018D\u0734\u0735\u0313\u018A\u0735\u011A',
			'\u0736\u0737\u0301\u0181\u0737\u0738',
			'\u0307\u0184\u0738\u0739\u030D\u0187\u0739\u073A',
			'\u02FF\u0180\u073A\u011C\u073B\u073C',
			'\u0309\u0185\u073C\u073D\u02F7\u017C\u073D\u073E',
			'\u0319\u018D\u073E\u011E\u073F\u0740',
			'\u02FF\u0180\u0740\u0741\u0325\u0193\u0741\u0742',
			'\u0315\u018B\u0742\u0743\u030D\u0187\u0743\u0744',
			'\u02F7\u017C\u0744\u0745\u0307\u0184\u0745\u0746',
			'\u0311\u0189\u0746\u0120\u0747\u0748',
			'\u02FF\u0180\u0748\u0749\u0325\u0193\u0749\u074A',
			'\u031D\u018F\u074A\u074B\u02FF\u0180\u074B\u074C',
			'\u0311\u0189\u074C\u074D\u02FD\u017F\u074D\u074E',
			'\u02FF\u0180\u074E\u074F\u02FD\u017F\u074F\u0122',
			'\u0750\u0751\u0301\u0181\u0751\u0752',
			'\u0313\u018A\u0752\u0753\u0319\u018D\u0753\u0754',
			'\u030F\u0188\u0754\u0755\u02F7\u017C\u0755\u0756',
			'\u031D\u018F\u0756\u0757\u031D\u018F\u0757\u0758',
			'\u02FF\u0180\u0758\u0759\u02FD\u017F\u0759\u0124',
			'\u075A\u075B\u02FD\u017F\u075B\u075C',
			'\u02FF\u0180\u075C\u075D\u0315\u018B\u075D\u075E',
			'\u02FF\u0180\u075E\u075F\u0311\u0189\u075F\u0760',
			'\u02FD\u017F\u0760\u0761\u02FF\u0180\u0761\u0762',
			'\u0311\u0189\u0762\u0763\u02FB\u017E\u0763\u0764',
			'\u0327\u0194\u0764\u0126\u0765\u0766',
			'\u030D\u0187\u0766\u0767\u0313\u018A\u0767\u0768',
			'\u0303\u0182\u0768\u0769\u0307\u0184\u0769\u076A',
			'\u02FB\u017E\u076A\u076B\u02F7\u017C\u076B\u076C',
			'\u030D\u0187\u076C\u0128\u076D\u076E',
			'\u031B\u018E\u076E\u076F\u02FF\u0180\u076F\u0770',
			'\u0319\u018D\u0770\u0771\u02FD\u017F\u0771\u0772',
			'\u02FF\u0180\u0772\u012A\u0773\u0774',
			'\u0323\u0192\u0774\u0775\u0307\u0184\u0775\u0776',
			'\u031D\u018F\u0776\u0777\u0305\u0183\u0777\u012C',
			'\u0778\u0779\u02FD\u017F\u0779\u077A',
			'\u02FF\u0180\u077A\u077B\u0301\u0181\u077B\u077C',
			'\u02FF\u0180\u077C\u077D\u0319\u018D\u077D\u077E',
			'\u0319\u018D\u077E\u077F\u02FF\u0180\u077F\u0780',
			'\u02FD\u017F\u0780\u012E\u0781\u0782',
			'\u031B\u018E\u0782\u0783\u02FF\u0180\u0783\u0784',
			'\u0319\u018D\u0784\u0785\u02FD\u017F\u0785\u0786',
			'\u02FF\u0180\u0786\u0787\u0315\u018B\u0787\u0788',
			'\u0319\u018D\u0788\u0789\u0313\u018A\u0789\u078A',
			'\u0315\u018B\u078A\u078B\u02FF\u0180\u078B\u078C',
			'\u0319\u018D\u078C\u078D\u031D\u018F\u078D\u078E',
			'\u0307\u0184\u078E\u078F\u02FF\u0180\u078F\u0790',
			'\u031B\u018E\u0790\u0130\u0791\u0792',
			'\u02FD\u017F\u0792\u0793\u02F9\u017D\u0793\u0794',
			'\u0315\u018B\u0794\u0795\u0319\u018D\u0795\u0796',
			'\u0313\u018A\u0796\u0797\u0315\u018B\u0797\u0798',
			'\u02FF\u0180\u0798\u0799\u0319\u018D\u0799\u079A',
			'\u031D\u018F\u079A\u079B\u0307\u0184\u079B\u079C',
			'\u02FF\u0180\u079C\u079D\u031B\u018E\u079D\u0132',
			'\u079E\u079F\u030D\u0187\u079F\u07A0',
			'\u0307\u0184\u07A0\u07A1\u030F\u0188\u07A1\u07A2',
			'\u0307\u0184\u07A2\u07A3\u031D\u018F\u07A3\u0134',
			'\u07A4\u07A5\u0313\u018A\u07A5\u07A6',
			'\u0301\u0181\u07A6\u07A7\u0301\u0181\u07A7\u07A8',
			'\u031B\u018E\u07A8\u07A9\u02FF\u0180\u07A9\u07AA',
			'\u031D\u018F\u07AA\u0136\u07AB\u07AC',
			'\u031B\u018E\u07AC\u07AD\u02FF\u0180\u07AD\u07AE',
			'\u031D\u018F\u07AE\u0138\u07AF\u07B0',
			'\u031F\u0190\u07B0\u07B1\u0311\u0189\u07B1\u07B2',
			'\u031B\u018E\u07B2\u07B3\u02FF\u0180\u07B3\u07B4',
			'\u031D\u018F\u07B4\u013A\u07B5\u07B6',
			'\u031D\u018F\u07B6\u07B7\u02F9\u017D\u07B7\u07B8',
			'\u030D\u0187\u07B8\u07B9\u0315\u018B\u07B9\u07BA',
			'\u0319\u018D\u07BA\u07BB\u0313\u018A\u07BB\u07BC',
			'\u0315\u018B\u07BC\u07BD\u02FF\u0180\u07BD\u07BE',
			'\u0319\u018D\u07BE\u07BF\u031D\u018F\u07BF\u07C0',
			'\u0307\u0184\u07C0\u07C1\u02FF\u0180\u07C1\u07C2',
			'\u031B\u018E\u07C2\u013C\u07C3\u07C4',
			'\u0307\u0184\u07C4\u07C5\u02FD\u017F\u07C5\u07C6',
			'\u0325\u0193\u07C6\u07C7\u0315\u018B\u07C7\u07C8',
			'\u0319\u018D\u07C8\u07C9\u0313\u018A\u07C9\u07CA',
			'\u0315\u018B\u07CA\u07CB\u02FF\u0180\u07CB\u07CC',
			'\u0319\u018D\u07CC\u07CD\u031D\u018F\u07CD\u07CE',
			'\u0307\u0184\u07CE\u07CF\u02FF\u0180\u07CF\u07D0',
			'\u031B\u018E\u07D0\u013E\u07D1\u07D2',
			'\x07&\u07D2\u07D3\u0321\u0191\u07D3\u07D4',
			'\u02F7\u017C\u07D4\u07D5\u030D\u0187\u07D5\u07D6',
			'\u031F\u0190\u07D6\u07D7\u02FF\u0180\u07D7\u07D8',
			'\x07&\u07D8\u0140\u07D9\u07DA',
			'\x07&\u07DA\u07DB\u02FF\u0180\u07DB\u07DC',
			'\u030D\u0187\u07DC\u07DD\u02FF\u0180\u07DD\u07DE',
			'\u030F\u0188\u07DE\u07DF\x07&\u07DF\u0142',
			'\u07E0\u07E1\u02FD\u017F\u07E1\u07E2',
			'\u02FF\u0180\u07E2\u07E3\u0301\u0181\u07E3\u07E4',
			'\u0307\u0184\u07E4\u07E5\u0311\u0189\u07E5\u07E6',
			'\u02FF\u0180\u07E6\u07E7\u02FD\u017F\u07E7\u0144',
			'\u07E8\u07E9\u02FB\u017E\u07E9\u07EA',
			'\u02F7\u017C\u07EA\u07EB\u031B\u018E\u07EB\u07EC',
			'\u02FF\u0180\u07EC\u0146\u07ED\u07EE',
			'\u0323\u0192\u07EE\u07EF\u0305\u0183\u07EF\u07F0',
			'\u02FF\u0180\u07F0\u07F1\u0311\u0189\u07F1\u0148',
			'\u07F2\u07F3\u031D\u018F\u07F3\u07F4',
			'\u0305\u0183\u07F4\u07F5\u02FF\u0180\u07F5\u07F6',
			'\u0311\u0189\u07F6\u014A\u07F7\u07F8',
			'\u02FF\u0180\u07F8\u07F9\u030D\u0187\u07F9\u07FA',
			'\u031B\u018E\u07FA\u07FB\u02FF\u0180\u07FB\u014C',
			'\u07FC\u07FD\u02FF\u0180\u07FD\u07FE',
			'\u0311\u0189\u07FE\u07FF\u02FD\u017F\u07FF\u014E',
			'\u0800\u0801\u030F\u0188\u0801\u0802',
			'\u02F7\u017C\u0802\u0803\u0315\u018B\u0803\u0804',
			'\u0309\u0185\u0804\u0805\u0313\u018A\u0805\u0806',
			'\u0307\u0184\u0806\u0807\u0311\u0189\u0807\u0150',
			'\u0808\u0809\u031B\u018E\u0809\u080A',
			'\u031D\u018F\u080A\u080B\u0319\u018D\u080B\u080C',
			'\u02FF\u0180\u080C\u080D\u02F7\u017C\u080D\u080E',
			'\u030F\u0188\u080E\u080F\u031D\u018F\u080F\u0810',
			'\u02F7\u017C\u0810\u0811\u02F9\u017D\u0811\u0812',
			'\u030D\u0187\u0812\u0813\u02FF\u0180\u0813\u0152',
			'\u0814\u0815\u02FB\u017E\u0815\u0816',
			'\u030D\u0187\u0816\u0817\u031F\u0190\u0817\u0818',
			'\u031B\u018E\u0818\u0819\u031D\u018F\u0819\u081A',
			'\u02FF\u0180\u081A\u081B\u0319\u018D\u081B\u081C',
			'\u031B\u018E\u081C\u081D\u031D\u018F\u081D\u081E',
			'\u02F7\u017C\u081E\u081F\u031D\u018F\u081F\u0820',
			'\u031F\u0190\u0820\u0821\u031B\u018E\u0821\u0154',
			'\u0822\u0823\u031F\u0190\u0823\u0824',
			'\u031D\u018F\u0824\u0825\u02FB\u017E\u0825\u0156',
			'\u0826\u0827\u031F\u0190\u0827\u0828',
			'\u031D\u018F\u0828\u0829\u02FB\u017E\u0829\u082A',
			'\u031D\u018F\u082A\u082B\u0307\u0184\u082B\u082C',
			'\u030F\u0188\u082C\u082D\u02FF\u0180\u082D\u082E',
			'\u031B\u018E\u082E\u082F\u031D\u018F\u082F\u0830',
			'\u02F7\u017C\u0830\u0831\u030F\u0188\u0831\u0832',
			'\u0315\u018B\u0832\u0158\u0833\u0834',
			'\u030D\u0187\u0834\u0835\u0313\u018A\u0835\u0836',
			'\u0311\u0189\u0836\u0837\u0303\u0182\u0837\u015A',
			'\u0838\u0839\u02FD\u017F\u0839\u083A',
			'\u02FF\u0180\u083A\u083B\u030D\u0187\u083B\u083C',
			'\u02FF\u0180\u083C\u083D\u031D\u018F\u083D\u083E',
			'\u02FF\u0180\u083E\u015C\u083F\u0840',
			'\u0315\u018B\u0840\u0841\u030D\u0187\u0841\u0842',
			'\u031F\u0190\u0842\u0843\u031B\u018E\u0843\u015E',
			'\u0844\u0845\u030F\u0188\u0845\u0846',
			'\u0307\u0184\u0846\u0847\u0311\u0189\u0847\u0848',
			'\u031F\u0190\u0848\u0849\u031B\u018E\u0849\u0160',
			'\u084A\u084B\u0301\u0181\u084B\u084C',
			'\u02FF\u0180\u084C\u084D\u031D\u018F\u084D\u084E',
			'\u02FB\u017E\u084E\u084F\u0305\u0183\u084F\u0162',
			'\u0850\u0851\u0307\u0184\u0851\u0852',
			'\u0311\u0189\u0852\u0853\u031D\u018F\u0853\u0854',
			'\u02FF\u0180\u0854\u0855\u0319\u018D\u0855\u0856',
			'\u031B\u018E\u0856\u0857\u02FF\u0180\u0857\u0858',
			'\u02FB\u017E\u0858\u0859\u031D\u018F\u0859\u0164',
			'\u085A\u085B\u0321\u0191\u085B\u085C',
			'\u0307\u0184\u085C\u085D\u02FF\u0180\u085D\u085E',
			'\u0323\u0192\u085E\u0166\u085F\u0860',
			'\u0321\u0191\u0860\u0861\u0307\u0184\u0861\u0862',
			'\u02FF\u0180\u0862\u0863\u0323\u0192\u0863\u0864',
			'\u031B\u018E\u0864\u0168\u0865\u0866',
			'\u0307\u0184\u0866\u0867\u0311\u0189\u0867\u016A',
			'\u0868\u0869\u02FD\u017F\u0869\u086A',
			'\u02F7\u017C\u086A\u086B\u031D\u018F\u086B\u086C',
			'\u02F7\u017C\u086C\u086D\u02F9\u017D\u086D\u086E',
			'\u02F7\u017C\u086E\u086F\u031B\u018E\u086F\u0870',
			'\u02FF\u0180\u0870\u016C\u0871\u0872',
			'\u02FD\u017F\u0872\u0873\u02F7\u017C\u0873\u0874',
			'\u031D\u018F\u0874\u0875\u02F7\u017C\u0875\u0876',
			'\u02F9\u017D\u0876\u0877\u02F7\u017C\u0877\u0878',
			'\u031B\u018E\u0878\u0879\u02FF\u0180\u0879\u087A',
			'\u031B\u018E\u087A\u016E\u087B\u087C',
			'\u030F\u0188\u087C\u087D\u02F7\u017C\u087D\u087E',
			'\u031D\u018F\u087E\u087F\u02FF\u0180\u087F\u0880',
			'\u0319\u018D\u0880\u0881\u0307\u0184\u0881\u0882',
			'\u02F7\u017C\u0882\u0883\u030D\u0187\u0883\u0884',
			'\u0307\u0184\u0884\u0885\u0329\u0195\u0885\u0886',
			'\u02FF\u0180\u0886\u0887\u02FD\u017F\u0887\u0170',
			'\u0888\u0889\u031B\u018E\u0889\u088A',
			'\u02FB\u017E\u088A\u088B\u0305\u0183\u088B\u088C',
			'\u02FF\u0180\u088C\u088D\u030F\u0188\u088D\u088E',
			'\u02F7\u017C\u088E\u0172\u088F\u0890',
			'\u031B\u018E\u0890\u0891\u02FB\u017E\u0891\u0892',
			'\u0305\u0183\u0892\u0893\u02FF\u0180\u0893\u0894',
			'\u030F\u0188\u0894\u0895\u02F7\u017C\u0895\u0896',
			'\u031B\u018E\u0896\u0174\u0897\u0898',
			'\u0303\u0182\u0898\u0899\u0319\u018D\u0899\u089A',
			'\u02F7\u017C\u089A\u089B\u0311\u0189\u089B\u089C',
			'\u031D\u018F\u089C\u0176\u089D\u089E',
			'\u0319\u018D\u089E\u089F\u02FF\u0180\u089F\u08A0',
			'\u0321\u0191\u08A0\u08A1\u0313\u018A\u08A1\u08A2',
			'\u030B\u0186\u08A2\u08A3\u02FF\u0180\u08A3\u0178',
			'\u08A4\u08A5\u031B\u018E\u08A5\u08A6',
			'\u031B\u018E\u08A6\u08A7\u030D\u0187\u08A7\u017A',
			'\u08A8\u08A9\u031F\u0190\u08A9\u08AA',
			'\u0311\u0189\u08AA\u08AB\u02FD\u017F\u08AB\u08AC',
			'\u0313\u018A\u08AC\u017C\u08AD\u08AE',
			'\u030D\u0187\u08AE\u08AF\u0313\u018A\u08AF\u08B0',
			'\u02FB\u017E\u08B0\u08B1\u030B\u0186\u08B1\u017E',
			'\u08B2\u08B3\u030D\u0187\u08B3\u08B4',
			'\u0313\u018A\u08B4\u08B5\u02FB\u017E\u08B5\u08B6',
			'\u030B\u0186\u08B6\u08B7\u031B\u018E\u08B7\u0180',
			'\u08B8\u08B9\u031F\u0190\u08B9\u08BA',
			'\u0311\u0189\u08BA\u08BB\u030D\u0187\u08BB\u08BC',
			'\u0313\u018A\u08BC\u08BD\u02FB\u017E\u08BD\u08BE',
			'\u030B\u0186\u08BE\u0182\u08BF\u08C0',
			'\u031B\u018E\u08C0\u08C1\u0305\u0183\u08C1\u08C2',
			'\u02F7\u017C\u08C2\u08C3\u0319\u018D\u08C3\u08C4',
			'\u02FF\u0180\u08C4\u08C5\u02FD\u017F\u08C5\u0184',
			'\u08C6\u08C7\u02FF\u0180\u08C7\u08C8',
			'\u0325\u0193\u08C8\u08C9\u02FB\u017E\u08C9\u08CA',
			'\u030D\u0187\u08CA\u08CB\u031F\u0190\u08CB\u08CC',
			'\u031B\u018E\u08CC\u08CD\u0307\u0184\u08CD\u08CE',
			'\u0321\u0191\u08CE\u08CF\u02FF\u0180\u08CF\u0186',
			'\u08D0\u08D1\u0315\u018B\u08D1\u08D2',
			'\u0319\u018D\u08D2\u08D3\u0313\u018A\u08D3\u08D4',
			'\u02FB\u017E\u08D4\u08D5\u02FF\u0180\u08D5\u08D6',
			'\u02FD\u017F\u08D6\u08D7\u031F\u0190\u08D7\u08D8',
			'\u0319\u018D\u08D8\u08D9\u02FF\u0180\u08D9\u0188',
			'\u08DA\u08DB\u031F\u0190\u08DB\u08DC',
			'\u0311\u0189\u08DC\u08DD\u031B\u018E\u08DD\u08DE',
			'\u0307\u0184\u08DE\u08DF\u0303\u0182\u08DF\u08E0',
			'\u0311\u0189\u08E0\u08E1\u02FF\u0180\u08E1\u08E2',
			'\u02FD\u017F\u08E2\u018A\u08E3\u08E4',
			'\u0323\u0192\u08E4\u08E5\u0305\u0183\u08E5\u08E6',
			'\u0307\u0184\u08E6\u08E7\u030D\u0187\u08E7\u08E8',
			'\u02FF\u0180\u08E8\u018C\u08E9\u08EA',
			'\u0319\u018D\u08EA\u08EB\u02FF\u0180\u08EB\u08EC',
			'\u02F7\u017C\u08EC\u08ED\u02FD\u017F\u08ED\u018E',
			'\u08EE\u08EF\u0319\u018D\u08EF\u08F0',
			'\u02FF\u0180\u08F0\u08F1\u02F7\u017C\u08F1\u08F2',
			'\u02FD\u017F\u08F2\u08F3\u031B\u018E\u08F3\u0190',
			'\u08F4\u08F5\u0315\u018B\u08F5\u08F6',
			'\u031F\u0190\u08F6\u08F7\u0319\u018D\u08F7\u08F8',
			'\u0303\u0182\u08F8\u08F9\u02FF\u0180\u08F9\u0192',
			'\u08FA\u08FB\u0319\u018D\u08FB\u08FC',
			'\u02F7\u017C\u08FC\u08FD\u0311\u0189\u08FD\u08FE',
			'\u0303\u0182\u08FE\u08FF\u02FF\u0180\u08FF\u0194',
			'\u0900\u0901\u02F7\u017C\u0901\u0902',
			'\u0311\u0189\u0902\u0903\u02F7\u017C\u0903\u0904',
			'\u030D\u0187\u0904\u0905\u0327\u0194\u0905\u0906',
			'\u0329\u0195\u0906\u0907\u02FF\u0180\u0907\u0196',
			'\u0908\u0909\u02F9\u017D\u0909\u090A',
			'\u02FF\u0180\u090A\u090B\u0301\u0181\u090B\u090C',
			'\u0313\u018A\u090C\u090D\u0319\u018D\u090D\u090E',
			'\u02FF\u0180\u090E\u0198\u090F\u0910',
			'\u02F9\u017D\u0910\u0911\u02FF\u0180\u0911\u0912',
			'\u031D\u018F\u0912\u0913\u0323\u0192\u0913\u0914',
			'\u02FF\u0180\u0914\u0915\u02FF\u0180\u0915\u0916',
			'\u0311\u0189\u0916\u019A\u0917\u0918',
			'\u02F9\u017D\u0918\u0919\u0313\u018A\u0919\u091A',
			'\u031D\u018F\u091A\u091B\u0305\u0183\u091B\u019C',
			'\u091C\u091D\u02F9\u017D\u091D\u091E',
			'\u0307\u0184\u091E\u091F\u0311\u0189\u091F\u0920',
			'\u02F7\u017C\u0920\u0921\u0319\u018D\u0921\u0922',
			'\u0327\u0194\u0922\u019E\u0923\u0924',
			'\u02FB\u017E\u0924\u0925\u0319\u018D\u0925\u0926',
			'\u0313\u018A\u0926\u0927\u031B\u018E\u0927\u0928',
			'\u031B\u018E\u0928\u01A0\u0929\u092A',
			'\u02FB\u017E\u092A\u092B\u0313\u018A\u092B\u092C',
			'\u0311\u0189\u092C\u092D\u031D\u018F\u092D\u092E',
			'\u0307\u0184\u092E\u092F\u0311\u0189\u092F\u0930',
			'\u031F\u0190\u0930\u0931\u02FF\u0180\u0931\u01A2',
			'\u0932\u0933\u02FB\u017E\u0933\u0934',
			'\u031F\u0190\u0934\u0935\u0319\u018D\u0935\u0936',
			'\u031B\u018E\u0936\u0937\u0313\u018A\u0937\u0938',
			'\u0319\u018D\u0938\u01A4\u0939\u093A',
			'\u031D\u018F\u093A\u093B\u0319\u018D\u093B\u093C',
			'\u0307\u0184\u093C\u093D\u0303\u0182\u093D\u093E',
			'\u0303\u0182\u093E\u093F\u02FF\u0180\u093F\u0940',
			'\u0319\u018D\u0940\u01A6\u0941\u0942',
			'\u0319\u018D\u0942\u0943\u02FF\u0180\u0943\u0944',
			'\u02FB\u017E\u0944\u0945\u0313\u018A\u0945\u0946',
			'\u0319\u018D\u0946\u0947\u02FD\u017F\u0947\u0948',
			'\u0319\u018D\u0948\u0949\u02FF\u0180\u0949\u094A',
			'\u02F7\u017C\u094A\u094B\u02FD\u017F\u094B\u094C',
			'\u02FF\u0180\u094C\u094D\u0319\u018D\u094D\u01A8',
			'\u094E\u094F\u0319\u018D\u094F\u0950',
			'\u02FF\u0180\u0950\u0951\u02FB\u017E\u0951\u0952',
			'\u0313\u018A\u0952\u0953\u0319\u018D\u0953\u0954',
			'\u02FD\u017F\u0954\u0955\u0323\u0192\u0955\u0956',
			'\u0319\u018D\u0956\u0957\u0307\u0184\u0957\u0958',
			'\u031D\u018F\u0958\u0959\u02FF\u0180\u0959\u095A',
			'\u0319\u018D\u095A\u01AA\u095B\u095C',
			'\u031B\u018E\u095C\u095D\u02FF\u0180\u095D\u095E',
			'\u030F\u0188\u095E\u095F\u0307\u0184\u095F\u01AC',
			'\u0960\u0961\u030D\u0187\u0961\u0962',
			'\u02F7\u017C\u0962\u0963\u031D\u018F\u0963\u0964',
			'\u02FF\u0180\u0964\u0965\u0319\u018D\u0965\u0966',
			'\u02F7\u017C\u0966\u0967\u030D\u0187\u0967\u01AE',
			'\u0968\u0969\u031D\u018F\u0969\u096A',
			'\u0313\u018A\u096A\u096B\u031F\u0190\u096B\u096C',
			'\u02FB\u017E\u096C\u096D\u0305\u0183\u096D\u01B0',
			'\u096E\u096F\u02F7\u017C\u096F\u0970',
			'\u0319\u018D\u0970\u0971\u02FB\u017E\u0971\u0972',
			'\u0305\u0183\u0972\u0973\u0307\u0184\u0973\u0974',
			'\u0321\u0191\u0974\u0975\u02FF\u0180\u0975\u01B2',
			'\u0976\u0977\u031F\u0190\u0977\u0978',
			'\u0311\u0189\u0978\u0979\u02F7\u017C\u0979\u097A',
			'\u0319\u018D\u097A\u097B\u02FB\u017E\u097B\u097C',
			'\u0305\u0183\u097C\u097D\u0307\u0184\u097D\u097E',
			'\u0321\u0191\u097E\u097F\u02FF\u0180\u097F\u01B4',
			'\u0980\u0981\u02FB\u017E\u0981\u0982',
			'\u0313\u018A\u0982\u0983\u030F\u0188\u0983\u0984',
			'\u0315\u018B\u0984\u0985\u031F\u0190\u0985\u0986',
			'\u031D\u018F\u0986\u0987\u02FF\u0180\u0987\u01B6',
			'\u0988\u0989\u031B\u018E\u0989\u098A',
			'\u031D\u018F\u098A\u098B\u02F7\u017C\u098B\u098C',
			'\u031D\u018F\u098C\u098D\u0307\u0184\u098D\u098E',
			'\u031B\u018E\u098E\u098F\u031D\u018F\u098F\u0990',
			'\u0307\u0184\u0990\u0991\u02FB\u017E\u0991\u0992',
			'\u031B\u018E\u0992\u01B8\u0993\u0994',
			'\u031F\u0190\u0994\u0995\u031B\u018E\u0995\u0996',
			'\u02FF\u0180\u0996\u01BA\u0997\u0998',
			'\u0313\u018A\u0998\u0999\u0315\u018B\u0999\u099A',
			'\u031D\u018F\u099A\u099B\u0307\u0184\u099B\u099C',
			'\u0313\u018A\u099C\u099D\u0311\u0189\u099D\u099E',
			'\u031B\u018E\u099E\u01BC\u099F\u09A0',
			'\u0313\u018A\u09A0\u09A1\u0315\u018B\u09A1\u09A2',
			'\u031D\u018F\u09A2\u09A3\u0307\u0184\u09A3\u09A4',
			'\u0313\u018A\u09A4\u09A5\u0311\u0189\u09A5\u01BE',
			'\u09A6\u09A7\u02FB\u017E\u09A7\u09A8',
			'\u0313\u018A\u09A8\u09A9\u0311\u0189\u09A9\u09AA',
			'\u02FB\u017E\u09AA\u09AB\u02F7\u017C\u09AB\u09AC',
			'\u031D\u018F\u09AC\u09AD\u02FF\u0180\u09AD\u09AE',
			'\u0311\u0189\u09AE\u09AF\u02F7\u017C\u09AF\u09B0',
			'\u031D\u018F\u09B0\u09B1\u02FF\u0180\u09B1\u01C0',
			'\u09B2\u09B3\u031B\u018E\u09B3\u09B4',
			'\u0305\u0183\u09B4\u09B5\u0313\u018A\u09B5\u09B6',
			'\u0323\u0192\u09B6\u09B7\x07a\u09B7\u09B8',
			'\u02FD\u017F\u09B8\u09B9\u02F7\u017C\u09B9\u09BA',
			'\u031D\u018F\u09BA\u09BB\u02F7\u017C\u09BB\u09BC',
			'\u02F9\u017D\u09BC\u09BD\u02F7\u017C\u09BD\u09BE',
			'\u031B\u018E\u09BE\u09BF\u02FF\u0180\u09BF\u01C2',
			'\u09C0\u09C1\u031F\u0190\u09C1\u09C2',
			'\u0315\u018B\u09C2\u09C3\u02FD\u017F\u09C3\u09C4',
			'\u02F7\u017C\u09C4\u09C5\u031D\u018F\u09C5\u09C6',
			'\u02FF\u0180\u09C6\u01C4\u09C7\u09C8',
			'\u0319\u018D\u09C8\u09C9\u02FF\u0180\u09C9\u09CA',
			'\u031B\u018E\u09CA\u09CB\u031D\u018F\u09CB\u09CC',
			'\u0319\u018D\u09CC\u09CD\u0307\u0184\u09CD\u09CE',
			'\u02FB\u017E\u09CE\u09CF\u031D\u018F\u09CF\u01C6',
			'\u09D0\u09D1\u02FB\u017E\u09D1\u09D2',
			'\u02F7\u017C\u09D2\u09D3\u031B\u018E\u09D3\u09D4',
			'\u02FB\u017E\u09D4\u09D5\u02F7\u017C\u09D5\u09D6',
			'\u02FD\u017F\u09D6\u09D7\u02FF\u0180\u09D7\u01C8',
			'\u09D8\u09D9\u031B\u018E\u09D9\u09DA',
			'\u030B\u0186\u09DA\u09DB\u02FF\u0180\u09DB\u09DC',
			'\u0323\u0192\u09DC\u09DD\u02FF\u0180\u09DD\u09DE',
			'\u02FD\u017F\u09DE\u01CA\u09DF\u09E0',
			'\u0319\u018D\u09E0\u09E1\u0313\u018A\u09E1\u09E2',
			'\u030D\u0187\u09E2\u09E3\u030D\u0187\u09E3\u09E4',
			'\u031F\u0190\u09E4\u09E5\u0315\u018B\u09E5\u01CC',
			'\u09E6\u09E7\u02FB\u017E\u09E7\u09E8',
			'\u031F\u0190\u09E8\u09E9\u02F9\u017D\u09E9\u09EA',
			'\u02FF\u0180\u09EA\u01CE\u09EB\u09EC',
			'\u02FD\u017F\u09EC\u09ED\u0307\u0184\u09ED\u09EE',
			'\u0319\u018D\u09EE\u09EF\u02FF\u0180\u09EF\u09F0',
			'\u02FB\u017E\u09F0\u09F1\u031D\u018F\u09F1\u09F2',
			'\u0313\u018A\u09F2\u09F3\u0319\u018D\u09F3\u09F4',
			'\u0307\u0184\u09F4\u09F5\u02FF\u0180\u09F5\u09F6',
			'\u031B\u018E\u09F6\u01D0\u09F7\u09F8',
			'\u0301\u0181\u09F8\u09F9\u0313\u018A\u09F9\u09FA',
			'\u0319\u018D\u09FA\u01D2\u09FB\u09FC',
			'\u0323\u0192\u09FC\u09FD\u0307\u0184\u09FD\u09FE',
			'\u0311\u0189\u09FE\u09FF\u02FD\u017F\u09FF\u0A00',
			'\u0313\u018A\u0A00\u0A01\u0323\u0192\u0A01\u01D4',
			'\u0A02\u0A03\u031F\u0190\u0A03\u0A04',
			'\u0311\u0189\u0A04\u0A05\u02F9\u017D\u0A05\u0A06',
			'\u0313\u018A\u0A06\u0A07\u031F\u0190\u0A07\u0A08',
			'\u0311\u0189\u0A08\u0A09\u02FD\u017F\u0A09\u0A0A',
			'\u02FF\u0180\u0A0A\u0A0B\u02FD\u017F\u0A0B\u01D6',
			'\u0A0C\u0A0D\u0315\u018B\u0A0D\u0A0E',
			'\u0319\u018D\u0A0E\u0A0F\u02FF\u0180\u0A0F\u0A10',
			'\u02FB\u017E\u0A10\u0A11\u02FF\u0180\u0A11\u0A12',
			'\u02FD\u017F\u0A12\u0A13\u0307\u0184\u0A13\u0A14',
			'\u0311\u0189\u0A14\u0A15\u0303\u0182\u0A15\u01D8',
			'\u0A16\u0A17\u0301\u0181\u0A17\u0A18',
			'\u0313\u018A\u0A18\u0A19\u030D\u0187\u0A19\u0A1A',
			'\u030D\u0187\u0A1A\u0A1B\u0313\u018A\u0A1B\u0A1C',
			'\u0323\u0192\u0A1C\u0A1D\u0307\u0184\u0A1D\u0A1E',
			'\u0311\u0189\u0A1E\u0A1F\u0303\u0182\u0A1F\u01DA',
			'\u0A20\u0A21\u02FB\u017E\u0A21\u0A22',
			'\u031F\u0190\u0A22\u0A23\u0319\u018D\u0A23\u0A24',
			'\u0319\u018D\u0A24\u0A25\u02FF\u0180\u0A25\u0A26',
			'\u0311\u0189\u0A26\u0A27\u031D\u018F\u0A27\u01DC',
			'\u0A28\u0A29\u02FB\u017E\u0A29\u0A2A',
			'\u031F\u0190\u0A2A\u0A2B\u0319\u018D\u0A2B\u0A2C',
			'\u0319\u018D\u0A2C\u0A2D\u02FF\u0180\u0A2D\u0A2E',
			'\u0311\u0189\u0A2E\u0A2F\u031D\u018F\u0A2F\u0A30',
			'\x07a\u0A30\u0A31\u02FD\u017F\u0A31\u0A32',
			'\u02F7\u017C\u0A32\u0A33\u031D\u018F\u0A33\u0A34',
			'\u02FF\u0180\u0A34\u01DE\u0A35\u0A36',
			'\u02FB\u017E\u0A36\u0A37\u031F\u0190\u0A37\u0A38',
			'\u0319\u018D\u0A38\u0A39\u0319\u018D\u0A39\u0A3A',
			'\u02FF\u0180\u0A3A\u0A3B\u0311\u0189\u0A3B\u0A3C',
			'\u031D\u018F\u0A3C\u0A3D\x07a\u0A3D\u0A3E',
			'\u031D\u018F\u0A3E\u0A3F\u0307\u0184\u0A3F\u0A40',
			'\u030F\u0188\u0A40\u0A41\u02FF\u0180\u0A41\u0A42',
			'\u031B\u018E\u0A42\u0A43\u031D\u018F\u0A43\u0A44',
			'\u02F7\u017C\u0A44\u0A45\u030F\u0188\u0A45\u0A46',
			'\u0315\u018B\u0A46\u01E0\u0A47\u0A48',
			'\u030D\u0187\u0A48\u0A49\u02FF\u0180\u0A49\u0A4A',
			'\u031B\u018E\u0A4A\u0A4B\u031B\u018E\u0A4B\u01E2',
			'\u0A4C\u0A4D\u030F\u0188\u0A4D\u0A4E',
			'\u0313\u018A\u0A4E\u0A4F\u0319\u018D\u0A4F\u0A50',
			'\u02FF\u0180\u0A50\u01E4\u0A51\u0A52',
			'\u0313\u018A\u0A52\u0A53\u0321\u0191\u0A53\u0A54',
			'\u02FF\u0180\u0A54\u0A55\u0319\u018D\u0A55\u01E6',
			'\u0A56\u0A57\u0303\u0182\u0A57\u0A58',
			'\u0319\u018D\u0A58\u0A59\u0313\u018A\u0A59\u0A5A',
			'\u031F\u0190\u0A5A\u0A5B\u0315\u018B\u0A5B\u0A5C',
			'\u0307\u0184\u0A5C\u0A5D\u0311\u0189\u0A5D\u0A5E',
			'\u0303\u0182\u0A5E\u01E8\u0A5F\u0A60',
			'\u031B\u018E\u0A60\u0A61\u02FF\u0180\u0A61\u0A62',
			'\u031D\u018F\u0A62\u0A63\u031B\u018E\u0A63\u01EA',
			'\u0A64\u0A65\u031D\u018F\u0A65\u0A66',
			'\u0319\u018D\u0A66\u0A67\u031F\u0190\u0A67\u0A68',
			'\u0311\u0189\u0A68\u0A69\u02FB\u017E\u0A69\u0A6A',
			'\u02F7\u017C\u0A6A\u0A6B\u031D\u018F\u0A6B\u0A6C',
			'\u02FF\u0180\u0A6C\u01EC\u0A6D\u0A6E',
			'\u0311\u0189\u0A6E\u0A6F\u0313\u018A\u0A6F\u0A70',
			'\u031B\u018E\u0A70\u0A71\u02FB\u017E\u0A71\u0A72',
			'\u02F7\u017C\u0A72\u0A73\u0311\u0189\u0A73\u01EE',
			'\u0A74\u0A75\u031F\u0190\u0A75\u0A76',
			'\u031B\u018E\u0A76\u0A77\u02FF\u0180\u0A77\u0A78',
			'\u0319\u018D\u0A78\u01F0\u0A79\u0A7A',
			'\u0319\u018D\u0A7A\u0A7B\u0313\u018A\u0A7B\u0A7C',
			'\u030D\u0187\u0A7C\u0A7D\u02FF\u0180\u0A7D\u01F2',
			'\u0A7E\u0A7F\u0319\u018D\u0A7F\u0A80',
			'\u0313\u018A\u0A80\u0A81\u030D\u0187\u0A81\u0A82',
			'\u02FF\u0180\u0A82\u0A83\u031B\u018E\u0A83\u01F4',
			'\u0A84\u0A85\u0307\u0184\u0A85\u0A86',
			'\u0311\u0189\u0A86\u0A87\u0311\u0189\u0A87\u0A88',
			'\u02FF\u0180\u0A88\u0A89\u0319\u018D\u0A89\u01F6',
			'\u0A8A\u0A8B\u02FF\u0180\u0A8B\u0A8C',
			'\u0325\u0193\u0A8C\u0A8D\u02FB\u017E\u0A8D\u0A8E',
			'\u0305\u0183\u0A8E\u0A8F\u02F7\u017C\u0A8F\u0A90',
			'\u0311\u0189\u0A90\u0A91\u0303\u0182\u0A91\u0A92',
			'\u02FF\u0180\u0A92\u01F8\u0A93\u0A94',
			'\u031F\u0190\u0A94\u0A95\u0319\u018D\u0A95\u0A96',
			'\u0307\u0184\u0A96\u01FA\u0A97\u0A98',
			'\u031B\u018E\u0A98\u0A99\u02FF\u0180\u0A99\u0A9A',
			'\u0319\u018D\u0A9A\u0A9B\u0321\u0191\u0A9B\u0A9C',
			'\u02FF\u0180\u0A9C\u0A9D\u0319\u018D\u0A9D\u01FC',
			'\u0A9E\u0A9F\u02F7\u017C\u0A9F\u0AA0',
			'\u02FD\u017F\u0AA0\u0AA1\u030F\u0188\u0AA1\u0AA2',
			'\u0307\u0184\u0AA2\u0AA3\u0311\u0189\u0AA3\u01FE',
			'\u0AA4\u0AA5\u0313\u018A\u0AA5\u0AA6',
			'\u0323\u0192\u0AA6\u0AA7\u0311\u0189\u0AA7\u0AA8',
			'\u02FF\u0180\u0AA8\u0AA9\u0319\u018D\u0AA9\u0200',
			'\u0AAA\u0AAB\u0315\u018B\u0AAB\u0AAC',
			'\u0319\u018D\u0AAC\u0AAD\u0307\u0184\u0AAD\u0AAE',
			'\u0311\u0189\u0AAE\u0AAF\u02FB\u017E\u0AAF\u0AB0',
			'\u0307\u0184\u0AB0\u0AB1\u0315\u018B\u0AB1\u0AB2',
			'\u02F7\u017C\u0AB2\u0AB3\u030D\u0187\u0AB3\u0AB4',
			'\u031B\u018E\u0AB4\u0202\u0AB5\u0AB6',
			'\u02FB\u017E\u0AB6\u0AB7\u0313\u018A\u0AB7\u0AB8',
			'\u030F\u0188\u0AB8\u0AB9\u0315\u018B\u0AB9\u0ABA',
			'\u02F7\u017C\u0ABA\u0ABB\u02FB\u017E\u0ABB\u0ABC',
			'\u031D\u018F\u0ABC\u0204\u0ABD\u0ABE',
			'\u02FB\u017E\u0ABE\u0ABF\u0313\u018A\u0ABF\u0AC0',
			'\u030F\u0188\u0AC0\u0AC1\u0315\u018B\u0AC1\u0AC2',
			'\u02F7\u017C\u0AC2\u0AC3\u02FB\u017E\u0AC3\u0AC4',
			'\u031D\u018F\u0AC4\u0AC5\u0307\u0184\u0AC5\u0AC6',
			'\u0313\u018A\u0AC6\u0AC7\u0311\u0189\u0AC7\u0AC8',
			'\u031B\u018E\u0AC8\u0206\u0AC9\u0ACA',
			'\u031D\u018F\u0ACA\u0ACB\u0319\u018D\u0ACB\u0ACC',
			'\u02F7\u017C\u0ACC\u0ACD\u0311\u0189\u0ACD\u0ACE',
			'\u031B\u018E\u0ACE\u0ACF\u02F7\u017C\u0ACF\u0AD0',
			'\u02FB\u017E\u0AD0\u0AD1\u031D\u018F\u0AD1\u0AD2',
			'\u0307\u0184\u0AD2\u0AD3\u0313\u018A\u0AD3\u0AD4',
			'\u0311\u0189\u0AD4\u0AD5\u031B\u018E\u0AD5\u0208',
			'\u0AD6\u0AD7\u0319\u018D\u0AD7\u0AD8',
			'\u02FF\u0180\u0AD8\u0AD9\u0323\u0192\u0AD9\u0ADA',
			'\u0319\u018D\u0ADA\u0ADB\u0307\u0184\u0ADB\u0ADC',
			'\u031D\u018F\u0ADC\u0ADD\u02FF\u0180\u0ADD\u020A',
			'\u0ADE\u0ADF\u02F7\u017C\u0ADF\u0AE0',
			'\u031F\u0190\u0AE0\u0AE1\u031D\u018F\u0AE1\u0AE2',
			'\u0305\u0183\u0AE2\u0AE3\u0313\u018A\u0AE3\u0AE4',
			'\u0319\u018D\u0AE4\u0AE5\u0307\u0184\u0AE5\u0AE6',
			'\u0329\u0195\u0AE6\u0AE7\u02F7\u017C\u0AE7\u0AE8',
			'\u031D\u018F\u0AE8\u0AE9\u0307\u0184\u0AE9\u0AEA',
			'\u0313\u018A\u0AEA\u0AEB\u0311\u0189\u0AEB\u020C',
			'\u0AEC\u0AED\u0319\u018D\u0AED\u0AEE',
			'\u02FF\u0180\u0AEE\u0AEF\u0313\u018A\u0AEF\u0AF0',
			'\u0315\u018B\u0AF0\u0AF1\u031D\u018F\u0AF1\u0AF2',
			'\u0307\u0184\u0AF2\u0AF3\u030F\u0188\u0AF3\u0AF4',
			'\u0307\u0184\u0AF4\u0AF5\u0329\u0195\u0AF5\u0AF6',
			'\u02F7\u017C\u0AF6\u0AF7\u031D\u018F\u0AF7\u0AF8',
			'\u0307\u0184\u0AF8\u0AF9\u0313\u018A\u0AF9\u0AFA',
			'\u0311\u0189\u0AFA\u020E\u0AFB\u0AFC',
			'\u02FB\u017E\u0AFC\u0AFD\u0313\u018A\u0AFD\u0AFE',
			'\u0311\u0189\u0AFE\u0AFF\u0301\u0181\u0AFF\u0210',
			'\u0B00\u0B01\u0321\u0191\u0B01\u0B02',
			'\u02F7\u017C\u0B02\u0B03\u030D\u0187\u0B03\u0B04',
			'\u031F\u0190\u0B04\u0B05\u02FF\u0180\u0B05\u0B06',
			'\u031B\u018E\u0B06\u0212\u0B07\u0B08',
			'\u0319\u018D\u0B08\u0B09\u02FF\u0180\u0B09\u0B0A',
			'\u030D\u0187\u0B0A\u0B0B\u0313\u018A\u0B0B\u0B0C',
			'\u02F7\u017C\u0B0C\u0B0D\u02FD\u017F\u0B0D\u0214',
			'\u0B0E\u0B0F\u0327\u0194\u0B0F\u0B10',
			'\u02FF\u0180\u0B10\u0B11\u02F7\u017C\u0B11\u0B12',
			'\u0319\u018D\u0B12\u0B1A\u0B13\u0B14',
			'\u0327\u0194\u0B14\u0B15\u02FF\u0180\u0B15\u0B16',
			'\u02F7\u017C\u0B16\u0B17\u0319\u018D\u0B17\u0B18',
			'\u031B\u018E\u0B18\u0B1A\u0B19\u0B0E',
			'\u0B19\u0B13\u0B1A\u0216',
			'\u0B1B\u0B1C\u0317\u018C\u0B1C\u0B1D',
			'\u031F\u0190\u0B1D\u0B1E\u02FF\u0180\u0B1E\u0B1F',
			'\u0319\u018D\u0B1F\u0B20\u0327\u0194\u0B20\u0218',
			'\u0B21\u0B22\u0317\u018C\u0B22\u0B23',
			'\u031F\u0190\u0B23\u0B24\u02F7\u017C\u0B24\u0B25',
			'\u0319\u018D\u0B25\u0B26\u031D\u018F\u0B26\u0B27',
			'\u02FF\u0180\u0B27\u0B28\u0319\u018D\u0B28\u021A',
			'\u0B29\u0B2A\u030F\u0188\u0B2A\u0B2B',
			'\u0313\u018A\u0B2B\u0B2C\u0311\u0189\u0B2C\u0B2D',
			'\u031D\u018F\u0B2D\u0B2E\u0305\u0183\u0B2E\u0B37',
			'\u0B2F\u0B30\u030F\u0188\u0B30\u0B31',
			'\u0313\u018A\u0B31\u0B32\u0311\u0189\u0B32\u0B33',
			'\u031D\u018F\u0B33\u0B34\u0305\u0183\u0B34\u0B35',
			'\u031B\u018E\u0B35\u0B37\u0B36\u0B29',
			'\u0B36\u0B2F\u0B37\u021C',
			'\u0B38\u0B39\u0323\u0192\u0B39\u0B3A',
			'\u02FF\u0180\u0B3A\u0B3B\u02FF\u0180\u0B3B\u0B3C',
			'\u030B\u0186\u0B3C\u0B44\u0B3D\u0B3E',
			'\u0323\u0192\u0B3E\u0B3F\u02FF\u0180\u0B3F\u0B40',
			'\u02FF\u0180\u0B40\u0B41\u030B\u0186\u0B41\u0B42',
			'\u031B\u018E\u0B42\u0B44\u0B43\u0B38',
			'\u0B43\u0B3D\u0B44\u021E',
			'\u0B45\u0B46\u02FD\u017F\u0B46\u0B47',
			'\u02F7\u017C\u0B47\u0B48\u0327\u0194\u0B48\u0B4F',
			'\u0B49\u0B4A\u02FD\u017F\u0B4A\u0B4B',
			'\u02F7\u017C\u0B4B\u0B4C\u0327\u0194\u0B4C\u0B4D',
			'\u031B\u018E\u0B4D\u0B4F\u0B4E\u0B45',
			'\u0B4E\u0B49\u0B4F\u0220',
			'\u0B50\u0B51\u02FD\u017F\u0B51\u0B52',
			'\u0313\u018A\u0B52\u0B53\u0323\u0192\u0B53\u0222',
			'\u0B54\u0B55\u0305\u0183\u0B55\u0B56',
			'\u0313\u018A\u0B56\u0B57\u031F\u0190\u0B57\u0B58',
			'\u0319\u018D\u0B58\u0B60\u0B59\u0B5A',
			'\u0305\u0183\u0B5A\u0B5B\u0313\u018A\u0B5B\u0B5C',
			'\u031F\u0190\u0B5C\u0B5D\u0319\u018D\u0B5D\u0B5E',
			'\u031B\u018E\u0B5E\u0B60\u0B5F\u0B54',
			'\u0B5F\u0B59\u0B60\u0224',
			'\u0B61\u0B62\u030F\u0188\u0B62\u0B63',
			'\u0307\u0184\u0B63\u0B64\u0311\u0189\u0B64\u0B65',
			'\u031F\u0190\u0B65\u0B66\u031D\u018F\u0B66\u0B67',
			'\u02FF\u0180\u0B67\u0B71\u0B68\u0B69',
			'\u030F\u0188\u0B69\u0B6A\u0307\u0184\u0B6A\u0B6B',
			'\u0311\u0189\u0B6B\u0B6C\u031F\u0190\u0B6C\u0B6D',
			'\u031D\u018F\u0B6D\u0B6E\u02FF\u0180\u0B6E\u0B6F',
			'\u031B\u018E\u0B6F\u0B71\u0B70\u0B61',
			'\u0B70\u0B68\u0B71\u0226',
			'\u0B72\u0B73\u031B\u018E\u0B73\u0B74',
			'\u02FF\u0180\u0B74\u0B75\u02FB\u017E\u0B75\u0B76',
			'\u0313\u018A\u0B76\u0B77\u0311\u0189\u0B77\u0B78',
			'\u02FD\u017F\u0B78\u0B82\u0B79\u0B7A',
			'\u031B\u018E\u0B7A\u0B7B\u02FF\u0180\u0B7B\u0B7C',
			'\u02FB\u017E\u0B7C\u0B7D\u0313\u018A\u0B7D\u0B7E',
			'\u0311\u0189\u0B7E\u0B7F\u02FD\u017F\u0B7F\u0B80',
			'\u031B\u018E\u0B80\u0B82\u0B81\u0B72',
			'\u0B81\u0B79\u0B82\u0228',
			'\u0B83\u0B84\u031B\u018E\u0B84\u0B85',
			'\u031D\u018F\u0B85\u0B86\u02F7\u017C\u0B86\u0B87',
			'\u0319\u018D\u0B87\u0B88\u031D\u018F\u0B88\u022A',
			'\u0B89\u0B8A\u031D\u018F\u0B8A\u0B8B',
			'\u0319\u018D\u0B8B\u0B8C\u02F7\u017C\u0B8C\u0B8D',
			'\u0311\u0189\u0B8D\u0B8E\u031B\u018E\u0B8E\u0B8F',
			'\u02F7\u017C\u0B8F\u0B90\u02FB\u017E\u0B90\u0B91',
			'\u031D\u018F\u0B91\u0B92\u0307\u0184\u0B92\u0B93',
			'\u0313\u018A\u0B93\u0B94\u0311\u0189\u0B94\u022C',
			'\u0B95\u0B96\u02FB\u017E\u0B96\u0B97',
			'\u0313\u018A\u0B97\u0B98\u030F\u0188\u0B98\u0B99',
			'\u030F\u0188\u0B99\u0B9A\u0307\u0184\u0B9A\u0B9B',
			'\u031D\u018F\u0B9B\u022E\u0B9C\u0B9D',
			'\u0319\u018D\u0B9D\u0B9E\u0313\u018A\u0B9E\u0B9F',
			'\u030D\u0187\u0B9F\u0BA0\u030D\u0187\u0BA0\u0BA1',
			'\u02F9\u017D\u0BA1\u0BA2\u02F7\u017C\u0BA2\u0BA3',
			'\u02FB\u017E\u0BA3\u0BA4\u030B\u0186\u0BA4\u0230',
			'\u0BA5\u0BA6\u0323\u0192\u0BA6\u0BA7',
			'\u0313\u018A\u0BA7\u0BA8\u0319\u018D\u0BA8\u0BA9',
			'\u030B\u0186\u0BA9\u0232\u0BAA\u0BAB',
			'\u0313\u018A\u0BAB\u0BAC\u0311\u0189\u0BAC\u0BAD',
			'\u030D\u0187\u0BAD\u0BAE\u0327\u0194\u0BAE\u0234',
			'\u0BAF\u0BB0\u0323\u0192\u0BB0\u0BB1',
			'\u0319\u018D\u0BB1\u0BB2\u0307\u0184\u0BB2\u0BB3',
			'\u031D\u018F\u0BB3\u0BB4\u02FF\u0180\u0BB4\u0236',
			'\u0BB5\u0BB6\u0307\u0184\u0BB6\u0BB7',
			'\u031B\u018E\u0BB7\u0BB8\u0313\u018A\u0BB8\u0BB9',
			'\u030D\u0187\u0BB9\u0BBA\u02F7\u017C\u0BBA\u0BBB',
			'\u031D\u018F\u0BBB\u0BBC\u0307\u0184\u0BBC\u0BBD',
			'\u0313\u018A\u0BBD\u0BBE\u0311\u0189\u0BBE\u0238',
			'\u0BBF\u0BC0\u030D\u0187\u0BC0\u0BC1',
			'\u02FF\u0180\u0BC1\u0BC2\u0321\u0191\u0BC2\u0BC3',
			'\u02FF\u0180\u0BC3\u0BC4\u030D\u0187\u0BC4\u023A',
			'\u0BC5\u0BC6\u031B\u018E\u0BC6\u0BC7',
			'\u0311\u0189\u0BC7\u0BC8\u02F7\u017C\u0BC8\u0BC9',
			'\u0315\u018B\u0BC9\u0BCA\u031B\u018E\u0BCA\u0BCB',
			'\u0305\u0183\u0BCB\u0BCC\u0313\u018A\u0BCC\u0BCD',
			'\u031D\u018F\u0BCD\u023C\u0BCE\u0BCF',
			'\u02F7\u017C\u0BCF\u0BD0\u031F\u0190\u0BD0\u0BD1',
			'\u031D\u018F\u0BD1\u0BD2\u0313\u018A\u0BD2\u0BD3',
			'\u02FB\u017E\u0BD3\u0BD4\u0313\u018A\u0BD4\u0BD5',
			'\u030F\u0188\u0BD5\u0BD6\u030F\u0188\u0BD6\u0BD7',
			'\u0307\u0184\u0BD7\u0BD8\u031D\u018F\u0BD8\u023E',
			'\u0BD9\u0BDA\u02FB\u017E\u0BDA\u0BDB',
			'\u02F7\u017C\u0BDB\u0BDC\u02FB\u017E\u0BDC\u0BDD',
			'\u0305\u0183\u0BDD\u0BDE\u02FF\u0180\u0BDE\u0240',
			'\u0BDF\u0BE0\u0315\u018B\u0BE0\u0BE1',
			'\u0319\u018D\u0BE1\u0BE2\u0307\u0184\u0BE2\u0BE3',
			'\u030F\u0188\u0BE3\u0BE4\u02F7\u017C\u0BE4\u0BE5',
			'\u0319\u018D\u0BE5\u0BE6\u0327\u0194\u0BE6\u0242',
			'\u0BE7\u0BE8\u0301\u0181\u0BE8\u0BE9',
			'\u0313\u018A\u0BE9\u0BEA\u0319\u018D\u0BEA\u0BEB',
			'\u02FF\u0180\u0BEB\u0BEC\u0307\u0184\u0BEC\u0BED',
			'\u0303\u0182\u0BED\u0BEE\u0311\u0189\u0BEE\u0244',
			'\u0BEF\u0BF0\u0319\u018D\u0BF0\u0BF1',
			'\u02FF\u0180\u0BF1\u0BF2\u0301\u0181\u0BF2\u0BF3',
			'\u02FF\u0180\u0BF3\u0BF4\u0319\u018D\u0BF4\u0BF5',
			'\u02FF\u0180\u0BF5\u0BF6\u0311\u0189\u0BF6\u0BF7',
			'\u02FB\u017E\u0BF7\u0BF8\u02FF\u0180\u0BF8\u0BF9',
			'\u031B\u018E\u0BF9\u0246\u0BFA\u0BFB',
			'\u02FB\u017E\u0BFB\u0BFC\u0313\u018A\u0BFC\u0BFD',
			'\u0311\u0189\u0BFD\u0BFE\u031B\u018E\u0BFE\u0BFF',
			'\u031D\u018F\u0BFF\u0C00\u0319\u018D\u0C00\u0C01',
			'\u02F7\u017C\u0C01\u0C02\u0307\u0184\u0C02\u0C03',
			'\u0311\u0189\u0C03\u0C04\u031D\u018F\u0C04\u0248',
			'\u0C05\u0C06\u02FF\u0180\u0C06\u0C07',
			'\u0311\u0189\u0C07\u0C08\u0301\u0181\u0C08\u0C09',
			'\u0313\u018A\u0C09\u0C0A\u0319\u018D\u0C0A\u0C0B',
			'\u02FB\u017E\u0C0B\u0C0C\u02FF\u0180\u0C0C\u0C0D',
			'\u02FD\u017F\u0C0D\u024A\u0C0E\u0C0F',
			'\u0321\u0191\u0C0F\u0C10\u02F7\u017C\u0C10\u0C11',
			'\u030D\u0187\u0C11\u0C12\u0307\u0184\u0C12\u0C13',
			'\u02FD\u017F\u0C13\u0C14\u02F7\u017C\u0C14\u0C15',
			'\u031D\u018F\u0C15\u0C16\u02FF\u0180\u0C16\u024C',
			'\u0C17\u0C18\u0311\u0189\u0C18\u0C19',
			'\u0313\u018A\u0C19\u0C1A\u0321\u0191\u0C1A\u0C1B',
			'\u02F7\u017C\u0C1B\u0C1C\u030D\u0187\u0C1C\u0C1D',
			'\u0307\u0184\u0C1D\u0C1E\u02FD\u017F\u0C1E\u0C1F',
			'\u02F7\u017C\u0C1F\u0C20\u031D\u018F\u0C20\u0C21',
			'\u02FF\u0180\u0C21\u024E\u0C22\u0C23',
			'\u0319\u018D\u0C23\u0C24\u02FF\u0180\u0C24\u0C25',
			'\u030D\u0187\u0C25\u0C26\u0327\u0194\u0C26\u0250',
			'\u0C27\u0C28\u0311\u0189\u0C28\u0C29',
			'\u0313\u018A\u0C29\u0C2A\u0319\u018D\u0C2A\u0C2B',
			'\u02FF\u0180\u0C2B\u0C2C\u030D\u0187\u0C2C\u0C2D',
			'\u0327\u0194\u0C2D\u0252\u0C2E\u0C2F',
			'\u031F\u0190\u0C2F\u0C30\u0311\u0189\u0C30\u0C31',
			'\u0307\u0184\u0C31\u0C32\u0317\u018C\u0C32\u0C33',
			'\u031F\u0190\u0C33\u0C34\u02FF\u0180\u0C34\u0254',
			'\u0C35\u0C36\u030B\u0186\u0C36\u0C37',
			'\u02FF\u0180\u0C37\u0C38\u0327\u0194\u0C38\u0256',
			'\u0C39\u0C3A\u02F7\u017C\u0C3A\u0C3B',
			'\u02F9\u017D\u0C3B\u0C3C\u0313\u018A\u0C3C\u0C3D',
			'\u0319\u018D\u0C3D\u0C3E\u031D\u018F\u0C3E\u0258',
			'\u0C3F\u0C40\u02FF\u0180\u0C40\u0C41',
			'\u0325\u0193\u0C41\u0C42\u031D\u018F\u0C42\u0C43',
			'\u0319\u018D\u0C43\u0C44\u02F7\u017C\u0C44\u0C45',
			'\u02FB\u017E\u0C45\u0C46\u031D\u018F\u0C46\u025A',
			'\u0C47\u0C48\u0301\u0181\u0C48\u0C49',
			'\u030D\u0187\u0C49\u0C4A\u0313\u018A\u0C4A\u0C4B',
			'\u0313\u018A\u0C4B\u0C4C\u0319\u018D\u0C4C\u025C',
			'\u0C4D\u0C4E\u030F\u0188\u0C4E\u0C4F',
			'\u02FF\u0180\u0C4F\u0C50\u0319\u018D\u0C50\u0C51',
			'\u0303\u0182\u0C51\u0C52\u02FF\u0180\u0C52\u025E',
			'\u0C53\u0C54\u030F\u0188\u0C54\u0C55',
			'\u02F7\u017C\u0C55\u0C56\u031D\u018F\u0C56\u0C57',
			'\u02FB\u017E\u0C57\u0C58\u0305\u0183\u0C58\u0C59',
			'\u02FF\u0180\u0C59\u0C5A\u02FD\u017F\u0C5A\u0260',
			'\u0C5B\u0C5C\u0319\u018D\u0C5C\u0C5D',
			'\u02FF\u0180\u0C5D\u0C5E\u0315\u018B\u0C5E\u0C5F',
			'\u030D\u0187\u0C5F\u0262\u0C60\u0C61',
			'\u02FD\u017F\u0C61\u0C62\u031F\u0190\u0C62\u0C63',
			'\u030F\u0188\u0C63\u0C64\u0315\u018B\u0C64\u0264',
			'\u0C65\u0C66\u031B\u018E\u0C66\u0C67',
			'\u031D\u018F\u0C67\u0C68\u02F7\u017C\u0C68\u0C69',
			'\u031D\u018F\u0C69\u0C6A\u031F\u0190\u0C6A\u0C6B',
			'\u031B\u018E\u0C6B\u0266\u0C6C\u0C6D',
			'\u0321\u0191\u0C6D\u0C6E\u02FF\u0180\u0C6E\u0C6F',
			'\u02FB\u017E\u0C6F\u0C70\u031D\u018F\u0C70\u0C71',
			'\u0313\u018A\u0C71\u0C72\u0319\u018D\u0C72\u0C73',
			'\u0307\u0184\u0C73\u0C74\u0329\u0195\u0C74\u0C75',
			'\u02F7\u017C\u0C75\u0C76\u031D\u018F\u0C76\u0C77',
			'\u0307\u0184\u0C77\u0C78\u0313\u018A\u0C78\u0C79',
			'\u0311\u0189\u0C79\u0268\u0C7A\u0C7B',
			'\u031B\u018E\u0C7B\u0C7C\u031F\u0190\u0C7C\u0C7D',
			'\u030F\u0188\u0C7D\u0C7E\u030F\u0188\u0C7E\u0C7F',
			'\u02F7\u017C\u0C7F\u0C80\u0319\u018D\u0C80\u0C81',
			'\u0327\u0194\u0C81\u026A\u0C82\u0C83',
			'\u0313\u018A\u0C83\u0C84\u0315\u018B\u0C84\u0C85',
			'\u02FF\u0180\u0C85\u0C86\u0319\u018D\u0C86\u0C87',
			'\u02F7\u017C\u0C87\u0C88\u031D\u018F\u0C88\u0C89',
			'\u0313\u018A\u0C89\u0C8A\u0319\u018D\u0C8A\u026C',
			'\u0C8B\u0C8C\u02FF\u0180\u0C8C\u0C8D',
			'\u0325\u0193\u0C8D\u0C8E\u0315\u018B\u0C8E\u0C8F',
			'\u0319\u018D\u0C8F\u0C90\u02FF\u0180\u0C90\u0C91',
			'\u031B\u018E\u0C91\u0C92\u031B\u018E\u0C92\u0C93',
			'\u0307\u0184\u0C93\u0C94\u0313\u018A\u0C94\u0C95',
			'\u0311\u0189\u0C95\u026E\u0C96\u0C97',
			'\u02FD\u017F\u0C97\u0C98\u02FF\u0180\u0C98\u0C99',
			'\u031D\u018F\u0C99\u0C9A\u02F7\u017C\u0C9A\u0C9B',
			'\u0307\u0184\u0C9B\u0C9C\u030D\u0187\u0C9C\u0270',
			'\u0C9D\u0C9E\u0323\u0192\u0C9E\u0C9F',
			'\u02F7\u017C\u0C9F\u0CA0\u0307\u0184\u0CA0\u0CA1',
			'\u031D\u018F\u0CA1\u0272\u0CA2\u0CA3',
			'\u0319\u018D\u0CA3\u0CA4\u02FF\u0180\u0CA4\u0CA5',
			'\u031B\u018E\u0CA5\u0CA6\u0313\u018A\u0CA6\u0CA7',
			'\u031F\u0190\u0CA7\u0CA8\u0319\u018D\u0CA8\u0CA9',
			'\u02FB\u017E\u0CA9\u0CAA\u02FF\u0180\u0CAA\u0274',
			'\u0CAB\u0CAC\u0315\u018B\u0CAC\u0CAD',
			'\u030D\u0187\u0CAD\u0CAE\u02F7\u017C\u0CAE\u0CAF',
			'\u0311\u0189\u0CAF\u0276\u0CB0\u0CB1',
			'\u0317\u018C\u0CB1\u0CB2\u031F\u0190\u0CB2\u0CB3',
			'\u02FF\u0180\u0CB3\u0CB4\u0319\u018D\u0CB4\u0CB5',
			'\u0327\u0194\u0CB5\u0CB6\x07a\u0CB6\u0CB7',
			'\u0315\u018B\u0CB7\u0CB8\u02F7\u017C\u0CB8\u0CB9',
			'\u0319\u018D\u0CB9\u0CBA\u02F7\u017C\u0CBA\u0CBB',
			'\u030D\u0187\u0CBB\u0CBC\u030D\u0187\u0CBC\u0CBD',
			'\u02FF\u0180\u0CBD\u0CBE\u030D\u0187\u0CBE\u0CBF',
			'\u0307\u0184\u0CBF\u0CC0\u031B\u018E\u0CC0\u0CC1',
			'\u030F\u0188\u0CC1\u0278\u0CC2\u0CC3',
			'\u0315\u018B\u0CC3\u0CC4\u030D\u0187\u0CC4\u0CC5',
			'\u02F7\u017C\u0CC5\u0CC6\u0311\u0189\u0CC6\u0CC7',
			'\u031B\u018E\u0CC7\u027A\u0CC8\u0CC9',
			'\u02F7\u017C\u0CC9\u0CCA\u02FB\u017E\u0CCA\u0CCB',
			'\u031D\u018F\u0CCB\u0CCC\u0307\u0184\u0CCC\u0CCD',
			'\u0321\u0191\u0CCD\u0CCE\u02F7\u017C\u0CCE\u0CCF',
			'\u031D\u018F\u0CCF\u0CD0\u02FF\u0180\u0CD0\u027C',
			'\u0CD1\u0CD2\u02FD\u017F\u0CD2\u0CD3',
			'\u02FF\u0180\u0CD3\u0CD4\u0301\u0181\u0CD4\u0CD5',
			'\u02F7\u017C\u0CD5\u0CD6\u031F\u0190\u0CD6\u0CD7',
			'\u030D\u0187\u0CD7\u0CD8\u031D\u018F\u0CD8\u027E',
			'\u0CD9\u0CDA\u02FB\u017E\u0CDA\u0CDB',
			'\u0305\u0183\u0CDB\u0CDC\u02FF\u0180\u0CDC\u0CDD',
			'\u02FB\u017E\u0CDD\u0CDE\u030B\u0186\u0CDE\u0280',
			'\u0CDF\u0CE0\u0315\u018B\u0CE0\u0CE1',
			'\u0313\u018A\u0CE1\u0CE2\u0313\u018A\u0CE2\u0CE3',
			'\u030D\u0187\u0CE3\u0282\u0CE4\u0CE5',
			'\u030F\u0188\u0CE5\u0CE6\u0313\u018A\u0CE6\u0CE7',
			'\u0321\u0191\u0CE7\u0CE8\u02FF\u0180\u0CE8\u0284',
			'\u0CE9\u0CEA\u02FD\u017F\u0CEA\u0CEB',
			'\u0313\u018A\u0CEB\u0286\u0CEC\u0CED',
			'\u02F7\u017C\u0CED\u0CEE\u030D\u0187\u0CEE\u0CEF',
			'\u030D\u0187\u0CEF\u0CF0\u0313\u018A\u0CF0\u0CF1',
			'\u02FB\u017E\u0CF1\u0CF2\x07a\u0CF2\u0CF3',
			'\u0301\u0181\u0CF3\u0CF4\u0319\u018D\u0CF4\u0CF5',
			'\u02F7\u017C\u0CF5\u0CF6\u02FB\u017E\u0CF6\u0CF7',
			'\u031D\u018F\u0CF7\u0CF8\u0307\u0184\u0CF8\u0CF9',
			'\u0313\u018A\u0CF9\u0CFA\u0311\u0189\u0CFA\u0288',
			'\u0CFB\u0CFC\u031B\u018E\u0CFC\u0CFD',
			'\u02FB\u017E\u0CFD\u0CFE\u0305\u0183\u0CFE\u0CFF',
			'\u02FF\u0180\u0CFF\u0D00\u02FD\u017F\u0D00\u0D01',
			'\u031F\u0190\u0D01\u0D02\u030D\u0187\u0D02\u0D03',
			'\u0307\u0184\u0D03\u0D04\u0311\u0189\u0D04\u0D05',
			'\u0303\u0182\u0D05\u0D06\x07a\u0D06\u0D07',
			'\u0315\u018B\u0D07\u0D08\u0313\u018A\u0D08\u0D09',
			'\u030D\u0187\u0D09\u0D0A\u0307\u0184\u0D0A\u0D0B',
			'\u02FB\u017E\u0D0B\u0D0C\u0327\u0194\u0D0C\u028A',
			'\u0D0D\u0D0E\u0315\u018B\u0D0E\u0D0F',
			'\u02F7\u017C\u0D0F\u0D10\u031D\u018F\u0D10\u0D11',
			'\u0305\u0183\u0D11\u028C\u0D12\u0D13',
			'\u030F\u0188\u0D13\u0D14\u02F7\u017C\u0D14\u0D15',
			'\u0315\u018B\u0D15\u0D16\u0315\u018B\u0D16\u0D17',
			'\u0307\u0184\u0D17\u0D18\u0311\u0189\u0D18\u0D19',
			'\u0303\u0182\u0D19\u028E\u0D1A\u0D1B',
			'\u0323\u0192\u0D1B\u0D1C\u0313\u018A\u0D1C\u0D1D',
			'\u0319\u018D\u0D1D\u0D1E\u030B\u0186\u0D1E\u0D1F',
			'\u030D\u0187\u0D1F\u0D20\u0313\u018A\u0D20\u0D21',
			'\u02F7\u017C\u0D21\u0D22\u02FD\u017F\u0D22\u0290',
			'\u0D23\u0D24\u030F\u0188\u0D24\u0D25',
			'\u02F7\u017C\u0D25\u0D26\u0311\u0189\u0D26\u0D27',
			'\u02F7\u017C\u0D27\u0D28\u0303\u0182\u0D28\u0D29',
			'\u02FF\u0180\u0D29\u0D2A\u030F\u0188\u0D2A\u0D2B',
			'\u02FF\u0180\u0D2B\u0D2C\u0311\u0189\u0D2C\u0D2D',
			'\u031D\u018F\u0D2D\u0292\u0D2E\u0D2F',
			'\u02F7\u017C\u0D2F\u0D30\u02FB\u017E\u0D30\u0D31',
			'\u031D\u018F\u0D31\u0D32\u0307\u0184\u0D32\u0D33',
			'\u0321\u0191\u0D33\u0D34\u02FF\u0180\u0D34\u0294',
			'\u0D35\u0D36\u031F\u0190\u0D36\u0D37',
			'\u0311\u0189\u0D37\u0D38\u030F\u0188\u0D38\u0D39',
			'\u02F7\u017C\u0D39\u0D3A\u0311\u0189\u0D3A\u0D3B',
			'\u02F7\u017C\u0D3B\u0D3C\u0303\u0182\u0D3C\u0D3D',
			'\u02FF\u0180\u0D3D\u0D3E\u02FD\u017F\u0D3E\u0296',
			'\u0D3F\u0D40\u02F7\u017C\u0D40\u0D41',
			'\u0315\u018B\u0D41\u0D42\u0315\u018B\u0D42\u0D43',
			'\u030D\u0187\u0D43\u0D44\u0307\u0184\u0D44\u0D45',
			'\u02FB\u017E\u0D45\u0D46\u02F7\u017C\u0D46\u0D47',
			'\u031D\u018F\u0D47\u0D48\u0307\u0184\u0D48\u0D49',
			'\u0313\u018A\u0D49\u0D4A\u0311\u0189\u0D4A\u0298',
			'\u0D4B\u0D4C\u031B\u018E\u0D4C\u0D4D',
			'\u0327\u0194\u0D4D\u0D4E\u0311\u0189\u0D4E\u0D4F',
			'\u02FB\u017E\u0D4F\u029A\u0D50\u0D51',
			'\u031B\u018E\u0D51\u0D52\u02FF\u0180\u0D52\u0D53',
			'\u0317\u018C\u0D53\u0D54\u031F\u0190\u0D54\u0D55',
			'\u02FF\u0180\u0D55\u0D56\u0311\u0189\u0D56\u0D57',
			'\u02FB\u017E\u0D57\u0D58\u02FF\u0180\u0D58\u0D59',
			'\u0301\u0181\u0D59\u0D5A\u0307\u0184\u0D5A\u0D5B',
			'\u030D\u0187\u0D5B\u0D5C\u02FF\u0180\u0D5C\u029C',
			'\u0D5D\u0D5E\u031D\u018F\u0D5E\u0D5F',
			'\u02FF\u0180\u0D5F\u0D60\u0325\u0193\u0D60\u0D61',
			'\u031D\u018F\u0D61\u0D62\u0301\u0181\u0D62\u0D63',
			'\u0307\u0184\u0D63\u0D64\u030D\u0187\u0D64\u0D65',
			'\u02FF\u0180\u0D65\u029E\u0D66\u0D67',
			'\u0319\u018D\u0D67\u0D68\u02FB\u017E\u0D68\u0D69',
			'\u0301\u0181\u0D69\u0D6A\u0307\u0184\u0D6A\u0D6B',
			'\u030D\u0187\u0D6B\u0D6C\u02FF\u0180\u0D6C\u02A0',
			'\u0D6D\u0D6E\u0313\u018A\u0D6E\u0D6F',
			'\u0319\u018D\u0D6F\u0D70\u02FB\u017E\u0D70\u02A2',
			'\u0D71\u0D72\u0315\u018B\u0D72\u0D73',
			'\u02F7\u017C\u0D73\u0D74\u0319\u018D\u0D74\u0D75',
			'\u0317\u018C\u0D75\u0D76\u031F\u0190\u0D76\u0D77',
			'\u02FF\u0180\u0D77\u0D78\u031D\u018F\u0D78\u02A4',
			'\u0D79\u0D7A\u02FD\u017F\u0D7A\u0D7B',
			'\u02FF\u0180\u0D7B\u0D7C\u030D\u0187\u0D7C\u0D7D',
			'\u031D\u018F\u0D7D\u0D7E\u02F7\u017C\u0D7E\u02A6',
			'\u0D7F\u0D80\u02F7\u017C\u0D80\u0D81',
			'\u0321\u0191\u0D81\u0D82\u0319\u018D\u0D82\u0D83',
			'\u0313\u018A\u0D83\u02A8\u0D84\u0D85',
			'\u02FB\u017E\u0D85\u0D86\u031B\u018E\u0D86\u0D87',
			'\u0321\u0191\u0D87\u02AA\u0D88\u0D89',
			'\u0309\u0185\u0D89\u0D8A\u031B\u018E\u0D8A\u0D8B',
			'\u0313\u018A\u0D8B\u0D8C\u0311\u0189\u0D8C\u02AC',
			'\u0D8D\u0D8E\u0309\u0185\u0D8E\u0D8F',
			'\u031B\u018E\u0D8F\u0D90\u0313\u018A\u0D90\u0D91',
			'\u0311\u0189\u0D91\u0D92\u0301\u0181\u0D92\u0D93',
			'\u0307\u0184\u0D93\u0D94\u030D\u0187\u0D94\u0D95',
			'\u02FF\u0180\u0D95\u02AE\u0D96\u0D97',
			'\u02F9\u017D\u0D97\u0D98\u030D\u0187\u0D98\u0D99',
			'\u0313\u018A\u0D99\u0D9A\u0313\u018A\u0D9A\u0D9B',
			'\u030F\u0188\u0D9B\u0D9C\u0301\u0181\u0D9C\u0D9D',
			'\u0307\u0184\u0D9D\u0D9E\u030D\u0187\u0D9E\u0D9F',
			'\u031D\u018F\u0D9F\u0DA0\u02FF\u0180\u0DA0\u0DA1',
			'\u0319\u018D\u0DA1\u02B0\u0DA2\u0DA3',
			'\x070\u0DA3\u02B2\u0DA4\u0DA5',
			'\x07<\u0DA5\u02B4\u0DA6\u0DA7',
			'\x07.\u0DA7\u02B6\u0DA8\u0DA9',
			'\x07=\u0DA9\u02B8\u0DAA\u0DAB',
			'\x07*\u0DAB\u02BA\u0DAC\u0DAD',
			'\x07+\u0DAD\u02BC\u0DAE\u0DAF',
			'\x07]\u0DAF\u02BE\u0DB0\u0DB1',
			'\x07_\u0DB1\u02C0\u0DB2\u0DB3',
			'\x07}\u0DB3\u02C2\u0DB4\u0DB5',
			'\x07\x7F\u0DB5\u02C4\u0DB6\u0DBA',
			'\x07?\u0DB7\u0DB8\x07?\u0DB8\u0DBA\x07',
			'?\u0DB9\u0DB6\u0DB9\u0DB7',
			'\u0DBA\u02C6\u0DBB\u0DBC\x07',
			'>\u0DBC\u0DBD\x07?\u0DBD\u0DBE\x07@',
			'\u0DBE\u02C8\u0DBF\u0DC0\x07>',
			'\u0DC0\u0DC4\x07@\u0DC1\u0DC2\x07#',
			'\u0DC2\u0DC4\x07?\u0DC3\u0DBF',
			'\u0DC3\u0DC1\u0DC4\u02CA',
			'\u0DC5\u0DC6\x07>\u0DC6\u0DC7\x07?\u0DC7',
			'\u02CC\u0DC8\u0DC9\x07>\u0DC9',
			'\u02CE\u0DCA\u0DCB\x07@\u0DCB',
			'\u0DCC\x07?\u0DCC\u02D0\u0DCD',
			'\u0DCE\x07@\u0DCE\u02D2\u0DCF',
			'\u0DD0\x071\u0DD0\u02D4\u0DD1',
			'\u0DD2\x07-\u0DD2\u02D6\u0DD3',
			'\u0DD4\x07/\u0DD4\u02D8\u0DD5',
			'\u0DD6\x07,\u0DD6\u02DA\u0DD7',
			"\u0DD8\x07'\u0DD8\u02DC\u0DD9",
			'\u0DDA\x07F\u0DDA\u0DDB\x07K\u0DDB\u0DDC',
			'\x07X\u0DDC\u02DE\u0DDD\u0DDE',
			'\x07(\u0DDE\u02E0\u0DDF\u0DE0',
			'\x07\x80\u0DE0\u02E2\u0DE1\u0DE2',
			'\x07~\u0DE2\u02E4\u0DE3\u0DE4',
			'\x07~\u0DE4\u0DE5\x07~\u0DE5\u02E6',
			'\u0DE6\u0DE7\x07`\u0DE7\u02E8',
			'\u0DE8\u0DE9\x07A\u0DE9\u02EA',
			'\u0DEA\u0DEB\x07&\u0DEB\u02EC',
			'\u0DEC\u0DED	\u0DED\u02EE',
			'\u0DEE\u0DEF	\u0DEF\u02F0',
			'\u0DF0\u0DF12;\u0DF1\u02F2',
			'\u0DF2\u0DF5	\u0DF3\u0DF6\u02D5',
			'\u016B\u0DF4\u0DF6\u02D7\u016C\u0DF5\u0DF3',
			'\u0DF5\u0DF4\u0DF5\u0DF6',
			'\u0DF6\u0DF8\u0DF7\u0DF9\u02F1',
			'\u0179\u0DF8\u0DF7\u0DF9\u0DFA',
			'\u0DFA\u0DF8\u0DFA\u0DFB',
			'\u0DFB\u02F4\u0DFC\u0E0D	',
			'\u0DFD\u0E0D\u02D5\u016B\u0DFE\u0E0D\u02D9',
			'\u016D\u0DFF\u0E0D\u02E9\u0175\u0E00\u0E0D\u02D7',
			'\u016C\u0E01\u0E0D\u02B1\u0159\u0E02\u0E0D\u02B9',
			'\u015D\u0E03\u0E0D\u02BB\u015E\u0E04\u0E0D\u02BD',
			'\u015F\u0E05\u0E0D\u02BF\u0160\u0E06\u0E0D\u02C1',
			'\u0161\u0E07\u0E0D\u02C3\u0162\u0E08\u0E0D\u02E7',
			'\u0174\u0E09\u0E0D\u02E3\u0172\u0E0A\u0E0D\u02EB',
			'\u0176\u0E0B\u0E0D\x07#\u0E0C\u0DFC',
			'\u0E0C\u0DFD\u0E0C\u0DFE',
			'\u0E0C\u0DFF\u0E0C\u0E00',
			'\u0E0C\u0E01\u0E0C\u0E02',
			'\u0E0C\u0E03\u0E0C\u0E04',
			'\u0E0C\u0E05\u0E0C\u0E06',
			'\u0E0C\u0E07\u0E0C\u0E08',
			'\u0E0C\u0E09\u0E0C\u0E0A',
			'\u0E0C\u0E0B\u0E0D\u02F6',
			'\u0E0E\u0E0F	\u0E0F\u02F8',
			'\u0E10\u0E11	\x07\u0E11\u02FA',
			'\u0E12\u0E13	\b\u0E13\u02FC',
			'\u0E14\u0E15		\u0E15\u02FE',
			'\u0E16\u0E17	\u0E17\u0300',
			`\u0E18\u0E19	
\u0E19\u0302\u0E1A`,
			'\u0E1B	\v\u0E1B\u0304\u0E1C',
			'\u0E1D	\f\u0E1D\u0306\u0E1E\u0E1F',
			'	\r\u0E1F\u0308\u0E20\u0E21	',
			'\u0E21\u030A\u0E22\u0E23	',
			'\u0E23\u030C\u0E24\u0E25	',
			'\u0E25\u030E\u0E26\u0E27	',
			'\u0E27\u0310\u0E28\u0E29	',
			'\u0E29\u0312\u0E2A\u0E2B	',
			'\u0E2B\u0314\u0E2C\u0E2D	',
			'\u0E2D\u0316\u0E2E\u0E2F	',
			'\u0E2F\u0318\u0E30\u0E31	',
			'\u0E31\u031A\u0E32\u0E33	',
			'\u0E33\u031C\u0E34\u0E35	',
			'\u0E35\u031E\u0E36\u0E37	',
			'\u0E37\u0320\u0E38\u0E39	',
			'\u0E39\u0322\u0E3A\u0E3B	\x1B',
			'\u0E3B\u0324\u0E3C\u0E3D	',
			'\u0E3D\u0326\u0E3E\u0E3F	',
			'\u0E3F\u0328\u0E40\u0E41	',
			'\u0E41\u032A\u0E42\u0E48\x07)',
			`\u0E43\u0E47
\u0E44\u0E45\x07^`,
			'\u0E45\u0E47\v\u0E46\u0E43',
			'\u0E46\u0E44\u0E47\u0E4A',
			'\u0E48\u0E46\u0E48\u0E49',
			'\u0E49\u0E4B\u0E4A\u0E48',
			'\u0E4B\u0E57\x07)\u0E4C\u0E52\x07$',
			`\u0E4D\u0E51
 \u0E4E\u0E4F\x07^\u0E4F\u0E51`,
			'\v\u0E50\u0E4D\u0E50\u0E4E',
			'\u0E51\u0E54\u0E52\u0E50',
			'\u0E52\u0E53\u0E53\u0E55',
			'\u0E54\u0E52\u0E55\u0E57',
			'\x07$\u0E56\u0E42\u0E56\u0E4C',
			'\u0E57\u0E58\u0E58\u0E56',
			'\u0E58\u0E59\u0E59\u032C',
			'\u0E5A\u0E64\u032B\u0196\u0E5B\u0E5C',
			'\x072\u0E5C\u0E5F\x07Z\u0E5D\u0E60',
			'\u02EF\u0178\u0E5E\u0E60\u02F1\u0179\u0E5F\u0E5D',
			'\u0E5F\u0E5E\u0E60\u0E61',
			'\u0E61\u0E5F\u0E61\u0E62',
			'\u0E62\u0E64\u0E63\u0E5A',
			'\u0E63\u0E5B\u0E64\u032E',
			'\u0E65\u0E67\u02F1\u0179\u0E66\u0E65',
			'\u0E67\u0E68\u0E68\u0E66',
			'\u0E68\u0E69\u0E69\u0E6A',
			'\u0E6A\u0E6B	!\u0E6B\u0330',
			'\u0E6C\u0E70\u0335\u019B\u0E6D\u0E71\x07F',
			'\u0E6E\u0E6F\x07D\u0E6F\u0E71\x07F',
			'\u0E70\u0E6D\u0E70\u0E6E',
			'\u0E71\u0332\u0E72\u0E74\u02F1\u0179',
			'\u0E73\u0E72\u0E74\u0E75',
			'\u0E75\u0E73\u0E75\u0E76',
			'\u0E76\u0E77\u0E77\u0E78	"',
			'\u0E78\u0334\u0E79\u0E7B\u02F1\u0179',
			'\u0E7A\u0E79\u0E7B\u0E7C',
			'\u0E7C\u0E7A\u0E7C\u0E7D',
			'\u0E7D\u0E89\u0E7E\u0E82\u02B1\u0159',
			'\u0E7F\u0E81\u02F1\u0179\u0E80\u0E7F',
			'\u0E81\u0E84\u0E82\u0E80',
			'\u0E82\u0E83\u0E83\u0E86',
			'\u0E84\u0E82\u0E85\u0E87\u02F3\u017A',
			'\u0E86\u0E85\u0E86\u0E87',
			'\u0E87\u0E8A\u0E88\u0E8A\u02F3\u017A',
			'\u0E89\u0E7E\u0E89\u0E88',
			'\u0E89\u0E8A\u0E8A\u0336',
			'\u0E8B\u0E8E\u02ED\u0177\u0E8C\u0E8E\u02F1\u0179',
			'\u0E8D\u0E8B\u0E8D\u0E8C',
			'\u0E8E\u0E94\u0E8F\u0E93\u02ED\u0177',
			'\u0E90\u0E93\u02F1\u0179\u0E91\u0E93\x07a',
			'\u0E92\u0E8F\u0E92\u0E90',
			'\u0E92\u0E91\u0E93\u0E96',
			'\u0E94\u0E92\u0E94\u0E95',
			'\u0E95\u0EA1\u0E96\u0E94',
			'\u0E97\u0EA1\u0339\u019D\u0E98\u0E9A\x07b',
			'\u0E99\u0E9B\u02F5\u017B\u0E9A\u0E99',
			'\u0E9B\u0E9C\u0E9C\u0E9A',
			'\u0E9C\u0E9D\u0E9D\u0E9E',
			'\u0E9E\u0E9F\x07b\u0E9F\u0EA1',
			'\u0EA0\u0E8D\u0EA0\u0E97',
			'\u0EA0\u0E98\u0EA1\u0338',
			'\u0EA2\u0EA8\x07b\u0EA3\u0EA4\x07b\u0EA4',
			`\u0EA7\x07b\u0EA5\u0EA7
#\u0EA6\u0EA3`,
			'\u0EA6\u0EA5\u0EA7\u0EAA',
			'\u0EA8\u0EA6\u0EA8\u0EA9',
			'\u0EA9\u0EAB\u0EAA\u0EA8',
			'\u0EAB\u0EAC\x07b\u0EAC\u033A',
			'\u0EAD\u0EB1\x07a\u0EAE\u0EB2',
			'\u02ED\u0177\u0EAF\u0EB2\u02F1\u0179\u0EB0\u0EB2	',
			'$\u0EB1\u0EAE\u0EB1\u0EAF',
			'\u0EB1\u0EB0\u0EB2\u0EB3',
			'\u0EB3\u0EB1\u0EB3\u0EB4',
			'\u0EB4\u033C\u0EB5\u0EB6	',
			'%\u0EB6\u0EB7\u0EB7\u0EB8\b\u019F',
			'\u0EB8\u033E\u0EB9\u0EBA\x07/',
			'\u0EBA\u0EBB\x07/\u0EBB\u0EBF',
			`\u0EBC\u0EBE
&\u0EBD\u0EBC`,
			'\u0EBE\u0EC1\u0EBF\u0EBD',
			'\u0EBF\u0EC0\u0EC0\u0EC2',
			'\u0EC1\u0EBF\u0EC2\u0EC3\b\u01A0',
			'\u0EC3\u0340\u0EC4\u0EC7\u0343\u01A2',
			'\u0EC5\u0EC7\u0345\u01A3\u0EC6\u0EC4',
			'\u0EC6\u0EC5\u0EC7\u0342',
			'\u0EC8\u0EC9\x071\u0EC9\u0ECA\x07,',
			'\u0ECA\u0ECB\x07-\u0ECB\u0ED0',
			'\u0ECC\u0ECF\u0341\u01A1\u0ECD\u0ECF\v',
			'\u0ECE\u0ECC\u0ECE\u0ECD',
			'\u0ECF\u0ED2\u0ED0\u0ED1',
			'\u0ED0\u0ECE\u0ED1\u0ED3',
			'\u0ED2\u0ED0\u0ED3\u0ED4\x07,',
			'\u0ED4\u0ED5\x071\u0ED5\u0ED6',
			'\u0ED6\u0ED7\b\u01A2\u0ED7\u0344',
			'\u0ED8\u0ED9\x071\u0ED9\u0EDA\x07,\u0EDA',
			'\u0EDF\u0EDB\u0EDE\u0341\u01A1\u0EDC',
			'\u0EDE\v\u0EDD\u0EDB\u0EDD',
			'\u0EDC\u0EDE\u0EE1\u0EDF',
			'\u0EE0\u0EDF\u0EDD\u0EE0',
			'\u0EE2\u0EE1\u0EDF\u0EE2',
			'\u0EE3\x07,\u0EE3\u0EE4\x071\u0EE4\u0EE5',
			'\u0EE5\u0EE6\b\u01A3\u0EE6\u0346',
			'1\u0367\u0558\u05C4\u0B19\u0B36\u0B43',
			'\u0B4E\u0B5F\u0B70\u0B81\u0DB9\u0DC3\u0DF5\u0DFA\u0E0C\u0E46\u0E48\u0E50',
			'\u0E52\u0E56\u0E58\u0E5F\u0E61\u0E63\u0E68\u0E70\u0E75\u0E7C\u0E82\u0E86',
			'\u0E89\u0E8D\u0E92\u0E94\u0E9C\u0EA0\u0EA6\u0EA8\u0EB1\u0EB3\u0EBF\u0EC6',
			'\u0ECE\u0ED0\u0EDD\u0EDF',
		].join(''),
		s5 = new _l.atn.ATNDeserializer().deserialize(pE),
		hE = s5.decisionToState.map(function (u, e) {
			return new _l.dfa.DFA(u, e);
		});
	function f(u) {
		return (
			_l.Lexer.call(this, u),
			(this._interp = new _l.atn.LexerATNSimulator(this, s5, hE, new _l.PredictionContextCache())),
			this
		);
	}
	f.prototype = Object.create(_l.Lexer.prototype);
	f.prototype.constructor = f;
	Object.defineProperty(f.prototype, 'atn', {
		get: function () {
			return s5;
		},
	});
	f.EOF = _l.Token.EOF;
	f.KW_TRUE = 1;
	f.KW_FALSE = 2;
	f.KW_ALL = 3;
	f.KW_NONE = 4;
	f.KW_AND = 5;
	f.KW_OR = 6;
	f.KW_NOT = 7;
	f.KW_LIKE = 8;
	f.KW_ANY = 9;
	f.KW_IF = 10;
	f.KW_EXISTS = 11;
	f.KW_ASC = 12;
	f.KW_DESC = 13;
	f.KW_NULLS = 14;
	f.KW_LAST = 15;
	f.KW_ORDER = 16;
	f.KW_GROUP = 17;
	f.KW_BY = 18;
	f.KW_HAVING = 19;
	f.KW_WHERE = 20;
	f.KW_FROM = 21;
	f.KW_AS = 22;
	f.KW_SELECT = 23;
	f.KW_DISTINCT = 24;
	f.KW_INSERT = 25;
	f.KW_OVERWRITE = 26;
	f.KW_OUTER = 27;
	f.KW_UNIQUEJOIN = 28;
	f.KW_PRESERVE = 29;
	f.KW_JOIN = 30;
	f.KW_LEFT = 31;
	f.KW_RIGHT = 32;
	f.KW_FULL = 33;
	f.KW_ON = 34;
	f.KW_PARTITION = 35;
	f.KW_PARTITIONS = 36;
	f.KW_TABLE = 37;
	f.KW_TABLES = 38;
	f.KW_COLUMNS = 39;
	f.KW_INDEX = 40;
	f.KW_INDEXES = 41;
	f.KW_REBUILD = 42;
	f.KW_FUNCTIONS = 43;
	f.KW_SHOW = 44;
	f.KW_MSCK = 45;
	f.KW_REPAIR = 46;
	f.KW_DIRECTORY = 47;
	f.KW_LOCAL = 48;
	f.KW_TRANSFORM = 49;
	f.KW_USING = 50;
	f.KW_CLUSTER = 51;
	f.KW_DISTRIBUTE = 52;
	f.KW_SORT = 53;
	f.KW_UNION = 54;
	f.KW_EXCEPT = 55;
	f.KW_LOAD = 56;
	f.KW_EXPORT = 57;
	f.KW_IMPORT = 58;
	f.KW_REPLICATION = 59;
	f.KW_METADATA = 60;
	f.KW_DATA = 61;
	f.KW_INPATH = 62;
	f.KW_IS = 63;
	f.KW_NULL = 64;
	f.KW_CREATE = 65;
	f.KW_EXTERNAL = 66;
	f.KW_ALTER = 67;
	f.KW_CHANGE = 68;
	f.KW_COLUMN = 69;
	f.KW_FIRST = 70;
	f.KW_AFTER = 71;
	f.KW_DESCRIBE = 72;
	f.KW_DROP = 73;
	f.KW_RENAME = 74;
	f.KW_TO = 75;
	f.KW_COMMENT = 76;
	f.KW_BOOLEAN = 77;
	f.KW_TINYINT = 78;
	f.KW_SMALLINT = 79;
	f.KW_INT = 80;
	f.KW_BIGINT = 81;
	f.KW_FLOAT = 82;
	f.KW_DOUBLE = 83;
	f.KW_PRECISION = 84;
	f.KW_DATE = 85;
	f.KW_DATETIME = 86;
	f.KW_TIMESTAMP = 87;
	f.KW_TIMESTAMPLOCALTZ = 88;
	f.KW_TIME = 89;
	f.KW_ZONE = 90;
	f.KW_INTERVAL = 91;
	f.KW_DECIMAL = 92;
	f.KW_STRING = 93;
	f.KW_CHAR = 94;
	f.KW_VARCHAR = 95;
	f.KW_ARRAY = 96;
	f.KW_STRUCT = 97;
	f.KW_MAP = 98;
	f.KW_UNIONTYPE = 99;
	f.KW_REDUCE = 100;
	f.KW_PARTITIONED = 101;
	f.KW_CLUSTERED = 102;
	f.KW_SORTED = 103;
	f.KW_INTO = 104;
	f.KW_BUCKETS = 105;
	f.KW_ROW = 106;
	f.KW_ROWS = 107;
	f.KW_FORMAT = 108;
	f.KW_DELIMITED = 109;
	f.KW_FIELDS = 110;
	f.KW_TERMINATED = 111;
	f.KW_ESCAPED = 112;
	f.KW_COLLECTION = 113;
	f.KW_ITEMS = 114;
	f.KW_KEYS = 115;
	f.KW_KEY_TYPE = 116;
	f.KW_KILL = 117;
	f.KW_LINES = 118;
	f.KW_STORED = 119;
	f.KW_FILEFORMAT = 120;
	f.KW_INPUTFORMAT = 121;
	f.KW_OUTPUTFORMAT = 122;
	f.KW_INPUTDRIVER = 123;
	f.KW_OUTPUTDRIVER = 124;
	f.KW_ENABLE = 125;
	f.KW_DISABLE = 126;
	f.KW_LOCATION = 127;
	f.KW_TABLESAMPLE = 128;
	f.KW_BUCKET = 129;
	f.KW_OUT = 130;
	f.KW_OF = 131;
	f.KW_PERCENT = 132;
	f.KW_CAST = 133;
	f.KW_ADD = 134;
	f.KW_REPLACE = 135;
	f.KW_RLIKE = 136;
	f.KW_REGEXP = 137;
	f.KW_TEMPORARY = 138;
	f.KW_FUNCTION = 139;
	f.KW_MACRO = 140;
	f.KW_FILE = 141;
	f.KW_JAR = 142;
	f.KW_EXPLAIN = 143;
	f.KW_EXTENDED = 144;
	f.KW_FORMATTED = 145;
	f.KW_DEPENDENCY = 146;
	f.KW_LOGICAL = 147;
	f.KW_SERDE = 148;
	f.KW_WITH = 149;
	f.KW_DEFERRED = 150;
	f.KW_SERDEPROPERTIES = 151;
	f.KW_DBPROPERTIES = 152;
	f.KW_LIMIT = 153;
	f.KW_OFFSET = 154;
	f.KW_SET = 155;
	f.KW_UNSET = 156;
	f.KW_TBLPROPERTIES = 157;
	f.KW_IDXPROPERTIES = 158;
	f.KW_VALUE_TYPE = 159;
	f.KW_ELEM_TYPE = 160;
	f.KW_DEFINED = 161;
	f.KW_CASE = 162;
	f.KW_WHEN = 163;
	f.KW_THEN = 164;
	f.KW_ELSE = 165;
	f.KW_END = 166;
	f.KW_MAPJOIN = 167;
	f.KW_STREAMTABLE = 168;
	f.KW_CLUSTERSTATUS = 169;
	f.KW_UTC = 170;
	f.KW_UTCTIMESTAMP = 171;
	f.KW_LONG = 172;
	f.KW_DELETE = 173;
	f.KW_PLUS = 174;
	f.KW_MINUS = 175;
	f.KW_FETCH = 176;
	f.KW_INTERSECT = 177;
	f.KW_VIEW = 178;
	f.KW_VIEWS = 179;
	f.KW_IN = 180;
	f.KW_DATABASE = 181;
	f.KW_DATABASES = 182;
	f.KW_MATERIALIZED = 183;
	f.KW_SCHEMA = 184;
	f.KW_SCHEMAS = 185;
	f.KW_GRANT = 186;
	f.KW_REVOKE = 187;
	f.KW_SSL = 188;
	f.KW_UNDO = 189;
	f.KW_LOCK = 190;
	f.KW_LOCKS = 191;
	f.KW_UNLOCK = 192;
	f.KW_SHARED = 193;
	f.KW_EXCLUSIVE = 194;
	f.KW_PROCEDURE = 195;
	f.KW_UNSIGNED = 196;
	f.KW_WHILE = 197;
	f.KW_READ = 198;
	f.KW_READS = 199;
	f.KW_PURGE = 200;
	f.KW_RANGE = 201;
	f.KW_ANALYZE = 202;
	f.KW_BEFORE = 203;
	f.KW_BETWEEN = 204;
	f.KW_BOTH = 205;
	f.KW_BINARY = 206;
	f.KW_CROSS = 207;
	f.KW_CONTINUE = 208;
	f.KW_CURSOR = 209;
	f.KW_TRIGGER = 210;
	f.KW_RECORDREADER = 211;
	f.KW_RECORDWRITER = 212;
	f.KW_SEMI = 213;
	f.KW_LATERAL = 214;
	f.KW_TOUCH = 215;
	f.KW_ARCHIVE = 216;
	f.KW_UNARCHIVE = 217;
	f.KW_COMPUTE = 218;
	f.KW_STATISTICS = 219;
	f.KW_USE = 220;
	f.KW_OPTIONS = 221;
	f.KW_OPTION = 222;
	f.KW_CONCATENATE = 223;
	f.KW_SHOW_DATABASE = 224;
	f.KW_UPDATE = 225;
	f.KW_RESTRICT = 226;
	f.KW_CASCADE = 227;
	f.KW_SKEWED = 228;
	f.KW_ROLLUP = 229;
	f.KW_CUBE = 230;
	f.KW_DIRECTORIES = 231;
	f.KW_FOR = 232;
	f.KW_WINDOW = 233;
	f.KW_UNBOUNDED = 234;
	f.KW_PRECEDING = 235;
	f.KW_FOLLOWING = 236;
	f.KW_CURRENT = 237;
	f.KW_CURRENT_DATE = 238;
	f.KW_CURRENT_TIMESTAMP = 239;
	f.KW_LESS = 240;
	f.KW_MORE = 241;
	f.KW_OVER = 242;
	f.KW_GROUPING = 243;
	f.KW_SETS = 244;
	f.KW_TRUNCATE = 245;
	f.KW_NOSCAN = 246;
	f.KW_USER = 247;
	f.KW_ROLE = 248;
	f.KW_ROLES = 249;
	f.KW_INNER = 250;
	f.KW_EXCHANGE = 251;
	f.KW_URI = 252;
	f.KW_SERVER = 253;
	f.KW_ADMIN = 254;
	f.KW_OWNER = 255;
	f.KW_PRINCIPALS = 256;
	f.KW_COMPACT = 257;
	f.KW_COMPACTIONS = 258;
	f.KW_TRANSACTIONS = 259;
	f.KW_REWRITE = 260;
	f.KW_AUTHORIZATION = 261;
	f.KW_REOPTIMIZATION = 262;
	f.KW_CONF = 263;
	f.KW_VALUES = 264;
	f.KW_RELOAD = 265;
	f.KW_YEAR = 266;
	f.KW_QUERY = 267;
	f.KW_QUARTER = 268;
	f.KW_MONTH = 269;
	f.KW_WEEK = 270;
	f.KW_DAY = 271;
	f.KW_DOW = 272;
	f.KW_HOUR = 273;
	f.KW_MINUTE = 274;
	f.KW_SECOND = 275;
	f.KW_START = 276;
	f.KW_TRANSACTION = 277;
	f.KW_COMMIT = 278;
	f.KW_ROLLBACK = 279;
	f.KW_WORK = 280;
	f.KW_ONLY = 281;
	f.KW_WRITE = 282;
	f.KW_ISOLATION = 283;
	f.KW_LEVEL = 284;
	f.KW_SNAPSHOT = 285;
	f.KW_AUTOCOMMIT = 286;
	f.KW_CACHE = 287;
	f.KW_PRIMARY = 288;
	f.KW_FOREIGN = 289;
	f.KW_REFERENCES = 290;
	f.KW_CONSTRAINT = 291;
	f.KW_ENFORCED = 292;
	f.KW_VALIDATE = 293;
	f.KW_NOVALIDATE = 294;
	f.KW_RELY = 295;
	f.KW_NORELY = 296;
	f.KW_UNIQUE = 297;
	f.KW_KEY = 298;
	f.KW_ABORT = 299;
	f.KW_EXTRACT = 300;
	f.KW_FLOOR = 301;
	f.KW_MERGE = 302;
	f.KW_MATCHED = 303;
	f.KW_REPL = 304;
	f.KW_DUMP = 305;
	f.KW_STATUS = 306;
	f.KW_VECTORIZATION = 307;
	f.KW_SUMMARY = 308;
	f.KW_OPERATOR = 309;
	f.KW_EXPRESSION = 310;
	f.KW_DETAIL = 311;
	f.KW_WAIT = 312;
	f.KW_RESOURCE = 313;
	f.KW_PLAN = 314;
	f.KW_QUERY_PARALLELISM = 315;
	f.KW_PLANS = 316;
	f.KW_ACTIVATE = 317;
	f.KW_DEFAULT = 318;
	f.KW_CHECK = 319;
	f.KW_POOL = 320;
	f.KW_MOVE = 321;
	f.KW_DO = 322;
	f.KW_ALLOC_FRACTION = 323;
	f.KW_SCHEDULING_POLICY = 324;
	f.KW_PATH = 325;
	f.KW_MAPPING = 326;
	f.KW_WORKLOAD = 327;
	f.KW_MANAGEMENT = 328;
	f.KW_ACTIVE = 329;
	f.KW_UNMANAGED = 330;
	f.KW_APPLICATION = 331;
	f.KW_SYNC = 332;
	f.KW_SEQUENCEFILE = 333;
	f.KW_TEXTFILE = 334;
	f.KW_RCFILE = 335;
	f.KW_ORC = 336;
	f.KW_PARQUET = 337;
	f.KW_DELTA = 338;
	f.KW_AVRO = 339;
	f.KW_CSV = 340;
	f.KW_JSON = 341;
	f.KW_JSONFILE = 342;
	f.KW_BLOOMFILTER = 343;
	f.DOT = 344;
	f.COLON = 345;
	f.COMMA = 346;
	f.SEMICOLON = 347;
	f.LPAREN = 348;
	f.RPAREN = 349;
	f.LSQUARE = 350;
	f.RSQUARE = 351;
	f.LCURLY = 352;
	f.RCURLY = 353;
	f.EQUAL = 354;
	f.EQUAL_NS = 355;
	f.NOTEQUAL = 356;
	f.LESSTHANOREQUALTO = 357;
	f.LESSTHAN = 358;
	f.GREATERTHANOREQUALTO = 359;
	f.GREATERTHAN = 360;
	f.DIVIDE = 361;
	f.PLUS = 362;
	f.MINUS = 363;
	f.STAR = 364;
	f.MOD = 365;
	f.DIV = 366;
	f.AMPERSAND = 367;
	f.TILDE = 368;
	f.BITWISEOR = 369;
	f.CONCATENATE = 370;
	f.BITWISEXOR = 371;
	f.QUESTION = 372;
	f.DOLLAR = 373;
	f.StringLiteral = 374;
	f.CharSetLiteral = 375;
	f.IntegralLiteral = 376;
	f.NumberLiteral = 377;
	f.ByteLengthLiteral = 378;
	f.Number = 379;
	f.Identifier = 380;
	f.QuotedIdentifier = 381;
	f.CharSetName = 382;
	f.WS = 383;
	f.LINE_COMMENT = 384;
	f.QUERY_HINT = 385;
	f.SHOW_HINT = 386;
	f.HIDDEN_HINT = 387;
	f.prototype.channelNames = ['DEFAULT_TOKEN_CHANNEL', 'HIDDEN'];
	f.prototype.modeNames = ['DEFAULT_MODE'];
	f.prototype.literalNames = [
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		null,
		"'.'",
		"':'",
		"','",
		"';'",
		"'('",
		"')'",
		"'['",
		"']'",
		"'{'",
		"'}'",
		null,
		"'<=>'",
		null,
		"'<='",
		"'<'",
		"'>='",
		"'>'",
		"'/'",
		"'+'",
		"'-'",
		"'*'",
		"'%'",
		"'DIV'",
		"'&'",
		"'~'",
		"'|'",
		"'||'",
		"'^'",
		"'?'",
		"'$'",
	];
	f.prototype.symbolicNames = [
		null,
		'KW_TRUE',
		'KW_FALSE',
		'KW_ALL',
		'KW_NONE',
		'KW_AND',
		'KW_OR',
		'KW_NOT',
		'KW_LIKE',
		'KW_ANY',
		'KW_IF',
		'KW_EXISTS',
		'KW_ASC',
		'KW_DESC',
		'KW_NULLS',
		'KW_LAST',
		'KW_ORDER',
		'KW_GROUP',
		'KW_BY',
		'KW_HAVING',
		'KW_WHERE',
		'KW_FROM',
		'KW_AS',
		'KW_SELECT',
		'KW_DISTINCT',
		'KW_INSERT',
		'KW_OVERWRITE',
		'KW_OUTER',
		'KW_UNIQUEJOIN',
		'KW_PRESERVE',
		'KW_JOIN',
		'KW_LEFT',
		'KW_RIGHT',
		'KW_FULL',
		'KW_ON',
		'KW_PARTITION',
		'KW_PARTITIONS',
		'KW_TABLE',
		'KW_TABLES',
		'KW_COLUMNS',
		'KW_INDEX',
		'KW_INDEXES',
		'KW_REBUILD',
		'KW_FUNCTIONS',
		'KW_SHOW',
		'KW_MSCK',
		'KW_REPAIR',
		'KW_DIRECTORY',
		'KW_LOCAL',
		'KW_TRANSFORM',
		'KW_USING',
		'KW_CLUSTER',
		'KW_DISTRIBUTE',
		'KW_SORT',
		'KW_UNION',
		'KW_EXCEPT',
		'KW_LOAD',
		'KW_EXPORT',
		'KW_IMPORT',
		'KW_REPLICATION',
		'KW_METADATA',
		'KW_DATA',
		'KW_INPATH',
		'KW_IS',
		'KW_NULL',
		'KW_CREATE',
		'KW_EXTERNAL',
		'KW_ALTER',
		'KW_CHANGE',
		'KW_COLUMN',
		'KW_FIRST',
		'KW_AFTER',
		'KW_DESCRIBE',
		'KW_DROP',
		'KW_RENAME',
		'KW_TO',
		'KW_COMMENT',
		'KW_BOOLEAN',
		'KW_TINYINT',
		'KW_SMALLINT',
		'KW_INT',
		'KW_BIGINT',
		'KW_FLOAT',
		'KW_DOUBLE',
		'KW_PRECISION',
		'KW_DATE',
		'KW_DATETIME',
		'KW_TIMESTAMP',
		'KW_TIMESTAMPLOCALTZ',
		'KW_TIME',
		'KW_ZONE',
		'KW_INTERVAL',
		'KW_DECIMAL',
		'KW_STRING',
		'KW_CHAR',
		'KW_VARCHAR',
		'KW_ARRAY',
		'KW_STRUCT',
		'KW_MAP',
		'KW_UNIONTYPE',
		'KW_REDUCE',
		'KW_PARTITIONED',
		'KW_CLUSTERED',
		'KW_SORTED',
		'KW_INTO',
		'KW_BUCKETS',
		'KW_ROW',
		'KW_ROWS',
		'KW_FORMAT',
		'KW_DELIMITED',
		'KW_FIELDS',
		'KW_TERMINATED',
		'KW_ESCAPED',
		'KW_COLLECTION',
		'KW_ITEMS',
		'KW_KEYS',
		'KW_KEY_TYPE',
		'KW_KILL',
		'KW_LINES',
		'KW_STORED',
		'KW_FILEFORMAT',
		'KW_INPUTFORMAT',
		'KW_OUTPUTFORMAT',
		'KW_INPUTDRIVER',
		'KW_OUTPUTDRIVER',
		'KW_ENABLE',
		'KW_DISABLE',
		'KW_LOCATION',
		'KW_TABLESAMPLE',
		'KW_BUCKET',
		'KW_OUT',
		'KW_OF',
		'KW_PERCENT',
		'KW_CAST',
		'KW_ADD',
		'KW_REPLACE',
		'KW_RLIKE',
		'KW_REGEXP',
		'KW_TEMPORARY',
		'KW_FUNCTION',
		'KW_MACRO',
		'KW_FILE',
		'KW_JAR',
		'KW_EXPLAIN',
		'KW_EXTENDED',
		'KW_FORMATTED',
		'KW_DEPENDENCY',
		'KW_LOGICAL',
		'KW_SERDE',
		'KW_WITH',
		'KW_DEFERRED',
		'KW_SERDEPROPERTIES',
		'KW_DBPROPERTIES',
		'KW_LIMIT',
		'KW_OFFSET',
		'KW_SET',
		'KW_UNSET',
		'KW_TBLPROPERTIES',
		'KW_IDXPROPERTIES',
		'KW_VALUE_TYPE',
		'KW_ELEM_TYPE',
		'KW_DEFINED',
		'KW_CASE',
		'KW_WHEN',
		'KW_THEN',
		'KW_ELSE',
		'KW_END',
		'KW_MAPJOIN',
		'KW_STREAMTABLE',
		'KW_CLUSTERSTATUS',
		'KW_UTC',
		'KW_UTCTIMESTAMP',
		'KW_LONG',
		'KW_DELETE',
		'KW_PLUS',
		'KW_MINUS',
		'KW_FETCH',
		'KW_INTERSECT',
		'KW_VIEW',
		'KW_VIEWS',
		'KW_IN',
		'KW_DATABASE',
		'KW_DATABASES',
		'KW_MATERIALIZED',
		'KW_SCHEMA',
		'KW_SCHEMAS',
		'KW_GRANT',
		'KW_REVOKE',
		'KW_SSL',
		'KW_UNDO',
		'KW_LOCK',
		'KW_LOCKS',
		'KW_UNLOCK',
		'KW_SHARED',
		'KW_EXCLUSIVE',
		'KW_PROCEDURE',
		'KW_UNSIGNED',
		'KW_WHILE',
		'KW_READ',
		'KW_READS',
		'KW_PURGE',
		'KW_RANGE',
		'KW_ANALYZE',
		'KW_BEFORE',
		'KW_BETWEEN',
		'KW_BOTH',
		'KW_BINARY',
		'KW_CROSS',
		'KW_CONTINUE',
		'KW_CURSOR',
		'KW_TRIGGER',
		'KW_RECORDREADER',
		'KW_RECORDWRITER',
		'KW_SEMI',
		'KW_LATERAL',
		'KW_TOUCH',
		'KW_ARCHIVE',
		'KW_UNARCHIVE',
		'KW_COMPUTE',
		'KW_STATISTICS',
		'KW_USE',
		'KW_OPTIONS',
		'KW_OPTION',
		'KW_CONCATENATE',
		'KW_SHOW_DATABASE',
		'KW_UPDATE',
		'KW_RESTRICT',
		'KW_CASCADE',
		'KW_SKEWED',
		'KW_ROLLUP',
		'KW_CUBE',
		'KW_DIRECTORIES',
		'KW_FOR',
		'KW_WINDOW',
		'KW_UNBOUNDED',
		'KW_PRECEDING',
		'KW_FOLLOWING',
		'KW_CURRENT',
		'KW_CURRENT_DATE',
		'KW_CURRENT_TIMESTAMP',
		'KW_LESS',
		'KW_MORE',
		'KW_OVER',
		'KW_GROUPING',
		'KW_SETS',
		'KW_TRUNCATE',
		'KW_NOSCAN',
		'KW_USER',
		'KW_ROLE',
		'KW_ROLES',
		'KW_INNER',
		'KW_EXCHANGE',
		'KW_URI',
		'KW_SERVER',
		'KW_ADMIN',
		'KW_OWNER',
		'KW_PRINCIPALS',
		'KW_COMPACT',
		'KW_COMPACTIONS',
		'KW_TRANSACTIONS',
		'KW_REWRITE',
		'KW_AUTHORIZATION',
		'KW_REOPTIMIZATION',
		'KW_CONF',
		'KW_VALUES',
		'KW_RELOAD',
		'KW_YEAR',
		'KW_QUERY',
		'KW_QUARTER',
		'KW_MONTH',
		'KW_WEEK',
		'KW_DAY',
		'KW_DOW',
		'KW_HOUR',
		'KW_MINUTE',
		'KW_SECOND',
		'KW_START',
		'KW_TRANSACTION',
		'KW_COMMIT',
		'KW_ROLLBACK',
		'KW_WORK',
		'KW_ONLY',
		'KW_WRITE',
		'KW_ISOLATION',
		'KW_LEVEL',
		'KW_SNAPSHOT',
		'KW_AUTOCOMMIT',
		'KW_CACHE',
		'KW_PRIMARY',
		'KW_FOREIGN',
		'KW_REFERENCES',
		'KW_CONSTRAINT',
		'KW_ENFORCED',
		'KW_VALIDATE',
		'KW_NOVALIDATE',
		'KW_RELY',
		'KW_NORELY',
		'KW_UNIQUE',
		'KW_KEY',
		'KW_ABORT',
		'KW_EXTRACT',
		'KW_FLOOR',
		'KW_MERGE',
		'KW_MATCHED',
		'KW_REPL',
		'KW_DUMP',
		'KW_STATUS',
		'KW_VECTORIZATION',
		'KW_SUMMARY',
		'KW_OPERATOR',
		'KW_EXPRESSION',
		'KW_DETAIL',
		'KW_WAIT',
		'KW_RESOURCE',
		'KW_PLAN',
		'KW_QUERY_PARALLELISM',
		'KW_PLANS',
		'KW_ACTIVATE',
		'KW_DEFAULT',
		'KW_CHECK',
		'KW_POOL',
		'KW_MOVE',
		'KW_DO',
		'KW_ALLOC_FRACTION',
		'KW_SCHEDULING_POLICY',
		'KW_PATH',
		'KW_MAPPING',
		'KW_WORKLOAD',
		'KW_MANAGEMENT',
		'KW_ACTIVE',
		'KW_UNMANAGED',
		'KW_APPLICATION',
		'KW_SYNC',
		'KW_SEQUENCEFILE',
		'KW_TEXTFILE',
		'KW_RCFILE',
		'KW_ORC',
		'KW_PARQUET',
		'KW_DELTA',
		'KW_AVRO',
		'KW_CSV',
		'KW_JSON',
		'KW_JSONFILE',
		'KW_BLOOMFILTER',
		'DOT',
		'COLON',
		'COMMA',
		'SEMICOLON',
		'LPAREN',
		'RPAREN',
		'LSQUARE',
		'RSQUARE',
		'LCURLY',
		'RCURLY',
		'EQUAL',
		'EQUAL_NS',
		'NOTEQUAL',
		'LESSTHANOREQUALTO',
		'LESSTHAN',
		'GREATERTHANOREQUALTO',
		'GREATERTHAN',
		'DIVIDE',
		'PLUS',
		'MINUS',
		'STAR',
		'MOD',
		'DIV',
		'AMPERSAND',
		'TILDE',
		'BITWISEOR',
		'CONCATENATE',
		'BITWISEXOR',
		'QUESTION',
		'DOLLAR',
		'StringLiteral',
		'CharSetLiteral',
		'IntegralLiteral',
		'NumberLiteral',
		'ByteLengthLiteral',
		'Number',
		'Identifier',
		'QuotedIdentifier',
		'CharSetName',
		'WS',
		'LINE_COMMENT',
		'QUERY_HINT',
		'SHOW_HINT',
		'HIDDEN_HINT',
	];
	f.prototype.ruleNames = [
		'KW_TRUE',
		'KW_FALSE',
		'KW_ALL',
		'KW_NONE',
		'KW_AND',
		'KW_OR',
		'KW_NOT',
		'KW_LIKE',
		'KW_ANY',
		'KW_IF',
		'KW_EXISTS',
		'KW_ASC',
		'KW_DESC',
		'KW_NULLS',
		'KW_LAST',
		'KW_ORDER',
		'KW_GROUP',
		'KW_BY',
		'KW_HAVING',
		'KW_WHERE',
		'KW_FROM',
		'KW_AS',
		'KW_SELECT',
		'KW_DISTINCT',
		'KW_INSERT',
		'KW_OVERWRITE',
		'KW_OUTER',
		'KW_UNIQUEJOIN',
		'KW_PRESERVE',
		'KW_JOIN',
		'KW_LEFT',
		'KW_RIGHT',
		'KW_FULL',
		'KW_ON',
		'KW_PARTITION',
		'KW_PARTITIONS',
		'KW_TABLE',
		'KW_TABLES',
		'KW_COLUMNS',
		'KW_INDEX',
		'KW_INDEXES',
		'KW_REBUILD',
		'KW_FUNCTIONS',
		'KW_SHOW',
		'KW_MSCK',
		'KW_REPAIR',
		'KW_DIRECTORY',
		'KW_LOCAL',
		'KW_TRANSFORM',
		'KW_USING',
		'KW_CLUSTER',
		'KW_DISTRIBUTE',
		'KW_SORT',
		'KW_UNION',
		'KW_EXCEPT',
		'KW_LOAD',
		'KW_EXPORT',
		'KW_IMPORT',
		'KW_REPLICATION',
		'KW_METADATA',
		'KW_DATA',
		'KW_INPATH',
		'KW_IS',
		'KW_NULL',
		'KW_CREATE',
		'KW_EXTERNAL',
		'KW_ALTER',
		'KW_CHANGE',
		'KW_COLUMN',
		'KW_FIRST',
		'KW_AFTER',
		'KW_DESCRIBE',
		'KW_DROP',
		'KW_RENAME',
		'KW_TO',
		'KW_COMMENT',
		'KW_BOOLEAN',
		'KW_TINYINT',
		'KW_SMALLINT',
		'KW_INT',
		'KW_BIGINT',
		'KW_FLOAT',
		'KW_DOUBLE',
		'KW_PRECISION',
		'KW_DATE',
		'KW_DATETIME',
		'KW_TIMESTAMP',
		'KW_TIMESTAMPLOCALTZ',
		'KW_TIME',
		'KW_ZONE',
		'KW_INTERVAL',
		'KW_DECIMAL',
		'KW_STRING',
		'KW_CHAR',
		'KW_VARCHAR',
		'KW_ARRAY',
		'KW_STRUCT',
		'KW_MAP',
		'KW_UNIONTYPE',
		'KW_REDUCE',
		'KW_PARTITIONED',
		'KW_CLUSTERED',
		'KW_SORTED',
		'KW_INTO',
		'KW_BUCKETS',
		'KW_ROW',
		'KW_ROWS',
		'KW_FORMAT',
		'KW_DELIMITED',
		'KW_FIELDS',
		'KW_TERMINATED',
		'KW_ESCAPED',
		'KW_COLLECTION',
		'KW_ITEMS',
		'KW_KEYS',
		'KW_KEY_TYPE',
		'KW_KILL',
		'KW_LINES',
		'KW_STORED',
		'KW_FILEFORMAT',
		'KW_INPUTFORMAT',
		'KW_OUTPUTFORMAT',
		'KW_INPUTDRIVER',
		'KW_OUTPUTDRIVER',
		'KW_ENABLE',
		'KW_DISABLE',
		'KW_LOCATION',
		'KW_TABLESAMPLE',
		'KW_BUCKET',
		'KW_OUT',
		'KW_OF',
		'KW_PERCENT',
		'KW_CAST',
		'KW_ADD',
		'KW_REPLACE',
		'KW_RLIKE',
		'KW_REGEXP',
		'KW_TEMPORARY',
		'KW_FUNCTION',
		'KW_MACRO',
		'KW_FILE',
		'KW_JAR',
		'KW_EXPLAIN',
		'KW_EXTENDED',
		'KW_FORMATTED',
		'KW_DEPENDENCY',
		'KW_LOGICAL',
		'KW_SERDE',
		'KW_WITH',
		'KW_DEFERRED',
		'KW_SERDEPROPERTIES',
		'KW_DBPROPERTIES',
		'KW_LIMIT',
		'KW_OFFSET',
		'KW_SET',
		'KW_UNSET',
		'KW_TBLPROPERTIES',
		'KW_IDXPROPERTIES',
		'KW_VALUE_TYPE',
		'KW_ELEM_TYPE',
		'KW_DEFINED',
		'KW_CASE',
		'KW_WHEN',
		'KW_THEN',
		'KW_ELSE',
		'KW_END',
		'KW_MAPJOIN',
		'KW_STREAMTABLE',
		'KW_CLUSTERSTATUS',
		'KW_UTC',
		'KW_UTCTIMESTAMP',
		'KW_LONG',
		'KW_DELETE',
		'KW_PLUS',
		'KW_MINUS',
		'KW_FETCH',
		'KW_INTERSECT',
		'KW_VIEW',
		'KW_VIEWS',
		'KW_IN',
		'KW_DATABASE',
		'KW_DATABASES',
		'KW_MATERIALIZED',
		'KW_SCHEMA',
		'KW_SCHEMAS',
		'KW_GRANT',
		'KW_REVOKE',
		'KW_SSL',
		'KW_UNDO',
		'KW_LOCK',
		'KW_LOCKS',
		'KW_UNLOCK',
		'KW_SHARED',
		'KW_EXCLUSIVE',
		'KW_PROCEDURE',
		'KW_UNSIGNED',
		'KW_WHILE',
		'KW_READ',
		'KW_READS',
		'KW_PURGE',
		'KW_RANGE',
		'KW_ANALYZE',
		'KW_BEFORE',
		'KW_BETWEEN',
		'KW_BOTH',
		'KW_BINARY',
		'KW_CROSS',
		'KW_CONTINUE',
		'KW_CURSOR',
		'KW_TRIGGER',
		'KW_RECORDREADER',
		'KW_RECORDWRITER',
		'KW_SEMI',
		'KW_LATERAL',
		'KW_TOUCH',
		'KW_ARCHIVE',
		'KW_UNARCHIVE',
		'KW_COMPUTE',
		'KW_STATISTICS',
		'KW_USE',
		'KW_OPTIONS',
		'KW_OPTION',
		'KW_CONCATENATE',
		'KW_SHOW_DATABASE',
		'KW_UPDATE',
		'KW_RESTRICT',
		'KW_CASCADE',
		'KW_SKEWED',
		'KW_ROLLUP',
		'KW_CUBE',
		'KW_DIRECTORIES',
		'KW_FOR',
		'KW_WINDOW',
		'KW_UNBOUNDED',
		'KW_PRECEDING',
		'KW_FOLLOWING',
		'KW_CURRENT',
		'KW_CURRENT_DATE',
		'KW_CURRENT_TIMESTAMP',
		'KW_LESS',
		'KW_MORE',
		'KW_OVER',
		'KW_GROUPING',
		'KW_SETS',
		'KW_TRUNCATE',
		'KW_NOSCAN',
		'KW_USER',
		'KW_ROLE',
		'KW_ROLES',
		'KW_INNER',
		'KW_EXCHANGE',
		'KW_URI',
		'KW_SERVER',
		'KW_ADMIN',
		'KW_OWNER',
		'KW_PRINCIPALS',
		'KW_COMPACT',
		'KW_COMPACTIONS',
		'KW_TRANSACTIONS',
		'KW_REWRITE',
		'KW_AUTHORIZATION',
		'KW_REOPTIMIZATION',
		'KW_CONF',
		'KW_VALUES',
		'KW_RELOAD',
		'KW_YEAR',
		'KW_QUERY',
		'KW_QUARTER',
		'KW_MONTH',
		'KW_WEEK',
		'KW_DAY',
		'KW_DOW',
		'KW_HOUR',
		'KW_MINUTE',
		'KW_SECOND',
		'KW_START',
		'KW_TRANSACTION',
		'KW_COMMIT',
		'KW_ROLLBACK',
		'KW_WORK',
		'KW_ONLY',
		'KW_WRITE',
		'KW_ISOLATION',
		'KW_LEVEL',
		'KW_SNAPSHOT',
		'KW_AUTOCOMMIT',
		'KW_CACHE',
		'KW_PRIMARY',
		'KW_FOREIGN',
		'KW_REFERENCES',
		'KW_CONSTRAINT',
		'KW_ENFORCED',
		'KW_VALIDATE',
		'KW_NOVALIDATE',
		'KW_RELY',
		'KW_NORELY',
		'KW_UNIQUE',
		'KW_KEY',
		'KW_ABORT',
		'KW_EXTRACT',
		'KW_FLOOR',
		'KW_MERGE',
		'KW_MATCHED',
		'KW_REPL',
		'KW_DUMP',
		'KW_STATUS',
		'KW_VECTORIZATION',
		'KW_SUMMARY',
		'KW_OPERATOR',
		'KW_EXPRESSION',
		'KW_DETAIL',
		'KW_WAIT',
		'KW_RESOURCE',
		'KW_PLAN',
		'KW_QUERY_PARALLELISM',
		'KW_PLANS',
		'KW_ACTIVATE',
		'KW_DEFAULT',
		'KW_CHECK',
		'KW_POOL',
		'KW_MOVE',
		'KW_DO',
		'KW_ALLOC_FRACTION',
		'KW_SCHEDULING_POLICY',
		'KW_PATH',
		'KW_MAPPING',
		'KW_WORKLOAD',
		'KW_MANAGEMENT',
		'KW_ACTIVE',
		'KW_UNMANAGED',
		'KW_APPLICATION',
		'KW_SYNC',
		'KW_SEQUENCEFILE',
		'KW_TEXTFILE',
		'KW_RCFILE',
		'KW_ORC',
		'KW_PARQUET',
		'KW_DELTA',
		'KW_AVRO',
		'KW_CSV',
		'KW_JSON',
		'KW_JSONFILE',
		'KW_BLOOMFILTER',
		'DOT',
		'COLON',
		'COMMA',
		'SEMICOLON',
		'LPAREN',
		'RPAREN',
		'LSQUARE',
		'RSQUARE',
		'LCURLY',
		'RCURLY',
		'EQUAL',
		'EQUAL_NS',
		'NOTEQUAL',
		'LESSTHANOREQUALTO',
		'LESSTHAN',
		'GREATERTHANOREQUALTO',
		'GREATERTHAN',
		'DIVIDE',
		'PLUS',
		'MINUS',
		'STAR',
		'MOD',
		'DIV',
		'AMPERSAND',
		'TILDE',
		'BITWISEOR',
		'CONCATENATE',
		'BITWISEXOR',
		'QUESTION',
		'DOLLAR',
		'Letter',
		'HexDigit',
		'Digit',
		'Exponent',
		'RegexComponent',
		'A',
		'B',
		'C',
		'D',
		'E',
		'F',
		'G',
		'H',
		'I',
		'J',
		'K',
		'L',
		'M',
		'N',
		'O',
		'P',
		'Q',
		'R',
		'S',
		'T',
		'U',
		'V',
		'W',
		'X',
		'Y',
		'Z',
		'StringLiteral',
		'CharSetLiteral',
		'IntegralLiteral',
		'NumberLiteral',
		'ByteLengthLiteral',
		'Number',
		'Identifier',
		'QuotedIdentifier',
		'CharSetName',
		'WS',
		'LINE_COMMENT',
		'QUERY_HINT',
		'SHOW_HINT',
		'HIDDEN_HINT',
	];
	f.prototype.grammarFileName = 'HiveLexer.g4';
	h6.HiveLexer = f;
});
var a5 = Z(f6 => {
	var d6 = (ls(), ra(hs));
	function l() {
		return d6.tree.ParseTreeVisitor.call(this), this;
	}
	l.prototype = Object.create(d6.tree.ParseTreeVisitor.prototype);
	l.prototype.constructor = l;
	l.prototype.visitStatements = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitStatementSeparator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitEmpty = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExplainStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExplainOption = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitVectorizationOnly = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitVectorizatonDetail = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExecStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitLoadStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitReplicationClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExportStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitImportStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitReplDumpStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitReplLoadStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitReplConfigs = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitReplConfigsList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitReplStatusStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDdlStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitIfExists = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRestrictOrCascade = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitIfNotExists = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRewriteEnabled = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRewriteDisabled = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitStoredAsDirs = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitOrReplace = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateDatabaseStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDbLocation = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDbProperties = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDbPropertiesList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSwitchDatabaseStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropDatabaseStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDatabaseComment = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateTableStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTruncateTableStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropTableStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterTableStatementSuffix = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterTblPartitionStatementSuffix = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementPartitionKeyType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterViewStatementSuffix = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterMaterializedViewStatementSuffix = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterDatabaseStatementSuffix = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterDatabaseSuffixProperties = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterDatabaseSuffixSetOwner = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterDatabaseSuffixSetLocation = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixRename = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixAddCol = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixAddConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixUpdateColumns = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixDropConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixRenameCol = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixUpdateStatsCol = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixUpdateStats = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementChangeColPosition = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixAddPartitions = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixAddPartitionsElement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixTouch = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixArchive = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixUnArchive = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPartitionLocation = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixDropPartitions = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixProperties = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterViewSuffixProperties = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterMaterializedViewSuffixRewrite = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterMaterializedViewSuffixRebuild = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixSerdeProperties = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterIndexStatementSuffix = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixFileFormat = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixClusterbySortby = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterTblPartitionStatementSuffixSkewedLocation = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSkewedLocations = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSkewedLocationsList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSkewedLocationMap = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixLocation = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixSkewedby = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixExchangePartition = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixRenamePart = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixStatsPart = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixMergeFiles = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixBucketNum = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateIndexStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateIndexMainStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropIndexStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateBloomfilterIndexStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateBloomfilterIndexMainStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitBloomfilterColumnParenthesesList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitBloomfilterColumnNameList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitBloomfilterColumnName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitBloomfilterIndexOptions = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropBloomfilterIndexStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropBloomfilterIndexMainStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTablePartitionPrefix = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitBlocking = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixCompact = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterStatementSuffixSetOwner = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitFileFormat = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitInputFileFormat = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTabTypeExpr = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPartTypeExpr = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTabPartColTypeExpr = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDescStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAnalyzeStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitShowStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitLockStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitLockDatabase = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitLockMode = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUnlockStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUnlockDatabase = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateRoleStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropRoleStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGrantPrivileges = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRevokePrivileges = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGrantRole = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRevokeRole = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitShowRoleGrants = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitShowRoles = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitShowCurrentRole = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSetRole = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitShowGrants = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitShowRolePrincipals = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrivilegeIncludeColObject = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrivilegeObject = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrivObject = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrivObjectCols = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrivilegeList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrivlegeDef = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrivilegeType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrincipalSpecification = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrincipalName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWithGrantOption = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGrantOptionFor = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAdminOptionFor = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWithAdminOption = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitMetastoreCheck = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitResourceList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitResource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitResourceType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateFunctionStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropFunctionStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitReloadFunctionStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateMacroStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropMacroStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateViewStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateMaterializedViewStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitViewPartition = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropViewStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropMaterializedViewStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitShowFunctionIdentifier = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitShowStmtIdentifier = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableComment = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableUsingDataSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableDataSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTablePartition = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableBuckets = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableSkewed = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRowFormat = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRecordReader = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRecordWriter = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRowFormatSerde = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRowFormatDelimited = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableRowFormat = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTablePropertiesPrefixed = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableProperties = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTablePropertiesList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitKeyValueProperty = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitKeyValue = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitKeyProperty = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableRowFormatFieldIdentifier = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableRowFormatFieldIdentifierEcapedBy = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableRowFormatCollItemsIdentifier = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableRowFormatMapKeysIdentifier = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableRowFormatLinesIdentifier = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableRowNullFormat = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableFileFormat = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableFileFormatStoredBy = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableFileFormatStoredAs = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableFileFormatStoredAsFormat = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableInputOutputFileFormat = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableInputLiteral = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableOutputLiteral = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableLocation = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameTypeList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameTypeOrConstraintList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameColonTypeList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExtColumnName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameOrderList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnParenthesesList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitEnableValidateSpecification = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitEnableSpecification = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitValidateSpecification = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitEnforcedSpecification = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRelySpecification = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterConstraintWithName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableLevelConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPkUkConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCheckConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateForeignKey = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterForeignKeyWithName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSkewedValueElement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSkewedColumnValuePairList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSkewedColumnValuePair = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSkewedColumnValues = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSkewedColumnValue = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSkewedValueLocationElement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitOrderSpecification = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitNullOrdering = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameOrder = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameCommentList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameComment = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnRefOrder = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameTypeOrConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameTypeConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPartitionedColumnNameTypeConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitForeignKeyConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterColumnConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterForeignKeyConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterColConstraint = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnConstraintType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDefaultVal = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableConstraintType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitConstraintOptsCreate = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitConstraintOptsAlter = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnNameColonType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColTypeList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitType_db_col = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrimitiveType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitListType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitStructType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitMapType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUnionType = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSetOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitQueryStatementExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitQueryStatementExpressionBody = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWithClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCteStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitFromStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSingleFromStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRegularBody = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAtomSelectStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSelectStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSetOpSelectStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSelectStatementWithCTE = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitBody = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitInsertClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDestination = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitLimitClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDeleteStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnAssignmentClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSetColumnsClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUpdateStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSqlTransactionStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitStartTransactionStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTransactionMode = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTransactionAccessMode = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitIsolationLevel = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitLevelOfIsolation = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCommitStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRollbackStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSetAutoCommitStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAbortTransactionStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitMergeStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWhenClauses = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWhenNotMatchedClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWhenMatchedAndClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWhenMatchedThenClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUpdateOrDelete = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitKillQueryStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSelectClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSelectList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSelectTrfmClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSelectItem = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTrfmClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSelectExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSelectExpressionList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWindow_clause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWindow_defn = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWindow_specification = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWindow_frame = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWindow_range_expression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWindow_value_expression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWindow_frame_start_boundary = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWindow_frame_boundary = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableAllColumns = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableOrColumn = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExpressionList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAliasList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitFromClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitFromSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAtomjoinSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitJoinSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitJoinSourcePart = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUniqueJoinSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUniqueJoinExpr = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUniqueJoinToken = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitJoinToken = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitLateralView = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableAlias = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableBucketSample = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSplitSample = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableSample = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUniqueJoinTableSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitViewName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSubQuerySource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPartitioningSpec = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPartitionTableFunctionSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPartitionedTableFunction = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWhereClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSearchCondition = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitValuesClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitValuesTableConstructor = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitValueRowConstructor = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitVirtualTableSource = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGroupByClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGroupby_expression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGroupByEmpty = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRollupStandard = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRollupOldSyntax = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGroupingSetExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGroupingSetExpressionMultiple = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGroupingExpressionSingle = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitHavingClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitHavingCondition = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExpressionsInParenthesis = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExpressionsNotInParenthesis = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExpressionPart = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExpressions = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnRefOrderInParenthesis = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitColumnRefOrderNotInParenthesis = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitOrderByClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitClusterByClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPartitionByClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDistributeByClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSortByClause = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitFunctionStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitFunctionName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCastExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCaseExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWhenExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitFloorExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitFloorDateQualifiers = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExtractExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTimeQualifiers = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitConstant = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitStringLiteralSequence = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCharSetStringLiteral = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDateLiteral = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTimestampLiteral = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTimestampLocalTZLiteral = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitIntervalValue = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitIntervalLiteral = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitIntervalExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitIntervalQualifiers = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAtomExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceUnaryOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitIsCondition = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceBitwiseXorOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceStarOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedencePlusOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceConcatenateOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceAmpersandOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceBitwiseOrOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceRegexpOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceSimilarOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceDistinctOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceEqualOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceNotOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceAndOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceOrOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSubQueryExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceSimilarExpressionPart = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceSimilarExpressionAtom = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceSimilarExpressionIn = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrecedenceSimilarExpressionPartNot = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitBooleanValue = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitBooleanValueTok = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTableOrPartition = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPartitionSpec = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPartitionVal = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropPartitionSpec = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropPartitionVal = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropPartitionOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSysFuncNames = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDescFuncNames = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitIdentifier = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitFunctionIdentifier = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPrincipalIdentifier = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitNonReserved = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitSql11ReservedKeywordsUsedAsFunctionName = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitResourcePlanDdlStatements = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRpAssign = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRpAssignList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRpUnassign = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitRpUnassignList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateResourcePlanStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateResourcePlanStatementLikeExisting = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateNewResourcePlanStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitWithReplace = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitActivate = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitEnable = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDisable = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitUnmanaged = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterResourcePlanStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterResourcePlanRenameSuffix = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitGlobalWmStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitReplaceResourcePlanStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropResourcePlanStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPoolPath = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTriggerExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTriggerExpressionStandalone = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTriggerOrExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTriggerAndExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTriggerAtomExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTriggerLiteral = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitComparisionOperator = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTriggerActionExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTriggerActionExpressionStandalone = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateTriggerStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterTriggerStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitTriggerConditionExpression = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropTriggerStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPoolAssign = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitPoolAssignList = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreatePoolStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterPoolStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropPoolStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitCreateMappingStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitAlterMappingStatement = function (u) {
		return this.visitChildren(u);
	};
	l.prototype.visitDropMappingStatement = function (u) {
		return this.visitChildren(u);
	};
	f6.HiveParserVisitor = l;
});
var c5 = Z(_6 => {
	var s = (ls(), ra(hs)),
		d = a5().HiveParserVisitor,
		lE = [
			'\u608B\uA72A\u8133\uB9ED\u417C\u3BE7\u7786\u5964',
			'\u0185\u123E		',
			'			\x07	\x07',
			`\b	\b			
	
\v	\v\f	\f`,
			'\r	\r			',
			'			',
			'				',
			'			\x1B',
			'	\x1B			',
			'	 	 !	!"	"#	#',
			"$	$%	%&	&'	'(	()	)*	*",
			'+	+,	,-	-.	./	/0	01	1',
			'2	23	34	45	56	67	78	8',
			'9	9:	:;	;<	<=	=>	>?	?',
			'@	@A	AB	BC	CD	DE	EF	F',
			'G	GH	HI	IJ	JK	KL	LM	M',
			'N	NO	OP	PQ	QR	RS	ST	T',
			'U	UV	VW	WX	XY	YZ	Z[	[',
			'\\	\\]	]^	^_	_`	`a	ab	b',
			'c	cd	de	ef	fg	gh	hi	i',
			'j	jk	kl	lm	mn	no	op	p',
			'q	qr	rs	st	tu	uv	vw	w',
			'x	xy	yz	z{	{|	|}	}~	~',
			'\x7F	\x7F\x80	\x80\x81	\x81\x82	',
			'\x82\x83	\x83\x84	\x84\x85	\x85',
			'\x86	\x86\x87	\x87\x88	\x88\x89	',
			'\x89\x8A	\x8A\x8B	\x8B\x8C	\x8C',
			'\x8D	\x8D\x8E	\x8E\x8F	\x8F\x90	',
			'\x90\x91	\x91\x92	\x92\x93	\x93',
			'\x94	\x94\x95	\x95\x96	\x96\x97	',
			'\x97\x98	\x98\x99	\x99\x9A	\x9A',
			'\x9B	\x9B\x9C	\x9C\x9D	\x9D\x9E	',
			'\x9E\x9F	\x9F\xA0	\xA0\xA1	\xA1',
			'\xA2	\xA2\xA3	\xA3\xA4	\xA4\xA5	',
			'\xA5\xA6	\xA6\xA7	\xA7\xA8	\xA8',
			'\xA9	\xA9\xAA	\xAA\xAB	\xAB\xAC	',
			'\xAC\xAD	\xAD\xAE	\xAE\xAF	\xAF',
			'\xB0	\xB0\xB1	\xB1\xB2	\xB2\xB3	',
			'\xB3\xB4	\xB4\xB5	\xB5\xB6	\xB6',
			'\xB7	\xB7\xB8	\xB8\xB9	\xB9\xBA	',
			'\xBA\xBB	\xBB\xBC	\xBC\xBD	\xBD',
			'\xBE	\xBE\xBF	\xBF\xC0	\xC0\xC1	',
			'\xC1\xC2	\xC2\xC3	\xC3\xC4	\xC4',
			'\xC5	\xC5\xC6	\xC6\xC7	\xC7\xC8	',
			'\xC8\xC9	\xC9\xCA	\xCA\xCB	\xCB',
			'\xCC	\xCC\xCD	\xCD\xCE	\xCE\xCF	',
			'\xCF\xD0	\xD0\xD1	\xD1\xD2	\xD2',
			'\xD3	\xD3\xD4	\xD4\xD5	\xD5\xD6	',
			'\xD6\xD7	\xD7\xD8	\xD8\xD9	\xD9',
			'\xDA	\xDA\xDB	\xDB\xDC	\xDC\xDD	',
			'\xDD\xDE	\xDE\xDF	\xDF\xE0	\xE0',
			'\xE1	\xE1\xE2	\xE2\xE3	\xE3\xE4	',
			'\xE4\xE5	\xE5\xE6	\xE6\xE7	\xE7',
			'\xE8	\xE8\xE9	\xE9\xEA	\xEA\xEB	',
			'\xEB\xEC	\xEC\xED	\xED\xEE	\xEE',
			'\xEF	\xEF\xF0	\xF0\xF1	\xF1\xF2	',
			'\xF2\xF3	\xF3\xF4	\xF4\xF5	\xF5',
			'\xF6	\xF6\xF7	\xF7\xF8	\xF8\xF9	',
			'\xF9\xFA	\xFA\xFB	\xFB\xFC	\xFC',
			'\xFD	\xFD\xFE	\xFE\xFF	\xFF\u0100	',
			'\u0100\u0101	\u0101\u0102	\u0102\u0103	\u0103',
			'\u0104	\u0104\u0105	\u0105\u0106	\u0106\u0107	',
			'\u0107\u0108	\u0108\u0109	\u0109\u010A	\u010A',
			'\u010B	\u010B\u010C	\u010C\u010D	\u010D\u010E	',
			'\u010E\u010F	\u010F\u0110	\u0110\u0111	\u0111',
			'\u0112	\u0112\u0113	\u0113\u0114	\u0114\u0115	',
			'\u0115\u0116	\u0116\u0117	\u0117\u0118	\u0118',
			'\u0119	\u0119\u011A	\u011A\u011B	\u011B\u011C	',
			'\u011C\u011D	\u011D\u011E	\u011E\u011F	\u011F',
			'\u0120	\u0120\u0121	\u0121\u0122	\u0122\u0123	',
			'\u0123\u0124	\u0124\u0125	\u0125\u0126	\u0126',
			'\u0127	\u0127\u0128	\u0128\u0129	\u0129\u012A	',
			'\u012A\u012B	\u012B\u012C	\u012C\u012D	\u012D',
			'\u012E	\u012E\u012F	\u012F\u0130	\u0130\u0131	',
			'\u0131\u0132	\u0132\u0133	\u0133\u0134	\u0134',
			'\u0135	\u0135\u0136	\u0136\u0137	\u0137\u0138	',
			'\u0138\u0139	\u0139\u013A	\u013A\u013B	\u013B',
			'\u013C	\u013C\u013D	\u013D\u013E	\u013E\u013F	',
			'\u013F\u0140	\u0140\u0141	\u0141\u0142	\u0142',
			'\u0143	\u0143\u0144	\u0144\u0145	\u0145\u0146	',
			'\u0146\u0147	\u0147\u0148	\u0148\u0149	\u0149',
			'\u014A	\u014A\u014B	\u014B\u014C	\u014C\u014D	',
			'\u014D\u014E	\u014E\u014F	\u014F\u0150	\u0150',
			'\u0151	\u0151\u0152	\u0152\u0153	\u0153\u0154	',
			'\u0154\u0155	\u0155\u0156	\u0156\u0157	\u0157',
			'\u0158	\u0158\u0159	\u0159\u015A	\u015A\u015B	',
			'\u015B\u015C	\u015C\u015D	\u015D\u015E	\u015E',
			'\u015F	\u015F\u0160	\u0160\u0161	\u0161\u0162	',
			'\u0162\u0163	\u0163\u0164	\u0164\u0165	\u0165',
			'\u0166	\u0166\u0167	\u0167\u0168	\u0168\u0169	',
			'\u0169\u016A	\u016A\u016B	\u016B\u016C	\u016C',
			'\u016D	\u016D\u016E	\u016E\u016F	\u016F\u0170	',
			'\u0170\u0171	\u0171\u0172	\u0172\u0173	\u0173',
			'\u0174	\u0174\u0175	\u0175\u0176	\u0176\u0177	',
			'\u0177\u0178	\u0178\u0179	\u0179\u017A	\u017A',
			'\u017B	\u017B\u017C	\u017C\u017D	\u017D\u017E	',
			'\u017E\u017F	\u017F\u0180	\u0180\u0181	\u0181',
			'\u0182	\u0182\u0183	\u0183\u0184	\u0184\u0185	',
			'\u0185\u0186	\u0186\u0187	\u0187\u0188	\u0188',
			'\u0189	\u0189\u018A	\u018A\u018B	\u018B\u018C	',
			'\u018C\u018D	\u018D\u018E	\u018E\u018F	\u018F',
			'\u0190	\u0190\u0191	\u0191\u0192	\u0192\u0193	',
			'\u0193\u0194	\u0194\u0195	\u0195\u0196	\u0196',
			'\u0197	\u0197\u0198	\u0198\u0199	\u0199\u019A	',
			'\u019A\u019B	\u019B\u019C	\u019C\u019D	\u019D',
			'\u019E	\u019E\u019F	\u019F\u01A0	\u01A0\u01A1	',
			'\u01A1\u01A2	\u01A2\u01A3	\u01A3\u01A4	\u01A4',
			'\u01A5	\u01A5\u01A6	\u01A6\u01A7	\u01A7\u01A8	',
			'\u01A8\u01A9	\u01A9\u01AA	\u01AA\u01AB	\u01AB',
			'\u01AC	\u01AC\u01AD	\u01AD\u01AE	\u01AE\u01AF	',
			'\u01AF\u01B0	\u01B0\u01B1	\u01B1\u01B2	\u01B2',
			'\u01B3	\u01B3\u01B4	\u01B4\u01B5	\u01B5\u01B6	',
			'\u01B6\u01B7	\u01B7\u01B8	\u01B8\u01B9	\u01B9',
			`\x07\u0377
`,
			'\f\u037A\v',
			'',
			`\u0384
\x07\u0388
`,
			'\f\u038B\v',
			`\u0390
\x07\x07\x07`,
			'\x07\x07\x07\x07\x07\x07',
			`\x07\u039B
\x07\x07\x07\u039E
\x07`,
			`\x07\u03A0
\x07\b\b		

`,
			`







`,
			`


\u03B2

\v\v\v`,
			`\v\u03B7
\v\v\v\v\v`,
			`\u03BC
\v\v\v\v\v`,
			`\v\u03C2
\v\f\f\f\u03C6
\f\f`,
			'\f\f\f\f\r\r\r\r\r',
			`\r\r\u03D3
\r\u03D7
`,
			`\u03DB
`,
			`\u03E0
`,
			`\u03E7
`,
			`\u03ED
`,
			`\u03F1
\u03F3`,
			`
\u03F7
`,
			`\u03FE
`,
			`\u0400
`,
			`\u0406
`,
			'\x07\u040F',
			`
\f\u0412\v`,
			`\u0419
`,
			`\u041D
`,
			'',
			'',
			'',
			'',
			'',
			'',
			'',
			`\u044A
`,
			'',
			'',
			'\x1B\x1B\x1B',
			`\u0465
`,
			`\u0469
\u046C`,
			`
\u0471
`,
			'',
			`\x07\u047D
`,
			'\f\u0480\v   ',
			`!!!!\u0488
!!!!\u048C
!`,
			`"""###\u0493
###\u0496`,
			`
####\u049A
#####`,
			`#\u04A0
###\u04A3
###\u04A6
##`,
			`#\u04A9
###\u04AC
#####`,
			`#\u04B2
#########`,
			`#\x07#\u04BD
#\f##\u04C0\v####\u04C4`,
			`
##\u04C6
#$$$$$$`,
			`$$$\u04D0
$%%%%\u04D5
%`,
			`%%%\u04D9
%%%\u04DC
%&&`,
			`&&&&&&&&\u04E7
&&`,
			'&&&&&&&&&&',
			`&&&&\u04F7
&''''`,
			"'''''''''",
			`'\u0506
''''\u050A
'(((`,
			'(((((((((',
			`(((\u051A
())))))`,
			`******\u0527
*+++\u052B`,
			`
+,,,,\u0530
,---`,
			'--.....///',
			'//00001111',
			`111\u054B
12222\u0550
2`,
			`3333\u0555
344445`,
			`55\u055D
555555\u0563
5`,
			`555\u0567
555\u056A
555\u056D`,
			`
566666\u0573
666`,
			`6666\u057A
677777`,
			`8888\u0584
8999\u0588
9`,
			`99\u058B
9\r99\u058C:::\u0591
:`,
			`;;\x07;\u0595
;\f;;\u0598\v;<<\x07`,
			`<\u059C
<\f<<\u059F\v<==\x07=\u05A3
=\f=`,
			`=\u05A6\v=>>>???\u05AD
?`,
			`???\x07?\u05B2
?\f??\u05B5\v??`,
			`?\u05B8
???\u05BB
?@@@@`,
			`@@@\u05C3
@@@\u05C6
@AA`,
			`AAAAA\u05CE
AAA\u05D1
A`,
			`BBB\u05D5
BCCDDDD`,
			`DDD\u05DF
DDDDD\u05E4
D`,
			`EEEEE\u05EA
EEEFF`,
			`FFGGGGGG\u05F7
GH`,
			'HHHHIIIIJJ',
			`J\x07J\u0605
J\fJJ\u0608\vJKKK`,
			'KLLLLMMMMM',
			`M\u0617
MNNNNNNOO`,
			`OOPPPPP\u0627
PPP`,
			`PPPP\u062E
PQQRRR`,
			`RSSSSS\u063A
SSSS\u063E`,
			`
SSSSS\u0643
SSSS`,
			`S\u0648
SSS\u064B
SSS\u064E
SS`,
			`SS\u0652
SSS\u0655
SSS\u0658
S`,
			'TTTTTTTTTT',
			'UUUUUUVVVV',
			`V\u066E
VVV\u0671
VWWWW`,
			`WW\u0678
WWWXXXXY`,
			`YY\x07Y\u0683
Y\fYY\u0686\vYZZ`,
			`Z\u068A
Z[[[\\\\\\\\`,
			`\\\u0693
\\]]]]]]\u069A
]`,
			']]^^^\u06A0\n^___`',
			'```\u06A8\n``````\u06AE\n',
			'`aaaabbbbb',
			`bbbbbb\u06BE
bbb\u06C1
`,
			'bcccccdddd\u06CB',
			`
dddddddd\u06D3
d\x07`,
			`d\u06D5
d\fdd\u06D8\vdd\u06DA
dee`,
			`e\u06DE
efff\u06E2
fff\u06E5
f`,
			`gggg\u06EA
ggggg\u06EF
`,
			`gggggg\u06F5
ghhh`,
			`hhhhhhh\u0700
hh\u0702
`,
			`hhhh\u0706
hiiiii\u070C`,
			`
iiiiii\u0712
iii`,
			`ii\u0717
iiiiii\u071D
i`,
			`iiii\u0722
iiiiii`,
			`i\u0729
iiiii\u072E
iii`,
			`iiiii\u0736
iiiii\u073B`,
			`
iiiiiii\u0742
ii`,
			`iiii\u0748
iiiiii`,
			`ii\u0750
iiiiiii\u0757
`,
			`iiiii\u075C
iiiii`,
			`iii\u0764
iiiiiii\u076B`,
			`
iii\u076E
iii\u0771
ii\u0773
i`,
			'iiiiiiiiii',
			`iii\u0781
ii\u0783
ijjj`,
			`jj\u0789
jjjkkkkk`,
			`llmmmmm\u0798
mnn`,
			'nnoooopppp',
			`qqqq\u07A9
qqqqq\u07AE
`,
			`qrrr\u07B2
rrrr\u07B6
r`,
			`rrrsss\u07BD
ssss\x07`,
			`s\u07C2
s\fss\u07C5\vsssss\u07CA`,
			`
sttt\u07CE
ttt\u07D1
tt`,
			`tt\x07t\u07D6
t\ftt\u07D9\vttt`,
			'tuuuuuvvvw',
			`wwwxxxxxx\u07EF
x`,
			`yyyy\u07F4
yyyy\u07F8
y`,
			`zzzz{{{\u0800
{||`,
			`|}}}}\u0808
}}}}\u080C
`,
			`}}}}}}\u0812
}~~~`,
			`~\u0817
~~~~~~~\u081E
~`,
			`~~\u0821
~~~~~~\u0827
~`,
			`\x7F\x7F\x7F\x07\x7F\u082C
\x7F\f\x7F`,
			'\x7F\u082F\v\x7F\x80\x80\x80\x80',
			`\x80\x80\u0836
\x80\x81\x81`,
			`\x82\x82\x82\x07\x82\u083D
\x82\f\x82`,
			'\x82\u0840\v\x82\x83\x83\x83\x83',
			`\x83\x83\x83\u0848
\x83\x84`,
			'\x84\x84\x84\x85\x85\x85',
			'\x85\x86\x86\x86\x86\x87',
			'\x87\x87\x87\x88\x88\x88\u085C',
			`
\x88\x88\x88\x88\x88\x88`,
			`\u0862
\x88\x88\x88\u0865
\x88\x88\u0867`,
			`
\x88\x89\x89\x89\x07\x89\u086C
\x89`,
			'\f\x89\x89\u086F\v\x89\x8A\x8A',
			'\x8A\x8B\x8B\x8C\x8C\x8C\u0878',
			`
\x8C\x8C\x8C\x8C\x8C\x8C`,
			`\x8C\x8C\u0880
\x8C\x8D\x8D`,
			`\x8D\u0884
\x8D\x8D\x8D\x8D\u0888
\x8D`,
			'\x8D\x8D\x8E\x8E\x8E\x8F',
			'\x8F\x8F\x8F\x8F\x8F\x8F',
			`\u0895
\x8F\x8F\x8F\x8F\x90`,
			`\x90\x90\x90\x90\u089E
\x90\x90`,
			`\x90\x91\x91\x91\u08A4
\x91`,
			`\x91\x91\x91\u08A8
\x91\x91\x91`,
			`\x91\x91\x91\x91\u08AF
\x91`,
			`\x91\x91\u08B2
\x91\x91\x91\u08B5
\x91`,
			`\x91\x91\u08B8
\x91\x91\x91`,
			'\x91\x92\x92\x92\x92\x92\u08C1',
			`
\x92\x92\x92\x92\u08C5
\x92\x92`,
			`\x92\u08C8
\x92\x92\x92\u08CB
\x92`,
			`\x92\x92\u08CE
\x92\x92\x92\u08D1
\x92`,
			`\x92\x92\u08D4
\x92\x92\x92`,
			'\x92\x93\x93\x93\x93\x93',
			`\x93\x94\x94\x94\x94\u08E2
\x94`,
			'\x94\x94\x95\x95\x95\x95',
			`\x95\u08EA
\x95\x95\x95\x96`,
			`\x96\x96\u08F0
\x96\x97\x97\x97`,
			`\u08F4
\x97\x98\x98\x98\x99`,
			'\x99\x99\x9A\x9A\x9B\x9B',
			`\x9B\x9B\x9B\x9B\x07\x9B\u0904
\x9B`,
			'\f\x9B\x9B\u0907\v\x9B\x9B\x9B',
			'\x9C\x9C\x9C\x9C\x9C\x9C',
			'\x9C\x9C\x9C\x9C\x9C\x9C\u0916',
			`
\x9C\x9C\x9C\x9C\x9C\x9D`,
			'\x9D\x9D\x9D\x9D\x9D\x9D',
			`\x9D\x9D\x9D\x9D\u0926
\x9D`,
			`\x9E\x9E\x9E\u092A
\x9E\x9F\x9F`,
			'\x9F\xA0\xA0\xA0\xA1\xA1',
			'\xA1\xA1\xA1\xA1\xA1\xA1',
			`\u0939
\xA1\xA2\xA2\xA2\xA2`,
			`\xA2\u093F
\xA2\xA2\xA2\u0942
\xA2\xA2`,
			`\xA2\u0945
\xA2\xA2\xA2\u0948
\xA2`,
			`\xA2\xA2\u094B
\xA2\xA3\xA3\xA3`,
			`\u094F
\xA3\xA4\xA4\xA4\xA5`,
			'\xA5\xA5\xA5\xA6\xA6\xA6\x07',
			`\xA6\u095B
\xA6\f\xA6\xA6\u095E\v\xA6\xA6`,
			`\xA6\xA6\x07\xA6\u0963
\xA6\f\xA6\xA6`,
			`\u0966\v\xA6\xA6\u0968
\xA6\xA7\xA7`,
			'\xA7\xA7\xA8\xA8\xA8\xA8',
			`\u0971
\xA8\xA9\xA9\xA9\x07\xA9\u0976`,
			`
\xA9\f\xA9\xA9\u0979\v\xA9\xA9\xA9`,
			`\u097C
\xA9\xAA\xAA\xAA\xAA`,
			`\xAA\xAA\u0983
\xAA\xAB\xAB\xAB`,
			'\xAB\xAC\xAC\xAC\xAC\xAC',
			'\xAC\xAD\xAD\xAD\xAD\xAD',
			'\xAD\xAE\xAE\xAE\xAE\xAE',
			'\xAF\xAF\xAF\xAF\xAF\xB0',
			`\xB0\xB0\xB0\u09A2
\xB0\xB1`,
			'\xB1\xB1\xB1\xB1\xB1\xB1\u09AA',
			`
\xB1\xB2\xB2\xB2\xB2\xB3`,
			'\xB3\xB4\xB4\xB4\xB4\xB4',
			`\xB4\xB4\xB4\xB4\u09BA
\xB4`,
			'\xB5\xB5\xB5\xB6\xB6\xB6',
			'\xB7\xB7\xB7\xB8\xB8\xB8\x07',
			`\xB8\u09C8
\xB8\f\xB8\xB8\u09CB\v\xB8\xB9`,
			`\xB9\xB9\x07\xB9\u09D0
\xB9\f\xB9\xB9`,
			'\u09D3\v\xB9\xBA\xBA\xBA\x07\xBA\u09D8',
			`
\xBA\f\xBA\xBA\u09DB\v\xBA\xBB\xBB`,
			`\xBB\x07\xBB\u09E0
\xBB\f\xBB\xBB\u09E3\v`,
			'\xBB\xBC\xBC\xBD\xBD\xBD',
			`\xBD\xBD\xBD\xBD\u09ED
\xBD\x07\xBD`,
			`\u09EF
\xBD\f\xBD\xBD\u09F2\v\xBD\xBE`,
			`\xBE\xBE\x07\xBE\u09F7
\xBE\f\xBE\xBE\u09FA`,
			'\v\xBE\xBF\xBF\xBF\xBF\xC0',
			`\xC0\xC0\u0A02
\xC0\xC0\xC0\u0A05`,
			`
\xC0\xC1\xC1\xC2\xC2\xC3`,
			`\xC3\xC3\xC3\u0A0E
\xC3\xC4`,
			`\xC4\xC4\u0A12
\xC4\xC4\u0A14
\xC4\xC5`,
			`\xC5\xC5\u0A18
\xC5\xC5\xC5`,
			`\xC5\u0A1C
\xC5\xC6\xC6\xC6\xC6`,
			`\xC6\u0A22
\xC6\xC7\xC7\xC7\u0A26`,
			`
\xC7\xC8\xC8\xC8\xC9\xC9`,
			`\xC9\xCA\xCA\xCA\u0A30
\xCA`,
			'\xCA\xCA\xCA\xCA\xCA\xCA',
			`\xCA\xCA\u0A39
\xCA\xCB\xCB\xCB`,
			'\xCB\xCB\xCB\xCB\xCB\xCB',
			`\xCB\u0A44
\xCB\xCC\xCC\xCC\u0A48`,
			`
\xCC\xCD\xCD\xCD\x07\xCD\u0A4D
\xCD`,
			'\f\xCD\xCD\u0A50\v\xCD\xCE\xCE',
			'\xCE\xCE\xCF\xCF\xCF\x07\xCF\u0A59',
			`
\xCF\f\xCF\xCF\u0A5C\v\xCF\xD0\xD0`,
			`\xD1\xD1\xD1\u0A62
\xD1\xD2`,
			'\xD2\xD3\xD3\xD3\xD3\xD3\u0A6A',
			`
\xD3\xD4\xD4\xD4\u0A6E
\xD4\xD4`,
			`\xD4\u0A71
\xD4\xD5\xD5\xD5\x07`,
			`\xD5\u0A76
\xD5\f\xD5\xD5\u0A79\v\xD5\xD6`,
			`\xD6\xD6\xD6\u0A7E
\xD6\xD7`,
			`\xD7\xD7\u0A82
\xD7\xD7\xD7\u0A85
\xD7`,
			`\xD8\xD8\xD8\xD8\xD8\u0A8B
`,
			`\xD8\xD9\xD9\xD9\u0A8F
\xD9\xDA`,
			`\xDA\xDA\u0A93
\xDA\xDB\xDB`,
			`\xDB\xDB\u0A98
\xDB\xDB\xDB\xDB`,
			`\u0A9C
\xDB\xDC\xDC\xDC\u0AA0
\xDC`,
			`\xDD\xDD\xDD\u0AA4
\xDD\xDE\xDE`,
			`\xDE\u0AA8
\xDE\xDE\xDE\xDE`,
			`\xDE\xDE\xDE\xDE\u0AB0
\xDE\xDF`,
			`\xDF\xDF\u0AB4
\xDF\xDF\xDF\x07`,
			`\xDF\u0AB8
\xDF\f\xDF\xDF\u0ABB\v\xDF\xDF`,
			`\xDF\u0ABE
\xDF\xE0\xE0\xE0\u0AC2`,
			`
\xE0\xE1\xE1\xE1\u0AC6
\xE1\xE1`,
			'\xE1\xE1\xE1\xE1\xE1\xE1',
			`\u0ACE
\xE1\xE2\xE2\xE2\u0AD2
\xE2`,
			`\xE2\xE2\xE2\u0AD6
\xE2\xE3\xE3`,
			`\xE3\xE3\xE3\xE3\xE3\u0ADE
`,
			`\xE3\xE4\xE4\xE4\xE4\u0AE3
\xE4`,
			`\xE5\xE5\xE5\xE5\u0AE8
\xE5`,
			'\xE6\xE6\xE6\xE7\xE7\xE7',
			'\xE8\xE8\xE8\xE8\xE8\xE8\u0AF5',
			`
\xE8\xE9\xE9\xEA\xEA\xEA`,
			`\x07\xEA\u0AFC
\xEA\f\xEA\xEA\u0AFF\v\xEA`,
			'\xEB\xEB\xEB\xEB\xEB\xEB\u0B06',
			`
\xEB\xEC\xEC\xEC\xEC\xEC`,
			`\xEC\xEC\xEC\xEC\u0B10
\xEC`,
			'\xEC\xEC\xEC\xEC\xEC\xEC',
			'\xEC\xEC\xEC\xEC\xEC\xEC',
			`\xEC\xEC\xEC\xEC\xEC\u0B22
\xEC`,
			`\xEC\xEC\u0B25
\xEC\xEC\xEC`,
			'\xEC\xEC\xEC\xEC\xEC\xEC',
			`\xEC\u0B2F
\xEC\xED\xED\xED\xED`,
			'\xED\xEE\xEE\xEE\xEE\xEE',
			'\xEF\xEF\xEF\xEF\xEF\xEF',
			'\xEF\xF0\xF0\xF0\xF0\xF0',
			`\xF1\xF1\xF1\xF1\xF1\u0B4B
`,
			'\xF1\xF1\xF1\xF1\xF1\xF1\u0B51',
			`
\xF1\xF1\xF1\xF1\xF1\xF1`,
			`\u0B57
\xF1\xF1\xF1\xF1\xF1`,
			`\xF1\u0B5D
\xF1\xF1\u0B5F
\xF1\xF2\xF2`,
			`\u0B62
\xF2\xF2\xF2\xF3\xF3`,
			`\xF3\u0B68
\xF3\xF4\xF4\xF4\xF4`,
			`\x07\xF4\u0B6E
\xF4\f\xF4\xF4\u0B71\v\xF4`,
			'\xF5\xF5\xF5\xF5\xF5\xF5',
			`\xF6\xF6\xF6\xF6\x07\xF6\u0B7D
\xF6`,
			'\f\xF6\xF6\u0B80\v\xF6\xF7\xF7',
			`\xF7\u0B84
\xF7\r\xF7\xF7\u0B85\xF8\xF8`,
			`\xF8\xF8\u0B8B
\xF8\xF8\xF8\u0B8E`,
			`
\xF8\xF9\xF9\xF9\u0B92
\xF9\xF9`,
			`\xF9\u0B95
\xF9\xF9\xF9\u0B98
\xF9`,
			`\xF9\xF9\u0B9B
\xF9\xF9\xF9\u0B9E
\xF9`,
			`\xF9\xF9\xF9\xF9\xF9\u0BA4
`,
			`\xF9\xFA\xFA\xFA\u0BA8
\xFA\xFA`,
			`\xFA\u0BAB
\xFA\xFA\xFA\u0BAE
\xFA`,
			`\xFA\xFA\u0BB1
\xFA\xFA\xFA\u0BB4
\xFA`,
			`\xFA\xFA\u0BB7
\xFA\xFB\xFB`,
			`\xFB\xFB\u0BBC
\xFB\r\xFB\xFB\u0BBD\xFC`,
			`\xFC\u0BC1
\xFC\xFC\xFC\xFD`,
			`\xFD\xFD\xFD\u0BC8
\xFD\xFD\xFD`,
			`\u0BCB
\xFD\xFD\xFD\u0BCE
\xFD\xFD`,
			`\xFD\u0BD1
\xFD\xFD\xFD\u0BD4
\xFD\xFD`,
			`\xFD\u0BD7
\xFD\xFD\xFD\u0BDA
\xFD`,
			`\xFD\xFD\u0BDD
\xFD\xFD\xFD\u0BE0
\xFD`,
			`\xFD\xFD\u0BE3
\xFD\xFD\xFD`,
			`\xFD\u0BE7
\xFD\xFD\xFD\u0BEA
\xFD\xFD`,
			`\xFD\u0BED
\xFD\xFD\xFD\u0BF0
\xFD`,
			`\xFD\xFD\u0BF3
\xFD\xFD\xFD\u0BF6
\xFD`,
			`\xFD\xFD\u0BF9
\xFD\xFD\xFD\u0BFC`,
			`
\xFD\xFD\xFD\u0BFF
\xFD\xFD\xFD`,
			`\u0C02
\xFD\xFD\u0C04
\xFD\xFE\xFE`,
			`\xFE\xFE\xFE\u0C0A
\xFE\xFE\xFE`,
			`\xFE\xFE\u0C0F
\xFE\xFE\xFE`,
			`\xFE\xFE\xFE\xFE\u0C16
\xFE\xFE`,
			`\u0C18
\xFE\xFF\xFF\u0C1B
\xFF\xFF`,
			`\xFF\xFF\xFF\u0C20
\xFF\xFF\xFF`,
			`\u0C23
\xFF\xFF\xFF\xFF\u0C27
\xFF`,
			`\u0100\u0100\u0100\u0100\u0C2C
\u0100\u0100`,
			`\u0100\u0100\u0100\u0100\u0100\u0C33
`,
			'\u0100\u0101\u0101\u0101\u0101\u0101\u0C39',
			`
\u0101\u0102\u0102\u0102\u0102\u0103`,
			`\u0103\u0103\u0103\x07\u0103\u0C43
\u0103\f\u0103`,
			'\u0103\u0C46\v\u0103\u0104\u0104\u0104',
			`\u0104\u0104\u0C4C
\u0104\u0105\u0105\u0105`,
			`\u0105\u0105\u0C52
\u0105\u0106\u0106`,
			`\u0106\u0106\u0106\x07\u0106\u0C59
\u0106\f\u0106`,
			`\u0106\u0C5C\v\u0106\u0106\u0C5E
\u0106\u0107`,
			`\u0107\u0107\u0C62
\u0107\u0108\u0108\u0108`,
			`\u0108\u0108\u0C68
\u0108\u0109\u0109`,
			'\u0109\u0109\u010A\u010A\u010B\u010B',
			`\u010B\u0C72
\u010B\u010C\u010C\u010C\u0C76
\u010C`,
			'\u010D\u010D\u010D\u010D\u010E\u010E',
			`\u010E\u010E\u0C7F
\u010E\r\u010E\u010E\u0C80`,
			`\u010F\u010F\u010F\u010F\u010F\u0C87
\u010F`,
			`\u010F\u010F\u0C8A
\u010F\u010F\u010F`,
			'\u010F\u010F\u010F\u010F\u0110\u0110\x07',
			`\u0110\u0C94
\u0110\f\u0110\u0110\u0C97\v\u0110\u0110`,
			`\u0110\u0C9A
\u0110\u0111\u0111\u0111`,
			`\u0111\u0111\u0111\u0CA1
\u0111\u0111\u0111`,
			'\u0111\u0111\u0111\u0112\u0112\u0112',
			'\u0112\u0112\u0112\u0112\u0113\u0113',
			'\u0113\u0113\u0113\u0114\u0114\u0114',
			`\u0114\u0CB7
\u0114\u0115\u0115\u0115`,
			`\u0115\u0CBC
\u0115\r\u0115\u0115\u0CBD\u0116\u0116`,
			`\u0116\u0CC2
\u0116\u0116\u0116\u0CC5
\u0116`,
			`\u0116\u0116\u0116\u0116\u0CCA
\u0116\u0116`,
			`\u0116\u0CCD
\u0116\u0117\u0117\u0117\x07`,
			`\u0117\u0CD2
\u0117\f\u0117\u0117\u0CD5\v\u0117\u0118`,
			`\u0118\u0118\u0118\u0118\u0CDB
\u0118`,
			`\u0118\u0118\u0CDE
\u0118\u0118\u0118\u0118`,
			`\u0118\u0118\u0118\u0118\u0CE6
\u0118`,
			`\u0118\u0118\u0118\u0118\u0118\u0CEC
\u0118`,
			`\u0118\u0CEE
\u0118\u0118\u0CF0
\u0118\u0118`,
			`\u0118\u0CF3
\u0118\u0118\u0118\u0CF6
\u0118\u0119`,
			`\u0119\u0119\u0119\u0CFB
\u0119\u0119`,
			'\u0119\u0119\u0119\u0119\u0119\x07\u0119\u0D03',
			`
\u0119\f\u0119\u0119\u0D06\v\u0119\u0119\u0119`,
			`\u0119\u0D0A
\u0119\u0119\u0D0C
\u0119\u011A`,
			`\u011A\u011A\u011A\u011A\u0D12
\u011A\u011A`,
			`\u011A\u0D15
\u011A\u011A\u011A\u0D18
\u011A`,
			'\u011A\u011A\u011A\u011A\u011A\u011A',
			`\u011A\u0D20
\u011A\u011A\u011A\u011A\u011A`,
			`\u011A\u0D26
\u011A\u011A\u0D28
\u011A\u011A\u0D2A`,
			`
\u011A\u011A\u011A\u0D2D
\u011A\u011A\u011A`,
			`\u0D30
\u011A\u011B\u011B\u011B\u0D34
\u011B`,
			`\u011C\u011C\u011C\x07\u011C\u0D39
\u011C\f\u011C`,
			'\u011C\u0D3C\v\u011C\u011D\u011D\u011D\u011D',
			`\x07\u011D\u0D42
\u011D\f\u011D\u011D\u0D45\v\u011D`,
			'\u011E\u011E\u011E\u011E\u011F\u011F',
			`\u011F\u011F\u0D4E
\u011F\u011F\u011F\u0D51
\u011F`,
			`\u011F\u011F\u0D54
\u011F\u011F\u011F\u0D57`,
			`
\u011F\u0120\u0120\u0120\u0D5B
\u0120\u0121`,
			'\u0121\u0121\u0121\u0121\u0121\u0121',
			`\u0121\u0121\u0D65
\u0121\u0122\u0122`,
			'\u0122\u0122\u0122\u0122\u0122\u0122',
			`\u0122\u0D6F
\u0122\u0123\u0123\u0123\u0123`,
			`\u0123\u0123\u0123\u0D77
\u0123\u0124`,
			'\u0124\u0124\u0124\u0124\u0124\u0124\u0D7F',
			`
\u0124\u0125\u0125\u0125\u0125\u0125`,
			`\u0125\u0D86
\u0125\u0126\u0126\u0127`,
			`\u0127\u0127\x07\u0127\u0D8D
\u0127\f\u0127\u0127\u0D90`,
			`\v\u0127\u0128\u0128\u0128\x07\u0128\u0D95
`,
			'\u0128\f\u0128\u0128\u0D98\v\u0128\u0129\u0129',
			'\u0129\u012A\u012A\u012A\u012A\u012A',
			`\u0DA1
\u012A\r\u012A\u012A\u0DA2\u012A\u012A\u0DA6`,
			`
\u012A\u012B\u012B\x07\u012B\u0DAA
\u012B\f\u012B`,
			`\u012B\u0DAD\v\u012B\u012B\u012B\x07\u012B\u0DB1
`,
			'\u012B\f\u012B\u012B\u0DB4\v\u012B\u012B\u012B',
			`\x07\u012B\u0DB8
\u012B\f\u012B\u012B\u0DBB\v\u012B`,
			`\u012B\u012B\x07\u012B\u0DBF
\u012B\f\u012B\u012B\u0DC2`,
			'\v\u012B\u012B\u012B\u012B\u012B\u012B',
			`\u0DC8
\u012B\u012C\u012C\u012C\u012C`,
			`\u012C\u012C\u012C\u012C\u0DD1
\u012C\x07\u012C`,
			`\u0DD3
\u012C\f\u012C\u012C\u0DD6\v\u012C\u012D`,
			`\u012D\u012D\u012D\u012D\u0DDC
\u012D\u012D`,
			`\x07\u012D\u0DDF
\u012D\f\u012D\u012D\u0DE2\v\u012D`,
			`\u012E\u012E\u0DE5
\u012E\u012E\u012E\u012E`,
			'\u012F\u012F\u012F\u012F\u0130\u0130',
			'\u0131\u0131\u0131\u0131\u0131\u0131',
			`\u0131\u0131\u0131\u0DF8
\u0131\u0131`,
			`\u0131\u0131\u0131\u0DFD
\u0131\u0131\u0131`,
			`\u0131\u0131\u0E02
\u0131\u0131\u0131`,
			`\u0131\u0131\u0131\u0E08
\u0131\u0132\u0132`,
			'\u0132\u0132\u0132\u0132\u0132\u0132',
			`\u0132\x07\u0132\u0E13
\u0132\f\u0132\u0132\u0E16\v`,
			`\u0132\u0132\u0E18
\u0132\u0132\u0132\u0E1B
\u0132`,
			'\u0132\u0132\u0132\u0132\u0132\u0132',
			`\u0132\u0132\x07\u0132\u0E25
\u0132\f\u0132\u0132`,
			`\u0E28\v\u0132\u0132\u0E2A
\u0132\u0132\u0132`,
			`\u0E2D
\u0132\u0132\u0132\u0132\u0132`,
			`\u0132\u0132\u0132\u0E35
\u0132\u0132\u0132`,
			`\u0132\u0132\u0132\x07\u0132\u0E3C
\u0132\f\u0132`,
			'\u0132\u0E3F\v\u0132\u0132\u0132\u0132\u0E43',
			`
\u0132\u0132\u0E45
\u0132\u0133\u0133\u0134`,
			'\u0134\u0134\u0134\u0134\u0134\u0134',
			`\u0134\u0134\u0134\u0134\x07\u0134\u0E54
`,
			`\u0134\f\u0134\u0134\u0E57\v\u0134\u0134\u0E59
\u0134`,
			'\u0134\u0134\u0135\u0135\u0135\u0135',
			'\u0135\u0135\u0135\u0135\u0135\u0135',
			`\u0E66
\u0135\u0136\u0136\u0136\u0E6A
\u0136`,
			`\u0137\u0137\u0137\u0E6E
\u0137\u0137\u0137`,
			`\u0E71
\u0137\u0137\u0137\u0E74
\u0137\u0137`,
			`\u0137\u0E77
\u0137\u0138\u0138\u0138\u0E7B
\u0138`,
			`\u0138\u0138\u0E7E
\u0138\u0138\u0138\u0E81`,
			`
\u0138\u0139\u0139\u0139\u0139\u0139`,
			`\u0139\u0E88
\u0139\u013A\u013A\u013A`,
			`\u013A\u0E8D
\u013A\u013A\u013A\u013B\u013B`,
			`\u013B\u013B\u013B\u0E95
\u013B\u013B`,
			`\u013B\u013C\u013C\u013C\u0E9B
\u013C\u013C`,
			`\u013C\u013C\u013C\u0EA0
\u013C\u013C`,
			`\u013C\u013C\u0EA4
\u013C\u013D\u013D\u013D`,
			`\u013D\u0EA9
\u013D\u013E\u013E\u013E`,
			`\u013E\u013E\u013E\u0EB0
\u013E\u013E\u013E`,
			'\u013E\u013E\u013E\u013E\u013E\u013E',
			`\u013E\u013E\x07\u013E\u0EBC
\u013E\f\u013E\u013E`,
			`\u0EBF\v\u013E\u013E\u0EC1
\u013E\u013E\u013E`,
			`\u013E\u0EC5
\u013E\u013F\u013F\u013F`,
			'\u0140\u0140\u0141\u0141\u0141\u0142',
			`\u0142\u0142\x07\u0142\u0ED2
\u0142\f\u0142\u0142\u0ED5`,
			'\v\u0142\u0143\u0143\u0144\u0144\u0144',
			`\u0144\u0144\u0144\u0EDE
\u0144\u0144`,
			`\u0144\u0144\u0144\u0144\x07\u0144\u0EE5
\u0144`,
			`\f\u0144\u0144\u0EE8\v\u0144\u0144\u0EEA
\u0144`,
			'\u0144\u0144\u0145\u0145\u0145\u0145',
			`\u0146\u0146\u0146\u0146\u0EF5
\u0146\u0147`,
			'\u0147\u0147\u0148\u0148\u0148\u0148',
			`\u0148\x07\u0148\u0EFF
\u0148\f\u0148\u0148\u0F02\v`,
			'\u0148\u0148\u0148\u0149\u0149\u0149',
			`\u0149\u0149\u0149\u0F0B
\u0149\u0149\u0149`,
			`\u0149\u0149\u0149\u0149\x07\u0149\u0F13
`,
			'\u0149\f\u0149\u0149\u0F16\v\u0149\u0149\u0149',
			`\u0149\u0F1A
\u0149\u014A\u014A\u014A\u0F1E`,
			`
\u014A\u014B\u014B\u014B\u0F22
\u014B\u014B`,
			`\u014B\x07\u014B\u0F26
\u014B\f\u014B\u014B\u0F29\v`,
			'\u014B\u014B\u014B\u014C\u014C\u014D',
			'\u014D\u014D\u014E\u014E\u014F\u014F',
			`\u014F\u014F\u0150\u0150\u0150\u0F3A
\u0150`,
			`\u0151\u0151\u0151\u0F3E
\u0151\r\u0151\u0151`,
			`\u0F3F\u0152\u0152\u0152\u0F44
\u0152\u0153`,
			`\u0153\u0153\u0153\x07\u0153\u0F4A
\u0153\f\u0153`,
			'\u0153\u0F4D\v\u0153\u0153\u0153\u0154',
			`\u0154\u0154\x07\u0154\u0F54
\u0154\f\u0154\u0154\u0F57`,
			'\v\u0154\u0155\u0155\u0155\u0155\u0155',
			`\x07\u0155\u0F5E
\u0155\f\u0155\u0155\u0F61\v\u0155`,
			'\u0156\u0156\u0156\u0156\u0157\u0157',
			'\u0157\u0157\u0158\u0158\u0158\u0158',
			`\u0159\u0159\u0159\u0159\u0159\u0F73
\u0159`,
			`\u015A\u015A\u015A\u015A\u015A\u0F79
`,
			`\u015A\u015A\u015A\u015A\x07\u015A\u0F7E
\u015A`,
			`\f\u015A\u015A\u0F81\v\u015A\u015A\u0F83
\u015A`,
			`\u015A\u0F85
\u015A\u015A\u015A\u015A\u015A`,
			`\u0F8A
\u015A\u015B\u015B\u015B\u0F8E
\u015B`,
			'\u015C\u015C\u015C\u015C\u015C\u015C',
			'\u015C\u015D\u015D\u015D\u015D\u015D',
			`\u015D\u015D\u015D\u0F9E
\u015D\r\u015D\u015D\u0F9F`,
			`\u015D\u015D\u015D\u0FA4
\u015D\u015D`,
			'\u015D\u015E\u015E\u015E\u015E\u015E',
			`\u015E\u015E\u0FAE
\u015E\r\u015E\u015E\u0FAF\u015E`,
			`\u015E\u015E\u0FB4
\u015E\u015E\u015E`,
			'\u015F\u015F\u015F\u015F\u015F\u015F\u0FBD',
			`
\u015F\u015F\u015F\u0160\u0160\u0161`,
			'\u0161\u0161\u0161\u0161\u0161\u0161',
			'\u0162\u0162\u0163\u0163\u0163\u0163',
			'\u0163\u0163\u0163\u0163\u0163\u0163',
			`\u0163\u0163\u0163\u0FD8
\u0163\u0164`,
			`\u0164\u0164\u0FDC
\u0164\r\u0164\u0164\u0FDD\u0165`,
			'\u0165\u0165\u0166\u0166\u0166\u0166',
			`\u0FE6
\u0166\u0167\u0167\u0167\u0167\u0FEB`,
			`
\u0167\u0168\u0168\u0168\u0169\u0169`,
			'\u016A\u016A\u016A\u016B\u016B\u016B',
			'\u016B\u016B\u016B\u016B\u016B\u016B',
			'\u016B\u016B\u016B\u016B\u016B\u016B',
			`\u016B\u1004
\u016B\u016C\u016C\u016C`,
			'\u016C\u016C\u016C\u016C\u016C\u016C',
			`\u016C\u016C\u016C\u016C\u1012
\u016C\u016D`,
			'\u016D\u016D\u016D\u016D\u016D\u016D',
			`\u016D\u016D\u016D\u016D\u016D\u101F
`,
			'\u016D\u016E\u016E\u016F\u016F\u016F',
			'\u016F\u016F\u016F\u016F\u016F\u016F',
			`\u016F\u102C
\u016F\u0170\u0170\u0171\u0171`,
			'\u0172\u0172\u0173\u0173\u0174\u0174',
			'\u0175\u0175\u0176\u0176\u0177\u0177',
			`\u0177\u0177\u0177\u0177\u1041
\u0177`,
			'\u0178\u0178\u0178\u0178\u0179\u0179',
			'\u0179\u0179\u0179\u0179\u0179\u0179\u104E',
			`
\u0179\u017A\u017A\u017B\u017B\u017C`,
			'\u017C\u017D\u017D\u017D\u017D\u017D',
			`\u017D\u017D\u017D\x07\u017D\u105E
\u017D\f\u017D`,
			'\u017D\u1061\v\u017D\u017D\u017D\u017D',
			'\u017D\u017D\u017D\u017D\u017D\u017D',
			`\u017D\u017D\u017D\u017D\u106F
\u017D\u017D`,
			'\u017D\u017D\u017D\u017D\u017D\u017D',
			'\u017D\u017D\u017D\u017D\u017D\u017D',
			'\u017D\u017D\u017D\u017D\u017D\u017D',
			'\u017D\u017D\u017D\u017D\u017D\u017D',
			`\u017D\u017D\u017D\u108C
\u017D\u017D`,
			'\u017D\u017D\u017D\u017D\u017D\u017D',
			'\u017D\u017D\u017D\u017D\u017D\u017D',
			`\u017D\u017D\x07\u017D\u109D
\u017D\f\u017D\u017D\u10A0`,
			'\v\u017D\u017E\u017E\u017E\u017E\u017F',
			'\u017F\u017F\u017F\u017F\u017F\u017F',
			`\u10AC
\u017F\u0180\u0180\u0180\u0180`,
			'\u0180\u0180\u0180\u0180\u0180\u0180',
			`\u0180\u0180\u0180\u0180\u10BB
\u0180\u0181`,
			`\u0181\u0181\u10BF
\u0181\u0182\u0182`,
			`\u0182\u0182\u0182\u10C5
\u0182\u0183\u0183`,
			`\u0184\u0184\u0185\u0185\u0185\u10CD
`,
			'\u0185\u0186\u0186\u0186\u0186\u0186\x07',
			`\u0186\u10D4
\u0186\f\u0186\u0186\u10D7\v\u0186\u0186`,
			`\u0186\u0187\u0187\u0187\u0187\u10DE
`,
			'\u0187\u0188\u0188\u0188\u0188\u0188\x07',
			`\u0188\u10E5
\u0188\f\u0188\u0188\u10E8\v\u0188\u0188`,
			'\u0188\u0189\u0189\u0189\u0189\u018A',
			'\u018A\u018B\u018B\u018C\u018C\u018C',
			`\u018C\u10F7
\u018C\u018D\u018D\u018D\u10FB`,
			`
\u018D\u018E\u018E\u018E\u018E\u018E`,
			`\u018E\u1102
\u018E\u018F\u018F\u018F\u1106`,
			`
\u018F\u0190\u0190\u0191\u0191\u0192`,
			'\u0192\u0192\u0192\u0192\u0192\u0192',
			'\u0192\u0192\u0192\u0192\u0192\u0192',
			`\u0192\u0192\u111A
\u0192\u0193\u0193`,
			'\u0193\u0193\u0193\u0193\u0193\u0193\u1123',
			`
\u0193\u0194\u0194\u0194\x07\u0194\u1128
\u0194`,
			'\f\u0194\u0194\u112B\v\u0194\u0195\u0195',
			`\u0195\u0195\u1130
\u0195\u0196\u0196\u0196`,
			`\x07\u0196\u1135
\u0196\f\u0196\u0196\u1138\v\u0196`,
			'\u0197\u0197\u0197\u0197\u0197\u0197\u113F',
			`
\u0197\u0198\u0198\u0198\u0198\u0199`,
			`\u0199\u0199\u0199\u1148
\u0199\u019A`,
			`\u019A\u019A\u019B\u019B\u019B\u114F
\u019B`,
			'\u019C\u019C\u019D\u019D\u019E\u019E',
			'\u019F\u019F\u019F\u019F\u019F\u019F',
			'\u019F\u019F\u019F\u019F\u019F\u019F',
			`\u019F\u019F\u1164
\u019F\u019F\u019F`,
			`\u019F\u1168
\u019F\u019F\u116A
\u019F\u019F\u116C
\u019F`,
			'\u01A0\u01A0\u01A0\u01A0\u01A1\u01A1',
			`\u01A1\u1174
\u01A1\u01A1\u01A1\u01A1`,
			'\u01A2\u01A2\u01A2\u01A2\u01A2\u01A2',
			'\u01A2\u01A2\u01A2\u01A2\u01A2\u01A2',
			`\u01A2\u1185
\u01A2\u01A3\u01A3\u01A3\u01A3`,
			`\u01A3\u01A4\u01A4\u01A4\x07\u01A4\u118F
`,
			'\u01A4\f\u01A4\u01A4\u1192\v\u01A4\u01A5\u01A5',
			'\u01A6\u01A6\u01A6\u01A7\u01A7\u01A7',
			`\x07\u01A7\u119C
\u01A7\f\u01A7\u01A7\u119F\v\u01A7`,
			`\u01A8\u01A8\u01A8\x07\u01A8\u11A4
\u01A8\f\u01A8`,
			'\u01A8\u11A7\v\u01A8\u01A9\u01A9\u01A9\u01A9',
			'\u01AA\u01AA\u01AB\u01AB\u01AC\u01AC',
			`\u01AC\u01AC\u01AC\u11B5
\u01AC\u01AD`,
			'\u01AD\u01AD\u01AE\u01AE\u01AE\u01AE',
			'\u01AE\u01AE\u01AE\u01AF\u01AF\u01AF',
			'\u01AF\u01AF\u01AF\u01AF\u01AF\u01AF',
			'\u01AF\u01AF\u01AF\u01AF\u01AF\u01AF',
			'\u01AF\u01AF\u01AF\u01AF\u01AF\u01AF\u11D5',
			`
\u01AF\u01B0\u01B0\u01B0\u01B0\u01B0`,
			'\u01B1\u01B1\u01B1\u01B1\u01B1\u01B1',
			'\u01B2\u01B2\u01B2\u01B2\u01B2\u01B2',
			'\u01B2\u01B2\u01B2\u01B2\u01B2\u01B2',
			`\u01B2\u11EE
\u01B2\u01B3\u01B3\u01B3\x07`,
			`\u01B3\u11F3
\u01B3\f\u01B3\u01B3\u11F6\v\u01B3\u01B4`,
			'\u01B4\u01B4\u01B4\u01B4\u01B4\u01B4',
			'\u01B4\u01B5\u01B5\u01B5\u01B5\u01B5',
			'\u01B5\u01B5\u01B5\u01B5\u01B5\u01B5',
			`\u01B5\u01B5\u01B5\u01B5\u01B5\u120F
`,
			'\u01B5\u01B6\u01B6\u01B6\u01B6\u01B6',
			'\u01B6\u01B7\u01B7\u01B7\u01B7\u01B7',
			`\u01B7\u01B7\u01B7\u01B7\u01B7\u1220
\u01B7`,
			`\u01B7\u01B7\u01B7\u01B7\u1225
\u01B7`,
			'\u01B8\u01B8\u01B8\u01B8\u01B8\u01B8',
			`\u01B8\u01B8\u01B8\u01B8\u1230
\u01B8\u01B8`,
			`\u01B8\u01B8\u01B8\u1235
\u01B8\u01B9`,
			'\u01B9\u01B9\u01B9\u01B9\u01B9\u01B9',
			`\u01B9\u02F8\u01BA\b
\f`,
			' "$&(*,.02468:<>@BDFHJLNPRTVXZ',
			'\\^`bdfhjlnprtvxz|~\x80\x82\x84\x86\x88\x8A\x8C\x8E',
			'\x90\x92\x94\x96\x98\x9A\x9C\x9E\xA0\xA2\xA4\xA6',
			'\xA8\xAA\xAC\xAE\xB0\xB2\xB4\xB6\xB8\xBA\xBC\xBE',
			'\xC0\xC2\xC4\xC6\xC8\xCA\xCC\xCE\xD0\xD2\xD4\xD6',
			'\xD8\xDA\xDC\xDE\xE0\xE2\xE4\xE6\xE8\xEA\xEC\xEE',
			'\xF0\xF2\xF4\xF6\xF8\xFA\xFC\xFE\u0100\u0102\u0104\u0106',
			'\u0108\u010A\u010C\u010E\u0110\u0112\u0114\u0116\u0118\u011A\u011C\u011E',
			'\u0120\u0122\u0124\u0126\u0128\u012A\u012C\u012E\u0130\u0132\u0134\u0136',
			'\u0138\u013A\u013C\u013E\u0140\u0142\u0144\u0146\u0148\u014A\u014C\u014E',
			'\u0150\u0152\u0154\u0156\u0158\u015A\u015C\u015E\u0160\u0162\u0164\u0166',
			'\u0168\u016A\u016C\u016E\u0170\u0172\u0174\u0176\u0178\u017A\u017C\u017E',
			'\u0180\u0182\u0184\u0186\u0188\u018A\u018C\u018E\u0190\u0192\u0194\u0196',
			'\u0198\u019A\u019C\u019E\u01A0\u01A2\u01A4\u01A6\u01A8\u01AA\u01AC\u01AE',
			'\u01B0\u01B2\u01B4\u01B6\u01B8\u01BA\u01BC\u01BE\u01C0\u01C2\u01C4\u01C6',
			'\u01C8\u01CA\u01CC\u01CE\u01D0\u01D2\u01D4\u01D6\u01D8\u01DA\u01DC\u01DE',
			'\u01E0\u01E2\u01E4\u01E6\u01E8\u01EA\u01EC\u01EE\u01F0\u01F2\u01F4\u01F6',
			'\u01F8\u01FA\u01FC\u01FE\u0200\u0202\u0204\u0206\u0208\u020A\u020C\u020E',
			'\u0210\u0212\u0214\u0216\u0218\u021A\u021C\u021E\u0220\u0222\u0224\u0226',
			'\u0228\u022A\u022C\u022E\u0230\u0232\u0234\u0236\u0238\u023A\u023C\u023E',
			'\u0240\u0242\u0244\u0246\u0248\u024A\u024C\u024E\u0250\u0252\u0254\u0256',
			'\u0258\u025A\u025C\u025E\u0260\u0262\u0264\u0266\u0268\u026A\u026C\u026E',
			'\u0270\u0272\u0274\u0276\u0278\u027A\u027C\u027E\u0280\u0282\u0284\u0286',
			'\u0288\u028A\u028C\u028E\u0290\u0292\u0294\u0296\u0298\u029A\u029C\u029E',
			'\u02A0\u02A2\u02A4\u02A6\u02A8\u02AA\u02AC\u02AE\u02B0\u02B2\u02B4\u02B6',
			'\u02B8\u02BA\u02BC\u02BE\u02C0\u02C2\u02C4\u02C6\u02C8\u02CA\u02CC\u02CE',
			'\u02D0\u02D2\u02D4\u02D6\u02D8\u02DA\u02DC\u02DE\u02E0\u02E2\u02E4\u02E6',
			'\u02E8\u02EA\u02EC\u02EE\u02F0\u02F2\u02F4\u02F6\u02F8\u02FA\u02FC\u02FE',
			'\u0300\u0302\u0304\u0306\u0308\u030A\u030C\u030E\u0310\u0312\u0314\u0316',
			'\u0318\u031A\u031C\u031E\u0320\u0322\u0324\u0326\u0328\u032A\u032C\u032E',
			'\u0330\u0332\u0334\u0336\u0338\u033A\u033C\u033E\u0340\u0342\u0344\u0346',
			'\u0348\u034A\u034C\u034E\u0350\u0352\u0354\u0356\u0358\u035A\u035C\u035E',
			'\u0360\u0362\u0364\u0366\u0368\u036A\u036C\u036E\u0370$',
			'\u0136\u0139\xE4\xE5\xB7\xB7\xBA',
			'\xBA\x88\x89JJ',
			'\x92\x93\xB8\xB8\xBB\xBB',
			'\xB6\xB6\xC3\xC4\v',
			'\x1B\x1BCCEEKK\xAF\xAF\xC0\xC0\xE2\xE3K',
			'K\x88\x88\u014E\u014E\x8F\x90\xDA\xDA',
			'\u0152\u0157\u014F\u0153\u0155\u0155\u0158\u0158',
			'\x7F\x80\u0127\u0128',
			'\xED\xEEm',
			'm\x86\x86\xE7\xE8\u010C\u010C\u010E',
			'\u0111\u0113\u0115\u010C\u010C\u010E\u0115\u0178',
			'\u0178\u017D\u017D\u016C\u016D\u0172\u0172\u016B',
			`\u016B\u016E\u0170\u016C\u016D

\x8A\x8B`,
			'\u0164\u0164\u0166\u016A',
			`\x07
\f\fOU__be\x8A\x8B\xA4\xA5\xB6\xB6\xCE\xCE\xD0`,
			'\xD0\u012F\u012F\u0164\u0173\u0175\u0175:',
			'&&(157:;=@FFHILLNNPPXX\\\\__cceegikkn\x81\x83\x83\x88',
			'\x89\x8C\x8C\x8F\x91\x93\x96\x98\x9C\x9E\xA3\xA9',
			'\xAE\xB0\xB0\xB4\xB5\xB8\xBB\xBE\xC4\xC6\xC8\xCA',
			'\xCA\xCC\xCD\xD2\xD2\xD5\xD7\xD9\xDE\xE0\xE2\xE4',
			'\xE6\xE9\xE9\xF6\xF6\xF8\xF8\xFA\xFB\xFE\u0106\u0108',
			'\u0108\u010B\u0115\u0117\u0117\u011A\u011A\u011C\u0121\u0126\u012A\u012C',
			'\u012D\u0131\u014C\u0154\u0154\u0156\u0157\u0159\u0159\f\f\fO',
			'OQUWWYYbbdd\xD0\xD0\xF0\xF1\xF5\xF5',
			'\xF9\xF9\u014D\u014D\u1398\u0378',
			'\u037D\u037F',
			`\b\u0383
\u0385\f\u039F`,
			'\u03A1\u03A3',
			'\u03B1\u03B3',
			'\u03C3\u03CC',
			'\u03D4\u03E1',
			'\u03F8 \u0407',
			'"\u040B$\u0413',
			'&\u0449(\u044B',
			'*\u044E,\u0450',
			'.\u04540\u0457',
			'2\u045A4\u045E6\u0461',
			'8\u0472:\u0475',
			'<\u0479>\u0481',
			'@\u0484B\u048D',
			'D\u0490F\u04C7',
			'H\u04D1J\u04F6L\u0509',
			'N\u0519P\u051B',
			'R\u0526T\u052A',
			'V\u052FX\u0531',
			'Z\u0536\\\u053B',
			'^\u0540`\u0544b\u054C',
			'd\u0551f\u0556',
			'h\u055Aj\u056E',
			'l\u057Bn\u0583',
			'p\u0585r\u058E',
			't\u0592v\u0599x\u05A0',
			'z\u05A7|\u05AA',
			'~\u05C5\x80\u05D0',
			'\x82\u05D4\x84\u05D6',
			'\x86\u05E3\x88\u05E5',
			'\x8A\u05ED\x8C\u05F6',
			'\x8E\u05F8\x90\u05FD',
			'\x92\u0601\x94\u0609',
			'\x96\u060D\x98\u0616',
			'\x9A\u0618\x9C\u061E',
			'\x9E\u0622\xA0\u062F',
			'\xA2\u0631\xA4\u0635',
			'\xA6\u0659\xA8\u0663',
			'\xAA\u0669\xAC\u0672',
			'\xAE\u067B\xB0\u067F',
			'\xB2\u0687\xB4\u068B',
			'\xB6\u068E\xB8\u0694',
			'\xBA\u069D\xBC\u06A1',
			'\xBE\u06A4\xC0\u06AF',
			'\xC2\u06C0\xC4\u06C2',
			'\xC6\u06C7\xC8\u06DB',
			'\xCA\u06DF\xCC\u06E6',
			'\xCE\u06F6\xD0\u0782',
			'\xD2\u0784\xD4\u078C',
			'\xD6\u0791\xD8\u0793',
			'\xDA\u0799\xDC\u079D',
			'\xDE\u07A1\xE0\u07A5',
			'\xE2\u07AF\xE4\u07BA',
			'\xE6\u07CB\xE8\u07DD',
			'\xEA\u07E2\xEC\u07E5',
			'\xEE\u07E9\xF0\u07F0',
			'\xF2\u07F9\xF4\u07FF',
			'\xF6\u0801\xF8\u0811',
			'\xFA\u0826\xFC\u0828',
			'\xFE\u0830\u0100\u0837',
			'\u0102\u0839\u0104\u0847',
			'\u0106\u0849\u0108\u084D',
			'\u010A\u0851\u010C\u0855',
			'\u010E\u0859\u0110\u0868',
			'\u0112\u0870\u0114\u0873',
			'\u0116\u0875\u0118\u0881',
			'\u011A\u088B\u011C\u088E',
			'\u011E\u0899\u0120\u08A1',
			'\u0122\u08BC\u0124\u08D8',
			'\u0126\u08DE\u0128\u08E5',
			'\u012A\u08EF\u012C\u08F3',
			'\u012E\u08F5\u0130\u08F8',
			'\u0132\u08FB\u0134\u08FD',
			'\u0136\u090A\u0138\u091B',
			'\u013A\u0929\u013C\u092B',
			'\u013E\u092E\u0140\u0931',
			'\u0142\u093A\u0144\u094E',
			'\u0146\u0950\u0148\u0953',
			'\u014A\u0967\u014C\u0969',
			'\u014E\u0970\u0150\u097B',
			'\u0152\u097D\u0154\u0984',
			'\u0156\u0988\u0158\u098E',
			'\u015A\u0994\u015C\u0999',
			'\u015E\u09A1\u0160\u09A3',
			'\u0162\u09AB\u0164\u09AF',
			'\u0166\u09B1\u0168\u09BB',
			'\u016A\u09BE\u016C\u09C1',
			'\u016E\u09C4\u0170\u09CC',
			'\u0172\u09D4\u0174\u09DC',
			'\u0176\u09E4\u0178\u09E6',
			'\u017A\u09F3\u017C\u09FB',
			'\u017E\u0A04\u0180\u0A06',
			'\u0182\u0A08\u0184\u0A0D',
			'\u0186\u0A13\u0188\u0A17',
			'\u018A\u0A1D\u018C\u0A25',
			'\u018E\u0A27\u0190\u0A2A',
			'\u0192\u0A2F\u0194\u0A3A',
			'\u0196\u0A47\u0198\u0A49',
			'\u019A\u0A51\u019C\u0A55',
			'\u019E\u0A5D\u01A0\u0A61',
			'\u01A2\u0A63\u01A4\u0A69',
			'\u01A6\u0A6B\u01A8\u0A72',
			'\u01AA\u0A7A\u01AC\u0A7F',
			'\u01AE\u0A86\u01B0\u0A8E',
			'\u01B2\u0A92\u01B4\u0A94',
			'\u01B6\u0A9D\u01B8\u0AA3',
			'\u01BA\u0AA7\u01BC\u0AB3',
			'\u01BE\u0AC1\u01C0\u0AC5',
			'\u01C2\u0AD1\u01C4\u0ADD',
			'\u01C6\u0AE2\u01C8\u0AE7',
			'\u01CA\u0AE9\u01CC\u0AEC',
			'\u01CE\u0AEF\u01D0\u0AF6',
			'\u01D2\u0AF8\u01D4\u0B05',
			'\u01D6\u0B2E\u01D8\u0B30',
			'\u01DA\u0B35\u01DC\u0B3A',
			'\u01DE\u0B41\u01E0\u0B5E',
			'\u01E2\u0B61\u01E4\u0B67',
			'\u01E6\u0B69\u01E8\u0B72',
			'\u01EA\u0B78\u01EC\u0B81',
			'\u01EE\u0B8D\u01F0\u0BA3',
			'\u01F2\u0BA5\u01F4\u0BBB',
			'\u01F6\u0BC0\u01F8\u0C03',
			'\u01FA\u0C17\u01FC\u0C26',
			'\u01FE\u0C32\u0200\u0C34',
			'\u0202\u0C3A\u0204\u0C3E',
			'\u0206\u0C47\u0208\u0C51',
			'\u020A\u0C53\u020C\u0C61',
			'\u020E\u0C67\u0210\u0C69',
			'\u0212\u0C6D\u0214\u0C6F',
			'\u0216\u0C73\u0218\u0C77',
			'\u021A\u0C7B\u021C\u0C82',
			'\u021E\u0C95\u0220\u0C9B',
			'\u0222\u0CA7\u0224\u0CAE',
			'\u0226\u0CB6\u0228\u0CB8',
			'\u022A\u0CCC\u022C\u0CCE',
			'\u022E\u0CD6\u0230\u0D0B',
			'\u0232\u0D11\u0234\u0D33',
			'\u0236\u0D35\u0238\u0D3D',
			'\u023A\u0D46\u023C\u0D56',
			'\u023E\u0D5A\u0240\u0D64',
			'\u0242\u0D6E\u0244\u0D76',
			'\u0246\u0D7E\u0248\u0D85',
			'\u024A\u0D87\u024C\u0D89',
			'\u024E\u0D91\u0250\u0D99',
			'\u0252\u0DA5\u0254\u0DC7',
			'\u0256\u0DC9\u0258\u0DDB',
			'\u025A\u0DE4\u025C\u0DE9',
			'\u025E\u0DED\u0260\u0E07',
			'\u0262\u0E44\u0264\u0E46',
			'\u0266\u0E48\u0268\u0E65',
			'\u026A\u0E69\u026C\u0E6B',
			'\u026E\u0E78\u0270\u0E87',
			'\u0272\u0E8C\u0274\u0E90',
			'\u0276\u0EA3\u0278\u0EA8',
			'\u027A\u0EAA\u027C\u0EC6',
			'\u027E\u0EC9\u0280\u0ECB',
			'\u0282\u0ECE\u0284\u0ED6',
			'\u0286\u0ED8\u0288\u0EED',
			'\u028A\u0EF4\u028C\u0EF6',
			'\u028E\u0EF9\u0290\u0F05',
			'\u0292\u0F1D\u0294\u0F1F',
			'\u0296\u0F2C\u0298\u0F2E',
			'\u029A\u0F31\u029C\u0F33',
			'\u029E\u0F37\u02A0\u0F3D',
			'\u02A2\u0F43\u02A4\u0F45',
			'\u02A6\u0F50\u02A8\u0F58',
			'\u02AA\u0F62\u02AC\u0F66',
			'\u02AE\u0F6A\u02B0\u0F6E',
			'\u02B2\u0F74\u02B4\u0F8D',
			'\u02B6\u0F8F\u02B8\u0F96',
			'\u02BA\u0FA7\u02BC\u0FB7',
			'\u02BE\u0FC0\u02C0\u0FC2',
			'\u02C2\u0FC9\u02C4\u0FD7',
			'\u02C6\u0FD9\u02C8\u0FDF',
			'\u02CA\u0FE5\u02CC\u0FEA',
			'\u02CE\u0FEC\u02D0\u0FEF',
			'\u02D2\u0FF1\u02D4\u1003',
			'\u02D6\u1011\u02D8\u101E',
			'\u02DA\u1020\u02DC\u102B',
			'\u02DE\u102D\u02E0\u102F',
			'\u02E2\u1031\u02E4\u1033',
			'\u02E6\u1035\u02E8\u1037',
			'\u02EA\u1039\u02EC\u1040',
			'\u02EE\u1042\u02F0\u104D',
			'\u02F2\u104F\u02F4\u1051',
			'\u02F6\u1053\u02F8\u106E',
			'\u02FA\u10A1\u02FC\u10AB',
			'\u02FE\u10BA\u0300\u10BE',
			'\u0302\u10C4\u0304\u10C6',
			'\u0306\u10C8\u0308\u10CA',
			'\u030A\u10CE\u030C\u10DA',
			'\u030E\u10DF\u0310\u10EB',
			'\u0312\u10EF\u0314\u10F1',
			'\u0316\u10F6\u0318\u10FA',
			'\u031A\u1101\u031C\u1105',
			'\u031E\u1107\u0320\u1109',
			'\u0322\u1119\u0324\u1122',
			'\u0326\u1124\u0328\u112F',
			'\u032A\u1131\u032C\u1139',
			'\u032E\u1140\u0330\u1144',
			'\u0332\u1149\u0334\u114C',
			'\u0336\u1150\u0338\u1152',
			'\u033A\u1154\u033C\u1156',
			'\u033E\u116D\u0340\u1173',
			'\u0342\u1178\u0344\u1186',
			'\u0346\u118B\u0348\u1193',
			'\u034A\u1195\u034C\u1198',
			'\u034E\u11A0\u0350\u11A8',
			'\u0352\u11AC\u0354\u11AE',
			'\u0356\u11B4\u0358\u11B6',
			'\u035A\u11B9\u035C\u11C0',
			'\u035E\u11D6\u0360\u11DB',
			'\u0362\u11ED\u0364\u11EF',
			'\u0366\u11F7\u0368\u11FF',
			'\u036A\u1210\u036C\u1216',
			'\u036E\u1226\u0370\u1236',
			'\u0372\u0373\b\u0373\u0374',
			'\u0374\u0377\u0375\u0377',
			'\u0376\u0372\u0376\u0375',
			'\u0377\u037A\u0378\u0376',
			'\u0378\u0379\u0379\u037B',
			'\u037A\u0378\u037B\u037C\x07',
			'\u037C\u037D\u037E\x07',
			'\u015D\u037E\u037F\u0380',
			'\u0380\x07\u0381\u0384',
			`
\u0382\u0384
\u0383\u0381`,
			'\u0383\u0382\u0384	',
			'\u0385\u038F\x07\x91\u0386\u0388\f',
			'\x07\u0387\u0386\u0388\u038B',
			'\u0389\u0387\u0389\u038A',
			'\u038A\u038C\u038B\u0389',
			`\u038C\u0390
\u038D\u038E\x07\u0106`,
			'\u038E\u0390\u01E2\xF2\u038F\u0389',
			'\u038F\u038D\u0390\v',
			'\u0391\u03A0\x07\x92\u0392\u03A0\x07\x93',
			'\u0393\u03A0\x07\x94\u0394\u03A0\x07\x95',
			'\u0395\u03A0\x07\u0107\u0396\u03A0\x07\xCC',
			'\u0397\u03A0\x07\u0108\u0398\u039A\x07\u0135',
			'\u0399\u039B\b\u039A\u0399',
			'\u039A\u039B\u039B\u039D',
			'\u039C\u039E	\u039D\u039C',
			'\u039D\u039E\u039E\u03A0',
			'\u039F\u0391\u039F\u0392',
			'\u039F\u0393\u039F\u0394',
			'\u039F\u0395\u039F\u0396',
			'\u039F\u0397\u039F\u0398',
			'\u03A0\r\u03A1\u03A2\x07\u011B',
			'\u03A2\u03A3\u03A4	',
			'\u03A4\u03A5\u03B2\u01E2',
			'\xF2\u03A6\u03B2\v\u03A7\u03B2',
			'\r\u03A8\u03B2\u03A9\u03B2',
			'\u03AA\u03B2\u03AB\u03B2$',
			'\u03AC\u03B2&\u03AD\u03B2\u0200',
			'\u0101\u03AE\u03B2\u0206\u0104\u03AF\u03B2\u0208',
			'\u0105\u03B0\u03B2\u021C\u010F\u03B1\u03A5',
			'\u03B1\u03A6\u03B1\u03A7',
			'\u03B1\u03A8\u03B1\u03A9',
			'\u03B1\u03AA\u03B1\u03AB',
			'\u03B1\u03AC\u03B1\u03AD',
			'\u03B1\u03AE\u03B1\u03AF',
			'\u03B1\u03B0\u03B2',
			'\u03B3\u03B4\x07:\u03B4\u03B6\x07?',
			'\u03B5\u03B7\x072\u03B6\u03B5',
			'\u03B6\u03B7\u03B7\u03B8',
			'\u03B8\u03B9\x07@\u03B9\u03BB\x07\u0178',
			'\u03BA\u03BC\x07\u03BB\u03BA',
			'\u03BB\u03BC\u03BC\u03BD',
			"\u03BD\u03BE\x07j\u03BE\u03BF\x07'",
			'\u03BF\u03C1\u0308\u0185\u03C0\u03C2\xC4c',
			'\u03C1\u03C0\u03C1\u03C2',
			'\u03C2\u03C3\u03C5\x07\xEA',
			'\u03C4\u03C6\x07>\u03C5\u03C4',
			'\u03C5\u03C6\u03C6\u03C7',
			'\u03C7\u03C8\x07=\u03C8\u03C9\x07\u015E',
			'\u03C9\u03CA\x07\u0178\u03CA\u03CB\x07\u015F',
			'\u03CB\u03CC\u03CD\x07;',
			"\u03CD\u03CE\x07'\u03CE\u03CF\u0308\u0185",
			'\u03CF\u03D0\x07M\u03D0\u03D2\x07\u0178',
			'\u03D1\u03D3\f\u03D2\u03D1',
			'\u03D2\u03D3\u03D3',
			'\u03D4\u03DA\x07<\u03D5\u03D7\x07D\u03D6',
			'\u03D5\u03D6\u03D7\u03D7',
			"\u03D8\u03D8\u03D9\x07'\u03D9",
			'\u03DB\u0308\u0185\u03DA\u03D6\u03DA',
			'\u03DB\u03DB\u03DC\u03DC',
			'\u03DD\x07\u03DD\u03DF\x07\u0178\u03DE',
			'\u03E0\u016C\xB7\u03DF\u03DE\u03DF',
			'\u03E0\u03E0\x1B\u03E1',
			'\u03E2\x07\u0132\u03E2\u03E3\x07\u0133\u03E3',
			'\u03E6\u0318\u018D\u03E4\u03E5\x07\u015A\u03E5',
			'\u03E7\u0318\u018D\u03E6\u03E4\u03E6',
			'\u03E7\u03E7\u03F2\u03E8',
			'\u03E9\x07\u03E9\u03EC\x07\u017D\u03EA',
			'\u03EB\x07M\u03EB\u03ED\x07\u017D\u03EC',
			'\u03EA\u03EC\u03ED\u03ED',
			'\u03F0\u03EE\u03EF\x07\x9B\u03EF',
			'\u03F1\x07\u017D\u03F0\u03EE\u03F0',
			'\u03F1\u03F1\u03F3\u03F2',
			'\u03E8\u03F2\u03F3\u03F3',
			'\u03F6\u03F4\u03F5\x07\x97\u03F5',
			'\u03F7 \u03F6\u03F4\u03F6',
			'\u03F7\u03F7\u03F8',
			'\u03F9\x07\u0132\u03F9\u03FF\x07:\u03FA',
			'\u03FD\u0318\u018D\u03FB\u03FC\x07\u015A\u03FC',
			'\u03FE\u0318\u018D\u03FD\u03FB\u03FD',
			'\u03FE\u03FE\u0400\u03FF',
			'\u03FA\u03FF\u0400\u0400',
			'\u0401\u0401\u0402\x07\u0402',
			'\u0405\x07\u0178\u0403\u0404\x07\x97\u0404',
			'\u0406 \u0405\u0403\u0405',
			'\u0406\u0406\u0407',
			'\u0408\x07\u015E\u0408\u0409"\u0409',
			'\u040A\x07\u015F\u040A!\u040B',
			'\u0410\u014C\xA7\u040C\u040D\x07\u015C\u040D',
			'\u040F\u014C\xA7\u040E\u040C\u040F',
			'\u0412\u0410\u040E\u0410',
			'\u0411\u0411#\u0412',
			'\u0410\u0413\u0414\x07\u0132\u0414',
			'\u0415\x07\u0134\u0415\u0418\u0318\u018D\u0416',
			'\u0417\x07\u015A\u0417\u0419\u0318\u018D\u0418',
			'\u0416\u0418\u0419\u0419',
			'\u041C\u041A\u041B\x07\x97\u041B',
			'\u041D \u041C\u041A\u041C',
			'\u041D\u041D%\u041E',
			'\u044A6\u041F\u044A> \u0420\u044A',
			'@!\u0421\u044AD#\u0422\u044AH%\u0423\u044A',
			'F$\u0424\u044AJ&\u0425\u044A\xCCg',
			'\u0426\u044A\xD0i\u0427\u044A\u010E\x88',
			'\u0428\u044A\u0120\x91\u0429\u044A\u0122\x92',
			'\u042A\u044A\u0126\x94\u042B\u044A\u0128\x95',
			'\u042C\u044A\u0116\x8C\u042D\u044A\u011C\x8F',
			'\u042E\u044A\u0118\x8D\u042F\u044A\u011A\x8E',
			'\u0430\u044A\u011E\x90\u0431\u044A\xCEh',
			'\u0432\u044A\xD2j\u0433\u044A\xD8m\u0434',
			'\u044A\xD4k\u0435\u044A\xDAn\u0436\u044A',
			'\xDCo\u0437\u044A\xDEp\u0438\u044A',
			'\xE0q\u0439\u044A\xE2r\u043A\u044A\xF0',
			'y\u043B\u044A\xE8u\u043C\u044A\xF2z',
			'\u043D\u044A\xEAv\u043E\u044A\xE4s\u043F',
			'\u044A\xE6t\u0440\u044A\xEEx\u0441\u044A',
			'\xECw\u0442\u044A\u021A\u010E\u0443\u044A',
			'\u0228\u0115\u0444\u044A\u0322\u0192\u0445\u044A',
			'\xA4S\u0446\u044A\xA8U\u0447\u044A',
			'\xAAV\u0448\u044A\xB6\\\u0449\u041E',
			'\u0449\u041F\u0449\u0420',
			'\u0449\u0421\u0449\u0422',
			'\u0449\u0423\u0449\u0424',
			'\u0449\u0425\u0449\u0426',
			'\u0449\u0427\u0449\u0428',
			'\u0449\u0429\u0449\u042A',
			'\u0449\u042B\u0449\u042C',
			'\u0449\u042D\u0449\u042E',
			'\u0449\u042F\u0449\u0430',
			'\u0449\u0431\u0449\u0432',
			'\u0449\u0433\u0449\u0434',
			'\u0449\u0435\u0449\u0436',
			'\u0449\u0437\u0449\u0438',
			'\u0449\u0439\u0449\u043A',
			'\u0449\u043B\u0449\u043C',
			'\u0449\u043D\u0449\u043E',
			'\u0449\u043F\u0449\u0440',
			'\u0449\u0441\u0449\u0442',
			'\u0449\u0443\u0449\u0444',
			'\u0449\u0445\u0449\u0446',
			'\u0449\u0447\u0449\u0448',
			"\u044A'\u044B\u044C\x07\f",
			'\u044C\u044D\x07\r\u044D)',
			'\u044E\u044F	\u044F+\u0450',
			'\u0451\x07\f\u0451\u0452\x07	\u0452\u0453',
			'\x07\r\u0453-\u0454\u0455\x07',
			'\x7F\u0455\u0456\x07\u0106\u0456/',
			'\u0457\u0458\x07\x80\u0458\u0459\x07',
			'\u0106\u04591\u045A\u045B\x07',
			'y\u045B\u045C\x07\u045C\u045D\x07',
			'\xE9\u045D3\u045E\u045F\x07',
			'\b\u045F\u0460\x07\x89\u04605',
			'\u0461\u0462\x07C\u0462\u0464	',
			'\u0463\u0465,\u0464\u0463',
			'\u0464\u0465\u0465\u0466',
			'\u0466\u0468\u0318\u018D\u0467\u0469B"',
			'\u0468\u0467\u0468\u0469',
			'\u0469\u046B\u046A\u046C8',
			'\u046B\u046A\u046B\u046C',
			'\u046C\u0470\u046D\u046E\x07\x97',
			'\u046E\u046F\x07\x9A\u046F\u0471:',
			'\u0470\u046D\u0470\u0471',
			'\u04717\u0472\u0473\x07\x81',
			'\u0473\u0474\x07\u0178\u04749',
			'\u0475\u0476\x07\u015E\u0476\u0477<',
			'\u0477\u0478\x07\u015F\u0478;',
			'\u0479\u047E\u014C\xA7\u047A\u047B\x07\u015C',
			'\u047B\u047D\u014C\xA7\u047C\u047A',
			'\u047D\u0480\u047E\u047C',
			'\u047E\u047F\u047F=',
			'\u0480\u047E\u0481\u0482\x07\xDE',
			'\u0482\u0483\u0318\u018D\u0483?',
			'\u0484\u0485\x07K\u0485\u0487	\u0486',
			'\u0488(\u0487\u0486\u0487',
			'\u0488\u0488\u0489\u0489',
			'\u048B\u0318\u018D\u048A\u048C*\u048B',
			'\u048A\u048B\u048C\u048C',
			'A\u048D\u048E\x07N\u048E\u048F',
			'\x07\u0178\u048FC\u0490\u0492',
			'\x07C\u0491\u0493\x07\x8C\u0492\u0491',
			'\u0492\u0493\u0493\u0495',
			'\u0494\u0496\x07D\u0495\u0494',
			'\u0495\u0496\u0496\u0497',
			"\u0497\u0499\x07'\u0498\u049A",
			',\u0499\u0498\u0499\u049A',
			'\u049A\u049B\u049B\u04C5',
			`\u0270\u0139\u049C\u049D\x07
\u049D\u049F`,
			'\u0270\u0139\u049E\u04A0\u0144\xA3\u049F\u049E',
			'\u049F\u04A0\u04A0\u04A2',
			'\u04A1\u04A3\u015E\xB0\u04A2\u04A1',
			'\u04A2\u04A3\u04A3\u04A5',
			'\u04A4\u04A6\u0130\x99\u04A5\u04A4',
			'\u04A5\u04A6\u04A6\u04A8',
			'\u04A7\u04A9\u016C\xB7\u04A8\u04A7',
			'\u04A8\u04A9\u04A9\u04AB',
			'\u04AA\u04AC\u0146\xA4\u04AB\u04AA',
			'\u04AB\u04AC\u04AC\u04C6',
			'\u04AD\u04AE\x07\u015E\u04AE\u04AF',
			'\u0170\xB9\u04AF\u04B0\x07\u015F\u04B0\u04B2',
			'\u04B1\u04AD\u04B1\u04B2',
			'\u04B2\u04BE\u04B3\u04BD',
			'\u0130\x99\u04B4\u04BD\u0136\x9C\u04B5\u04BD',
			'\u0138\x9D\u04B6\u04BD\u0144\xA3\u04B7\u04BD',
			'\u015E\xB0\u04B8\u04BD\u0134\x9B\u04B9\u04BD',
			'\u016C\xB7\u04BA\u04BD\u0146\xA4\u04BB\u04BD',
			'\u012E\x98\u04BC\u04B3\u04BC\u04B4',
			'\u04BC\u04B5\u04BC\u04B6',
			'\u04BC\u04B7\u04BC\u04B8',
			'\u04BC\u04B9\u04BC\u04BA',
			'\u04BC\u04BB\u04BD\u04C0',
			'\u04BE\u04BC\u04BE\u04BF',
			'\u04BF\u04C3\u04C0\u04BE',
			'\u04C1\u04C2\x07\u04C2\u04C4',
			'\u01F6\xFC\u04C3\u04C1\u04C3\u04C4',
			'\u04C4\u04C6\u04C5\u049C',
			'\u04C5\u04B1\u04C6E',
			'\u04C7\u04C8\x07\xF7\u04C8\u04C9',
			"\x07'\u04C9\u04CF\xBA^\u04CA\u04CB\x07",
			')\u04CB\u04CC\x07\u015E\u04CC\u04CD',
			'\u0174\xBB\u04CD\u04CE\x07\u015F\u04CE\u04D0',
			'\u04CF\u04CA\u04CF\u04D0',
			'\u04D0G\u04D1\u04D2\x07',
			"K\u04D2\u04D4\x07'\u04D3\u04D5(",
			'\u04D4\u04D3\u04D4\u04D5',
			'\u04D5\u04D6\u04D6\u04D8\u0270\u0139',
			'\u04D7\u04D9\x07\xCA\u04D8\u04D7',
			'\u04D8\u04D9\u04D9\u04DB',
			'\u04DA\u04DC\f\u04DB\u04DA',
			'\u04DB\u04DC\u04DCI',
			"\u04DD\u04DE\x07E\u04DE\u04DF\x07'",
			"\u04DF\u04E0\u0270\u0139\u04E0\u04E1L'\u04E1",
			'\u04F7\u04E2\u04E3\x07E\u04E3',
			'\u04E4\x07\xB4\u04E4\u04E6\u0270\u0139\u04E5',
			'\u04E7\x07\u04E6\u04E5\u04E6',
			'\u04E7\u04E7\u04E8\u04E8',
			'\u04E9R*\u04E9\u04F7\u04EA\u04EB',
			'\x07E\u04EB\u04EC\x07\xB9\u04EC\u04ED',
			'\x07\xB4\u04ED\u04EE\u0270\u0139\u04EE\u04EF',
			'T+\u04EF\u04F7\u04F0\u04F1\x07',
			'E\u04F1\u04F2	\u04F2\u04F7V,',
			'\u04F3\u04F4\x07E\u04F4\u04F5\x07*\u04F5',
			'\u04F7\x88E\u04F6\u04DD\u04F6',
			'\u04E2\u04F6\u04EA\u04F6',
			'\u04F0\u04F6\u04F3\u04F7',
			'K\u04F8\u050A^0\u04F9\u050A',
			'|?\u04FA\u050Ap9\u04FB\u050At;\u04FC\u050A',
			'v<\u04FD\u050Ax=\u04FE\u050A~@\u04FF',
			'\u050A\x98M\u0500\u050A\x9AN\u0501\u050A',
			'P)\u0502\u050Af4\u0503\u050Ab2\u0504',
			'\u0506\u030A\u0186\u0505\u0504\u0505',
			'\u0506\u0506\u0507\u0507',
			'\u050AN(\u0508\u050A\xC0a\u0509\u04F8',
			'\u0509\u04F9\u0509\u04FA',
			'\u0509\u04FB\u0509\u04FC',
			'\u0509\u04FD\u0509\u04FE',
			'\u0509\u04FF\u0509\u0500',
			'\u0509\u0501\u0509\u0502',
			'\u0509\u0503\u0509\u0505',
			'\u0509\u0508\u050AM',
			'\u050B\u051A\x8AF\u050C\u051A',
			'\x96L\u050D\u051A\xA0Q\u050E\u051A\x86',
			'D\u050F\u051A\x9CO\u0510\u051A\xA2R',
			'\u0511\u051A\x8EH\u0512\u051A\x8CG\u0513',
			'\u051A\xBE`\u0514\u051Aj6\u0515\u051A',
			'l7\u0516\u051Ah5\u0517\u051A`1\u0518\u051A',
			'd3\u0519\u050B\u0519\u050C',
			'\u0519\u050D\u0519\u050E',
			'\u0519\u050F\u0519\u0510',
			'\u0519\u0511\u0519\u0512',
			'\u0519\u0513\u0519\u0514',
			'\u0519\u0515\u0519\u0516',
			'\u0519\u0517\u0519\u0518',
			'\u051AO\u051B\u051C\x07',
			'%\u051C\u051D\x07G\u051D\u051E\x07\u015E',
			'\u051E\u051F\u01AE\xD8\u051F\u0520\x07\u015F',
			'\u0520Q\u0521\u0527\x80',
			'A\u0522\u0527^0\u0523\u0527p9\u0524\u0527',
			'|?\u0525\u0527\u01F6\xFC\u0526\u0521',
			'\u0526\u0522\u0526\u0523',
			'\u0526\u0524\u0526\u0525',
			'\u0527S\u0528\u052B',
			'\x82B\u0529\u052B\x84C\u052A\u0528',
			'\u052A\u0529\u052BU',
			'\u052C\u0530X-\u052D\u0530Z.\u052E',
			'\u0530\\/\u052F\u052C\u052F\u052D',
			'\u052F\u052E\u0530W',
			'\u0531\u0532\u0318\u018D\u0532\u0533',
			'\x07\x9D\u0533\u0534\x07\x9A\u0534\u0535',
			':\u0535Y\u0536\u0537',
			'\u0318\u018D\u0537\u0538\x07\x9D\u0538\u0539\x07',
			'\u0101\u0539\u053A\u0104\x83\u053A[',
			'\u053B\u053C\u0318\u018D\u053C\u053D\x07',
			'\x9D\u053D\u053E\x07\x81\u053E\u053F\x07',
			'\u0178\u053F]\u0540\u0541\x07',
			'L\u0541\u0542\x07M\u0542\u0543\u0270',
			'\u0139\u0543_\u0544\u0545	',
			'\u0545\u0546\x07)\u0546\u0547\x07\u015E',
			'\u0547\u0548\u016E\xB8\u0548\u054A\x07\u015F',
			'\u0549\u054B*\u054A\u0549',
			'\u054A\u054B\u054Ba',
			'\u054C\u054F\x07\x88\u054D\u0550\u0194\xCB',
			'\u054E\u0550\u018A\xC6\u054F\u054D',
			'\u054F\u054E\u0550c',
			'\u0551\u0552\x07\xE3\u0552\u0554\x07)',
			'\u0553\u0555*\u0554\u0553',
			'\u0554\u0555\u0555e',
			'\u0556\u0557\x07K\u0557\u0558\x07\u0125',
			'\u0558\u0559\u0318\u018D\u0559g',
			'\u055A\u055C\x07F\u055B\u055D\x07G',
			'\u055C\u055B\u055C\u055D',
			'\u055D\u055E\u055E\u055F\u0318\u018D',
			'\u055F\u0560\u0318\u018D\u0560\u0562\u01D0\xE9',
			'\u0561\u0563\u01BE\xE0\u0562\u0561',
			'\u0562\u0563\u0563\u0566',
			'\u0564\u0565\x07N\u0565\u0567\x07\u0178',
			'\u0566\u0564\u0566\u0567',
			'\u0567\u0569\u0568\u056An8\u0569',
			'\u0568\u0569\u056A\u056A',
			'\u056C\u056B\u056D*\u056C',
			'\u056B\u056C\u056D\u056D',
			'i\u056E\u056F\x07\xE3\u056F',
			'\u0570\x07\xDD\u0570\u0572\x07\xEA\u0571',
			'\u0573\x07G\u0572\u0571\u0572',
			'\u0573\u0573\u0574\u0574',
			'\u0575\u0318\u018D\u0575\u0576\x07\x9D\u0576',
			'\u0579\u0148\xA5\u0577\u0578\x07N\u0578',
			'\u057A\x07\u0178\u0579\u0577\u0579',
			'\u057A\u057Ak\u057B',
			'\u057C\x07\xE3\u057C\u057D\x07\xDD\u057D',
			'\u057E\x07\x9D\u057E\u057F\u0148\xA5\u057F',
			'm\u0580\u0584\x07H\u0581\u0582',
			'\x07I\u0582\u0584\u0318\u018D\u0583\u0580',
			'\u0583\u0581\u0584o',
			'\u0585\u0587\x07\x88\u0586\u0588',
			',\u0587\u0586\u0587\u0588',
			'\u0588\u058A\u0589\u058B',
			'r:\u058A\u0589\u058B\u058C',
			'\u058C\u058A\u058C\u058D',
			'\u058Dq\u058E\u0590',
			'\u030A\u0186\u058F\u0591z>\u0590\u058F',
			'\u0590\u0591\u0591s',
			'\u0592\u0596\x07\xD9\u0593\u0595\u030A',
			'\u0186\u0594\u0593\u0595\u0598',
			'\u0596\u0594\u0596\u0597',
			'\u0597u\u0598\u0596',
			'\u0599\u059D\x07\xDA\u059A\u059C\u030A',
			'\u0186\u059B\u059A\u059C\u059F',
			'\u059D\u059B\u059D\u059E',
			'\u059Ew\u059F\u059D',
			'\u05A0\u05A4\x07\xDB\u05A1\u05A3\u030A',
			'\u0186\u05A2\u05A1\u05A3\u05A6',
			'\u05A4\u05A2\u05A4\u05A5',
			'\u05A5y\u05A6\u05A4',
			'\u05A7\u05A8\x07\x81\u05A8\u05A9\x07\u0178',
			'\u05A9{\u05AA\u05AC\x07K',
			'\u05AB\u05AD(\u05AC\u05AB',
			'\u05AC\u05AD\u05AD\u05AE',
			'\u05AE\u05B3\u030E\u0188\u05AF\u05B0\x07\u015C',
			'\u05B0\u05B2\u030E\u0188\u05B1\u05AF',
			'\u05B2\u05B5\u05B3\u05B1',
			'\u05B3\u05B4\u05B4\u05B7',
			'\u05B5\u05B3\u05B6\u05B8\x07\xCA',
			'\u05B7\u05B6\u05B7\u05B8',
			'\u05B8\u05BA\u05B9\u05BB\f',
			'\u05BA\u05B9\u05BA\u05BB',
			'\u05BB}\u05BC\u05BD\x07\x9D',
			'\u05BD\u05BE\x07\x9F\u05BE\u05C6\u0148\xA5',
			'\u05BF\u05C0\x07\x9E\u05C0\u05C2\x07\x9F',
			'\u05C1\u05C3(\u05C2\u05C1',
			'\u05C2\u05C3\u05C3\u05C4',
			'\u05C4\u05C6\u0148\xA5\u05C5\u05BC',
			'\u05C5\u05BF\u05C6\x7F',
			'\u05C7\u05C8\x07\x9D\u05C8\u05C9\x07\x9F',
			'\u05C9\u05D1\u0148\xA5\u05CA\u05CB\x07\x9E',
			'\u05CB\u05CD\x07\x9F\u05CC\u05CE(',
			'\u05CD\u05CC\u05CD\u05CE',
			'\u05CE\u05CF\u05CF\u05D1\u0148\xA5',
			'\u05D0\u05C7\u05D0\u05CA',
			'\u05D1\x81\u05D2\u05D5.',
			'\u05D3\u05D50\u05D4\u05D2',
			'\u05D4\u05D3\u05D5\x83',
			'\u05D6\u05D7\x07,\u05D7\x85',
			'\u05D8\u05D9\x07\x9D\u05D9\u05DA\x07\x96',
			'\u05DA\u05DE\x07\u0178\u05DB\u05DC\x07\x97',
			'\u05DC\u05DD\x07\x99\u05DD\u05DF\u0148\xA5',
			'\u05DE\u05DB\u05DE\u05DF',
			'\u05DF\u05E4\u05E0\u05E1\x07\x9D',
			'\u05E1\u05E2\x07\x99\u05E2\u05E4\u0148\xA5',
			'\u05E3\u05D8\u05E3\u05E0',
			'\u05E4\x87\u05E5\u05E6\u0318\u018D',
			'\u05E6\u05E7\x07$\u05E7\u05E9\u0270\u0139',
			'\u05E8\u05EA\u030A\u0186\u05E9\u05E8',
			'\u05E9\u05EA\u05EA\u05EB',
			'\u05EB\u05EC\x07,\u05EC\x89',
			'\u05ED\u05EE\x07\x9D\u05EE\u05EF\x07z',
			'\u05EF\u05F0\xC2b\u05F0\x8B',
			'\u05F1\u05F2\x07	\u05F2\u05F7\x07h',
			'\u05F3\u05F4\x07	\u05F4\u05F7\x07i\u05F5',
			'\u05F7\u0136\x9C\u05F6\u05F1\u05F6',
			'\u05F3\u05F6\u05F5\u05F7',
			'\x8D\u05F8\u05F9\x07\x9D\u05F9',
			'\u05FA\x07\xE6\u05FA\u05FB\x07\x81\u05FB',
			'\u05FC\x90I\u05FC\x8F\u05FD',
			'\u05FE\x07\u015E\u05FE\u05FF\x92J\u05FF',
			'\u0600\x07\u015F\u0600\x91\u0601',
			'\u0606\x94K\u0602\u0603\x07\u015C\u0603',
			'\u0605\x94K\u0604\u0602\u0605',
			'\u0608\u0606\u0604\u0606',
			'\u0607\u0607\x93\u0608',
			'\u0606\u0609\u060A\u01A0\xD1\u060A',
			'\u060B\x07\u0164\u060B\u060C\x07\u0178\u060C',
			'\x95\u060D\u060E\x07\x9D\u060E',
			'\u060F\x07\x81\u060F\u0610\x07\u0178\u0610',
			'\x97\u0611\u0617\u0138\x9D\u0612',
			'\u0613\x07	\u0613\u0617\x07\xE6\u0614',
			'\u0615\x07	\u0615\u06172\u0616\u0611',
			'\u0616\u0612\u0616\u0614',
			'\u0617\x99\u0618\u0619',
			'\x07\xFD\u0619\u061A\u030A\u0186\u061A\u061B',
			"\x07\x97\u061B\u061C\x07'\u061C\u061D",
			'\u0270\u0139\u061D\x9B\u061E\u061F',
			'\x07L\u061F\u0620\x07M\u0620\u0621',
			'\u030A\u0186\u0621\x9D\u0622\u0623\x07',
			'\xE3\u0623\u0624\x07\xDD\u0624\u0626\x07',
			'\xEA\u0625\u0627\x07G\u0626\u0625',
			'\u0626\u0627\u0627\u0628',
			'\u0628\u0629\u0318\u018D\u0629\u062A\x07',
			'\x9D\u062A\u062D\u0148\xA5\u062B\u062C\x07',
			'N\u062C\u062E\x07\u0178\u062D\u062B',
			'\u062D\u062E\u062E\x9F',
			'\u062F\u0630\x07\xE1\u0630\xA1',
			'\u0631\u0632\x07j\u0632\u0633\x07',
			'\u017D\u0633\u0634\x07k\u0634\xA3',
			'\u0635\u0639\xA6T\u0636\u0637\x07',
			'\x97\u0637\u0638\x07\x98\u0638\u063A\x07',
			',\u0639\u0636\u0639\u063A',
			'\u063A\u063D\u063B\u063C\x07',
			'\xA0\u063C\u063E\u0148\xA5\u063D\u063B',
			'\u063D\u063E\u063E\u0642',
			'\u063F\u0640\x07\xB6\u0640\u0641\x07',
			"'\u0641\u0643\u0270\u0139\u0642\u063F",
			'\u0642\u0643\u0643\u0647',
			'\u0644\u0645\x07g\u0645\u0646\x07',
			'\u0646\u0648\u017C\xBF\u0647\u0644',
			'\u0647\u0648\u0648\u064D',
			'\u0649\u064B\u0144\xA3\u064A\u0649',
			'\u064A\u064B\u064B\u064C',
			'\u064C\u064E\u015E\xB0\u064D\u064A',
			'\u064D\u064E\u064E\u0651',
			'\u064F\u0650\x07\x81\u0650\u0652',
			'\u0346\u01A4\u0651\u064F\u0651\u0652',
			'\u0652\u0654\u0653\u0655',
			'\u0146\xA4\u0654\u0653\u0654\u0655',
			'\u0655\u0657\u0656\u0658',
			'\u012E\x98\u0657\u0656\u0657\u0658',
			'\u0658\xA5\u0659\u065A\x07',
			'C\u065A\u065B\x07*\u065B\u065C\u0318',
			"\u018D\u065C\u065D\x07$\u065D\u065E\x07'",
			'\u065E\u065F\u0270\u0139\u065F\u0660\u017C\xBF',
			'\u0660\u0661\x07\u0661\u0662\x07\u0178',
			'\u0662\xA7\u0663\u0664\x07K',
			'\u0664\u0665\x07*\u0665\u0666\u0318\u018D',
			'\u0666\u0667\x07$\u0667\u0668\u0270\u0139',
			'\u0668\xA9\u0669\u066D\xACW',
			'\u066A\u066B\x07\xEA\u066B\u066C\x07)',
			'\u066C\u066E\xAEX\u066D\u066A',
			'\u066D\u066E\u066E\u0670',
			'\u066F\u0671\xB4[\u0670\u066F',
			'\u0670\u0671\u0671\xAB',
			'\u0672\u0673\x07C\u0673\u0674\x07\u0159',
			'\u0674\u0675\x07*\u0675\u0677\x07$',
			"\u0676\u0678\x07'\u0677\u0676",
			'\u0677\u0678\u0678\u0679',
			'\u0679\u067A\u0270\u0139\u067A\xAD',
			'\u067B\u067C\x07\u015E\u067C\u067D\xB0Y',
			'\u067D\u067E\x07\u015F\u067E\xAF',
			'\u067F\u0684\xB2Z\u0680\u0681\x07\u015C',
			'\u0681\u0683\xB2Z\u0682\u0680',
			'\u0683\u0686\u0684\u0682',
			'\u0684\u0685\u0685\xB1',
			'\u0686\u0684\u0687\u0689\u0318\u018D',
			'\u0688\u068A\xB4[\u0689\u0688',
			'\u0689\u068A\u068A\xB3',
			'\u068B\u068C\x07\xDF\u068C\u068D\u0148\xA5',
			'\u068D\xB5\u068E\u0692\xB8]',
			'\u068F\u0690\x07\xEA\u0690\u0691\x07)',
			'\u0691\u0693\xAEX\u0692\u068F',
			'\u0692\u0693\u0693\xB7',
			'\u0694\u0695\x07K\u0695\u0696\x07\u0159',
			'\u0696\u0697\x07*\u0697\u0699\x07$\u0698',
			"\u069A\x07'\u0699\u0698\u0699",
			'\u069A\u069A\u069B\u069B',
			'\u069C\u0270\u0139\u069C\xB9\u069D',
			'\u069F\u0270\u0139\u069E\u06A0\u030A\u0186\u069F',
			'\u069E\u069F\u06A0\u06A0',
			'\xBB\u06A1\u06A2\x07\x07\u06A2',
			'\u06A3\x07\u013A\u06A3\xBD\u06A4',
			'\u06A5\x07\u0103\u06A5\u06A7\x07\u0178\u06A6',
			'\u06A8\xBC_\u06A7\u06A6\u06A7',
			'\u06A8\u06A8\u06AD\u06A9',
			'\u06AA\x07\x97\u06AA\u06AB\x07\u06AB',
			'\u06AC\x07\x9F\u06AC\u06AE\u0148\xA5\u06AD',
			'\u06A9\u06AD\u06AE\u06AE',
			'\xBF\u06AF\u06B0\x07\x9D\u06B0',
			'\u06B1\x07\u0101\u06B1\u06B2\u0104\x83\u06B2',
			'\xC1\u06B3\u06B4\x07{\u06B4',
			'\u06B5\x07\u0178\u06B5\u06B6\x07|\u06B6',
			'\u06B7\x07\u0178\u06B7\u06B8\x07\x96\u06B8',
			'\u06BD\x07\u0178\u06B9\u06BA\x07}\u06BA',
			'\u06BB\x07\u0178\u06BB\u06BC\x07~\u06BC',
			'\u06BE\x07\u0178\u06BD\u06B9\u06BD',
			'\u06BE\u06BE\u06C1\u06BF',
			'\u06C1\u0164\xB3\u06C0\u06B3\u06C0',
			'\u06BF\u06C1\xC3\u06C2',
			'\u06C3\x07{\u06C3\u06C4\x07\u0178\u06C4',
			'\u06C5\x07\x96\u06C5\u06C6\x07\u0178\u06C6',
			'\xC5\u06C7\u06CA\u0318\u018D\u06C8',
			'\u06C9\x07\u015A\u06C9\u06CB\u0318\u018D\u06CA',
			'\u06C8\u06CA\u06CB\u06CB',
			'\u06D9\u06CC\u06D6\u0318\u018D\u06CD',
			'\u06D2\x07\u015A\u06CE\u06D3\x07\xA2\u06CF',
			'\u06D3\x07v\u06D0\u06D3\x07\xA1\u06D1',
			'\u06D3\u0318\u018D\u06D2\u06CE\u06D2',
			'\u06CF\u06D2\u06D0\u06D2',
			'\u06D1\u06D3\u06D5\u06D4',
			'\u06CD\u06D5\u06D8\u06D6',
			'\u06D4\u06D6\u06D7\u06D7',
			'\u06DA\u06D8\u06D6\u06D9',
			'\u06CC\u06D9\u06DA\u06DA',
			'\xC7\u06DB\u06DD\xC6d\u06DC',
			'\u06DE\u030A\u0186\u06DD\u06DC\u06DD',
			'\u06DE\u06DE\xC9\u06DF',
			'\u06E1\u0270\u0139\u06E0\u06E2\u030A\u0186\u06E1',
			'\u06E0\u06E1\u06E2\u06E2',
			'\u06E4\u06E3\u06E5\u0178\xBD\u06E4',
			'\u06E3\u06E4\u06E5\u06E5',
			'\xCB\u06E6\u06F4	\u06E7',
			'\u06E9	\u06E8\u06EA\x07\x92\u06E9',
			'\u06E8\u06E9\u06EA\u06EA',
			'\u06EB\u06EB\u06F5\u0318\u018D\u06EC',
			'\u06EE\x07\x8D\u06ED\u06EF\x07\x92\u06EE',
			'\u06ED\u06EE\u06EF\u06EF',
			'\u06F0\u06F0\u06F5\u0316\u018C\u06F1',
			'\u06F2	\x07\u06F2\u06F5\xCAf\u06F3\u06F5',
			'\xCAf\u06F4\u06E7\u06F4\u06EC',
			'\u06F4\u06F1\u06F4\u06F3',
			'\u06F5\xCD\u06F6\u06F7',
			"\x07\xCC\u06F7\u06F8\x07'\u06F8\u0705",
			'\u0308\u0185\u06F9\u06FA\x07\xDC\u06FA\u0701',
			'\x07\xDD\u06FB\u0702\x07\xF8\u06FC\u06FD',
			'\x07\xEA\u06FD\u06FF\x07)\u06FE\u0700',
			'\u0174\xBB\u06FF\u06FE\u06FF\u0700',
			'\u0700\u0702\u0701\u06FB',
			'\u0701\u06FC\u0701\u0702',
			'\u0702\u0706\u0703\u0704',
			'\x07\u0121\u0704\u0706\x07>\u0705\u06F9',
			'\u0705\u0703\u0706\xCF',
			'\u0707\u0708\x07.\u0708\u070B',
			`	\b\u0709\u070A\x07
\u070A\u070C\u012C`,
			'\x97\u070B\u0709\u070B\u070C',
			'\u070C\u0783\u070D\u070E\x07.',
			'\u070E\u0711\x07(\u070F\u0710		',
			'\u0710\u0712\u0318\u018D\u0711\u070F',
			'\u0711\u0712\u0712\u0716',
			`\u0713\u0714\x07
\u0714\u0717\u012C\x97`,
			'\u0715\u0717\u012C\x97\u0716\u0713',
			'\u0716\u0715\u0716\u0717',
			'\u0717\u0783\u0718\u0719\x07.',
			'\u0719\u071C\x07\xB5\u071A\u071B		\u071B',
			'\u071D\u0318\u018D\u071C\u071A\u071C',
			'\u071D\u071D\u0721\u071E',
			`\u071F\x07
\u071F\u0722\u012C\x97\u0720`,
			'\u0722\u012C\x97\u0721\u071E\u0721',
			'\u0720\u0721\u0722\u0722',
			'\u0783\u0723\u0724\x07.\u0724',
			'\u0725\x07\xB9\u0725\u0728\x07\xB5\u0726',
			'\u0727		\u0727\u0729\u0318\u018D\u0728\u0726',
			'\u0728\u0729\u0729\u072D',
			`\u072A\u072B\x07
\u072B\u072E`,
			'\u012C\x97\u072C\u072E\u012C\x97\u072D\u072A',
			'\u072D\u072C\u072D\u072E',
			'\u072E\u0783\u072F\u0730',
			'\x07.\u0730\u0731\x07)\u0731\u0732		',
			'\u0732\u0735\u0270\u0139\u0733\u0734		',
			'\u0734\u0736\u0318\u018D\u0735\u0733',
			'\u0735\u0736\u0736\u073A',
			`\u0737\u0738\x07
\u0738\u073B\u012C\x97`,
			'\u0739\u073B\u012C\x97\u073A\u0737',
			'\u073A\u0739\u073A\u073B',
			'\u073B\u0783\u073C\u073D\x07.',
			`\u073D\u0741\x07-\u073E\u073F\x07
\u073F`,
			'\u0742\u012A\x96\u0740\u0742\u012A\x96\u0741',
			'\u073E\u0741\u0740\u0741',
			'\u0742\u0742\u0783\u0743',
			'\u0744\x07.\u0744\u0745\x07&\u0745\u0747',
			'\u0270\u0139\u0746\u0748\u030A\u0186\u0747\u0746',
			'\u0747\u0748\u0748\u0783',
			'\u0749\u074A\x07.\u074A\u074F',
			'\x07C\u074B\u074C	\u074C\u0750',
			"\u0318\u018D\u074D\u074E\x07'\u074E\u0750",
			'\u0270\u0139\u074F\u074B\u074F\u074D',
			'\u0750\u0783\u0751\u0752\x07',
			".\u0752\u0753\x07'\u0753\u0756\x07\x92",
			'\u0754\u0755		\u0755\u0757\u0318\u018D',
			'\u0756\u0754\u0756\u0757',
			`\u0757\u0758\u0758\u0759\x07
`,
			'\u0759\u075B\u012C\x97\u075A\u075C\u030A\u0186',
			'\u075B\u075A\u075B\u075C',
			'\u075C\u0783\u075D\u075E\x07.',
			'\u075E\u075F\x07\x9F\u075F\u0763\u0270\u0139',
			'\u0760\u0761\x07\u015E\u0761\u0762\x07\u0178',
			'\u0762\u0764\x07\u015F\u0763\u0760',
			'\u0763\u0764\u0764\u0783',
			'\u0765\u0766\x07.\u0766\u0772\x07\xC1',
			'\u0767\u0768	\u0768\u076A\u0318\u018D',
			'\u0769\u076B\x07\x92\u076A\u0769',
			'\u076A\u076B\u076B\u0773',
			'\u076C\u076E\xC8e\u076D\u076C',
			'\u076D\u076E\u076E\u0770',
			'\u076F\u0771\x07\x92\u0770\u076F',
			'\u0770\u0771\u0771\u0773',
			'\u0772\u0767\u0772\u076D',
			'\u0773\u0783\u0774\u0775\x07.',
			'\u0775\u0783\x07\u0104\u0776\u0777\x07.',
			'\u0777\u0783\x07\u0105\u0778\u0779\x07.',
			'\u0779\u077A\x07\u0109\u077A\u0783\x07\u0178',
			'\u077B\u077C\x07.\u077C\u0780\x07\u013B',
			'\u077D\u077E\x07\u013C\u077E\u0781\u0318\u018D',
			'\u077F\u0781\x07\u013E\u0780\u077D',
			'\u0780\u077F\u0781\u0783',
			'\u0782\u0707\u0782\u070D',
			'\u0782\u0718\u0782\u0723',
			'\u0782\u072F\u0782\u073C',
			'\u0782\u0743\u0782\u0749',
			'\u0782\u0751\u0782\u075D',
			'\u0782\u0765\u0782\u0774',
			'\u0782\u0776\u0782\u0778',
			'\u0782\u077B\u0783\xD1',
			"\u0784\u0785\x07\xC0\u0785\u0786\x07'",
			'\u0786\u0788\u0270\u0139\u0787\u0789\u030A\u0186',
			'\u0788\u0787\u0788\u0789',
			'\u0789\u078A\u078A\u078B\xD6l',
			'\u078B\xD3\u078C\u078D\x07\xC0',
			'\u078D\u078E	\u078E\u078F\u0318\u018D',
			'\u078F\u0790\xD6l\u0790\xD5',
			`\u0791\u0792	
\u0792\xD7`,
			"\u0793\u0794\x07\xC2\u0794\u0795\x07'",
			'\u0795\u0797\u0270\u0139\u0796\u0798\u030A\u0186',
			'\u0797\u0796\u0797\u0798',
			'\u0798\xD9\u0799\u079A\x07\xC2',
			'\u079A\u079B	\u079B\u079C\u0318\u018D',
			'\u079C\xDB\u079D\u079E\x07C',
			'\u079E\u079F\x07\xFA\u079F\u07A0\u0318\u018D',
			'\u07A0\xDD\u07A1\u07A2\x07K',
			'\u07A2\u07A3\x07\xFA\u07A3\u07A4\u0318\u018D',
			'\u07A4\xDF\u07A5\u07A6\x07\xBC',
			'\u07A6\u07A8\xFC\x7F\u07A7\u07A9\xF6|',
			'\u07A8\u07A7\u07A8\u07A9',
			'\u07A9\u07AA\u07AA\u07AB\x07M',
			'\u07AB\u07AD\u0102\x82\u07AC\u07AE\u0106\x84',
			'\u07AD\u07AC\u07AD\u07AE',
			'\u07AE\xE1\u07AF\u07B1\x07\xBD',
			'\u07B0\u07B2\u0108\x85\u07B1\u07B0',
			'\u07B1\u07B2\u07B2\u07B3',
			'\u07B3\u07B5\xFC\x7F\u07B4\u07B6\xF6|',
			'\u07B5\u07B4\u07B5\u07B6',
			'\u07B6\u07B7\u07B7\u07B8\x07',
			'\u07B8\u07B9\u0102\x82\u07B9\xE3',
			'\u07BA\u07BC\x07\xBC\u07BB\u07BD\x07\xFA',
			'\u07BC\u07BB\u07BC\u07BD',
			'\u07BD\u07BE\u07BE\u07C3\u0318\u018D',
			'\u07BF\u07C0\x07\u015C\u07C0\u07C2\u0318\u018D',
			'\u07C1\u07BF\u07C2\u07C5',
			'\u07C3\u07C1\u07C3\u07C4',
			'\u07C4\u07C6\u07C5\u07C3',
			'\u07C6\u07C7\x07M\u07C7\u07C9\u0102\x82',
			'\u07C8\u07CA\u010C\x87\u07C9\u07C8',
			'\u07C9\u07CA\u07CA\xE5',
			'\u07CB\u07CD\x07\xBD\u07CC\u07CE\u010A\x86',
			'\u07CD\u07CC\u07CD\u07CE',
			'\u07CE\u07D0\u07CF\u07D1\x07\xFA',
			'\u07D0\u07CF\u07D0\u07D1',
			'\u07D1\u07D2\u07D2\u07D7\u0318\u018D',
			'\u07D3\u07D4\x07\u015C\u07D4\u07D6\u0318\u018D',
			'\u07D5\u07D3\u07D6\u07D9',
			'\u07D7\u07D5\u07D7\u07D8',
			'\u07D8\u07DA\u07D9\u07D7',
			'\u07DA\u07DB\x07\u07DB\u07DC\u0102\x82',
			'\u07DC\xE7\u07DD\u07DE\x07.',
			'\u07DE\u07DF\x07\xFA\u07DF\u07E0\x07\xBC',
			'\u07E0\u07E1\u0104\x83\u07E1\xE9',
			'\u07E2\u07E3\x07.\u07E3\u07E4\x07\xFB',
			'\u07E4\xEB\u07E5\u07E6\x07.',
			'\u07E6\u07E7\x07\xEF\u07E7\u07E8\x07\xFB',
			'\u07E8\xED\u07E9\u07EA\x07\x9D',
			'\u07EA\u07EE\x07\xFA\u07EB\u07EF\x07',
			'\u07EC\u07EF\x07\u07ED\u07EF\u0318\u018D',
			'\u07EE\u07EB\u07EE\u07EC',
			'\u07EE\u07ED\u07EF\xEF',
			'\u07F0\u07F1\x07.\u07F1\u07F3\x07\xBC',
			'\u07F2\u07F4\u0104\x83\u07F3\u07F2',
			'\u07F3\u07F4\u07F4\u07F7',
			'\u07F5\u07F6\x07$\u07F6\u07F8\xF4{\u07F7',
			'\u07F5\u07F7\u07F8\u07F8',
			'\xF1\u07F9\u07FA\x07.\u07FA',
			'\u07FB\x07\u0102\u07FB\u07FC\u0318\u018D\u07FC',
			'\xF3\u07FD\u0800\x07\u07FE',
			'\u0800\xFA~\u07FF\u07FD\u07FF',
			'\u07FE\u0800\xF5\u0801',
			'\u0802\x07$\u0802\u0803\xF8}\u0803\xF7',
			'\u0804\u0805	\u0805\u0812',
			"\u0318\u018D\u0806\u0808\x07'\u0807\u0806",
			'\u0807\u0808\u0808\u0809',
			'\u0809\u080B\u0270\u0139\u080A\u080C',
			'\u030A\u0186\u080B\u080A\u080B\u080C',
			'\u080C\u0812\u080D\u080E',
			'\x07\xFE\u080E\u0812\x07\u0178\u080F\u0810',
			'\x07\xFF\u0810\u0812\u0318\u018D\u0811\u0804',
			'\u0811\u0807\u0811\u080D',
			'\u0811\u080F\u0812\xF9',
			'\u0813\u0814	\u0814\u0827',
			"\u0318\u018D\u0815\u0817\x07'\u0816\u0815",
			'\u0816\u0817\u0817\u0818',
			'\u0818\u081D\u0270\u0139\u0819\u081A',
			'\x07\u015E\u081A\u081B\u0174\xBB\u081B\u081C',
			'\x07\u015F\u081C\u081E\u081D\u0819',
			'\u081D\u081E\u081E\u0820',
			'\u081F\u0821\u030A\u0186\u0820\u081F',
			'\u0820\u0821\u0821\u0827',
			'\u0822\u0823\x07\xFE\u0823\u0827',
			'\x07\u0178\u0824\u0825\x07\xFF\u0825\u0827',
			'\u0318\u018D\u0826\u0813\u0826\u0816',
			'\u0826\u0822\u0826\u0824',
			'\u0827\xFB\u0828\u082D',
			'\xFE\x80\u0829\u082A\x07\u015C\u082A\u082C',
			'\xFE\x80\u082B\u0829\u082C\u082F',
			'\u082D\u082B\u082D\u082E',
			'\u082E\xFD\u082F\u082D',
			'\u0830\u0835\u0100\x81\u0831\u0832',
			'\x07\u015E\u0832\u0833\u0174\xBB\u0833\u0834',
			'\x07\u015F\u0834\u0836\u0835\u0831',
			'\u0835\u0836\u0836\xFF',
			'\u0837\u0838	\v\u0838\u0101',
			'\u0839\u083E\u0104\x83\u083A\u083B',
			'\x07\u015C\u083B\u083D\u0104\x83\u083C\u083A',
			'\u083D\u0840\u083E\u083C',
			'\u083E\u083F\u083F\u0103',
			'\u0840\u083E\u0841\u0842',
			'\x07\xF9\u0842\u0848\u031C\u018F\u0843\u0844',
			'\x07\u0844\u0848\u031C\u018F\u0845\u0846',
			'\x07\xFA\u0846\u0848\u0318\u018D\u0847\u0841',
			'\u0847\u0843\u0847\u0845',
			'\u0848\u0105\u0849\u084A',
			'\x07\x97\u084A\u084B\x07\xBC\u084B\u084C',
			'\x07\xE0\u084C\u0107\u084D\u084E',
			'\x07\xBC\u084E\u084F\x07\xE0\u084F\u0850',
			'\x07\xEA\u0850\u0109\u0851\u0852',
			'\x07\u0100\u0852\u0853\x07\xE0\u0853\u0854',
			'\x07\xEA\u0854\u010B\u0855\u0856',
			'\x07\x97\u0856\u0857\x07\u0100\u0857\u0858',
			'\x07\xE0\u0858\u010D\u0859\u085B',
			'\x07/\u085A\u085C\x070\u085B\u085A',
			'\u085B\u085C\u085C\u0866',
			"\u085D\u085E\x07'\u085E\u0861",
			'\u0270\u0139\u085F\u0860	\f\u0860\u0862\x07&',
			'\u0861\u085F\u0861\u0862',
			'\u0862\u0867\u0863\u0865\u030A\u0186',
			'\u0864\u0863\u0864\u0865',
			'\u0865\u0867\u0866\u085D',
			'\u0866\u0864\u0867\u010F',
			'\u0868\u086D\u0112\x8A\u0869\u086A\x07\u015C',
			'\u086A\u086C\u0112\x8A\u086B\u0869',
			'\u086C\u086F\u086D\u086B',
			'\u086D\u086E\u086E\u0111',
			'\u086F\u086D\u0870\u0871\u0114\x8B',
			'\u0871\u0872\x07\u0178\u0872\u0113',
			'\u0873\u0874	\r\u0874\u0115',
			'\u0875\u0877\x07C\u0876\u0878\x07\x8C',
			'\u0877\u0876\u0877\u0878',
			'\u0878\u0879\u0879\u087A\x07\x8D',
			'\u087A\u087B\u031A\u018E\u087B\u087C\x07',
			'\u087C\u087F\x07\u0178\u087D\u087E\x074',
			'\u087E\u0880\u0110\x89\u087F\u087D',
			'\u087F\u0880\u0880\u0117',
			'\u0881\u0883\x07K\u0882\u0884\x07\x8C',
			'\u0883\u0882\u0883\u0884',
			'\u0884\u0885\u0885\u0887\x07\x8D',
			'\u0886\u0888(\u0887\u0886',
			'\u0887\u0888\u0888\u0889',
			'\u0889\u088A\u031A\u018E\u088A\u0119',
			'\u088B\u088C\x07\u010B\u088C\u088D\x07\x8D',
			'\u088D\u011B\u088E\u088F\x07C',
			'\u088F\u0890\x07\x8C\u0890\u0891\x07\x8E',
			'\u0891\u0892\x07\u017E\u0892\u0894\x07\u015E',
			'\u0893\u0895\u016E\xB8\u0894\u0893',
			'\u0894\u0895\u0895\u0896',
			'\u0896\u0897\x07\u015F\u0897\u0898\u02F8\u017D',
			'\u0898\u011D\u0899\u089A\x07K',
			'\u089A\u089B\x07\x8C\u089B\u089D\x07\x8E',
			'\u089C\u089E(\u089D\u089C',
			'\u089D\u089E\u089E\u089F',
			'\u089F\u08A0\x07\u017E\u08A0\u011F',
			'\u08A1\u08A3\x07C\u08A2\u08A44\x1B\u08A3',
			'\u08A2\u08A3\u08A4\u08A4',
			'\u08A5\u08A5\u08A7\x07\xB4\u08A6',
			'\u08A8,\u08A7\u08A6\u08A7',
			'\u08A8\u08A8\u08A9\u08A9',
			'\u08AE\u0270\u0139\u08AA\u08AB\x07\u015E\u08AB',
			'\u08AC\u01A8\xD5\u08AC\u08AD\x07\u015F\u08AD',
			'\u08AF\u08AE\u08AA\u08AE',
			'\u08AF\u08AF\u08B1\u08B0',
			'\u08B2\u012E\x98\u08B1\u08B0\u08B1',
			'\u08B2\u08B2\u08B4\u08B3',
			'\u08B5\u0124\x93\u08B4\u08B3\u08B4',
			'\u08B5\u08B5\u08B7\u08B6',
			'\u08B8\u0146\xA4\u08B7\u08B6\u08B7',
			'\u08B8\u08B8\u08B9\u08B9',
			'\u08BA\x07\u08BA\u08BB\u01F6\xFC\u08BB',
			'\u0121\u08BC\u08BD\x07C\u08BD',
			'\u08BE\x07\xB9\u08BE\u08C0\x07\xB4\u08BF',
			'\u08C1,\u08C0\u08BF\u08C0',
			'\u08C1\u08C1\u08C2\u08C2',
			'\u08C4\u0270\u0139\u08C3\u08C50\u08C4',
			'\u08C3\u08C4\u08C5\u08C5',
			'\u08C7\u08C6\u08C8\u012E\x98\u08C7',
			'\u08C6\u08C7\u08C8\u08C8',
			'\u08CA\u08C9\u08CB\u0144\xA3\u08CA',
			'\u08C9\u08CA\u08CB\u08CB',
			'\u08CD\u08CC\u08CE\u015E\xB0\u08CD',
			'\u08CC\u08CD\u08CE\u08CE',
			'\u08D0\u08CF\u08D1\u016C\xB7\u08D0',
			'\u08CF\u08D0\u08D1\u08D1',
			'\u08D3\u08D2\u08D4\u0146\xA4\u08D3',
			'\u08D2\u08D3\u08D4\u08D4',
			'\u08D5\u08D5\u08D6\x07\u08D6',
			'\u08D7\u01F6\xFC\u08D7\u0123\u08D8',
			'\u08D9\x07g\u08D9\u08DA\x07$\u08DA\u08DB',
			'\x07\u015E\u08DB\u08DC\u0174\xBB\u08DC\u08DD',
			'\x07\u015F\u08DD\u0125\u08DE\u08DF',
			'\x07K\u08DF\u08E1\x07\xB4\u08E0\u08E2',
			'(\u08E1\u08E0\u08E1\u08E2',
			'\u08E2\u08E3\u08E3\u08E4',
			'\u0272\u013A\u08E4\u0127\u08E5\u08E6',
			'\x07K\u08E6\u08E7\x07\xB9\u08E7\u08E9',
			'\x07\xB4\u08E8\u08EA(\u08E9\u08E8',
			'\u08E9\u08EA\u08EA\u08EB',
			'\u08EB\u08EC\u0272\u013A\u08EC\u0129',
			'\u08ED\u08F0\u031A\u018E\u08EE\u08F0',
			'\x07\u0178\u08EF\u08ED\u08EF\u08EE',
			'\u08F0\u012B\u08F1\u08F4',
			'\u0318\u018D\u08F2\u08F4\x07\u0178\u08F3\u08F1',
			'\u08F3\u08F2\u08F4\u012D',
			'\u08F5\u08F6\x07N\u08F6\u08F7',
			'\x07\u0178\u08F7\u012F\u08F8\u08F9',
			'\x074\u08F9\u08FA\u0132\x9A\u08FA\u0131',
			'\u08FB\u08FC	\u08FC\u0133',
			'\u08FD\u08FE\x07g\u08FE\u08FF',
			'\x07\u08FF\u0900\x07\u015E\u0900\u0905',
			'\u01B6\xDC\u0901\u0902\x07\u015C\u0902\u0904',
			'\u01B6\xDC\u0903\u0901\u0904\u0907',
			'\u0905\u0903\u0905\u0906',
			'\u0906\u0908\u0907\u0905',
			'\u0908\u0909\x07\u015F\u0909\u0135',
			'\u090A\u090B\x07h\u090B\u090C',
			'\x07\u090C\u090D\x07\u015E\u090D\u090E',
			'\u0174\xBB\u090E\u0915\x07\u015F\u090F\u0910',
			'\x07i\u0910\u0911\x07\u0911\u0912',
			'\x07\u015E\u0912\u0913\u017A\xBE\u0913\u0914',
			'\x07\u015F\u0914\u0916\u0915\u090F',
			'\u0915\u0916\u0916\u0917',
			'\u0917\u0918\x07j\u0918\u0919',
			'\x07\u017D\u0919\u091A\x07k\u091A\u0137',
			'\u091B\u091C\x07\xE6\u091C\u091D',
			'\x07\u091D\u091E\x07\u015E\u091E\u091F',
			'\u0174\xBB\u091F\u0920\x07\u015F\u0920\u0921',
			'\x07$\u0921\u0922\x07\u015E\u0922\u0923',
			'\u0196\xCC\u0923\u0925\x07\u015F\u0924\u0926',
			'2\u0925\u0924\u0925\u0926',
			'\u0926\u0139\u0927\u092A',
			'\u0140\xA1\u0928\u092A\u0142\xA2\u0929\u0927',
			'\u0929\u0928\u092A\u013B',
			'\u092B\u092C\x07\xD5\u092C\u092D',
			'\x07\u0178\u092D\u013D\u092E\u092F',
			'\x07\xD6\u092F\u0930\x07\u0178\u0930\u013F',
			'\u0931\u0932\x07l\u0932\u0933',
			'\x07n\u0933\u0934\x07\x96\u0934\u0938',
			'\x07\u0178\u0935\u0936\x07\x97\u0936\u0937',
			'\x07\x99\u0937\u0939\u0148\xA5\u0938\u0935',
			'\u0938\u0939\u0939\u0141',
			'\u093A\u093B\x07l\u093B\u093C',
			'\x07n\u093C\u093E\x07o\u093D\u093F',
			'\u0152\xAA\u093E\u093D\u093E\u093F',
			'\u093F\u0941\u0940\u0942',
			'\u0156\xAC\u0941\u0940\u0941\u0942',
			'\u0942\u0944\u0943\u0945',
			'\u0158\xAD\u0944\u0943\u0944\u0945',
			'\u0945\u0947\u0946\u0948',
			'\u015A\xAE\u0947\u0946\u0947\u0948',
			'\u0948\u094A\u0949\u094B',
			'\u015C\xAF\u094A\u0949\u094A\u094B',
			'\u094B\u0143\u094C\u094F',
			'\u0142\xA2\u094D\u094F\u0140\xA1\u094E\u094C',
			'\u094E\u094D\u094F\u0145',
			'\u0950\u0951\x07\x9F\u0951\u0952',
			'\u0148\xA5\u0952\u0147\u0953\u0954\x07',
			'\u015E\u0954\u0955\u014A\xA6\u0955\u0956\x07',
			'\u015F\u0956\u0149\u0957\u095C',
			'\u014C\xA7\u0958\u0959\x07\u015C\u0959\u095B',
			'\u014C\xA7\u095A\u0958\u095B\u095E',
			'\u095C\u095A\u095C\u095D',
			'\u095D\u0968\u095E\u095C',
			'\u095F\u0964\u0150\xA9\u0960\u0961\x07',
			'\u015C\u0961\u0963\u0150\xA9\u0962\u0960',
			'\u0963\u0966\u0964\u0962',
			'\u0964\u0965\u0965\u0968',
			'\u0966\u0964\u0967\u0957',
			'\u0967\u095F\u0968\u014B',
			'\u0969\u096A\u0150\xA9\u096A\u096B\x07',
			'\u0164\u096B\u096C\u014E\xA8\u096C\u014D',
			'\u096D\u0971\x07\u017D\u096E\u0971',
			'\u0304\u0183\u096F\u0971\x07\u0178\u0970\u096D',
			'\u0970\u096E\u0970\u096F',
			'\u0971\u014F\u0972\u0977',
			'\u0318\u018D\u0973\u0974\x07\u015A\u0974\u0976',
			'\u0318\u018D\u0975\u0973\u0976\u0979',
			'\u0977\u0975\u0977\u0978',
			'\u0978\u097C\u0979\u0977',
			'\u097A\u097C\x07\u0178\u097B\u0972',
			'\u097B\u097A\u097C\u0151',
			'\u097D\u097E\x07p\u097E\u097F\x07',
			'q\u097F\u0980\x07\u0980\u0982\x07',
			'\u0178\u0981\u0983\u0154\xAB\u0982\u0981',
			'\u0982\u0983\u0983\u0153',
			'\u0984\u0985\x07r\u0985\u0986\x07',
			'\u0986\u0987\x07\u0178\u0987\u0155',
			'\u0988\u0989\x07s\u0989\u098A\x07',
			't\u098A\u098B\x07q\u098B\u098C\x07',
			'\u098C\u098D\x07\u0178\u098D\u0157',
			'\u098E\u098F\x07d\u098F\u0990\x07u',
			'\u0990\u0991\x07q\u0991\u0992\x07',
			'\u0992\u0993\x07\u0178\u0993\u0159',
			'\u0994\u0995\x07x\u0995\u0996\x07q',
			'\u0996\u0997\x07\u0997\u0998\x07\u0178',
			'\u0998\u015B\u0999\u099A\x07B',
			'\u099A\u099B\x07\xA3\u099B\u099C\x07',
			'\u099C\u099D\x07\u0178\u099D\u015D',
			'\u099E\u09A2\u0166\xB4\u099F\u09A2\u0160\xB1',
			'\u09A0\u09A2\u0162\xB2\u09A1\u099E',
			'\u09A1\u099F\u09A1\u09A0',
			'\u09A2\u015F\u09A3\u09A4\x07y',
			'\u09A4\u09A5\x07\u09A5\u09A9\x07\u0178',
			'\u09A6\u09A7\x07\x97\u09A7\u09A8\x07\x99',
			'\u09A8\u09AA\u0148\xA5\u09A9\u09A6',
			'\u09A9\u09AA\u09AA\u0161',
			'\u09AB\u09AC\x07y\u09AC\u09AD\x07',
			'\u09AD\u09AE\u0164\xB3\u09AE\u0163',
			'\u09AF\u09B0	\u09B0\u0165',
			'\u09B1\u09B2\x07y\u09B2\u09B3\x07',
			'\u09B3\u09B4\u0168\xB5\u09B4\u09B9\u016A\xB6',
			'\u09B5\u09B6\x07}\u09B6\u09B7\x07\u0178',
			'\u09B7\u09B8\x07~\u09B8\u09BA\x07\u0178',
			'\u09B9\u09B5\u09B9\u09BA',
			'\u09BA\u0167\u09BB\u09BC\x07{',
			'\u09BC\u09BD\x07\u0178\u09BD\u0169',
			'\u09BE\u09BF\x07|\u09BF\u09C0\x07\u0178',
			'\u09C0\u016B\u09C1\u09C2\x07\x81',
			'\u09C2\u09C3\x07\u0178\u09C3\u016D',
			'\u09C4\u09C9\u01AE\xD8\u09C5\u09C6\x07\u015C',
			'\u09C6\u09C8\u01AE\xD8\u09C7\u09C5',
			'\u09C8\u09CB\u09C9\u09C7',
			'\u09C9\u09CA\u09CA\u016F',
			'\u09CB\u09C9\u09CC\u09D1\u01B0\xD9',
			'\u09CD\u09CE\x07\u015C\u09CE\u09D0\u01B0\xD9',
			'\u09CF\u09CD\u09D0\u09D3',
			'\u09D1\u09CF\u09D1\u09D2',
			'\u09D2\u0171\u09D3\u09D1',
			'\u09D4\u09D9\u01CE\xE8\u09D5\u09D6\x07\u015C',
			'\u09D6\u09D8\u01CE\xE8\u09D7\u09D5',
			'\u09D8\u09DB\u09D9\u09D7',
			'\u09D9\u09DA\u09DA\u0173',
			'\u09DB\u09D9\u09DC\u09E1\u0176\xBC',
			'\u09DD\u09DE\x07\u015C\u09DE\u09E0\u0176\xBC',
			'\u09DF\u09DD\u09E0\u09E3',
			'\u09E1\u09DF\u09E1\u09E2',
			'\u09E2\u0175\u09E3\u09E1',
			'\u09E4\u09E5\u0318\u018D\u09E5\u0177',
			'\u09E6\u09F0\u0318\u018D\u09E7\u09EC\x07\u015A',
			'\u09E8\u09ED\x07\xA2\u09E9\u09ED\x07v',
			'\u09EA\u09ED\x07\xA1\u09EB\u09ED\u0318\u018D',
			'\u09EC\u09E8\u09EC\u09E9',
			'\u09EC\u09EA\u09EC\u09EB',
			'\u09ED\u09EF\u09EE\u09E7',
			'\u09EF\u09F2\u09F0\u09EE',
			'\u09F0\u09F1\u09F1\u0179',
			'\u09F2\u09F0\u09F3\u09F8\u01A6\xD4',
			'\u09F4\u09F5\x07\u015C\u09F5\u09F7\u01A6\xD4',
			'\u09F6\u09F4\u09F7\u09FA',
			'\u09F8\u09F6\u09F8\u09F9',
			'\u09F9\u017B\u09FA\u09F8',
			'\u09FB\u09FC\x07\u015E\u09FC\u09FD\u0174\xBB',
			'\u09FD\u09FE\x07\u015F\u09FE\u017D',
			'\u09FF\u0A01\u0180\xC1\u0A00\u0A02\u0182\xC2',
			'\u0A01\u0A00\u0A01\u0A02',
			'\u0A02\u0A05\u0A03\u0A05\u0184\xC3',
			'\u0A04\u09FF\u0A04\u0A03',
			'\u0A05\u017F\u0A06\u0A07	',
			'\u0A07\u0181\u0A08\u0A09	',
			'\u0A09\u0183\u0A0A\u0A0E\x07\u0126',
			'\u0A0B\u0A0C\x07	\u0A0C\u0A0E\x07\u0126',
			'\u0A0D\u0A0A\u0A0D\u0A0B',
			'\u0A0E\u0185\u0A0F\u0A14\x07\u0129',
			'\u0A10\u0A12\x07\u012A\u0A11\u0A10',
			'\u0A11\u0A12\u0A12\u0A14',
			'\u0A13\u0A0F\u0A13\u0A11',
			'\u0A14\u0187\u0A15\u0A16\x07\u0125',
			'\u0A16\u0A18\u0318\u018D\u0A17\u0A15',
			'\u0A17\u0A18\u0A18\u0A19',
			'\u0A19\u0A1B\u018C\xC7\u0A1A\u0A1C\u01CA\xE6',
			'\u0A1B\u0A1A\u0A1B\u0A1C',
			'\u0A1C\u0189\u0A1D\u0A1E\x07\u0125',
			'\u0A1E\u0A1F\u0318\u018D\u0A1F\u0A21\u018C\xC7',
			'\u0A20\u0A22\u01CC\xE7\u0A21\u0A20',
			'\u0A21\u0A22\u0A22\u018B',
			'\u0A23\u0A26\u018E\xC8\u0A24\u0A26\u0190\xC9',
			'\u0A25\u0A23\u0A25\u0A24',
			'\u0A26\u018D\u0A27\u0A28\u01C8\xE5',
			'\u0A28\u0A29\u017C\xBF\u0A29\u018F',
			'\u0A2A\u0A2B\x07\u0141\u0A2B\u0A2C\u02F8\u017D',
			'\u0A2C\u0191\u0A2D\u0A2E\x07\u0125',
			'\u0A2E\u0A30\u0318\u018D\u0A2F\u0A2D',
			'\u0A2F\u0A30\u0A30\u0A31',
			'\u0A31\u0A32\x07\u0123\u0A32\u0A33\x07\u012C',
			'\u0A33\u0A34\u017C\xBF\u0A34\u0A35\x07\u0124',
			'\u0A35\u0A36\u0270\u0139\u0A36\u0A38\u017C\xBF',
			'\u0A37\u0A39\u01CA\xE6\u0A38\u0A37',
			'\u0A38\u0A39\u0A39\u0193',
			'\u0A3A\u0A3B\x07\u0125\u0A3B\u0A3C\u0318\u018D',
			'\u0A3C\u0A3D\x07\u0123\u0A3D\u0A3E\x07\u012C',
			'\u0A3E\u0A3F\u017C\xBF\u0A3F\u0A40\x07\u0124',
			'\u0A40\u0A41\u0270\u0139\u0A41\u0A43\u017C\xBF',
			'\u0A42\u0A44\u01CC\xE7\u0A43\u0A42',
			'\u0A43\u0A44\u0A44\u0195',
			'\u0A45\u0A48\u019C\xCF\u0A46\u0A48\u0198\xCD',
			'\u0A47\u0A45\u0A47\u0A46',
			'\u0A48\u0197\u0A49\u0A4E\u019A\xCE',
			'\u0A4A\u0A4B\x07\u015C\u0A4B\u0A4D\u019A\xCE',
			'\u0A4C\u0A4A\u0A4D\u0A50',
			'\u0A4E\u0A4C\u0A4E\u0A4F',
			'\u0A4F\u0199\u0A50\u0A4E',
			'\u0A51\u0A52\x07\u015E\u0A52\u0A53\u019C\xCF',
			'\u0A53\u0A54\x07\u015F\u0A54\u019B',
			'\u0A55\u0A5A\u019E\xD0\u0A56\u0A57\x07\u015C',
			'\u0A57\u0A59\u019E\xD0\u0A58\u0A56',
			'\u0A59\u0A5C\u0A5A\u0A58',
			'\u0A5A\u0A5B\u0A5B\u019D',
			'\u0A5C\u0A5A\u0A5D\u0A5E\u02C4\u0163',
			'\u0A5E\u019F\u0A5F\u0A62\u019E\xD0',
			'\u0A60\u0A62\u019A\xCE\u0A61\u0A5F',
			'\u0A61\u0A60\u0A62\u01A1',
			'\u0A63\u0A64	\u0A64\u01A3',
			'\u0A65\u0A66\x07\u0A66\u0A6A\x07H',
			'\u0A67\u0A68\x07\u0A68\u0A6A\x07',
			'\u0A69\u0A65\u0A69\u0A67',
			'\u0A6A\u01A5\u0A6B\u0A6D\u0318\u018D',
			'\u0A6C\u0A6E\u01A2\xD2\u0A6D\u0A6C',
			'\u0A6D\u0A6E\u0A6E\u0A70',
			'\u0A6F\u0A71\u01A4\xD3\u0A70\u0A6F',
			'\u0A70\u0A71\u0A71\u01A7',
			'\u0A72\u0A77\u01AA\xD6\u0A73\u0A74\x07\u015C',
			'\u0A74\u0A76\u01AA\xD6\u0A75\u0A73',
			'\u0A76\u0A79\u0A77\u0A75',
			'\u0A77\u0A78\u0A78\u01A9',
			'\u0A79\u0A77\u0A7A\u0A7D\u0318\u018D',
			'\u0A7B\u0A7C\x07N\u0A7C\u0A7E\x07\u0178',
			'\u0A7D\u0A7B\u0A7D\u0A7E',
			'\u0A7E\u01AB\u0A7F\u0A81\u02F8\u017D',
			'\u0A80\u0A82\u01A2\xD2\u0A81\u0A80',
			'\u0A81\u0A82\u0A82\u0A84',
			'\u0A83\u0A85\u01A4\xD3\u0A84\u0A83',
			'\u0A84\u0A85\u0A85\u01AD',
			'\u0A86\u0A87\u0318\u018D\u0A87\u0A8A\u01D0\xE9',
			'\u0A88\u0A89\x07N\u0A89\u0A8B\x07\u0178',
			'\u0A8A\u0A88\u0A8A\u0A8B',
			'\u0A8B\u01AF\u0A8C\u0A8F\u01B2\xDA',
			'\u0A8D\u0A8F\u01B4\xDB\u0A8E\u0A8C',
			'\u0A8E\u0A8D\u0A8F\u01B1',
			'\u0A90\u0A93\u0192\xCA\u0A91\u0A93\u0188\xC5',
			'\u0A92\u0A90\u0A92\u0A91',
			'\u0A93\u01B3\u0A94\u0A95\u0318\u018D',
			'\u0A95\u0A97\u01D0\xE9\u0A96\u0A98\u01B8\xDD',
			'\u0A97\u0A96\u0A97\u0A98',
			'\u0A98\u0A9B\u0A99\u0A9A\x07N',
			'\u0A9A\u0A9C\x07\u0178\u0A9B\u0A99',
			'\u0A9B\u0A9C\u0A9C\u01B5',
			'\u0A9D\u0A9F\u0318\u018D\u0A9E\u0AA0\u01D0\xE9',
			'\u0A9F\u0A9E\u0A9F\u0AA0',
			'\u0AA0\u01B7\u0AA1\u0AA4\u01BA\xDE',
			'\u0AA2\u0AA4\u01BC\xDF\u0AA3\u0AA1',
			'\u0AA3\u0AA2\u0AA4\u01B9',
			'\u0AA5\u0AA6\x07\u0125\u0AA6\u0AA8\u0318\u018D',
			'\u0AA7\u0AA5\u0AA7\u0AA8',
			'\u0AA8\u0AA9\u0AA9\u0AAA\x07\u0124',
			'\u0AAA\u0AAB\u0270\u0139\u0AAB\u0AAC\x07\u015E',
			'\u0AAC\u0AAD\u0176\xBC\u0AAD\u0AAF\x07\u015F',
			'\u0AAE\u0AB0\u01CA\xE6\u0AAF\u0AAE',
			'\u0AAF\u0AB0\u0AB0\u01BB',
			'\u0AB1\u0AB2\x07\u0125\u0AB2\u0AB4\u0318\u018D',
			'\u0AB3\u0AB1\u0AB3\u0AB4',
			'\u0AB4\u0AB5\u0AB5\u0AB9\u01C4\xE3',
			'\u0AB6\u0AB8\u01C4\xE3\u0AB7\u0AB6',
			'\u0AB8\u0ABB\u0AB9\u0AB7',
			'\u0AB9\u0ABA\u0ABA\u0ABD',
			'\u0ABB\u0AB9\u0ABC\u0ABE\u01CA\xE6',
			'\u0ABD\u0ABC\u0ABD\u0ABE',
			'\u0ABE\u01BD\u0ABF\u0AC2\u01C0\xE1',
			'\u0AC0\u0AC2\u01C2\xE2\u0AC1\u0ABF',
			'\u0AC1\u0AC0\u0AC2\u01BF',
			'\u0AC3\u0AC4\x07\u0125\u0AC4\u0AC6\u0318\u018D',
			'\u0AC5\u0AC3\u0AC5\u0AC6',
			'\u0AC6\u0AC7\u0AC7\u0AC8\x07\u0124',
			'\u0AC8\u0AC9\u0270\u0139\u0AC9\u0ACA\x07\u015E',
			'\u0ACA\u0ACB\u0176\xBC\u0ACB\u0ACD\x07\u015F',
			'\u0ACC\u0ACE\u01CC\xE7\u0ACD\u0ACC',
			'\u0ACD\u0ACE\u0ACE\u01C1',
			'\u0ACF\u0AD0\x07\u0125\u0AD0\u0AD2\u0318\u018D',
			'\u0AD1\u0ACF\u0AD1\u0AD2',
			'\u0AD2\u0AD3\u0AD3\u0AD5\u01C4\xE3',
			'\u0AD4\u0AD6\u01CC\xE7\u0AD5\u0AD4',
			'\u0AD5\u0AD6\u0AD6\u01C3',
			'\u0AD7\u0AD8\x07	\u0AD8\u0ADE\x07B\u0AD9',
			'\u0ADA\x07\u0140\u0ADA\u0ADE\u01C6\xE4\u0ADB',
			'\u0ADE\u0190\xC9\u0ADC\u0ADE\u01C8\xE5\u0ADD',
			'\u0AD7\u0ADD\u0AD9\u0ADD',
			'\u0ADB\u0ADD\u0ADC\u0ADE',
			'\u01C5\u0ADF\u0AE3\u02C4\u0163\u0AE0',
			'\u0AE3\u02B2\u015A\u0AE1\u0AE3\u02B6\u015C\u0AE2',
			'\u0ADF\u0AE2\u0AE0\u0AE2',
			'\u0AE1\u0AE3\u01C7\u0AE4',
			'\u0AE5\x07\u0122\u0AE5\u0AE8\x07\u012C\u0AE6',
			'\u0AE8\x07\u012B\u0AE7\u0AE4\u0AE7',
			'\u0AE6\u0AE8\u01C9\u0AE9',
			'\u0AEA\u017E\xC0\u0AEA\u0AEB\u0186\xC4\u0AEB',
			'\u01CB\u0AEC\u0AED\u017E\xC0\u0AED',
			'\u0AEE\u0186\xC4\u0AEE\u01CD\u0AEF',
			'\u0AF0\u0318\u018D\u0AF0\u0AF1\x07\u015B\u0AF1',
			'\u0AF4\u01D0\xE9\u0AF2\u0AF3\x07N\u0AF3',
			'\u0AF5\x07\u0178\u0AF4\u0AF2\u0AF4',
			'\u0AF5\u0AF5\u01CF\u0AF6',
			'\u0AF7\u01D4\xEB\u0AF7\u01D1\u0AF8',
			'\u0AFD\u01D0\xE9\u0AF9\u0AFA\x07\u015C\u0AFA',
			'\u0AFC\u01D0\xE9\u0AFB\u0AF9\u0AFC',
			'\u0AFF\u0AFD\u0AFB\u0AFD',
			'\u0AFE\u0AFE\u01D3\u0AFF',
			'\u0AFD\u0B00\u0B06\u01D6\xEC\u0B01',
			'\u0B06\u01D8\xED\u0B02\u0B06\u01DA\xEE\u0B03',
			'\u0B06\u01DC\xEF\u0B04\u0B06\u01DE\xF0\u0B05',
			'\u0B00\u0B05\u0B01\u0B05',
			'\u0B02\u0B05\u0B03\u0B05',
			'\u0B04\u0B06\u01D5\u0B07',
			'\u0B2F\x07P\u0B08\u0B2F\x07Q\u0B09\u0B2F',
			'\x07R\u0B0A\u0B2F\x07S\u0B0B\u0B2F\x07',
			'O\u0B0C\u0B2F\x07T\u0B0D\u0B0F\x07U',
			'\u0B0E\u0B10\x07V\u0B0F\u0B0E',
			'\u0B0F\u0B10\u0B10\u0B2F',
			'\u0B11\u0B2F\x07W\u0B12\u0B2F\x07X',
			'\u0B13\u0B2F\x07Y\u0B14\u0B2F\x07Z\u0B15',
			'\u0B16\x07Y\u0B16\u0B17\x07\x97\u0B17',
			'\u0B18\x072\u0B18\u0B19\x07[\u0B19\u0B2F',
			'\x07\\\u0B1A\u0B2F\x07_\u0B1B\u0B2F\x07',
			'\xD0\u0B1C\u0B24\x07^\u0B1D\u0B1E\x07',
			'\u015E\u0B1E\u0B21\x07\u017D\u0B1F\u0B20\x07',
			'\u015C\u0B20\u0B22\x07\u017D\u0B21\u0B1F',
			'\u0B21\u0B22\u0B22\u0B23',
			'\u0B23\u0B25\x07\u015F\u0B24\u0B1D',
			'\u0B24\u0B25\u0B25\u0B2F',
			'\u0B26\u0B27\x07a\u0B27\u0B28\x07',
			'\u015E\u0B28\u0B29\x07\u017D\u0B29\u0B2F\x07',
			'\u015F\u0B2A\u0B2B\x07`\u0B2B\u0B2C\x07',
			'\u015E\u0B2C\u0B2D\x07\u017D\u0B2D\u0B2F\x07',
			'\u015F\u0B2E\u0B07\u0B2E\u0B08',
			'\u0B2E\u0B09\u0B2E\u0B0A',
			'\u0B2E\u0B0B\u0B2E\u0B0C',
			'\u0B2E\u0B0D\u0B2E\u0B11',
			'\u0B2E\u0B12\u0B2E\u0B13',
			'\u0B2E\u0B14\u0B2E\u0B15',
			'\u0B2E\u0B1A\u0B2E\u0B1B',
			'\u0B2E\u0B1C\u0B2E\u0B26',
			'\u0B2E\u0B2A\u0B2F\u01D7',
			'\u0B30\u0B31\x07b\u0B31\u0B32\x07',
			'\u0168\u0B32\u0B33\u01D4\xEB\u0B33\u0B34\x07',
			'\u016A\u0B34\u01D9\u0B35\u0B36\x07',
			'c\u0B36\u0B37\x07\u0168\u0B37\u0B38',
			'\u0172\xBA\u0B38\u0B39\x07\u016A\u0B39\u01DB',
			'\u0B3A\u0B3B\x07d\u0B3B\u0B3C\x07',
			'\u0168\u0B3C\u0B3D\u01D6\xEC\u0B3D\u0B3E\x07',
			'\u015C\u0B3E\u0B3F\u01D4\xEB\u0B3F\u0B40\x07',
			'\u016A\u0B40\u01DD\u0B41\u0B42\x07',
			'e\u0B42\u0B43\x07\u0168\u0B43\u0B44',
			'\u01D2\xEA\u0B44\u0B45\x07\u016A\u0B45\u01DF',
			'\u0B46\u0B47\x078\u0B47\u0B5F\x07',
			'\u0B48\u0B4A\x078\u0B49\u0B4B\x07',
			'\u0B4A\u0B49\u0B4A\u0B4B',
			'\u0B4B\u0B5F\u0B4C\u0B4D\x07',
			'\xB3\u0B4D\u0B5F\x07\u0B4E\u0B50\x07',
			'\xB3\u0B4F\u0B51\x07\u0B50\u0B4F',
			'\u0B50\u0B51\u0B51\u0B5F',
			'\u0B52\u0B53\x079\u0B53\u0B5F\x07',
			'\u0B54\u0B56\x079\u0B55\u0B57\x07',
			'\u0B56\u0B55\u0B56\u0B57',
			'\u0B57\u0B5F\u0B58\u0B59\x07',
			'\xB1\u0B59\u0B5F\x07\u0B5A\u0B5C\x07',
			'\xB1\u0B5B\u0B5D\x07\u0B5C\u0B5B',
			'\u0B5C\u0B5D\u0B5D\u0B5F',
			'\u0B5E\u0B46\u0B5E\u0B48',
			'\u0B5E\u0B4C\u0B5E\u0B4E',
			'\u0B5E\u0B52\u0B5E\u0B54',
			'\u0B5E\u0B58\u0B5E\u0B5A',
			'\u0B5F\u01E1\u0B60\u0B62',
			'\u01E6\xF4\u0B61\u0B60\u0B61\u0B62',
			'\u0B62\u0B63\u0B63\u0B64',
			'\u01E4\xF3\u0B64\u01E3\u0B65\u0B68',
			'\u01EA\xF6\u0B66\u0B68\u01EE\xF8\u0B67\u0B65',
			'\u0B67\u0B66\u0B68\u01E5',
			'\u0B69\u0B6A\x07\x97\u0B6A\u0B6F',
			'\u01E8\xF5\u0B6B\u0B6C\x07\u015C\u0B6C\u0B6E',
			'\u01E8\xF5\u0B6D\u0B6B\u0B6E\u0B71',
			'\u0B6F\u0B6D\u0B6F\u0B70',
			'\u0B70\u01E7\u0B71\u0B6F',
			'\u0B72\u0B73\u0318\u018D\u0B73\u0B74\x07',
			'\u0B74\u0B75\x07\u015E\u0B75\u0B76',
			'\u01E2\xF2\u0B76\u0B77\x07\u015F\u0B77\u01E9',
			'\u0B78\u0B7E\u01EC\xF7\u0B79\u0B7A',
			'\u01E0\xF1\u0B7A\u0B7B\u01EC\xF7\u0B7B\u0B7D',
			'\u0B7C\u0B79\u0B7D\u0B80',
			'\u0B7E\u0B7C\u0B7E\u0B7F',
			'\u0B7F\u01EB\u0B80\u0B7E',
			'\u0B81\u0B83\u0250\u0129\u0B82\u0B84',
			'\u01F8\xFD\u0B83\u0B82\u0B84\u0B85',
			'\u0B85\u0B83\u0B85\u0B86',
			'\u0B86\u01ED\u0B87\u0B8A',
			'\u01FA\xFE\u0B88\u0B8B\u01F2\xFA\u0B89\u0B8B',
			'\u0280\u0141\u0B8A\u0B88\u0B8A\u0B89',
			'\u0B8B\u0B8E\u0B8C\u0B8E',
			'\u01F2\xFA\u0B8D\u0B87\u0B8D\u0B8C',
			'\u0B8E\u01EF\u0B8F\u0B91',
			'\u022A\u0116\u0B90\u0B92\u0250\u0129\u0B91\u0B90',
			'\u0B91\u0B92\u0B92\u0B94',
			'\u0B93\u0B95\u027C\u013F\u0B94\u0B93',
			'\u0B94\u0B95\u0B95\u0B97',
			'\u0B96\u0B98\u0288\u0145\u0B97\u0B96',
			'\u0B97\u0B98\u0B98\u0B9A',
			'\u0B99\u0B9B\u0298\u014D\u0B9A\u0B99',
			'\u0B9A\u0B9B\u0B9B\u0B9D',
			'\u0B9C\u0B9E\u0238\u011D\u0B9D\u0B9C',
			'\u0B9D\u0B9E\u0B9E\u0BA4',
			'\u0B9F\u0BA0\x07\u015E\u0BA0\u0BA1',
			'\u01F2\xFA\u0BA1\u0BA2\x07\u015F\u0BA2\u0BA4',
			'\u0BA3\u0B8F\u0BA3\u0B9F',
			'\u0BA4\u01F1\u0BA5\u0BA7',
			'\u01F0\xF9\u0BA6\u0BA8\u01F4\xFB\u0BA7\u0BA6',
			'\u0BA7\u0BA8\u0BA8\u0BAA',
			'\u0BA9\u0BAB\u02A8\u0155\u0BAA\u0BA9',
			'\u0BAA\u0BAB\u0BAB\u0BAD',
			'\u0BAC\u0BAE\u02AA\u0156\u0BAD\u0BAC',
			'\u0BAD\u0BAE\u0BAE\u0BB0',
			'\u0BAF\u0BB1\u02AE\u0158\u0BB0\u0BAF',
			'\u0BB0\u0BB1\u0BB1\u0BB3',
			'\u0BB2\u0BB4\u02B0\u0159\u0BB3\u0BB2',
			'\u0BB3\u0BB4\u0BB4\u0BB6',
			'\u0BB5\u0BB7\u01FE\u0100\u0BB6\u0BB5',
			'\u0BB6\u0BB7\u0BB7\u01F3',
			'\u0BB8\u0BB9\u01E0\xF1\u0BB9\u0BBA',
			'\u01F0\xF9\u0BBA\u0BBC\u0BBB\u0BB8',
			'\u0BBC\u0BBD\u0BBD\u0BBB',
			'\u0BBD\u0BBE\u0BBE\u01F5',
			'\u0BBF\u0BC1\u01E6\xF4\u0BC0\u0BBF',
			'\u0BC0\u0BC1\u0BC1\u0BC2',
			'\u0BC2\u0BC3\u01F2\xFA\u0BC3\u01F7',
			'\u0BC4\u0BC5\u01FA\xFE\u0BC5\u0BC7',
			'\u022A\u0116\u0BC6\u0BC8\u0262\u0132\u0BC7\u0BC6',
			'\u0BC7\u0BC8\u0BC8\u0BCA',
			'\u0BC9\u0BCB\u027C\u013F\u0BCA\u0BC9',
			'\u0BCA\u0BCB\u0BCB\u0BCD',
			'\u0BCC\u0BCE\u0288\u0145\u0BCD\u0BCC',
			'\u0BCD\u0BCE\u0BCE\u0BD0',
			'\u0BCF\u0BD1\u0298\u014D\u0BD0\u0BCF',
			'\u0BD0\u0BD1\u0BD1\u0BD3',
			'\u0BD2\u0BD4\u0238\u011D\u0BD3\u0BD2',
			'\u0BD3\u0BD4\u0BD4\u0BD6',
			'\u0BD5\u0BD7\u02A8\u0155\u0BD6\u0BD5',
			'\u0BD6\u0BD7\u0BD7\u0BD9',
			'\u0BD8\u0BDA\u02AA\u0156\u0BD9\u0BD8',
			'\u0BD9\u0BDA\u0BDA\u0BDC',
			'\u0BDB\u0BDD\u02AE\u0158\u0BDC\u0BDB',
			'\u0BDC\u0BDD\u0BDD\u0BDF',
			'\u0BDE\u0BE0\u02B0\u0159\u0BDF\u0BDE',
			'\u0BDF\u0BE0\u0BE0\u0BE2',
			'\u0BE1\u0BE3\u01FE\u0100\u0BE2\u0BE1',
			'\u0BE2\u0BE3\u0BE3\u0C04',
			'\u0BE4\u0BE6\u022A\u0116\u0BE5\u0BE7',
			'\u0262\u0132\u0BE6\u0BE5\u0BE6\u0BE7',
			'\u0BE7\u0BE9\u0BE8\u0BEA',
			'\u027C\u013F\u0BE9\u0BE8\u0BE9\u0BEA',
			'\u0BEA\u0BEC\u0BEB\u0BED',
			'\u0288\u0145\u0BEC\u0BEB\u0BEC\u0BED',
			'\u0BED\u0BEF\u0BEE\u0BF0',
			'\u0298\u014D\u0BEF\u0BEE\u0BEF\u0BF0',
			'\u0BF0\u0BF2\u0BF1\u0BF3',
			'\u0238\u011D\u0BF2\u0BF1\u0BF2\u0BF3',
			'\u0BF3\u0BF5\u0BF4\u0BF6',
			'\u02A8\u0155\u0BF5\u0BF4\u0BF5\u0BF6',
			'\u0BF6\u0BF8\u0BF7\u0BF9',
			'\u02AA\u0156\u0BF8\u0BF7\u0BF8\u0BF9',
			'\u0BF9\u0BFB\u0BFA\u0BFC',
			'\u02AE\u0158\u0BFB\u0BFA\u0BFB\u0BFC',
			'\u0BFC\u0BFE\u0BFD\u0BFF',
			'\u02B0\u0159\u0BFE\u0BFD\u0BFE\u0BFF',
			'\u0BFF\u0C01\u0C00\u0C02',
			'\u01FE\u0100\u0C01\u0C00\u0C01\u0C02',
			'\u0C02\u0C04\u0C03\u0BC4',
			'\u0C03\u0BE4\u0C04\u01F9',
			'\u0C05\u0C06\x07\x1B\u0C06\u0C07\x07',
			'\u0C07\u0C09\u01FC\xFF\u0C08\u0C0A',
			',\u0C09\u0C08\u0C09\u0C0A',
			'\u0C0A\u0C18\u0C0B\u0C0C\x07',
			'\x1B\u0C0C\u0C0E\x07j\u0C0D\u0C0F\x07',
			"'\u0C0E\u0C0D\u0C0E\u0C0F",
			'\u0C0F\u0C10\u0C10\u0C15',
			'\u0308\u0185\u0C11\u0C12\x07\u015E\u0C12\u0C13',
			'\u0174\xBB\u0C13\u0C14\x07\u015F\u0C14\u0C16',
			'\u0C15\u0C11\u0C15\u0C16',
			'\u0C16\u0C18\u0C17\u0C05',
			'\u0C17\u0C0B\u0C18\u01FB',
			'\u0C19\u0C1B\x072\u0C1A\u0C19',
			'\u0C1A\u0C1B\u0C1B\u0C1C',
			'\u0C1C\u0C1D\x071\u0C1D\u0C1F\x07',
			'\u0178\u0C1E\u0C20\u0144\xA3\u0C1F\u0C1E',
			'\u0C1F\u0C20\u0C20\u0C22',
			'\u0C21\u0C23\u015E\xB0\u0C22\u0C21',
			'\u0C22\u0C23\u0C23\u0C27',
			"\u0C24\u0C25\x07'\u0C25\u0C27",
			'\u0308\u0185\u0C26\u0C1A\u0C26\u0C24',
			'\u0C27\u01FD\u0C28\u0C2B\x07',
			'\x9B\u0C29\u0C2A\x07\u017D\u0C2A\u0C2C\x07',
			'\u015C\u0C2B\u0C29\u0C2B\u0C2C',
			'\u0C2C\u0C2D\u0C2D\u0C33\x07',
			'\u017D\u0C2E\u0C2F\x07\x9B\u0C2F\u0C30\x07',
			'\u017D\u0C30\u0C31\x07\x9C\u0C31\u0C33\x07',
			'\u017D\u0C32\u0C28\u0C32\u0C2E',
			'\u0C33\u01FF\u0C34\u0C35\x07',
			'\xAF\u0C35\u0C36\x07\u0C36\u0C38',
			'\u0270\u0139\u0C37\u0C39\u027C\u013F\u0C38\u0C37',
			'\u0C38\u0C39\u0C39\u0201',
			'\u0C3A\u0C3B\u024A\u0126\u0C3B\u0C3C\x07',
			'\u0164\u0C3C\u0C3D\u02F8\u017D\u0C3D\u0203',
			'\u0C3E\u0C3F\x07\x9D\u0C3F\u0C44',
			'\u0202\u0102\u0C40\u0C41\x07\u015C\u0C41\u0C43',
			'\u0202\u0102\u0C42\u0C40\u0C43\u0C46',
			'\u0C44\u0C42\u0C44\u0C45',
			'\u0C45\u0205\u0C46\u0C44',
			'\u0C47\u0C48\x07\xE3\u0C48\u0C49',
			'\u0270\u0139\u0C49\u0C4B\u0204\u0103\u0C4A\u0C4C',
			'\u027C\u013F\u0C4B\u0C4A\u0C4B\u0C4C',
			'\u0C4C\u0207\u0C4D\u0C52',
			'\u020A\u0106\u0C4E\u0C52\u0214\u010B\u0C4F\u0C52',
			'\u0216\u010C\u0C50\u0C52\u0218\u010D\u0C51\u0C4D',
			'\u0C51\u0C4E\u0C51\u0C4F',
			'\u0C51\u0C50\u0C52\u0209',
			'\u0C53\u0C54\x07\u0116\u0C54\u0C5D\x07',
			'\u0117\u0C55\u0C5A\u020C\u0107\u0C56\u0C57\x07',
			'\u015C\u0C57\u0C59\u020C\u0107\u0C58\u0C56',
			'\u0C59\u0C5C\u0C5A\u0C58',
			'\u0C5A\u0C5B\u0C5B\u0C5E',
			'\u0C5C\u0C5A\u0C5D\u0C55',
			'\u0C5D\u0C5E\u0C5E\u020B',
			'\u0C5F\u0C62\u0210\u0109\u0C60\u0C62',
			'\u020E\u0108\u0C61\u0C5F\u0C61\u0C60',
			'\u0C62\u020D\u0C63\u0C64\x07',
			'\xC8\u0C64\u0C68\x07\u011B\u0C65\u0C66\x07',
			'\xC8\u0C66\u0C68\x07\u011C\u0C67\u0C63',
			'\u0C67\u0C65\u0C68\u020F',
			'\u0C69\u0C6A\x07\u011D\u0C6A\u0C6B\x07',
			'\u011E\u0C6B\u0C6C\u0212\u010A\u0C6C\u0211',
			'\u0C6D\u0C6E\x07\u011F\u0C6E\u0213',
			'\u0C6F\u0C71\x07\u0118\u0C70\u0C72\x07',
			'\u011A\u0C71\u0C70\u0C71\u0C72',
			'\u0C72\u0215\u0C73\u0C75\x07',
			'\u0119\u0C74\u0C76\x07\u011A\u0C75\u0C74',
			'\u0C75\u0C76\u0C76\u0217',
			'\u0C77\u0C78\x07\x9D\u0C78\u0C79\x07',
			'\u0120\u0C79\u0C7A\u0306\u0184\u0C7A\u0219',
			'\u0C7B\u0C7C\x07\u012D\u0C7C\u0C7E\x07',
			'\u0105\u0C7D\u0C7F\x07\u017D\u0C7E\u0C7D',
			'\u0C7F\u0C80\u0C80\u0C7E',
			'\u0C80\u0C81\u0C81\u021B',
			'\u0C82\u0C83\x07\u0130\u0C83\u0C84\x07',
			'j\u0C84\u0C89\u0270\u0139\u0C85\u0C87\x07',
			'\u0C86\u0C85\u0C86\u0C87',
			'\u0C87\u0C88\u0C88\u0C8A',
			'\u0318\u018D\u0C89\u0C86\u0C89\u0C8A',
			'\u0C8A\u0C8B\u0C8B\u0C8C\x07',
			'4\u0C8C\u0C8D\u0258\u012D\u0C8D\u0C8E\x07',
			'$\u0C8E\u0C8F\u02F8\u017D\u0C8F\u0C90',
			'\u021E\u0110\u0C90\u021D\u0C91\u0C94',
			'\u0222\u0112\u0C92\u0C94\u0224\u0113\u0C93\u0C91',
			'\u0C93\u0C92\u0C94\u0C97',
			'\u0C95\u0C93\u0C95\u0C96',
			'\u0C96\u0C99\u0C97\u0C95',
			'\u0C98\u0C9A\u0220\u0111\u0C99\u0C98',
			'\u0C99\u0C9A\u0C9A\u021F',
			'\u0C9B\u0C9C\x07\xA5\u0C9C\u0C9D\x07',
			'	\u0C9D\u0CA0\x07\u0131\u0C9E\u0C9F\x07',
			'\x07\u0C9F\u0CA1\u02F8\u017D\u0CA0\u0C9E',
			'\u0CA0\u0CA1\u0CA1\u0CA2',
			'\u0CA2\u0CA3\x07\xA6\u0CA3\u0CA4\x07',
			'\x1B\u0CA4\u0CA5\x07\u010A\u0CA5\u0CA6',
			'\u0284\u0143\u0CA6\u0221\u0CA7\u0CA8\x07',
			'\xA5\u0CA8\u0CA9\x07\u0131\u0CA9\u0CAA\x07',
			'\x07\u0CAA\u0CAB\u02F8\u017D\u0CAB\u0CAC\x07',
			'\xA6\u0CAC\u0CAD\u0226\u0114\u0CAD\u0223',
			'\u0CAE\u0CAF\x07\xA5\u0CAF\u0CB0\x07',
			'\u0131\u0CB0\u0CB1\x07\xA6\u0CB1\u0CB2',
			'\u0226\u0114\u0CB2\u0225\u0CB3\u0CB4\x07',
			'\xE3\u0CB4\u0CB7\u0204\u0103\u0CB5\u0CB7\x07',
			'\xAF\u0CB6\u0CB3\u0CB6\u0CB5',
			'\u0CB7\u0227\u0CB8\u0CB9\x07',
			'w\u0CB9\u0CBB\x07\u010D\u0CBA\u0CBC\x07',
			'\u0178\u0CBB\u0CBA\u0CBC\u0CBD',
			'\u0CBD\u0CBB\u0CBD\u0CBE',
			'\u0CBE\u0229\u0CBF\u0CC1\x07',
			'\u0CC0\u0CC2\x07\u0183\u0CC1\u0CC0',
			'\u0CC1\u0CC2\u0CC2\u0CC9',
			'\u0CC3\u0CC5	\u0CC4\u0CC3',
			'\u0CC4\u0CC5\u0CC5\u0CC6',
			'\u0CC6\u0CCA\u022C\u0117\u0CC7\u0CC8\x07',
			'3\u0CC8\u0CCA\u022E\u0118\u0CC9\u0CC4',
			'\u0CC9\u0CC7\u0CCA\u0CCD',
			'\u0CCB\u0CCD\u0232\u011A\u0CCC\u0CBF',
			'\u0CCC\u0CCB\u0CCD\u022B',
			'\u0CCE\u0CD3\u0230\u0119\u0CCF\u0CD0\x07',
			'\u015C\u0CD0\u0CD2\u0230\u0119\u0CD1\u0CCF',
			'\u0CD2\u0CD5\u0CD3\u0CD1',
			'\u0CD3\u0CD4\u0CD4\u022D',
			'\u0CD5\u0CD3\u0CD6\u0CD7\x07',
			'\u015E\u0CD7\u0CD8\u0236\u011C\u0CD8\u0CDA\x07',
			'\u015F\u0CD9\u0CDB\u013A\x9E\u0CDA\u0CD9',
			'\u0CDA\u0CDB\u0CDB\u0CDD',
			'\u0CDC\u0CDE\u013E\xA0\u0CDD\u0CDC',
			'\u0CDD\u0CDE\u0CDE\u0CDF',
			'\u0CDF\u0CE0\x074\u0CE0\u0CEF\x07',
			'\u0178\u0CE1\u0CED\x07\u0CE2\u0CE5\x07',
			'\u015E\u0CE3\u0CE6\u024E\u0128\u0CE4\u0CE6',
			'\u016E\xB8\u0CE5\u0CE3\u0CE5\u0CE4',
			'\u0CE6\u0CE7\u0CE7\u0CE8\x07',
			'\u015F\u0CE8\u0CEE\u0CE9\u0CEC',
			'\u024E\u0128\u0CEA\u0CEC\u016E\xB8\u0CEB\u0CE9',
			'\u0CEB\u0CEA\u0CEC\u0CEE',
			'\u0CED\u0CE2\u0CED\u0CEB',
			'\u0CEE\u0CF0\u0CEF\u0CE1',
			'\u0CEF\u0CF0\u0CF0\u0CF2',
			'\u0CF1\u0CF3\u013A\x9E\u0CF2\u0CF1',
			'\u0CF2\u0CF3\u0CF3\u0CF5',
			'\u0CF4\u0CF6\u013C\x9F\u0CF5\u0CF4',
			'\u0CF5\u0CF6\u0CF6\u022F',
			'\u0CF7\u0D0C\u0248\u0125\u0CF8\u0D09',
			'\u02F8\u017D\u0CF9\u0CFB\x07\u0CFA\u0CF9',
			'\u0CFA\u0CFB\u0CFB\u0CFC',
			'\u0CFC\u0D0A\u0318\u018D\u0CFD\u0CFE\x07',
			'\u0CFE\u0CFF\x07\u015E\u0CFF\u0D04',
			'\u0318\u018D\u0D00\u0D01\x07\u015C\u0D01\u0D03',
			'\u0318\u018D\u0D02\u0D00\u0D03\u0D06',
			'\u0D04\u0D02\u0D04\u0D05',
			'\u0D05\u0D07\u0D06\u0D04',
			'\u0D07\u0D08\x07\u015F\u0D08\u0D0A',
			'\u0D09\u0CFA\u0D09\u0CFD',
			'\u0D09\u0D0A\u0D0A\u0D0C',
			'\u0D0B\u0CF7\u0D0B\u0CF8',
			'\u0D0C\u0231\u0D0D\u0D0E\x07',
			'd\u0D0E\u0D12\u0236\u011C\u0D0F\u0D10\x07',
			'f\u0D10\u0D12\u0236\u011C\u0D11\u0D0D',
			'\u0D11\u0D0F\u0D12\u0D14',
			'\u0D13\u0D15\u013A\x9E\u0D14\u0D13',
			'\u0D14\u0D15\u0D15\u0D17',
			'\u0D16\u0D18\u013E\xA0\u0D17\u0D16',
			'\u0D17\u0D18\u0D18\u0D19',
			'\u0D19\u0D1A\x074\u0D1A\u0D29\x07',
			'\u0178\u0D1B\u0D27\x07\u0D1C\u0D1F\x07',
			'\u015E\u0D1D\u0D20\u024E\u0128\u0D1E\u0D20',
			'\u016E\xB8\u0D1F\u0D1D\u0D1F\u0D1E',
			'\u0D20\u0D21\u0D21\u0D22\x07',
			'\u015F\u0D22\u0D28\u0D23\u0D26',
			'\u024E\u0128\u0D24\u0D26\u016E\xB8\u0D25\u0D23',
			'\u0D25\u0D24\u0D26\u0D28',
			'\u0D27\u0D1C\u0D27\u0D25',
			'\u0D28\u0D2A\u0D29\u0D1B',
			'\u0D29\u0D2A\u0D2A\u0D2C',
			'\u0D2B\u0D2D\u013A\x9E\u0D2C\u0D2B',
			'\u0D2C\u0D2D\u0D2D\u0D2F',
			'\u0D2E\u0D30\u013C\x9F\u0D2F\u0D2E',
			'\u0D2F\u0D30\u0D30\u0233',
			'\u0D31\u0D34\u0248\u0125\u0D32\u0D34',
			'\u02F8\u017D\u0D33\u0D31\u0D33\u0D32',
			'\u0D34\u0235\u0D35\u0D3A',
			'\u0234\u011B\u0D36\u0D37\x07\u015C\u0D37\u0D39',
			'\u0234\u011B\u0D38\u0D36\u0D39\u0D3C',
			'\u0D3A\u0D38\u0D3A\u0D3B',
			'\u0D3B\u0237\u0D3C\u0D3A',
			'\u0D3D\u0D3E\x07\xEB\u0D3E\u0D43',
			'\u023A\u011E\u0D3F\u0D40\x07\u015C\u0D40\u0D42',
			'\u023A\u011E\u0D41\u0D3F\u0D42\u0D45',
			'\u0D43\u0D41\u0D43\u0D44',
			'\u0D44\u0239\u0D45\u0D43',
			'\u0D46\u0D47\u0318\u018D\u0D47\u0D48\x07',
			'\u0D48\u0D49\u023C\u011F\u0D49\u023B',
			'\u0D4A\u0D57\u0318\u018D\u0D4B\u0D4D\x07',
			'\u015E\u0D4C\u0D4E\u0318\u018D\u0D4D\u0D4C',
			'\u0D4D\u0D4E\u0D4E\u0D50',
			'\u0D4F\u0D51\u0276\u013C\u0D50\u0D4F',
			'\u0D50\u0D51\u0D51\u0D53',
			'\u0D52\u0D54\u023E\u0120\u0D53\u0D52',
			'\u0D53\u0D54\u0D54\u0D55',
			'\u0D55\u0D57\x07\u015F\u0D56\u0D4A',
			'\u0D56\u0D4B\u0D57\u023D',
			'\u0D58\u0D5B\u0240\u0121\u0D59\u0D5B',
			'\u0242\u0122\u0D5A\u0D58\u0D5A\u0D59',
			'\u0D5B\u023F\u0D5C\u0D5D\x07',
			'm\u0D5D\u0D65\u0244\u0123\u0D5E\u0D5F\x07',
			'm\u0D5F\u0D60\x07\xCE\u0D60\u0D61',
			'\u0246\u0124\u0D61\u0D62\x07\x07\u0D62\u0D63',
			'\u0246\u0124\u0D63\u0D65\u0D64\u0D5C',
			'\u0D64\u0D5E\u0D65\u0241',
			'\u0D66\u0D67\x07\xCB\u0D67\u0D6F',
			'\u0244\u0123\u0D68\u0D69\x07\xCB\u0D69\u0D6A\x07',
			'\xCE\u0D6A\u0D6B\u0246\u0124\u0D6B\u0D6C\x07',
			'\x07\u0D6C\u0D6D\u0246\u0124\u0D6D\u0D6F',
			'\u0D6E\u0D66\u0D6E\u0D68',
			'\u0D6F\u0243\u0D70\u0D71\x07',
			'\xEC\u0D71\u0D77\x07\xED\u0D72\u0D73\x07',
			'\xEF\u0D73\u0D77\x07l\u0D74\u0D75\x07',
			'\u017D\u0D75\u0D77\x07\xED\u0D76\u0D70',
			'\u0D76\u0D72\u0D76\u0D74',
			'\u0D77\u0245\u0D78\u0D79\x07',
			'\xEC\u0D79\u0D7F	\u0D7A\u0D7B\x07',
			'\xEF\u0D7B\u0D7F\x07l\u0D7C\u0D7D\x07',
			'\u017D\u0D7D\u0D7F	\u0D7E\u0D78',
			'\u0D7E\u0D7A\u0D7E\u0D7C',
			'\u0D7F\u0247\u0D80\u0D86\x07',
			'\u016E\u0D81\u0D82\u0270\u0139\u0D82\u0D83\x07',
			'\u015A\u0D83\u0D84\x07\u016E\u0D84\u0D86',
			'\u0D85\u0D80\u0D85\u0D81',
			'\u0D86\u0249\u0D87\u0D88',
			'\u0318\u018D\u0D88\u024B\u0D89\u0D8E',
			'\u02F8\u017D\u0D8A\u0D8B\x07\u015C\u0D8B\u0D8D',
			'\u02F8\u017D\u0D8C\u0D8A\u0D8D\u0D90',
			'\u0D8E\u0D8C\u0D8E\u0D8F',
			'\u0D8F\u024D\u0D90\u0D8E',
			'\u0D91\u0D96\u0318\u018D\u0D92\u0D93\x07',
			'\u015C\u0D93\u0D95\u0318\u018D\u0D94\u0D92',
			'\u0D95\u0D98\u0D96\u0D94',
			'\u0D96\u0D97\u0D97\u024F',
			'\u0D98\u0D96\u0D99\u0D9A\x07',
			'\u0D9A\u0D9B\u0252\u012A\u0D9B\u0251',
			'\u0D9C\u0D9D\u025E\u0130\u0D9D\u0DA0',
			'\u025A\u012E\u0D9E\u0D9F\x07\u015C\u0D9F\u0DA1',
			'\u025A\u012E\u0DA0\u0D9E\u0DA1\u0DA2',
			'\u0DA2\u0DA0\u0DA2\u0DA3',
			'\u0DA3\u0DA6\u0DA4\u0DA6',
			'\u0256\u012C\u0DA5\u0D9C\u0DA5\u0DA4',
			'\u0DA6\u0253\u0DA7\u0DAB',
			'\u026C\u0137\u0DA8\u0DAA\u0262\u0132\u0DA9\u0DA8',
			'\u0DAA\u0DAD\u0DAB\u0DA9',
			'\u0DAB\u0DAC\u0DAC\u0DC8',
			'\u0DAD\u0DAB\u0DAE\u0DB2',
			'\u0286\u0144\u0DAF\u0DB1\u0262\u0132\u0DB0\u0DAF',
			'\u0DB1\u0DB4\u0DB2\u0DB0',
			'\u0DB2\u0DB3\u0DB3\u0DC8',
			'\u0DB4\u0DB2\u0DB5\u0DB9',
			'\u0274\u013B\u0DB6\u0DB8\u0262\u0132\u0DB7\u0DB6',
			'\u0DB8\u0DBB\u0DB9\u0DB7',
			'\u0DB9\u0DBA\u0DBA\u0DC8',
			'\u0DBB\u0DB9\u0DBC\u0DC0',
			'\u027A\u013E\u0DBD\u0DBF\u0262\u0132\u0DBE\u0DBD',
			'\u0DBF\u0DC2\u0DC0\u0DBE',
			'\u0DC0\u0DC1\u0DC1\u0DC8',
			'\u0DC2\u0DC0\u0DC3\u0DC4\x07',
			'\u015E\u0DC4\u0DC5\u0256\u012C\u0DC5\u0DC6\x07',
			'\u015F\u0DC6\u0DC8\u0DC7\u0DA7',
			'\u0DC7\u0DAE\u0DC7\u0DB5',
			'\u0DC7\u0DBC\u0DC7\u0DC3',
			'\u0DC8\u0255\u0DC9\u0DD4',
			'\u0254\u012B\u0DCA\u0DCB\u0260\u0131\u0DCB\u0DD0',
			'\u0258\u012D\u0DCC\u0DCD\x07$\u0DCD\u0DD1',
			'\u02F8\u017D\u0DCE\u0DCF\x074\u0DCF\u0DD1',
			'\u017C\xBF\u0DD0\u0DCC\u0DD0\u0DCE',
			'\u0DD0\u0DD1\u0DD1\u0DD3',
			'\u0DD2\u0DCA\u0DD3\u0DD6',
			'\u0DD4\u0DD2\u0DD4\u0DD5',
			'\u0DD5\u0257\u0DD6\u0DD4',
			'\u0DD7\u0DDC\u026C\u0137\u0DD8\u0DDC',
			'\u0286\u0144\u0DD9\u0DDC\u0274\u013B\u0DDA\u0DDC',
			'\u027A\u013E\u0DDB\u0DD7\u0DDB\u0DD8',
			'\u0DDB\u0DD9\u0DDB\u0DDA',
			'\u0DDC\u0DE0\u0DDD\u0DDF',
			'\u0262\u0132\u0DDE\u0DDD\u0DDF\u0DE2',
			'\u0DE0\u0DDE\u0DE0\u0DE1',
			'\u0DE1\u0259\u0DE2\u0DE0',
			'\u0DE3\u0DE5\x07\u0DE4\u0DE3',
			'\u0DE4\u0DE5\u0DE5\u0DE6',
			'\u0DE6\u0DE7\u026E\u0138\u0DE7\u0DE8',
			'\u025C\u012F\u0DE8\u025B\u0DE9\u0DEA\x07',
			'\u015E\u0DEA\u0DEB\u024C\u0127\u0DEB\u0DEC\x07',
			'\u015F\u0DEC\u025D\u0DED\u0DEE\x07',
			'\u0DEE\u025F\u0DEF\u0E08\x07',
			' \u0DF0\u0DF1\x07\xFC\u0DF1\u0E08\x07',
			' \u0DF2\u0E08\x07\u015C\u0DF3\u0DF4\x07',
			'\xD1\u0DF4\u0E08\x07 \u0DF5\u0DF7\x07',
			'!\u0DF6\u0DF8\x07\u0DF7\u0DF6',
			'\u0DF7\u0DF8\u0DF8\u0DF9',
			'\u0DF9\u0E08\x07 \u0DFA\u0DFC\x07',
			'"\u0DFB\u0DFD\x07\u0DFC\u0DFB',
			'\u0DFC\u0DFD\u0DFD\u0DFE',
			'\u0DFE\u0E08\x07 \u0DFF\u0E01\x07',
			'#\u0E00\u0E02\x07\u0E01\u0E00',
			'\u0E01\u0E02\u0E02\u0E03',
			'\u0E03\u0E08\x07 \u0E04\u0E05\x07',
			'!\u0E05\u0E06\x07\xD7\u0E06\u0E08\x07',
			' \u0E07\u0DEF\u0E07\u0DF0',
			'\u0E07\u0DF2\u0E07\u0DF3',
			'\u0E07\u0DF5\u0E07\u0DFA',
			'\u0E07\u0DFF\u0E07\u0E04',
			'\u0E08\u0261\u0E09\u0E0A\x07',
			'\xD8\u0E0A\u0E0B\x07\xB4\u0E0B\u0E0C\x07',
			'\u0E0C\u0E0D\u02B2\u015A\u0E0D\u0E17',
			'\u0264\u0133\u0E0E\u0E0F\x07\u0E0F\u0E14',
			'\u0318\u018D\u0E10\u0E11\x07\u015C\u0E11\u0E13',
			'\u0318\u018D\u0E12\u0E10\u0E13\u0E16',
			'\u0E14\u0E12\u0E14\u0E15',
			'\u0E15\u0E18\u0E16\u0E14',
			'\u0E17\u0E0E\u0E17\u0E18',
			'\u0E18\u0E45\u0E19\u0E1B\x07',
			'\u015C\u0E1A\u0E19\u0E1A\u0E1B',
			'\u0E1B\u0E1C\u0E1C\u0E1D\x07',
			'\xD8\u0E1D\u0E1E\x07\xB4\u0E1E\u0E1F',
			'\u02B2\u015A\u0E1F\u0E29\u0264\u0133\u0E20\u0E21\x07',
			'\u0E21\u0E26\u0318\u018D\u0E22\u0E23\x07',
			'\u015C\u0E23\u0E25\u0318\u018D\u0E24\u0E22',
			'\u0E25\u0E28\u0E26\u0E24',
			'\u0E26\u0E27\u0E27\u0E2A',
			'\u0E28\u0E26\u0E29\u0E20',
			'\u0E29\u0E2A\u0E2A\u0E45',
			'\u0E2B\u0E2D\x07\u015C\u0E2C\u0E2B',
			'\u0E2C\u0E2D\u0E2D\u0E2E',
			'\u0E2E\u0E2F\x07\xD8\u0E2F\u0E30\x07',
			"'\u0E30\u0E31\x07\u015E\u0E31\u0E32",
			'\u0280\u0141\u0E32\u0E34\x07\u015F\u0E33\u0E35\x07',
			'\u0E34\u0E33\u0E34\u0E35',
			'\u0E35\u0E36\u0E36\u0E42',
			'\u0264\u0133\u0E37\u0E38\x07\u015E\u0E38\u0E3D',
			'\u0318\u018D\u0E39\u0E3A\x07\u015C\u0E3A\u0E3C',
			'\u0318\u018D\u0E3B\u0E39\u0E3C\u0E3F',
			'\u0E3D\u0E3B\u0E3D\u0E3E',
			'\u0E3E\u0E40\u0E3F\u0E3D',
			'\u0E40\u0E41\x07\u015F\u0E41\u0E43',
			'\u0E42\u0E37\u0E42\u0E43',
			'\u0E43\u0E45\u0E44\u0E09',
			'\u0E44\u0E1A\u0E44\u0E2C',
			'\u0E45\u0263\u0E46\u0E47',
			'\u0318\u018D\u0E47\u0265\u0E48\u0E49\x07',
			'\x82\u0E49\u0E4A\x07\u015E\u0E4A\u0E4B\x07',
			'\x83\u0E4B\u0E4C\x07\u017D\u0E4C\u0E4D\x07',
			'\x84\u0E4D\u0E4E\x07\x85\u0E4E\u0E58\x07',
			'\u017D\u0E4F\u0E50\x07$\u0E50\u0E55',
			'\u02F8\u017D\u0E51\u0E52\x07\u015C\u0E52\u0E54',
			'\u02F8\u017D\u0E53\u0E51\u0E54\u0E57',
			'\u0E55\u0E53\u0E55\u0E56',
			'\u0E56\u0E59\u0E57\u0E55',
			'\u0E58\u0E4F\u0E58\u0E59',
			'\u0E59\u0E5A\u0E5A\u0E5B\x07',
			'\u015F\u0E5B\u0267\u0E5C\u0E5D\x07',
			'\x82\u0E5D\u0E5E\x07\u015E\u0E5E\u0E5F\x07',
			'\u017D\u0E5F\u0E60	\u0E60\u0E66\x07',
			'\u015F\u0E61\u0E62\x07\x82\u0E62\u0E63\x07',
			'\u015E\u0E63\u0E64\x07\u017C\u0E64\u0E66\x07',
			'\u015F\u0E65\u0E5C\u0E65\u0E61',
			'\u0E66\u0269\u0E67\u0E6A',
			'\u0266\u0134\u0E68\u0E6A\u0268\u0135\u0E69\u0E67',
			'\u0E69\u0E68\u0E6A\u026B',
			'\u0E6B\u0E6D\u0270\u0139\u0E6C\u0E6E',
			'\u0148\xA5\u0E6D\u0E6C\u0E6D\u0E6E',
			'\u0E6E\u0E70\u0E6F\u0E71',
			'\u026A\u0136\u0E70\u0E6F\u0E70\u0E71',
			'\u0E71\u0E76\u0E72\u0E74\x07',
			'\u0E73\u0E72\u0E73\u0E74',
			'\u0E74\u0E75\u0E75\u0E77',
			'\u0318\u018D\u0E76\u0E73\u0E76\u0E77',
			'\u0E77\u026D\u0E78\u0E7A',
			'\u0270\u0139\u0E79\u0E7B\u026A\u0136\u0E7A\u0E79',
			'\u0E7A\u0E7B\u0E7B\u0E80',
			'\u0E7C\u0E7E\x07\u0E7D\u0E7C',
			'\u0E7D\u0E7E\u0E7E\u0E7F',
			'\u0E7F\u0E81\u0318\u018D\u0E80\u0E7D',
			'\u0E80\u0E81\u0E81\u026F',
			'\u0E82\u0E83\u0318\u018D\u0E83\u0E84\x07',
			'\u015A\u0E84\u0E85\u0318\u018D\u0E85\u0E88',
			'\u0E86\u0E88\u0318\u018D\u0E87\u0E82',
			'\u0E87\u0E86\u0E88\u0271',
			'\u0E89\u0E8A\u0318\u018D\u0E8A\u0E8B\x07',
			'\u015A\u0E8B\u0E8D\u0E8C\u0E89',
			'\u0E8C\u0E8D\u0E8D\u0E8E',
			'\u0E8E\u0E8F\u0318\u018D\u0E8F\u0273',
			'\u0E90\u0E91\x07\u015E\u0E91\u0E92',
			'\u01E2\xF2\u0E92\u0E94\x07\u015F\u0E93\u0E95\x07',
			'\u0E94\u0E93\u0E94\u0E95',
			'\u0E95\u0E96\u0E96\u0E97',
			'\u0318\u018D\u0E97\u0275\u0E98\u0E9A',
			'\u02AC\u0157\u0E99\u0E9B\u02A8\u0155\u0E9A\u0E99',
			'\u0E9A\u0E9B\u0E9B\u0EA4',
			'\u0E9C\u0EA4\u02A8\u0155\u0E9D\u0E9F',
			'\u02AE\u0158\u0E9E\u0EA0\u02B0\u0159\u0E9F\u0E9E',
			'\u0E9F\u0EA0\u0EA0\u0EA4',
			'\u0EA1\u0EA4\u02B0\u0159\u0EA2\u0EA4',
			'\u02AA\u0156\u0EA3\u0E98\u0EA3\u0E9C',
			'\u0EA3\u0E9D\u0EA3\u0EA1',
			'\u0EA3\u0EA2\u0EA4\u0277',
			'\u0EA5\u0EA9\u0274\u013B\u0EA6\u0EA9',
			'\u026C\u0137\u0EA7\u0EA9\u027A\u013E\u0EA8\u0EA5',
			'\u0EA8\u0EA6\u0EA8\u0EA7',
			'\u0EA9\u0279\u0EAA\u0EAB',
			'\u0318\u018D\u0EAB\u0EAC\x07\u015E\u0EAC\u0EAD\x07',
			'$\u0EAD\u0EAF\u0278\u013D\u0EAE\u0EB0',
			'\u0276\u013C\u0EAF\u0EAE\u0EAF\u0EB0',
			'\u0EB0\u0EC0\u0EB1\u0EB2\x07',
			'\u017E\u0EB2\u0EB3\x07\u015E\u0EB3\u0EB4',
			'\u02F8\u017D\u0EB4\u0EBD\x07\u015F\u0EB5\u0EB6\x07',
			'\u015C\u0EB6\u0EB7\x07\u017E\u0EB7\u0EB8\x07',
			'\u015E\u0EB8\u0EB9\u02F8\u017D\u0EB9\u0EBA\x07',
			'\u015F\u0EBA\u0EBC\u0EBB\u0EB5',
			'\u0EBC\u0EBF\u0EBD\u0EBB',
			'\u0EBD\u0EBE\u0EBE\u0EC1',
			'\u0EBF\u0EBD\u0EC0\u0EB1',
			'\u0EC0\u0EC1\u0EC1\u0EC2',
			'\u0EC2\u0EC4\x07\u015F\u0EC3\u0EC5',
			'\u0318\u018D\u0EC4\u0EC3\u0EC4\u0EC5',
			'\u0EC5\u027B\u0EC6\u0EC7\x07',
			'\u0EC7\u0EC8\u027E\u0140\u0EC8\u027D',
			'\u0EC9\u0ECA\u02F8\u017D\u0ECA\u027F',
			'\u0ECB\u0ECC\x07\u010A\u0ECC\u0ECD',
			'\u0282\u0142\u0ECD\u0281\u0ECE\u0ED3',
			'\u0284\u0143\u0ECF\u0ED0\x07\u015C\u0ED0\u0ED2',
			'\u0284\u0143\u0ED1\u0ECF\u0ED2\u0ED5',
			'\u0ED3\u0ED1\u0ED3\u0ED4',
			'\u0ED4\u0283\u0ED5\u0ED3',
			'\u0ED6\u0ED7\u029C\u014F\u0ED7\u0285',
			"\u0ED8\u0ED9\x07'\u0ED9\u0EDA\x07",
			'\u015E\u0EDA\u0EDB\u0280\u0141\u0EDB\u0EDD\x07',
			'\u015F\u0EDC\u0EDE\x07\u0EDD\u0EDC',
			'\u0EDD\u0EDE\u0EDE\u0EDF',
			'\u0EDF\u0EE9\u0264\u0133\u0EE0\u0EE1\x07',
			'\u015E\u0EE1\u0EE6\u0318\u018D\u0EE2\u0EE3\x07',
			'\u015C\u0EE3\u0EE5\u0318\u018D\u0EE4\u0EE2',
			'\u0EE5\u0EE8\u0EE6\u0EE4',
			'\u0EE6\u0EE7\u0EE7\u0EEA',
			'\u0EE8\u0EE6\u0EE9\u0EE0',
			'\u0EE9\u0EEA\u0EEA\u0EEB',
			'\u0EEB\u0EEC\x07\u015F\u0EEC\u0287',
			'\u0EED\u0EEE\x07\u0EEE\u0EEF\x07',
			'\u0EEF\u0EF0\u028A\u0146\u0EF0\u0289',
			'\u0EF1\u0EF5\u028E\u0148\u0EF2\u0EF5',
			'\u0290\u0149\u0EF3\u0EF5\u028C\u0147\u0EF4\u0EF1',
			'\u0EF4\u0EF2\u0EF4\u0EF3',
			'\u0EF5\u028B\u0EF6\u0EF7\x07',
			'\u015E\u0EF7\u0EF8\x07\u015F\u0EF8\u028D',
			'\u0EF9\u0EFA	\u0EFA\u0EFB\x07',
			'\u015E\u0EFB\u0F00\u02F8\u017D\u0EFC\u0EFD\x07',
			'\u015C\u0EFD\u0EFF\u02F8\u017D\u0EFE\u0EFC',
			'\u0EFF\u0F02\u0F00\u0EFE',
			'\u0F00\u0F01\u0F01\u0F03',
			'\u0F02\u0F00\u0F03\u0F04\x07',
			'\u015F\u0F04\u028F\u0F05\u0F0A',
			'\u029E\u0150\u0F06\u0F07\x07\x97\u0F07\u0F0B\x07',
			'\xE7\u0F08\u0F09\x07\x97\u0F09\u0F0B\x07',
			'\xE8\u0F0A\u0F06\u0F0A\u0F08',
			'\u0F0A\u0F0B\u0F0B\u0F19',
			'\u0F0C\u0F0D\x07\xF5\u0F0D\u0F0E\x07',
			'\xF6\u0F0E\u0F0F\x07\u015E\u0F0F\u0F14',
			'\u0292\u014A\u0F10\u0F11\x07\u015C\u0F11\u0F13',
			'\u0292\u014A\u0F12\u0F10\u0F13\u0F16',
			'\u0F14\u0F12\u0F14\u0F15',
			'\u0F15\u0F17\u0F16\u0F14',
			'\u0F17\u0F18\x07\u015F\u0F18\u0F1A',
			'\u0F19\u0F0C\u0F19\u0F1A',
			'\u0F1A\u0291\u0F1B\u0F1E',
			'\u0294\u014B\u0F1C\u0F1E\u0296\u014C\u0F1D\u0F1B',
			'\u0F1D\u0F1C\u0F1E\u0293',
			'\u0F1F\u0F21\x07\u015E\u0F20\u0F22',
			'\u02F8\u017D\u0F21\u0F20\u0F21\u0F22',
			'\u0F22\u0F27\u0F23\u0F24\x07',
			'\u015C\u0F24\u0F26\u02F8\u017D\u0F25\u0F23',
			'\u0F26\u0F29\u0F27\u0F25',
			'\u0F27\u0F28\u0F28\u0F2A',
			'\u0F29\u0F27\u0F2A\u0F2B\x07',
			'\u015F\u0F2B\u0295\u0F2C\u0F2D',
			'\u02F8\u017D\u0F2D\u0297\u0F2E\u0F2F\x07',
			'\u0F2F\u0F30\u029A\u014E\u0F30\u0299',
			'\u0F31\u0F32\u02F8\u017D\u0F32\u029B',
			'\u0F33\u0F34\x07\u015E\u0F34\u0F35',
			'\u029E\u0150\u0F35\u0F36\x07\u015F\u0F36\u029D',
			'\u0F37\u0F39\u02F8\u017D\u0F38\u0F3A',
			'\u02A0\u0151\u0F39\u0F38\u0F39\u0F3A',
			'\u0F3A\u029F\u0F3B\u0F3C\x07',
			'\u015C\u0F3C\u0F3E\u02F8\u017D\u0F3D\u0F3B',
			'\u0F3E\u0F3F\u0F3F\u0F3D',
			'\u0F3F\u0F40\u0F40\u02A1',
			'\u0F41\u0F44\u029C\u014F\u0F42\u0F44',
			'\u029E\u0150\u0F43\u0F41\u0F43\u0F42',
			'\u0F44\u02A3\u0F45\u0F46\x07',
			'\u015E\u0F46\u0F4B\u01AC\xD7\u0F47\u0F48\x07',
			'\u015C\u0F48\u0F4A\u01AC\xD7\u0F49\u0F47',
			'\u0F4A\u0F4D\u0F4B\u0F49',
			'\u0F4B\u0F4C\u0F4C\u0F4E',
			'\u0F4D\u0F4B\u0F4E\u0F4F\x07',
			'\u015F\u0F4F\u02A5\u0F50\u0F55',
			'\u01AC\xD7\u0F51\u0F52\x07\u015C\u0F52\u0F54',
			'\u01AC\xD7\u0F53\u0F51\u0F54\u0F57',
			'\u0F55\u0F53\u0F55\u0F56',
			'\u0F56\u02A7\u0F57\u0F55',
			'\u0F58\u0F59\x07\u0F59\u0F5A\x07',
			'\u0F5A\u0F5F\u01AC\xD7\u0F5B\u0F5C\x07',
			'\u015C\u0F5C\u0F5E\u01AC\xD7\u0F5D\u0F5B',
			'\u0F5E\u0F61\u0F5F\u0F5D',
			'\u0F5F\u0F60\u0F60\u02A9',
			'\u0F61\u0F5F\u0F62\u0F63\x07',
			'5\u0F63\u0F64\x07\u0F64\u0F65',
			'\u02A2\u0152\u0F65\u02AB\u0F66\u0F67\x07',
			'%\u0F67\u0F68\x07\u0F68\u0F69',
			'\u02A2\u0152\u0F69\u02AD\u0F6A\u0F6B\x07',
			'6\u0F6B\u0F6C\x07\u0F6C\u0F6D',
			'\u02A2\u0152\u0F6D\u02AF\u0F6E\u0F6F\x07',
			'7\u0F6F\u0F72\x07\u0F70\u0F73',
			'\u02A4\u0153\u0F71\u0F73\u02A6\u0154\u0F72\u0F70',
			'\u0F72\u0F71\u0F73\u02B1',
			'\u0F74\u0F75\u02B4\u015B\u0F75\u0F84\x07',
			'\u015E\u0F76\u0F85\x07\u016E\u0F77\u0F79	',
			'\u0F78\u0F77\u0F78\u0F79',
			'\u0F79\u0F82\u0F7A\u0F7F',
			'\u0234\u011B\u0F7B\u0F7C\x07\u015C\u0F7C\u0F7E',
			'\u0234\u011B\u0F7D\u0F7B\u0F7E\u0F81',
			'\u0F7F\u0F7D\u0F7F\u0F80',
			'\u0F80\u0F83\u0F81\u0F7F',
			'\u0F82\u0F7A\u0F82\u0F83',
			'\u0F83\u0F85\u0F84\u0F76',
			'\u0F84\u0F78\u0F85\u0F86',
			'\u0F86\u0F89\x07\u015F\u0F87\u0F88\x07',
			'\xF4\u0F88\u0F8A\u023C\u011F\u0F89\u0F87',
			'\u0F89\u0F8A\u0F8A\u02B3',
			'\u0F8B\u0F8E\u031A\u018E\u0F8C\u0F8E',
			'\u0320\u0191\u0F8D\u0F8B\u0F8D\u0F8C',
			'\u0F8E\u02B5\u0F8F\u0F90\x07',
			'\x87\u0F90\u0F91\x07\u015E\u0F91\u0F92',
			'\u02F8\u017D\u0F92\u0F93\x07\u0F93\u0F94',
			'\u01D6\xEC\u0F94\u0F95\x07\u015F\u0F95\u02B7',
			'\u0F96\u0F97\x07\xA4\u0F97\u0F9D',
			'\u02F8\u017D\u0F98\u0F99\x07\xA5\u0F99\u0F9A',
			'\u02F8\u017D\u0F9A\u0F9B\x07\xA6\u0F9B\u0F9C',
			'\u02F8\u017D\u0F9C\u0F9E\u0F9D\u0F98',
			'\u0F9E\u0F9F\u0F9F\u0F9D',
			'\u0F9F\u0FA0\u0FA0\u0FA3',
			'\u0FA1\u0FA2\x07\xA7\u0FA2\u0FA4',
			'\u02F8\u017D\u0FA3\u0FA1\u0FA3\u0FA4',
			'\u0FA4\u0FA5\u0FA5\u0FA6\x07',
			'\xA8\u0FA6\u02B9\u0FA7\u0FAD\x07',
			'\xA4\u0FA8\u0FA9\x07\xA5\u0FA9\u0FAA',
			'\u02F8\u017D\u0FAA\u0FAB\x07\xA6\u0FAB\u0FAC',
			'\u02F8\u017D\u0FAC\u0FAE\u0FAD\u0FA8',
			'\u0FAE\u0FAF\u0FAF\u0FAD',
			'\u0FAF\u0FB0\u0FB0\u0FB3',
			'\u0FB1\u0FB2\x07\xA7\u0FB2\u0FB4',
			'\u02F8\u017D\u0FB3\u0FB1\u0FB3\u0FB4',
			'\u0FB4\u0FB5\u0FB5\u0FB6\x07',
			'\xA8\u0FB6\u02BB\u0FB7\u0FB8\x07',
			'\u012F\u0FB8\u0FB9\x07\u015E\u0FB9\u0FBC',
			'\u02F8\u017D\u0FBA\u0FBB\x07M\u0FBB\u0FBD',
			'\u02BE\u0160\u0FBC\u0FBA\u0FBC\u0FBD',
			'\u0FBD\u0FBE\u0FBE\u0FBF\x07',
			'\u015F\u0FBF\u02BD\u0FC0\u0FC1	',
			'\u0FC1\u02BF\u0FC2\u0FC3\x07',
			'\u012E\u0FC3\u0FC4\x07\u015E\u0FC4\u0FC5',
			'\u02C2\u0162\u0FC5\u0FC6\x07\u0FC6\u0FC7',
			'\u02F8\u017D\u0FC7\u0FC8\x07\u015F\u0FC8\u02C1',
			'\u0FC9\u0FCA	\u0FCA\u02C3',
			'\u0FCB\u0FD8\u02D2\u016A\u0FCC\u0FD8\x07',
			'\u017D\u0FCD\u0FD8\u02CA\u0166\u0FCE\u0FD8',
			'\u02CC\u0167\u0FCF\u0FD8\u02CE\u0168\u0FD0\u0FD8\x07',
			'\u0178\u0FD1\u0FD8\u02C6\u0164\u0FD2\u0FD8\x07',
			'\u017A\u0FD3\u0FD8\x07\u017B\u0FD4\u0FD8',
			'\u02C8\u0165\u0FD5\u0FD8\u0304\u0183\u0FD6\u0FD8\x07',
			'B\u0FD7\u0FCB\u0FD7\u0FCC',
			'\u0FD7\u0FCD\u0FD7\u0FCE',
			'\u0FD7\u0FCF\u0FD7\u0FD0',
			'\u0FD7\u0FD1\u0FD7\u0FD2',
			'\u0FD7\u0FD3\u0FD7\u0FD4',
			'\u0FD7\u0FD5\u0FD7\u0FD6',
			'\u0FD8\u02C5\u0FD9\u0FDB\x07',
			'\u0178\u0FDA\u0FDC\x07\u0178\u0FDB\u0FDA',
			'\u0FDC\u0FDD\u0FDD\u0FDB',
			'\u0FDD\u0FDE\u0FDE\u02C7',
			'\u0FDF\u0FE0\x07\u0180\u0FE0\u0FE1\x07',
			'\u0179\u0FE1\u02C9\u0FE2\u0FE3\x07',
			'W\u0FE3\u0FE6\x07\u0178\u0FE4\u0FE6\x07',
			'\xF0\u0FE5\u0FE2\u0FE5\u0FE4',
			'\u0FE6\u02CB\u0FE7\u0FE8\x07',
			'Y\u0FE8\u0FEB\x07\u0178\u0FE9\u0FEB\x07',
			'\xF1\u0FEA\u0FE7\u0FEA\u0FE9',
			'\u0FEB\u02CD\u0FEC\u0FED\x07',
			'Z\u0FED\u0FEE\x07\u0178\u0FEE\u02CF',
			'\u0FEF\u0FF0	\u0FF0\u02D1',
			'\u0FF1\u0FF2\u02D0\u0169\u0FF2\u0FF3',
			'\u02D6\u016C\u0FF3\u02D3\u0FF4\u0FF5\x07',
			'\u015E\u0FF5\u0FF6\u02D0\u0169\u0FF6\u0FF7\x07',
			'\u015F\u0FF7\u0FF8\u02D6\u016C\u0FF8\u1004',
			'\u0FF9\u0FFA\x07]\u0FFA\u0FFB',
			'\u02D0\u0169\u0FFB\u0FFC\u02D6\u016C\u0FFC\u1004',
			'\u0FFD\u0FFE\x07]\u0FFE\u0FFF\x07',
			'\u015E\u0FFF\u1000\u02F8\u017D\u1000\u1001\x07',
			'\u015F\u1001\u1002\u02D6\u016C\u1002\u1004',
			'\u1003\u0FF4\u1003\u0FF9',
			'\u1003\u0FFD\u1004\u02D5',
			'\u1005\u1006\x07\u010C\u1006\u1007\x07',
			'M\u1007\u1012\x07\u010F\u1008\u1009\x07',
			'\u0111\u1009\u100A\x07M\u100A\u1012\x07',
			'\u0115\u100B\u1012\x07\u010C\u100C\u1012\x07',
			'\u010F\u100D\u1012\x07\u0111\u100E\u1012\x07',
			'\u0113\u100F\u1012\x07\u0114\u1010\u1012\x07',
			'\u0115\u1011\u1005\u1011\u1008',
			'\u1011\u100B\u1011\u100C',
			'\u1011\u100D\u1011\u100E',
			'\u1011\u100F\u1011\u1010',
			'\u1012\u02D7\u1013\u101F',
			'\u02C4\u0163\u1014\u101F\u02D4\u016B\u1015\u101F',
			'\u02B6\u015C\u1016\u101F\u02C0\u0161\u1017\u101F',
			'\u02BC\u015F\u1018\u101F\u02B8\u015D\u1019\u101F',
			'\u02BA\u015E\u101A\u101F\u02FA\u017E\u101B\u101F',
			'\u02B2\u015A\u101C\u101F\u024A\u0126\u101D\u101F',
			'\u029C\u014F\u101E\u1013\u101E\u1014',
			'\u101E\u1015\u101E\u1016',
			'\u101E\u1017\u101E\u1018',
			'\u101E\u1019\u101E\u101A',
			'\u101E\u101B\u101E\u101C',
			'\u101E\u101D\u101F\u02D9',
			'\u1020\u1021	\u1021\u02DB',
			'\u1022\u102C\x07B\u1023\u102C\x07',
			'\u1024\u102C\x07\u1025\u1026\x07',
			'	\u1026\u102C\x07B\u1027\u1028\x07	',
			'\u1028\u102C\x07\u1029\u102A\x07	',
			'\u102A\u102C\x07\u102B\u1022',
			'\u102B\u1023\u102B\u1024',
			'\u102B\u1025\u102B\u1027',
			'\u102B\u1029\u102C\u02DD',
			'\u102D\u102E\x07\u0175\u102E\u02DF',
			'\u102F\u1030	\x1B\u1030\u02E1',
			'\u1031\u1032	\u1032\u02E3',
			'\u1033\u1034\x07\u0174\u1034\u02E5',
			'\u1035\u1036\x07\u0171\u1036\u02E7',
			'\u1037\u1038\x07\u0173\u1038\u02E9',
			'\u1039\u103A	\u103A\u02EB',
			'\u103B\u1041\u02EA\u0176\u103C\u1041\x07\u0167',
			'\u103D\u1041\x07\u0168\u103E\u1041\x07\u0169',
			'\u103F\u1041\x07\u016A\u1040\u103B',
			'\u1040\u103C\u1040\u103D',
			'\u1040\u103E\u1040\u103F',
			'\u1041\u02ED\u1042\u1043\x07A',
			'\u1043\u1044\x07\u1044\u1045\x07',
			'\u1045\u02EF\u1046\u104E\x07\u0164',
			'\u1047\u104E\x07\u0165\u1048\u104E\x07\u0166',
			'\u1049\u104A\x07A\u104A\u104B\x07	',
			'\u104B\u104C\x07\u104C\u104E\x07',
			'\u104D\u1046\u104D\u1047',
			'\u104D\u1048\u104D\u1049',
			'\u104E\u02F1\u104F\u1050\x07	',
			'\u1050\u02F3\u1051\u1052\x07\x07',
			'\u1052\u02F5\u1053\u1054\x07\b',
			'\u1054\u02F7\u1055\u1056\b\u017D',
			'\u1056\u105F\u02D8\u016D\u1057\u1058\x07\u0160',
			'\u1058\u1059\u02F8\u017D\u1059\u105A\x07\u0161',
			'\u105A\u105E\u105B\u105C\x07\u015A',
			'\u105C\u105E\u0318\u018D\u105D\u1057',
			'\u105D\u105B\u105E\u1061',
			'\u105F\u105D\u105F\u1060',
			'\u1060\u106F\u1061\u105F',
			'\u1062\u1063\u02DA\u016E\u1063\u1064\u02F8\u017D',
			'\u1064\u106F\u1065\u1066\x07\r',
			'\u1066\u106F\u02FA\u017E\u1067\u1068\u02F2\u017A',
			'\u1068\u1069\u02F8\u017D\u1069\u106F',
			'\u106A\u106B\x07\u015E\u106B\u106C\u02F8\u017D',
			'\u106C\u106D\x07\u015F\u106D\u106F',
			'\u106E\u1055\u106E\u1062',
			'\u106E\u1065\u106E\u1067',
			'\u106E\u106A\u106F\u109E',
			'\u1070\u1071\f\u1071\u1072\u02DE\u0170',
			'\u1072\u1073\u02F8\u017D\u1073\u109D',
			'\u1074\u1075\f\u1075\u1076\u02E0\u0171',
			'\u1076\u1077\u02F8\u017D\u1077\u109D',
			'\u1078\u1079\f\r\u1079\u107A\u02E2\u0172\u107A',
			'\u107B\u02F8\u017D\u107B\u109D\u107C',
			'\u107D\f\f\u107D\u107E\u02E4\u0173\u107E\u107F',
			'\u02F8\u017D\r\u107F\u109D\u1080\u1081',
			'\f\v\u1081\u1082\u02E6\u0174\u1082\u1083',
			'\u02F8\u017D\f\u1083\u109D\u1084\u1085',
			`\f
\u1085\u1086\u02E8\u0175\u1086\u1087`,
			'\u02F8\u017D\v\u1087\u109D\u1088\u108B\f',
			'\x07\u1089\u108C\u02F0\u0179\u108A\u108C',
			'\u02EE\u0178\u108B\u1089\u108B\u108A',
			'\u108C\u108D\u108D\u108E',
			'\u02F8\u017D\b\u108E\u109D\u108F\u1090\f',
			'\u1090\u1091\u02F4\u017B\u1091\u1092\u02F8',
			'\u017D\u1092\u109D\u1093\u1094\f',
			'\u1094\u1095\u02F6\u017C\u1095\u1096\u02F8',
			'\u017D\u1096\u109D\u1097\u1098\f',
			'\u1098\u1099\x07A\u1099\u109D\u02DC',
			'\u016F\u109A\u109B\f	\u109B\u109D\u02FC\u017F',
			'\u109C\u1070\u109C\u1074',
			'\u109C\u1078\u109C\u107C',
			'\u109C\u1080\u109C\u1084',
			'\u109C\u1088\u109C\u108F',
			'\u109C\u1093\u109C\u1097',
			'\u109C\u109A\u109D\u10A0',
			'\u109E\u109C\u109E\u109F',
			'\u109F\u02F9\u10A0\u109E',
			'\u10A1\u10A2\x07\u015E\u10A2\u10A3\u01F2\xFA',
			'\u10A3\u10A4\x07\u015F\u10A4\u02FB',
			'\u10A5\u10A6\u02EC\u0177\u10A6\u10A7\u02F8\u017D',
			'\u10A7\u10AC\u10A8\u10AC\u02FE\u0180',
			'\u10A9\u10AA\x07	\u10AA\u10AC\u0302\u0182',
			'\u10AB\u10A5\u10AB\u10A8',
			'\u10AB\u10A9\u10AC\u02FD',
			'\u10AD\u10AE\x07\xB6\u10AE\u10BB\u0300\u0181',
			'\u10AF\u10B0\x07\xCE\u10B0\u10B1\u02F8\u017D',
			'\u10B1\u10B2\x07\x07\u10B2\u10B3\u02F8\u017D',
			`\u10B3\u10BB\u10B4\u10B5\x07
`,
			'\u10B5\u10B6\x07\v\u10B6\u10BB\u029C\u014F',
			`\u10B7\u10B8\x07
\u10B8\u10B9\x07`,
			'\u10B9\u10BB\u029C\u014F\u10BA\u10AD',
			'\u10BA\u10AF\u10BA\u10B4',
			'\u10BA\u10B7\u10BB\u02FF',
			'\u10BC\u10BF\u02FA\u017E\u10BD\u10BF\u029C\u014F',
			'\u10BE\u10BC\u10BE\u10BD',
			'\u10BF\u0301\u10C0\u10C1\u02EA\u0176',
			'\u10C1\u10C2\u02F8\u017D\u10C2\u10C5',
			'\u10C3\u10C5\u02FE\u0180\u10C4\u10C0',
			'\u10C4\u10C3\u10C5\u0303',
			'\u10C6\u10C7	\u10C7\u0305',
			'\u10C8\u10C9	\u10C9\u0307',
			'\u10CA\u10CC\u0270\u0139\u10CB\u10CD\u030A\u0186',
			'\u10CC\u10CB\u10CC\u10CD',
			'\u10CD\u0309\u10CE\u10CF\x07%',
			'\u10CF\u10D0\x07\u015E\u10D0\u10D5\u030C\u0187',
			'\u10D1\u10D2\x07\u015C\u10D2\u10D4\u030C\u0187',
			'\u10D3\u10D1\u10D4\u10D7',
			'\u10D5\u10D3\u10D5\u10D6',
			'\u10D6\u10D8\u10D7\u10D5',
			'\u10D8\u10D9\x07\u015F\u10D9\u030B',
			'\u10DA\u10DD\u0318\u018D\u10DB\u10DC\x07\u0164',
			'\u10DC\u10DE\u02C4\u0163\u10DD\u10DB',
			'\u10DD\u10DE\u10DE\u030D',
			'\u10DF\u10E0\x07%\u10E0\u10E1\x07\u015E',
			'\u10E1\u10E6\u0310\u0189\u10E2\u10E3\x07\u015C',
			'\u10E3\u10E5\u0310\u0189\u10E4\u10E2',
			'\u10E5\u10E8\u10E6\u10E4',
			'\u10E6\u10E7\u10E7\u10E9',
			'\u10E8\u10E6\u10E9\u10EA\x07\u015F',
			'\u10EA\u030F\u10EB\u10EC\u0318\u018D',
			'\u10EC\u10ED\u0312\u018A\u10ED\u10EE\u02C4\u0163',
			'\u10EE\u0311\u10EF\u10F0	',
			'\u10F0\u0313\u10F1\u10F2	 ',
			'\u10F2\u0315\u10F3\u10F7\u0314\u018B',
			'\u10F4\u10F7\x07\u0178\u10F5\u10F7\u031A\u018E',
			'\u10F6\u10F3\u10F6\u10F4',
			'\u10F6\u10F5\u10F7\u0317',
			'\u10F8\u10FB\x07\u017E\u10F9\u10FB\u031E\u0190',
			'\u10FA\u10F8\u10FA\u10F9',
			'\u10FB\u0319\u10FC\u10FD\u0318\u018D',
			'\u10FD\u10FE\x07\u015A\u10FE\u10FF\u0318\u018D',
			'\u10FF\u1102\u1100\u1102\u0318\u018D',
			'\u1101\u10FC\u1101\u1100',
			'\u1102\u031B\u1103\u1106\u0318\u018D',
			'\u1104\u1106\x07\u017F\u1105\u1103',
			'\u1105\u1104\u1106\u031D',
			'\u1107\u1108	!\u1108\u031F\u1109',
			'\u110A	"\u110A\u0321\u110B\u111A',
			'\u032C\u0197\u110C\u111A\u033C\u019F\u110D\u111A',
			'\u0344\u01A3\u110E\u111A\u0340\u01A1\u110F\u111A',
			'\u0342\u01A2\u1110\u111A\u035A\u01AE\u1111\u111A',
			'\u035C\u01AF\u1112\u111A\u0360\u01B1\u1113\u111A',
			'\u0366\u01B4\u1114\u111A\u0368\u01B5\u1115\u111A',
			'\u036A\u01B6\u1116\u111A\u036C\u01B7\u1117\u111A',
			'\u036E\u01B8\u1118\u111A\u0370\u01B9\u1119\u110B',
			'\u1119\u110C\u1119\u110D',
			'\u1119\u110E\u1119\u110F',
			'\u1119\u1110\u1119\u1111',
			'\u1119\u1112\u1119\u1113',
			'\u1119\u1114\u1119\u1115',
			'\u1119\u1116\u1119\u1117',
			'\u1119\u1118\u111A\u0323',
			'\u111B\u111C\x07\u013D\u111C\u111D',
			'\x07\u0164\u111D\u1123\x07\u017D\u111E\u111F',
			'\x07\u0140\u111F\u1120\x07\u0142\u1120\u1121',
			'\x07\u0164\u1121\u1123\u0346\u01A4\u1122\u111B',
			'\u1122\u111E\u1123\u0325',
			'\u1124\u1129\u0324\u0193\u1125\u1126',
			'\x07\u015C\u1126\u1128\u0324\u0193\u1127\u1125',
			'\u1128\u112B\u1129\u1127',
			'\u1129\u112A\u112A\u0327',
			'\u112B\u1129\u112C\u1130',
			'\x07\u013D\u112D\u112E\x07\u0140\u112E\u1130',
			'\x07\u0142\u112F\u112C\u112F\u112D',
			'\u1130\u0329\u1131\u1136',
			'\u0328\u0195\u1132\u1133\x07\u015C\u1133\u1135',
			'\u0328\u0195\u1134\u1132\u1135\u1138',
			'\u1136\u1134\u1136\u1137',
			'\u1137\u032B\u1138\u1136',
			'\u1139\u113A\x07C\u113A\u113B',
			'\x07\u013B\u113B\u113E\x07\u013C\u113C\u113F',
			'\u032E\u0198\u113D\u113F\u0330\u0199\u113E\u113C',
			'\u113E\u113D\u113F\u032D',
			'\u1140\u1141\u0318\u018D\u1141\u1142',
			`\x07
\u1142\u1143\u0318\u018D\u1143\u032F`,
			'\u1144\u1147\u0318\u018D\u1145\u1146',
			'\x07\x97\u1146\u1148\u0326\u0194\u1147\u1145',
			'\u1147\u1148\u1148\u0331',
			'\u1149\u114A\x07\x97\u114A\u114B',
			'\x07\x89\u114B\u0333\u114C\u114E',
			'\x07\u013F\u114D\u114F\u0332\u019A\u114E\u114D',
			'\u114E\u114F\u114F\u0335',
			'\u1150\u1151\x07\x7F\u1151\u0337',
			'\u1152\u1153\x07\x80\u1153\u0339',
			'\u1154\u1155\x07\u014C\u1155\u033B',
			'\u1156\u1157\x07E\u1157\u1158',
			'\x07\u013B\u1158\u1159\x07\u013C\u1159\u116B',
			'\u0318\u018D\u115A\u116C\x07\u0127\u115B\u116C',
			'\x07\x80\u115C\u115D\x07\x9D\u115D\u116C',
			'\u0326\u0194\u115E\u115F\x07\x9E\u115F\u116C',
			'\u032A\u0196\u1160\u116C\u033E\u01A0\u1161\u1163',
			'\u0334\u019B\u1162\u1164\u0336\u019C\u1163\u1162',
			'\u1163\u1164\u1164\u116A',
			'\u1165\u1167\u0336\u019C\u1166\u1168',
			'\u0334\u019B\u1167\u1166\u1167\u1168',
			'\u1168\u116A\u1169\u1161',
			'\u1169\u1165\u116A\u116C',
			'\u116B\u115A\u116B\u115B',
			'\u116B\u115C\u116B\u115E',
			'\u116B\u1160\u116B\u1169',
			'\u116C\u033D\u116D\u116E',
			'\x07L\u116E\u116F\x07M\u116F\u1170',
			'\u0318\u018D\u1170\u033F\u1171\u1174',
			'\u0336\u019C\u1172\u1174\u0338\u019D\u1173\u1171',
			'\u1173\u1172\u1174\u1175',
			'\u1175\u1176\x07\u0149\u1176\u1177\x07',
			'\u014A\u1177\u0341\u1178\u1184\x07',
			'\x89\u1179\u117A\x07\u014B\u117A\u117B\x07',
			'\u013B\u117B\u117C\x07\u013C\u117C\u117D\x07',
			'\x97\u117D\u1185\u0318\u018D\u117E\u117F\x07',
			'\u013B\u117F\u1180\x07\u013C\u1180\u1181',
			'\u0318\u018D\u1181\u1182\x07\x97\u1182\u1183',
			'\u0318\u018D\u1183\u1185\u1184\u1179',
			'\u1184\u117E\u1185\u0343',
			'\u1186\u1187\x07K\u1187\u1188\x07',
			'\u013B\u1188\u1189\x07\u013C\u1189\u118A',
			'\u0318\u018D\u118A\u0345\u118B\u1190',
			'\u0318\u018D\u118C\u118D\x07\u015A\u118D\u118F',
			'\u0318\u018D\u118E\u118C\u118F\u1192',
			'\u1190\u118E\u1190\u1191',
			'\u1191\u0347\u1192\u1190',
			'\u1193\u1194\u0350\u01A9\u1194\u0349',
			'\u1195\u1196\u0348\u01A5\u1196\u1197\x07',
			'\u1197\u034B\u1198\u119D',
			'\u034E\u01A8\u1199\u119A\x07\b\u119A\u119C',
			'\u034E\u01A8\u119B\u1199\u119C\u119F',
			'\u119D\u119B\u119D\u119E',
			'\u119E\u034D\u119F\u119D',
			'\u11A0\u11A5\u0350\u01A9\u11A1\u11A2\x07',
			'\x07\u11A2\u11A4\u0350\u01A9\u11A3\u11A1',
			'\u11A4\u11A7\u11A5\u11A3',
			'\u11A5\u11A6\u11A6\u034F',
			'\u11A7\u11A5\u11A8\u11A9',
			'\u0318\u018D\u11A9\u11AA\u0354\u01AB\u11AA\u11AB',
			'\u0352\u01AA\u11AB\u0351\u11AC\u11AD	',
			'\u11AD\u0353\u11AE\u11AF\x07',
			'\u016A\u11AF\u0355\u11B0\u11B5\x07',
			'w\u11B1\u11B2\x07\u0143\u11B2\u11B3\x07',
			'M\u11B3\u11B5\u0346\u01A4\u11B4\u11B0',
			'\u11B4\u11B1\u11B5\u0357',
			'\u11B6\u11B7\u0356\u01AC\u11B7\u11B8\x07',
			'\u11B8\u0359\u11B9\u11BA\x07',
			'C\u11BA\u11BB\x07\xD4\u11BB\u11BC',
			'\u0318\u018D\u11BC\u11BD\x07\u015A\u11BD\u11BE',
			'\u0318\u018D\u11BE\u11BF\u035E\u01B0\u11BF\u035B',
			'\u11C0\u11C1\x07E\u11C1\u11C2\x07',
			'\xD4\u11C2\u11C3\u0318\u018D\u11C3\u11C4\x07',
			'\u015A\u11C4\u11D4\u0318\u018D\u11C5\u11D5',
			'\u035E\u01B0\u11C6\u11C7\x07\x88\u11C7\u11C8\x07',
			'M\u11C8\u11C9\x07\u0142\u11C9\u11D5',
			'\u0346\u01A4\u11CA\u11CB\x07K\u11CB\u11CC\x07',
			'\u11CC\u11CD\x07\u0142\u11CD\u11D5',
			'\u0346\u01A4\u11CE\u11CF\x07\x88\u11CF\u11D0\x07',
			'M\u11D0\u11D5\x07\u014C\u11D1\u11D2\x07',
			'K\u11D2\u11D3\x07\u11D3\u11D5\x07',
			'\u014C\u11D4\u11C5\u11D4\u11C6',
			'\u11D4\u11CA\u11D4\u11CE',
			'\u11D4\u11D1\u11D5\u035D',
			'\u11D6\u11D7\x07\xA5\u11D7\u11D8',
			'\u0348\u01A5\u11D8\u11D9\x07\u0144\u11D9\u11DA',
			'\u0356\u01AC\u11DA\u035F\u11DB\u11DC\x07',
			'K\u11DC\u11DD\x07\xD4\u11DD\u11DE',
			'\u0318\u018D\u11DE\u11DF\x07\u015A\u11DF\u11E0',
			'\u0318\u018D\u11E0\u0361\u11E1\u11E2\x07',
			'\u0145\u11E2\u11E3\x07\u0164\u11E3\u11EE\x07',
			'\u017D\u11E4\u11E5\x07\u013D\u11E5\u11E6\x07',
			'\u0164\u11E6\u11EE\x07\u017D\u11E7\u11E8\x07',
			'\u0146\u11E8\u11E9\x07\u0164\u11E9\u11EE\x07',
			'\u0178\u11EA\u11EB\x07\u0147\u11EB\u11EC\x07',
			'\u0164\u11EC\u11EE\u0346\u01A4\u11ED\u11E1',
			'\u11ED\u11E4\u11ED\u11E7',
			'\u11ED\u11EA\u11EE\u0363',
			'\u11EF\u11F4\u0362\u01B2\u11F0\u11F1\x07',
			'\u015C\u11F1\u11F3\u0362\u01B2\u11F2\u11F0',
			'\u11F3\u11F6\u11F4\u11F2',
			'\u11F4\u11F5\u11F5\u0365',
			'\u11F6\u11F4\u11F7\u11F8\x07',
			'C\u11F8\u11F9\x07\u0142\u11F9\u11FA',
			'\u0318\u018D\u11FA\u11FB\x07\u015A\u11FB\u11FC',
			'\u0346\u01A4\u11FC\u11FD\x07\x97\u11FD\u11FE',
			'\u0364\u01B3\u11FE\u0367\u11FF\u1200\x07',
			'E\u1200\u1201\x07\u0142\u1201\u1202',
			'\u0318\u018D\u1202\u1203\x07\u015A\u1203\u120E',
			'\u0346\u01A4\u1204\u1205\x07\x9D\u1205\u120F',
			'\u0364\u01B3\u1206\u1207\x07\x9E\u1207\u120F\x07',
			'\u0146\u1208\u1209\x07\x88\u1209\u120A\x07',
			'\xD4\u120A\u120F\u0318\u018D\u120B\u120C\x07',
			'K\u120C\u120D\x07\xD4\u120D\u120F',
			'\u0318\u018D\u120E\u1204\u120E\u1206',
			'\u120E\u1208\u120E\u120B',
			'\u120F\u0369\u1210\u1211\x07',
			'K\u1211\u1212\x07\u0142\u1212\u1213',
			'\u0318\u018D\u1213\u1214\x07\u015A\u1214\u1215',
			'\u0346\u01A4\u1215\u036B\u1216\u1217\x07',
			'C\u1217\u1218	#\u1218\u1219\x07\u0148',
			'\u1219\u121A\x07\u0178\u121A\u121B\x07\xB6',
			'\u121B\u121F\u0318\u018D\u121C\u121D\x07M',
			'\u121D\u1220\u0346\u01A4\u121E\u1220\u033A\u019E',
			'\u121F\u121C\u121F\u121E',
			'\u1220\u1224\u1221\u1222\x07\x97',
			'\u1222\u1223\x07\u1223\u1225\x07\u017D',
			'\u1224\u1221\u1224\u1225',
			'\u1225\u036D\u1226\u1227\x07E',
			'\u1227\u1228	#\u1228\u1229\x07\u0148',
			'\u1229\u122A\x07\u0178\u122A\u122B\x07\xB6',
			'\u122B\u122F\u0318\u018D\u122C\u122D\x07M',
			'\u122D\u1230\u0346\u01A4\u122E\u1230\u033A\u019E',
			'\u122F\u122C\u122F\u122E',
			'\u1230\u1234\u1231\u1232\x07\x97',
			'\u1232\u1233\x07\u1233\u1235\x07\u017D',
			'\u1234\u1231\u1234\u1235',
			'\u1235\u036F\u1236\u1237\x07K',
			'\u1237\u1238	#\u1238\u1239\x07\u0148\u1239',
			'\u123A\x07\u0178\u123A\u123B\x07\xB6\u123B',
			'\u123C\u0318\u018D\u123C\u0371\u0216',
			'\u0376\u0378\u0383\u0389\u038F\u039A\u039D\u039F\u03B1\u03B6\u03BB\u03C1',
			'\u03C5\u03D2\u03D6\u03DA\u03DF\u03E6\u03EC\u03F0\u03F2\u03F6\u03FD\u03FF',
			'\u0405\u0410\u0418\u041C\u0449\u0464\u0468\u046B\u0470\u047E\u0487\u048B',
			'\u0492\u0495\u0499\u049F\u04A2\u04A5\u04A8\u04AB\u04B1\u04BC\u04BE\u04C3',
			'\u04C5\u04CF\u04D4\u04D8\u04DB\u04E6\u04F6\u0505\u0509\u0519\u0526\u052A',
			'\u052F\u054A\u054F\u0554\u055C\u0562\u0566\u0569\u056C\u0572\u0579\u0583',
			'\u0587\u058C\u0590\u0596\u059D\u05A4\u05AC\u05B3\u05B7\u05BA\u05C2\u05C5',
			'\u05CD\u05D0\u05D4\u05DE\u05E3\u05E9\u05F6\u0606\u0616\u0626\u062D\u0639',
			'\u063D\u0642\u0647\u064A\u064D\u0651\u0654\u0657\u066D\u0670\u0677\u0684',
			'\u0689\u0692\u0699\u069F\u06A7\u06AD\u06BD\u06C0\u06CA\u06D2\u06D6\u06D9',
			'\u06DD\u06E1\u06E4\u06E9\u06EE\u06F4\u06FF\u0701\u0705\u070B\u0711\u0716',
			'\u071C\u0721\u0728\u072D\u0735\u073A\u0741\u0747\u074F\u0756\u075B\u0763',
			'\u076A\u076D\u0770\u0772\u0780\u0782\u0788\u0797\u07A8\u07AD\u07B1\u07B5',
			'\u07BC\u07C3\u07C9\u07CD\u07D0\u07D7\u07EE\u07F3\u07F7\u07FF\u0807\u080B',
			'\u0811\u0816\u081D\u0820\u0826\u082D\u0835\u083E\u0847\u085B\u0861\u0864',
			'\u0866\u086D\u0877\u087F\u0883\u0887\u0894\u089D\u08A3\u08A7\u08AE\u08B1',
			'\u08B4\u08B7\u08C0\u08C4\u08C7\u08CA\u08CD\u08D0\u08D3\u08E1\u08E9\u08EF',
			'\u08F3\u0905\u0915\u0925\u0929\u0938\u093E\u0941\u0944\u0947\u094A\u094E',
			'\u095C\u0964\u0967\u0970\u0977\u097B\u0982\u09A1\u09A9\u09B9\u09C9\u09D1',
			'\u09D9\u09E1\u09EC\u09F0\u09F8\u0A01\u0A04\u0A0D\u0A11\u0A13\u0A17\u0A1B',
			'\u0A21\u0A25\u0A2F\u0A38\u0A43\u0A47\u0A4E\u0A5A\u0A61\u0A69\u0A6D\u0A70',
			'\u0A77\u0A7D\u0A81\u0A84\u0A8A\u0A8E\u0A92\u0A97\u0A9B\u0A9F\u0AA3\u0AA7',
			'\u0AAF\u0AB3\u0AB9\u0ABD\u0AC1\u0AC5\u0ACD\u0AD1\u0AD5\u0ADD\u0AE2\u0AE7',
			'\u0AF4\u0AFD\u0B05\u0B0F\u0B21\u0B24\u0B2E\u0B4A\u0B50\u0B56\u0B5C\u0B5E',
			'\u0B61\u0B67\u0B6F\u0B7E\u0B85\u0B8A\u0B8D\u0B91\u0B94\u0B97\u0B9A\u0B9D',
			'\u0BA3\u0BA7\u0BAA\u0BAD\u0BB0\u0BB3\u0BB6\u0BBD\u0BC0\u0BC7\u0BCA\u0BCD',
			'\u0BD0\u0BD3\u0BD6\u0BD9\u0BDC\u0BDF\u0BE2\u0BE6\u0BE9\u0BEC\u0BEF\u0BF2',
			'\u0BF5\u0BF8\u0BFB\u0BFE\u0C01\u0C03\u0C09\u0C0E\u0C15\u0C17\u0C1A\u0C1F',
			'\u0C22\u0C26\u0C2B\u0C32\u0C38\u0C44\u0C4B\u0C51\u0C5A\u0C5D\u0C61\u0C67',
			'\u0C71\u0C75\u0C80\u0C86\u0C89\u0C93\u0C95\u0C99\u0CA0\u0CB6\u0CBD\u0CC1',
			'\u0CC4\u0CC9\u0CCC\u0CD3\u0CDA\u0CDD\u0CE5\u0CEB\u0CED\u0CEF\u0CF2\u0CF5',
			'\u0CFA\u0D04\u0D09\u0D0B\u0D11\u0D14\u0D17\u0D1F\u0D25\u0D27\u0D29\u0D2C',
			'\u0D2F\u0D33\u0D3A\u0D43\u0D4D\u0D50\u0D53\u0D56\u0D5A\u0D64\u0D6E\u0D76',
			'\u0D7E\u0D85\u0D8E\u0D96\u0DA2\u0DA5\u0DAB\u0DB2\u0DB9\u0DC0\u0DC7\u0DD0',
			'\u0DD4\u0DDB\u0DE0\u0DE4\u0DF7\u0DFC\u0E01\u0E07\u0E14\u0E17\u0E1A\u0E26',
			'\u0E29\u0E2C\u0E34\u0E3D\u0E42\u0E44\u0E55\u0E58\u0E65\u0E69\u0E6D\u0E70',
			'\u0E73\u0E76\u0E7A\u0E7D\u0E80\u0E87\u0E8C\u0E94\u0E9A\u0E9F\u0EA3\u0EA8',
			'\u0EAF\u0EBD\u0EC0\u0EC4\u0ED3\u0EDD\u0EE6\u0EE9\u0EF4\u0F00\u0F0A\u0F14',
			'\u0F19\u0F1D\u0F21\u0F27\u0F39\u0F3F\u0F43\u0F4B\u0F55\u0F5F\u0F72\u0F78',
			'\u0F7F\u0F82\u0F84\u0F89\u0F8D\u0F9F\u0FA3\u0FAF\u0FB3\u0FBC\u0FD7\u0FDD',
			'\u0FE5\u0FEA\u1003\u1011\u101E\u102B\u1040\u104D\u105D\u105F\u106E\u108B',
			'\u109C\u109E\u10AB\u10BA\u10BE\u10C4\u10CC\u10D5\u10DD\u10E6\u10F6\u10FA',
			'\u1101\u1105\u1119\u1122\u1129\u112F\u1136\u113E\u1147\u114E\u1163\u1167',
			'\u1169\u116B\u1173\u1184\u1190\u119D\u11A5\u11B4\u11D4\u11ED\u11F4\u120E',
			'\u121F\u1224\u122F\u1234',
		].join(''),
		o5 = new s.atn.ATNDeserializer().deserialize(lE),
		dE = o5.decisionToState.map(function (u, e) {
			return new s.dfa.DFA(u, e);
		}),
		fE = new s.PredictionContextCache(),
		_E = [
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			null,
			"'.'",
			"':'",
			"','",
			"';'",
			"'('",
			"')'",
			"'['",
			"']'",
			"'{'",
			"'}'",
			null,
			"'<=>'",
			null,
			"'<='",
			"'<'",
			"'>='",
			"'>'",
			"'/'",
			"'+'",
			"'-'",
			"'*'",
			"'%'",
			"'DIV'",
			"'&'",
			"'~'",
			"'|'",
			"'||'",
			"'^'",
			"'?'",
			"'$'",
		],
		EE = [
			null,
			'KW_TRUE',
			'KW_FALSE',
			'KW_ALL',
			'KW_NONE',
			'KW_AND',
			'KW_OR',
			'KW_NOT',
			'KW_LIKE',
			'KW_ANY',
			'KW_IF',
			'KW_EXISTS',
			'KW_ASC',
			'KW_DESC',
			'KW_NULLS',
			'KW_LAST',
			'KW_ORDER',
			'KW_GROUP',
			'KW_BY',
			'KW_HAVING',
			'KW_WHERE',
			'KW_FROM',
			'KW_AS',
			'KW_SELECT',
			'KW_DISTINCT',
			'KW_INSERT',
			'KW_OVERWRITE',
			'KW_OUTER',
			'KW_UNIQUEJOIN',
			'KW_PRESERVE',
			'KW_JOIN',
			'KW_LEFT',
			'KW_RIGHT',
			'KW_FULL',
			'KW_ON',
			'KW_PARTITION',
			'KW_PARTITIONS',
			'KW_TABLE',
			'KW_TABLES',
			'KW_COLUMNS',
			'KW_INDEX',
			'KW_INDEXES',
			'KW_REBUILD',
			'KW_FUNCTIONS',
			'KW_SHOW',
			'KW_MSCK',
			'KW_REPAIR',
			'KW_DIRECTORY',
			'KW_LOCAL',
			'KW_TRANSFORM',
			'KW_USING',
			'KW_CLUSTER',
			'KW_DISTRIBUTE',
			'KW_SORT',
			'KW_UNION',
			'KW_EXCEPT',
			'KW_LOAD',
			'KW_EXPORT',
			'KW_IMPORT',
			'KW_REPLICATION',
			'KW_METADATA',
			'KW_DATA',
			'KW_INPATH',
			'KW_IS',
			'KW_NULL',
			'KW_CREATE',
			'KW_EXTERNAL',
			'KW_ALTER',
			'KW_CHANGE',
			'KW_COLUMN',
			'KW_FIRST',
			'KW_AFTER',
			'KW_DESCRIBE',
			'KW_DROP',
			'KW_RENAME',
			'KW_TO',
			'KW_COMMENT',
			'KW_BOOLEAN',
			'KW_TINYINT',
			'KW_SMALLINT',
			'KW_INT',
			'KW_BIGINT',
			'KW_FLOAT',
			'KW_DOUBLE',
			'KW_PRECISION',
			'KW_DATE',
			'KW_DATETIME',
			'KW_TIMESTAMP',
			'KW_TIMESTAMPLOCALTZ',
			'KW_TIME',
			'KW_ZONE',
			'KW_INTERVAL',
			'KW_DECIMAL',
			'KW_STRING',
			'KW_CHAR',
			'KW_VARCHAR',
			'KW_ARRAY',
			'KW_STRUCT',
			'KW_MAP',
			'KW_UNIONTYPE',
			'KW_REDUCE',
			'KW_PARTITIONED',
			'KW_CLUSTERED',
			'KW_SORTED',
			'KW_INTO',
			'KW_BUCKETS',
			'KW_ROW',
			'KW_ROWS',
			'KW_FORMAT',
			'KW_DELIMITED',
			'KW_FIELDS',
			'KW_TERMINATED',
			'KW_ESCAPED',
			'KW_COLLECTION',
			'KW_ITEMS',
			'KW_KEYS',
			'KW_KEY_TYPE',
			'KW_KILL',
			'KW_LINES',
			'KW_STORED',
			'KW_FILEFORMAT',
			'KW_INPUTFORMAT',
			'KW_OUTPUTFORMAT',
			'KW_INPUTDRIVER',
			'KW_OUTPUTDRIVER',
			'KW_ENABLE',
			'KW_DISABLE',
			'KW_LOCATION',
			'KW_TABLESAMPLE',
			'KW_BUCKET',
			'KW_OUT',
			'KW_OF',
			'KW_PERCENT',
			'KW_CAST',
			'KW_ADD',
			'KW_REPLACE',
			'KW_RLIKE',
			'KW_REGEXP',
			'KW_TEMPORARY',
			'KW_FUNCTION',
			'KW_MACRO',
			'KW_FILE',
			'KW_JAR',
			'KW_EXPLAIN',
			'KW_EXTENDED',
			'KW_FORMATTED',
			'KW_DEPENDENCY',
			'KW_LOGICAL',
			'KW_SERDE',
			'KW_WITH',
			'KW_DEFERRED',
			'KW_SERDEPROPERTIES',
			'KW_DBPROPERTIES',
			'KW_LIMIT',
			'KW_OFFSET',
			'KW_SET',
			'KW_UNSET',
			'KW_TBLPROPERTIES',
			'KW_IDXPROPERTIES',
			'KW_VALUE_TYPE',
			'KW_ELEM_TYPE',
			'KW_DEFINED',
			'KW_CASE',
			'KW_WHEN',
			'KW_THEN',
			'KW_ELSE',
			'KW_END',
			'KW_MAPJOIN',
			'KW_STREAMTABLE',
			'KW_CLUSTERSTATUS',
			'KW_UTC',
			'KW_UTCTIMESTAMP',
			'KW_LONG',
			'KW_DELETE',
			'KW_PLUS',
			'KW_MINUS',
			'KW_FETCH',
			'KW_INTERSECT',
			'KW_VIEW',
			'KW_VIEWS',
			'KW_IN',
			'KW_DATABASE',
			'KW_DATABASES',
			'KW_MATERIALIZED',
			'KW_SCHEMA',
			'KW_SCHEMAS',
			'KW_GRANT',
			'KW_REVOKE',
			'KW_SSL',
			'KW_UNDO',
			'KW_LOCK',
			'KW_LOCKS',
			'KW_UNLOCK',
			'KW_SHARED',
			'KW_EXCLUSIVE',
			'KW_PROCEDURE',
			'KW_UNSIGNED',
			'KW_WHILE',
			'KW_READ',
			'KW_READS',
			'KW_PURGE',
			'KW_RANGE',
			'KW_ANALYZE',
			'KW_BEFORE',
			'KW_BETWEEN',
			'KW_BOTH',
			'KW_BINARY',
			'KW_CROSS',
			'KW_CONTINUE',
			'KW_CURSOR',
			'KW_TRIGGER',
			'KW_RECORDREADER',
			'KW_RECORDWRITER',
			'KW_SEMI',
			'KW_LATERAL',
			'KW_TOUCH',
			'KW_ARCHIVE',
			'KW_UNARCHIVE',
			'KW_COMPUTE',
			'KW_STATISTICS',
			'KW_USE',
			'KW_OPTIONS',
			'KW_OPTION',
			'KW_CONCATENATE',
			'KW_SHOW_DATABASE',
			'KW_UPDATE',
			'KW_RESTRICT',
			'KW_CASCADE',
			'KW_SKEWED',
			'KW_ROLLUP',
			'KW_CUBE',
			'KW_DIRECTORIES',
			'KW_FOR',
			'KW_WINDOW',
			'KW_UNBOUNDED',
			'KW_PRECEDING',
			'KW_FOLLOWING',
			'KW_CURRENT',
			'KW_CURRENT_DATE',
			'KW_CURRENT_TIMESTAMP',
			'KW_LESS',
			'KW_MORE',
			'KW_OVER',
			'KW_GROUPING',
			'KW_SETS',
			'KW_TRUNCATE',
			'KW_NOSCAN',
			'KW_USER',
			'KW_ROLE',
			'KW_ROLES',
			'KW_INNER',
			'KW_EXCHANGE',
			'KW_URI',
			'KW_SERVER',
			'KW_ADMIN',
			'KW_OWNER',
			'KW_PRINCIPALS',
			'KW_COMPACT',
			'KW_COMPACTIONS',
			'KW_TRANSACTIONS',
			'KW_REWRITE',
			'KW_AUTHORIZATION',
			'KW_REOPTIMIZATION',
			'KW_CONF',
			'KW_VALUES',
			'KW_RELOAD',
			'KW_YEAR',
			'KW_QUERY',
			'KW_QUARTER',
			'KW_MONTH',
			'KW_WEEK',
			'KW_DAY',
			'KW_DOW',
			'KW_HOUR',
			'KW_MINUTE',
			'KW_SECOND',
			'KW_START',
			'KW_TRANSACTION',
			'KW_COMMIT',
			'KW_ROLLBACK',
			'KW_WORK',
			'KW_ONLY',
			'KW_WRITE',
			'KW_ISOLATION',
			'KW_LEVEL',
			'KW_SNAPSHOT',
			'KW_AUTOCOMMIT',
			'KW_CACHE',
			'KW_PRIMARY',
			'KW_FOREIGN',
			'KW_REFERENCES',
			'KW_CONSTRAINT',
			'KW_ENFORCED',
			'KW_VALIDATE',
			'KW_NOVALIDATE',
			'KW_RELY',
			'KW_NORELY',
			'KW_UNIQUE',
			'KW_KEY',
			'KW_ABORT',
			'KW_EXTRACT',
			'KW_FLOOR',
			'KW_MERGE',
			'KW_MATCHED',
			'KW_REPL',
			'KW_DUMP',
			'KW_STATUS',
			'KW_VECTORIZATION',
			'KW_SUMMARY',
			'KW_OPERATOR',
			'KW_EXPRESSION',
			'KW_DETAIL',
			'KW_WAIT',
			'KW_RESOURCE',
			'KW_PLAN',
			'KW_QUERY_PARALLELISM',
			'KW_PLANS',
			'KW_ACTIVATE',
			'KW_DEFAULT',
			'KW_CHECK',
			'KW_POOL',
			'KW_MOVE',
			'KW_DO',
			'KW_ALLOC_FRACTION',
			'KW_SCHEDULING_POLICY',
			'KW_PATH',
			'KW_MAPPING',
			'KW_WORKLOAD',
			'KW_MANAGEMENT',
			'KW_ACTIVE',
			'KW_UNMANAGED',
			'KW_APPLICATION',
			'KW_SYNC',
			'KW_SEQUENCEFILE',
			'KW_TEXTFILE',
			'KW_RCFILE',
			'KW_ORC',
			'KW_PARQUET',
			'KW_DELTA',
			'KW_AVRO',
			'KW_CSV',
			'KW_JSON',
			'KW_JSONFILE',
			'KW_BLOOMFILTER',
			'DOT',
			'COLON',
			'COMMA',
			'SEMICOLON',
			'LPAREN',
			'RPAREN',
			'LSQUARE',
			'RSQUARE',
			'LCURLY',
			'RCURLY',
			'EQUAL',
			'EQUAL_NS',
			'NOTEQUAL',
			'LESSTHANOREQUALTO',
			'LESSTHAN',
			'GREATERTHANOREQUALTO',
			'GREATERTHAN',
			'DIVIDE',
			'PLUS',
			'MINUS',
			'STAR',
			'MOD',
			'DIV',
			'AMPERSAND',
			'TILDE',
			'BITWISEOR',
			'CONCATENATE',
			'BITWISEXOR',
			'QUESTION',
			'DOLLAR',
			'StringLiteral',
			'CharSetLiteral',
			'IntegralLiteral',
			'NumberLiteral',
			'ByteLengthLiteral',
			'Number',
			'Identifier',
			'QuotedIdentifier',
			'CharSetName',
			'WS',
			'LINE_COMMENT',
			'QUERY_HINT',
			'SHOW_HINT',
			'HIDDEN_HINT',
		],
		TE = [
			'statements',
			'statementSeparator',
			'empty',
			'statement',
			'explainStatement',
			'explainOption',
			'vectorizationOnly',
			'vectorizatonDetail',
			'execStatement',
			'loadStatement',
			'replicationClause',
			'exportStatement',
			'importStatement',
			'replDumpStatement',
			'replLoadStatement',
			'replConfigs',
			'replConfigsList',
			'replStatusStatement',
			'ddlStatement',
			'ifExists',
			'restrictOrCascade',
			'ifNotExists',
			'rewriteEnabled',
			'rewriteDisabled',
			'storedAsDirs',
			'orReplace',
			'createDatabaseStatement',
			'dbLocation',
			'dbProperties',
			'dbPropertiesList',
			'switchDatabaseStatement',
			'dropDatabaseStatement',
			'databaseComment',
			'createTableStatement',
			'truncateTableStatement',
			'dropTableStatement',
			'alterStatement',
			'alterTableStatementSuffix',
			'alterTblPartitionStatementSuffix',
			'alterStatementPartitionKeyType',
			'alterViewStatementSuffix',
			'alterMaterializedViewStatementSuffix',
			'alterDatabaseStatementSuffix',
			'alterDatabaseSuffixProperties',
			'alterDatabaseSuffixSetOwner',
			'alterDatabaseSuffixSetLocation',
			'alterStatementSuffixRename',
			'alterStatementSuffixAddCol',
			'alterStatementSuffixAddConstraint',
			'alterStatementSuffixUpdateColumns',
			'alterStatementSuffixDropConstraint',
			'alterStatementSuffixRenameCol',
			'alterStatementSuffixUpdateStatsCol',
			'alterStatementSuffixUpdateStats',
			'alterStatementChangeColPosition',
			'alterStatementSuffixAddPartitions',
			'alterStatementSuffixAddPartitionsElement',
			'alterStatementSuffixTouch',
			'alterStatementSuffixArchive',
			'alterStatementSuffixUnArchive',
			'partitionLocation',
			'alterStatementSuffixDropPartitions',
			'alterStatementSuffixProperties',
			'alterViewSuffixProperties',
			'alterMaterializedViewSuffixRewrite',
			'alterMaterializedViewSuffixRebuild',
			'alterStatementSuffixSerdeProperties',
			'alterIndexStatementSuffix',
			'alterStatementSuffixFileFormat',
			'alterStatementSuffixClusterbySortby',
			'alterTblPartitionStatementSuffixSkewedLocation',
			'skewedLocations',
			'skewedLocationsList',
			'skewedLocationMap',
			'alterStatementSuffixLocation',
			'alterStatementSuffixSkewedby',
			'alterStatementSuffixExchangePartition',
			'alterStatementSuffixRenamePart',
			'alterStatementSuffixStatsPart',
			'alterStatementSuffixMergeFiles',
			'alterStatementSuffixBucketNum',
			'createIndexStatement',
			'createIndexMainStatement',
			'dropIndexStatement',
			'createBloomfilterIndexStatement',
			'createBloomfilterIndexMainStatement',
			'bloomfilterColumnParenthesesList',
			'bloomfilterColumnNameList',
			'bloomfilterColumnName',
			'bloomfilterIndexOptions',
			'dropBloomfilterIndexStatement',
			'dropBloomfilterIndexMainStatement',
			'tablePartitionPrefix',
			'blocking',
			'alterStatementSuffixCompact',
			'alterStatementSuffixSetOwner',
			'fileFormat',
			'inputFileFormat',
			'tabTypeExpr',
			'partTypeExpr',
			'tabPartColTypeExpr',
			'descStatement',
			'analyzeStatement',
			'showStatement',
			'lockStatement',
			'lockDatabase',
			'lockMode',
			'unlockStatement',
			'unlockDatabase',
			'createRoleStatement',
			'dropRoleStatement',
			'grantPrivileges',
			'revokePrivileges',
			'grantRole',
			'revokeRole',
			'showRoleGrants',
			'showRoles',
			'showCurrentRole',
			'setRole',
			'showGrants',
			'showRolePrincipals',
			'privilegeIncludeColObject',
			'privilegeObject',
			'privObject',
			'privObjectCols',
			'privilegeList',
			'privlegeDef',
			'privilegeType',
			'principalSpecification',
			'principalName',
			'withGrantOption',
			'grantOptionFor',
			'adminOptionFor',
			'withAdminOption',
			'metastoreCheck',
			'resourceList',
			'resource',
			'resourceType',
			'createFunctionStatement',
			'dropFunctionStatement',
			'reloadFunctionStatement',
			'createMacroStatement',
			'dropMacroStatement',
			'createViewStatement',
			'createMaterializedViewStatement',
			'viewPartition',
			'dropViewStatement',
			'dropMaterializedViewStatement',
			'showFunctionIdentifier',
			'showStmtIdentifier',
			'tableComment',
			'tableUsingDataSource',
			'tableDataSource',
			'tablePartition',
			'tableBuckets',
			'tableSkewed',
			'rowFormat',
			'recordReader',
			'recordWriter',
			'rowFormatSerde',
			'rowFormatDelimited',
			'tableRowFormat',
			'tablePropertiesPrefixed',
			'tableProperties',
			'tablePropertiesList',
			'keyValueProperty',
			'keyValue',
			'keyProperty',
			'tableRowFormatFieldIdentifier',
			'tableRowFormatFieldIdentifierEcapedBy',
			'tableRowFormatCollItemsIdentifier',
			'tableRowFormatMapKeysIdentifier',
			'tableRowFormatLinesIdentifier',
			'tableRowNullFormat',
			'tableFileFormat',
			'tableFileFormatStoredBy',
			'tableFileFormatStoredAs',
			'tableFileFormatStoredAsFormat',
			'tableInputOutputFileFormat',
			'tableInputLiteral',
			'tableOutputLiteral',
			'tableLocation',
			'columnNameTypeList',
			'columnNameTypeOrConstraintList',
			'columnNameColonTypeList',
			'columnNameList',
			'columnName',
			'extColumnName',
			'columnNameOrderList',
			'columnParenthesesList',
			'enableValidateSpecification',
			'enableSpecification',
			'validateSpecification',
			'enforcedSpecification',
			'relySpecification',
			'createConstraint',
			'alterConstraintWithName',
			'tableLevelConstraint',
			'pkUkConstraint',
			'checkConstraint',
			'createForeignKey',
			'alterForeignKeyWithName',
			'skewedValueElement',
			'skewedColumnValuePairList',
			'skewedColumnValuePair',
			'skewedColumnValues',
			'skewedColumnValue',
			'skewedValueLocationElement',
			'orderSpecification',
			'nullOrdering',
			'columnNameOrder',
			'columnNameCommentList',
			'columnNameComment',
			'columnRefOrder',
			'columnNameType',
			'columnNameTypeOrConstraint',
			'tableConstraint',
			'columnNameTypeConstraint',
			'partitionedColumnNameTypeConstraint',
			'columnConstraint',
			'foreignKeyConstraint',
			'colConstraint',
			'alterColumnConstraint',
			'alterForeignKeyConstraint',
			'alterColConstraint',
			'columnConstraintType',
			'defaultVal',
			'tableConstraintType',
			'constraintOptsCreate',
			'constraintOptsAlter',
			'columnNameColonType',
			'colType',
			'colTypeList',
			'type_db_col',
			'primitiveType',
			'listType',
			'structType',
			'mapType',
			'unionType',
			'setOperator',
			'queryStatementExpression',
			'queryStatementExpressionBody',
			'withClause',
			'cteStatement',
			'fromStatement',
			'singleFromStatement',
			'regularBody',
			'atomSelectStatement',
			'selectStatement',
			'setOpSelectStatement',
			'selectStatementWithCTE',
			'body',
			'insertClause',
			'destination',
			'limitClause',
			'deleteStatement',
			'columnAssignmentClause',
			'setColumnsClause',
			'updateStatement',
			'sqlTransactionStatement',
			'startTransactionStatement',
			'transactionMode',
			'transactionAccessMode',
			'isolationLevel',
			'levelOfIsolation',
			'commitStatement',
			'rollbackStatement',
			'setAutoCommitStatement',
			'abortTransactionStatement',
			'mergeStatement',
			'whenClauses',
			'whenNotMatchedClause',
			'whenMatchedAndClause',
			'whenMatchedThenClause',
			'updateOrDelete',
			'killQueryStatement',
			'selectClause',
			'selectList',
			'selectTrfmClause',
			'selectItem',
			'trfmClause',
			'selectExpression',
			'selectExpressionList',
			'window_clause',
			'window_defn',
			'window_specification',
			'window_frame',
			'window_range_expression',
			'window_value_expression',
			'window_frame_start_boundary',
			'window_frame_boundary',
			'tableAllColumns',
			'tableOrColumn',
			'expressionList',
			'aliasList',
			'fromClause',
			'fromSource',
			'atomjoinSource',
			'joinSource',
			'joinSourcePart',
			'uniqueJoinSource',
			'uniqueJoinExpr',
			'uniqueJoinToken',
			'joinToken',
			'lateralView',
			'tableAlias',
			'tableBucketSample',
			'splitSample',
			'tableSample',
			'tableSource',
			'uniqueJoinTableSource',
			'tableName',
			'viewName',
			'subQuerySource',
			'partitioningSpec',
			'partitionTableFunctionSource',
			'partitionedTableFunction',
			'whereClause',
			'searchCondition',
			'valuesClause',
			'valuesTableConstructor',
			'valueRowConstructor',
			'virtualTableSource',
			'groupByClause',
			'groupby_expression',
			'groupByEmpty',
			'rollupStandard',
			'rollupOldSyntax',
			'groupingSetExpression',
			'groupingSetExpressionMultiple',
			'groupingExpressionSingle',
			'havingClause',
			'havingCondition',
			'expressionsInParenthesis',
			'expressionsNotInParenthesis',
			'expressionPart',
			'expressions',
			'columnRefOrderInParenthesis',
			'columnRefOrderNotInParenthesis',
			'orderByClause',
			'clusterByClause',
			'partitionByClause',
			'distributeByClause',
			'sortByClause',
			'functionStatement',
			'functionName',
			'castExpression',
			'caseExpression',
			'whenExpression',
			'floorExpression',
			'floorDateQualifiers',
			'extractExpression',
			'timeQualifiers',
			'constant',
			'stringLiteralSequence',
			'charSetStringLiteral',
			'dateLiteral',
			'timestampLiteral',
			'timestampLocalTZLiteral',
			'intervalValue',
			'intervalLiteral',
			'intervalExpression',
			'intervalQualifiers',
			'atomExpression',
			'precedenceUnaryOperator',
			'isCondition',
			'precedenceBitwiseXorOperator',
			'precedenceStarOperator',
			'precedencePlusOperator',
			'precedenceConcatenateOperator',
			'precedenceAmpersandOperator',
			'precedenceBitwiseOrOperator',
			'precedenceRegexpOperator',
			'precedenceSimilarOperator',
			'precedenceDistinctOperator',
			'precedenceEqualOperator',
			'precedenceNotOperator',
			'precedenceAndOperator',
			'precedenceOrOperator',
			'expression',
			'subQueryExpression',
			'precedenceSimilarExpressionPart',
			'precedenceSimilarExpressionAtom',
			'precedenceSimilarExpressionIn',
			'precedenceSimilarExpressionPartNot',
			'booleanValue',
			'booleanValueTok',
			'tableOrPartition',
			'partitionSpec',
			'partitionVal',
			'dropPartitionSpec',
			'dropPartitionVal',
			'dropPartitionOperator',
			'sysFuncNames',
			'descFuncNames',
			'identifier',
			'functionIdentifier',
			'principalIdentifier',
			'nonReserved',
			'sql11ReservedKeywordsUsedAsFunctionName',
			'resourcePlanDdlStatements',
			'rpAssign',
			'rpAssignList',
			'rpUnassign',
			'rpUnassignList',
			'createResourcePlanStatement',
			'createResourcePlanStatementLikeExisting',
			'createNewResourcePlanStatement',
			'withReplace',
			'activate',
			'enable',
			'disable',
			'unmanaged',
			'alterResourcePlanStatement',
			'alterResourcePlanRenameSuffix',
			'globalWmStatement',
			'replaceResourcePlanStatement',
			'dropResourcePlanStatement',
			'poolPath',
			'triggerExpression',
			'triggerExpressionStandalone',
			'triggerOrExpression',
			'triggerAndExpression',
			'triggerAtomExpression',
			'triggerLiteral',
			'comparisionOperator',
			'triggerActionExpression',
			'triggerActionExpressionStandalone',
			'createTriggerStatement',
			'alterTriggerStatement',
			'triggerConditionExpression',
			'dropTriggerStatement',
			'poolAssign',
			'poolAssignList',
			'createPoolStatement',
			'alterPoolStatement',
			'dropPoolStatement',
			'createMappingStatement',
			'alterMappingStatement',
			'dropMappingStatement',
		];
	function t(u) {
		return (
			s.Parser.call(this, u),
			(this._interp = new s.atn.ParserATNSimulator(this, o5, dE, fE)),
			(this.ruleNames = TE),
			(this.literalNames = _E),
			(this.symbolicNames = EE),
			this
		);
	}
	t.prototype = Object.create(s.Parser.prototype);
	t.prototype.constructor = t;
	Object.defineProperty(t.prototype, 'atn', {
		get: function () {
			return o5;
		},
	});
	t.EOF = s.Token.EOF;
	t.KW_TRUE = 1;
	t.KW_FALSE = 2;
	t.KW_ALL = 3;
	t.KW_NONE = 4;
	t.KW_AND = 5;
	t.KW_OR = 6;
	t.KW_NOT = 7;
	t.KW_LIKE = 8;
	t.KW_ANY = 9;
	t.KW_IF = 10;
	t.KW_EXISTS = 11;
	t.KW_ASC = 12;
	t.KW_DESC = 13;
	t.KW_NULLS = 14;
	t.KW_LAST = 15;
	t.KW_ORDER = 16;
	t.KW_GROUP = 17;
	t.KW_BY = 18;
	t.KW_HAVING = 19;
	t.KW_WHERE = 20;
	t.KW_FROM = 21;
	t.KW_AS = 22;
	t.KW_SELECT = 23;
	t.KW_DISTINCT = 24;
	t.KW_INSERT = 25;
	t.KW_OVERWRITE = 26;
	t.KW_OUTER = 27;
	t.KW_UNIQUEJOIN = 28;
	t.KW_PRESERVE = 29;
	t.KW_JOIN = 30;
	t.KW_LEFT = 31;
	t.KW_RIGHT = 32;
	t.KW_FULL = 33;
	t.KW_ON = 34;
	t.KW_PARTITION = 35;
	t.KW_PARTITIONS = 36;
	t.KW_TABLE = 37;
	t.KW_TABLES = 38;
	t.KW_COLUMNS = 39;
	t.KW_INDEX = 40;
	t.KW_INDEXES = 41;
	t.KW_REBUILD = 42;
	t.KW_FUNCTIONS = 43;
	t.KW_SHOW = 44;
	t.KW_MSCK = 45;
	t.KW_REPAIR = 46;
	t.KW_DIRECTORY = 47;
	t.KW_LOCAL = 48;
	t.KW_TRANSFORM = 49;
	t.KW_USING = 50;
	t.KW_CLUSTER = 51;
	t.KW_DISTRIBUTE = 52;
	t.KW_SORT = 53;
	t.KW_UNION = 54;
	t.KW_EXCEPT = 55;
	t.KW_LOAD = 56;
	t.KW_EXPORT = 57;
	t.KW_IMPORT = 58;
	t.KW_REPLICATION = 59;
	t.KW_METADATA = 60;
	t.KW_DATA = 61;
	t.KW_INPATH = 62;
	t.KW_IS = 63;
	t.KW_NULL = 64;
	t.KW_CREATE = 65;
	t.KW_EXTERNAL = 66;
	t.KW_ALTER = 67;
	t.KW_CHANGE = 68;
	t.KW_COLUMN = 69;
	t.KW_FIRST = 70;
	t.KW_AFTER = 71;
	t.KW_DESCRIBE = 72;
	t.KW_DROP = 73;
	t.KW_RENAME = 74;
	t.KW_TO = 75;
	t.KW_COMMENT = 76;
	t.KW_BOOLEAN = 77;
	t.KW_TINYINT = 78;
	t.KW_SMALLINT = 79;
	t.KW_INT = 80;
	t.KW_BIGINT = 81;
	t.KW_FLOAT = 82;
	t.KW_DOUBLE = 83;
	t.KW_PRECISION = 84;
	t.KW_DATE = 85;
	t.KW_DATETIME = 86;
	t.KW_TIMESTAMP = 87;
	t.KW_TIMESTAMPLOCALTZ = 88;
	t.KW_TIME = 89;
	t.KW_ZONE = 90;
	t.KW_INTERVAL = 91;
	t.KW_DECIMAL = 92;
	t.KW_STRING = 93;
	t.KW_CHAR = 94;
	t.KW_VARCHAR = 95;
	t.KW_ARRAY = 96;
	t.KW_STRUCT = 97;
	t.KW_MAP = 98;
	t.KW_UNIONTYPE = 99;
	t.KW_REDUCE = 100;
	t.KW_PARTITIONED = 101;
	t.KW_CLUSTERED = 102;
	t.KW_SORTED = 103;
	t.KW_INTO = 104;
	t.KW_BUCKETS = 105;
	t.KW_ROW = 106;
	t.KW_ROWS = 107;
	t.KW_FORMAT = 108;
	t.KW_DELIMITED = 109;
	t.KW_FIELDS = 110;
	t.KW_TERMINATED = 111;
	t.KW_ESCAPED = 112;
	t.KW_COLLECTION = 113;
	t.KW_ITEMS = 114;
	t.KW_KEYS = 115;
	t.KW_KEY_TYPE = 116;
	t.KW_KILL = 117;
	t.KW_LINES = 118;
	t.KW_STORED = 119;
	t.KW_FILEFORMAT = 120;
	t.KW_INPUTFORMAT = 121;
	t.KW_OUTPUTFORMAT = 122;
	t.KW_INPUTDRIVER = 123;
	t.KW_OUTPUTDRIVER = 124;
	t.KW_ENABLE = 125;
	t.KW_DISABLE = 126;
	t.KW_LOCATION = 127;
	t.KW_TABLESAMPLE = 128;
	t.KW_BUCKET = 129;
	t.KW_OUT = 130;
	t.KW_OF = 131;
	t.KW_PERCENT = 132;
	t.KW_CAST = 133;
	t.KW_ADD = 134;
	t.KW_REPLACE = 135;
	t.KW_RLIKE = 136;
	t.KW_REGEXP = 137;
	t.KW_TEMPORARY = 138;
	t.KW_FUNCTION = 139;
	t.KW_MACRO = 140;
	t.KW_FILE = 141;
	t.KW_JAR = 142;
	t.KW_EXPLAIN = 143;
	t.KW_EXTENDED = 144;
	t.KW_FORMATTED = 145;
	t.KW_DEPENDENCY = 146;
	t.KW_LOGICAL = 147;
	t.KW_SERDE = 148;
	t.KW_WITH = 149;
	t.KW_DEFERRED = 150;
	t.KW_SERDEPROPERTIES = 151;
	t.KW_DBPROPERTIES = 152;
	t.KW_LIMIT = 153;
	t.KW_OFFSET = 154;
	t.KW_SET = 155;
	t.KW_UNSET = 156;
	t.KW_TBLPROPERTIES = 157;
	t.KW_IDXPROPERTIES = 158;
	t.KW_VALUE_TYPE = 159;
	t.KW_ELEM_TYPE = 160;
	t.KW_DEFINED = 161;
	t.KW_CASE = 162;
	t.KW_WHEN = 163;
	t.KW_THEN = 164;
	t.KW_ELSE = 165;
	t.KW_END = 166;
	t.KW_MAPJOIN = 167;
	t.KW_STREAMTABLE = 168;
	t.KW_CLUSTERSTATUS = 169;
	t.KW_UTC = 170;
	t.KW_UTCTIMESTAMP = 171;
	t.KW_LONG = 172;
	t.KW_DELETE = 173;
	t.KW_PLUS = 174;
	t.KW_MINUS = 175;
	t.KW_FETCH = 176;
	t.KW_INTERSECT = 177;
	t.KW_VIEW = 178;
	t.KW_VIEWS = 179;
	t.KW_IN = 180;
	t.KW_DATABASE = 181;
	t.KW_DATABASES = 182;
	t.KW_MATERIALIZED = 183;
	t.KW_SCHEMA = 184;
	t.KW_SCHEMAS = 185;
	t.KW_GRANT = 186;
	t.KW_REVOKE = 187;
	t.KW_SSL = 188;
	t.KW_UNDO = 189;
	t.KW_LOCK = 190;
	t.KW_LOCKS = 191;
	t.KW_UNLOCK = 192;
	t.KW_SHARED = 193;
	t.KW_EXCLUSIVE = 194;
	t.KW_PROCEDURE = 195;
	t.KW_UNSIGNED = 196;
	t.KW_WHILE = 197;
	t.KW_READ = 198;
	t.KW_READS = 199;
	t.KW_PURGE = 200;
	t.KW_RANGE = 201;
	t.KW_ANALYZE = 202;
	t.KW_BEFORE = 203;
	t.KW_BETWEEN = 204;
	t.KW_BOTH = 205;
	t.KW_BINARY = 206;
	t.KW_CROSS = 207;
	t.KW_CONTINUE = 208;
	t.KW_CURSOR = 209;
	t.KW_TRIGGER = 210;
	t.KW_RECORDREADER = 211;
	t.KW_RECORDWRITER = 212;
	t.KW_SEMI = 213;
	t.KW_LATERAL = 214;
	t.KW_TOUCH = 215;
	t.KW_ARCHIVE = 216;
	t.KW_UNARCHIVE = 217;
	t.KW_COMPUTE = 218;
	t.KW_STATISTICS = 219;
	t.KW_USE = 220;
	t.KW_OPTIONS = 221;
	t.KW_OPTION = 222;
	t.KW_CONCATENATE = 223;
	t.KW_SHOW_DATABASE = 224;
	t.KW_UPDATE = 225;
	t.KW_RESTRICT = 226;
	t.KW_CASCADE = 227;
	t.KW_SKEWED = 228;
	t.KW_ROLLUP = 229;
	t.KW_CUBE = 230;
	t.KW_DIRECTORIES = 231;
	t.KW_FOR = 232;
	t.KW_WINDOW = 233;
	t.KW_UNBOUNDED = 234;
	t.KW_PRECEDING = 235;
	t.KW_FOLLOWING = 236;
	t.KW_CURRENT = 237;
	t.KW_CURRENT_DATE = 238;
	t.KW_CURRENT_TIMESTAMP = 239;
	t.KW_LESS = 240;
	t.KW_MORE = 241;
	t.KW_OVER = 242;
	t.KW_GROUPING = 243;
	t.KW_SETS = 244;
	t.KW_TRUNCATE = 245;
	t.KW_NOSCAN = 246;
	t.KW_USER = 247;
	t.KW_ROLE = 248;
	t.KW_ROLES = 249;
	t.KW_INNER = 250;
	t.KW_EXCHANGE = 251;
	t.KW_URI = 252;
	t.KW_SERVER = 253;
	t.KW_ADMIN = 254;
	t.KW_OWNER = 255;
	t.KW_PRINCIPALS = 256;
	t.KW_COMPACT = 257;
	t.KW_COMPACTIONS = 258;
	t.KW_TRANSACTIONS = 259;
	t.KW_REWRITE = 260;
	t.KW_AUTHORIZATION = 261;
	t.KW_REOPTIMIZATION = 262;
	t.KW_CONF = 263;
	t.KW_VALUES = 264;
	t.KW_RELOAD = 265;
	t.KW_YEAR = 266;
	t.KW_QUERY = 267;
	t.KW_QUARTER = 268;
	t.KW_MONTH = 269;
	t.KW_WEEK = 270;
	t.KW_DAY = 271;
	t.KW_DOW = 272;
	t.KW_HOUR = 273;
	t.KW_MINUTE = 274;
	t.KW_SECOND = 275;
	t.KW_START = 276;
	t.KW_TRANSACTION = 277;
	t.KW_COMMIT = 278;
	t.KW_ROLLBACK = 279;
	t.KW_WORK = 280;
	t.KW_ONLY = 281;
	t.KW_WRITE = 282;
	t.KW_ISOLATION = 283;
	t.KW_LEVEL = 284;
	t.KW_SNAPSHOT = 285;
	t.KW_AUTOCOMMIT = 286;
	t.KW_CACHE = 287;
	t.KW_PRIMARY = 288;
	t.KW_FOREIGN = 289;
	t.KW_REFERENCES = 290;
	t.KW_CONSTRAINT = 291;
	t.KW_ENFORCED = 292;
	t.KW_VALIDATE = 293;
	t.KW_NOVALIDATE = 294;
	t.KW_RELY = 295;
	t.KW_NORELY = 296;
	t.KW_UNIQUE = 297;
	t.KW_KEY = 298;
	t.KW_ABORT = 299;
	t.KW_EXTRACT = 300;
	t.KW_FLOOR = 301;
	t.KW_MERGE = 302;
	t.KW_MATCHED = 303;
	t.KW_REPL = 304;
	t.KW_DUMP = 305;
	t.KW_STATUS = 306;
	t.KW_VECTORIZATION = 307;
	t.KW_SUMMARY = 308;
	t.KW_OPERATOR = 309;
	t.KW_EXPRESSION = 310;
	t.KW_DETAIL = 311;
	t.KW_WAIT = 312;
	t.KW_RESOURCE = 313;
	t.KW_PLAN = 314;
	t.KW_QUERY_PARALLELISM = 315;
	t.KW_PLANS = 316;
	t.KW_ACTIVATE = 317;
	t.KW_DEFAULT = 318;
	t.KW_CHECK = 319;
	t.KW_POOL = 320;
	t.KW_MOVE = 321;
	t.KW_DO = 322;
	t.KW_ALLOC_FRACTION = 323;
	t.KW_SCHEDULING_POLICY = 324;
	t.KW_PATH = 325;
	t.KW_MAPPING = 326;
	t.KW_WORKLOAD = 327;
	t.KW_MANAGEMENT = 328;
	t.KW_ACTIVE = 329;
	t.KW_UNMANAGED = 330;
	t.KW_APPLICATION = 331;
	t.KW_SYNC = 332;
	t.KW_SEQUENCEFILE = 333;
	t.KW_TEXTFILE = 334;
	t.KW_RCFILE = 335;
	t.KW_ORC = 336;
	t.KW_PARQUET = 337;
	t.KW_DELTA = 338;
	t.KW_AVRO = 339;
	t.KW_CSV = 340;
	t.KW_JSON = 341;
	t.KW_JSONFILE = 342;
	t.KW_BLOOMFILTER = 343;
	t.DOT = 344;
	t.COLON = 345;
	t.COMMA = 346;
	t.SEMICOLON = 347;
	t.LPAREN = 348;
	t.RPAREN = 349;
	t.LSQUARE = 350;
	t.RSQUARE = 351;
	t.LCURLY = 352;
	t.RCURLY = 353;
	t.EQUAL = 354;
	t.EQUAL_NS = 355;
	t.NOTEQUAL = 356;
	t.LESSTHANOREQUALTO = 357;
	t.LESSTHAN = 358;
	t.GREATERTHANOREQUALTO = 359;
	t.GREATERTHAN = 360;
	t.DIVIDE = 361;
	t.PLUS = 362;
	t.MINUS = 363;
	t.STAR = 364;
	t.MOD = 365;
	t.DIV = 366;
	t.AMPERSAND = 367;
	t.TILDE = 368;
	t.BITWISEOR = 369;
	t.CONCATENATE = 370;
	t.BITWISEXOR = 371;
	t.QUESTION = 372;
	t.DOLLAR = 373;
	t.StringLiteral = 374;
	t.CharSetLiteral = 375;
	t.IntegralLiteral = 376;
	t.NumberLiteral = 377;
	t.ByteLengthLiteral = 378;
	t.Number = 379;
	t.Identifier = 380;
	t.QuotedIdentifier = 381;
	t.CharSetName = 382;
	t.WS = 383;
	t.LINE_COMMENT = 384;
	t.QUERY_HINT = 385;
	t.SHOW_HINT = 386;
	t.HIDDEN_HINT = 387;
	t.RULE_statements = 0;
	t.RULE_statementSeparator = 1;
	t.RULE_empty = 2;
	t.RULE_statement = 3;
	t.RULE_explainStatement = 4;
	t.RULE_explainOption = 5;
	t.RULE_vectorizationOnly = 6;
	t.RULE_vectorizatonDetail = 7;
	t.RULE_execStatement = 8;
	t.RULE_loadStatement = 9;
	t.RULE_replicationClause = 10;
	t.RULE_exportStatement = 11;
	t.RULE_importStatement = 12;
	t.RULE_replDumpStatement = 13;
	t.RULE_replLoadStatement = 14;
	t.RULE_replConfigs = 15;
	t.RULE_replConfigsList = 16;
	t.RULE_replStatusStatement = 17;
	t.RULE_ddlStatement = 18;
	t.RULE_ifExists = 19;
	t.RULE_restrictOrCascade = 20;
	t.RULE_ifNotExists = 21;
	t.RULE_rewriteEnabled = 22;
	t.RULE_rewriteDisabled = 23;
	t.RULE_storedAsDirs = 24;
	t.RULE_orReplace = 25;
	t.RULE_createDatabaseStatement = 26;
	t.RULE_dbLocation = 27;
	t.RULE_dbProperties = 28;
	t.RULE_dbPropertiesList = 29;
	t.RULE_switchDatabaseStatement = 30;
	t.RULE_dropDatabaseStatement = 31;
	t.RULE_databaseComment = 32;
	t.RULE_createTableStatement = 33;
	t.RULE_truncateTableStatement = 34;
	t.RULE_dropTableStatement = 35;
	t.RULE_alterStatement = 36;
	t.RULE_alterTableStatementSuffix = 37;
	t.RULE_alterTblPartitionStatementSuffix = 38;
	t.RULE_alterStatementPartitionKeyType = 39;
	t.RULE_alterViewStatementSuffix = 40;
	t.RULE_alterMaterializedViewStatementSuffix = 41;
	t.RULE_alterDatabaseStatementSuffix = 42;
	t.RULE_alterDatabaseSuffixProperties = 43;
	t.RULE_alterDatabaseSuffixSetOwner = 44;
	t.RULE_alterDatabaseSuffixSetLocation = 45;
	t.RULE_alterStatementSuffixRename = 46;
	t.RULE_alterStatementSuffixAddCol = 47;
	t.RULE_alterStatementSuffixAddConstraint = 48;
	t.RULE_alterStatementSuffixUpdateColumns = 49;
	t.RULE_alterStatementSuffixDropConstraint = 50;
	t.RULE_alterStatementSuffixRenameCol = 51;
	t.RULE_alterStatementSuffixUpdateStatsCol = 52;
	t.RULE_alterStatementSuffixUpdateStats = 53;
	t.RULE_alterStatementChangeColPosition = 54;
	t.RULE_alterStatementSuffixAddPartitions = 55;
	t.RULE_alterStatementSuffixAddPartitionsElement = 56;
	t.RULE_alterStatementSuffixTouch = 57;
	t.RULE_alterStatementSuffixArchive = 58;
	t.RULE_alterStatementSuffixUnArchive = 59;
	t.RULE_partitionLocation = 60;
	t.RULE_alterStatementSuffixDropPartitions = 61;
	t.RULE_alterStatementSuffixProperties = 62;
	t.RULE_alterViewSuffixProperties = 63;
	t.RULE_alterMaterializedViewSuffixRewrite = 64;
	t.RULE_alterMaterializedViewSuffixRebuild = 65;
	t.RULE_alterStatementSuffixSerdeProperties = 66;
	t.RULE_alterIndexStatementSuffix = 67;
	t.RULE_alterStatementSuffixFileFormat = 68;
	t.RULE_alterStatementSuffixClusterbySortby = 69;
	t.RULE_alterTblPartitionStatementSuffixSkewedLocation = 70;
	t.RULE_skewedLocations = 71;
	t.RULE_skewedLocationsList = 72;
	t.RULE_skewedLocationMap = 73;
	t.RULE_alterStatementSuffixLocation = 74;
	t.RULE_alterStatementSuffixSkewedby = 75;
	t.RULE_alterStatementSuffixExchangePartition = 76;
	t.RULE_alterStatementSuffixRenamePart = 77;
	t.RULE_alterStatementSuffixStatsPart = 78;
	t.RULE_alterStatementSuffixMergeFiles = 79;
	t.RULE_alterStatementSuffixBucketNum = 80;
	t.RULE_createIndexStatement = 81;
	t.RULE_createIndexMainStatement = 82;
	t.RULE_dropIndexStatement = 83;
	t.RULE_createBloomfilterIndexStatement = 84;
	t.RULE_createBloomfilterIndexMainStatement = 85;
	t.RULE_bloomfilterColumnParenthesesList = 86;
	t.RULE_bloomfilterColumnNameList = 87;
	t.RULE_bloomfilterColumnName = 88;
	t.RULE_bloomfilterIndexOptions = 89;
	t.RULE_dropBloomfilterIndexStatement = 90;
	t.RULE_dropBloomfilterIndexMainStatement = 91;
	t.RULE_tablePartitionPrefix = 92;
	t.RULE_blocking = 93;
	t.RULE_alterStatementSuffixCompact = 94;
	t.RULE_alterStatementSuffixSetOwner = 95;
	t.RULE_fileFormat = 96;
	t.RULE_inputFileFormat = 97;
	t.RULE_tabTypeExpr = 98;
	t.RULE_partTypeExpr = 99;
	t.RULE_tabPartColTypeExpr = 100;
	t.RULE_descStatement = 101;
	t.RULE_analyzeStatement = 102;
	t.RULE_showStatement = 103;
	t.RULE_lockStatement = 104;
	t.RULE_lockDatabase = 105;
	t.RULE_lockMode = 106;
	t.RULE_unlockStatement = 107;
	t.RULE_unlockDatabase = 108;
	t.RULE_createRoleStatement = 109;
	t.RULE_dropRoleStatement = 110;
	t.RULE_grantPrivileges = 111;
	t.RULE_revokePrivileges = 112;
	t.RULE_grantRole = 113;
	t.RULE_revokeRole = 114;
	t.RULE_showRoleGrants = 115;
	t.RULE_showRoles = 116;
	t.RULE_showCurrentRole = 117;
	t.RULE_setRole = 118;
	t.RULE_showGrants = 119;
	t.RULE_showRolePrincipals = 120;
	t.RULE_privilegeIncludeColObject = 121;
	t.RULE_privilegeObject = 122;
	t.RULE_privObject = 123;
	t.RULE_privObjectCols = 124;
	t.RULE_privilegeList = 125;
	t.RULE_privlegeDef = 126;
	t.RULE_privilegeType = 127;
	t.RULE_principalSpecification = 128;
	t.RULE_principalName = 129;
	t.RULE_withGrantOption = 130;
	t.RULE_grantOptionFor = 131;
	t.RULE_adminOptionFor = 132;
	t.RULE_withAdminOption = 133;
	t.RULE_metastoreCheck = 134;
	t.RULE_resourceList = 135;
	t.RULE_resource = 136;
	t.RULE_resourceType = 137;
	t.RULE_createFunctionStatement = 138;
	t.RULE_dropFunctionStatement = 139;
	t.RULE_reloadFunctionStatement = 140;
	t.RULE_createMacroStatement = 141;
	t.RULE_dropMacroStatement = 142;
	t.RULE_createViewStatement = 143;
	t.RULE_createMaterializedViewStatement = 144;
	t.RULE_viewPartition = 145;
	t.RULE_dropViewStatement = 146;
	t.RULE_dropMaterializedViewStatement = 147;
	t.RULE_showFunctionIdentifier = 148;
	t.RULE_showStmtIdentifier = 149;
	t.RULE_tableComment = 150;
	t.RULE_tableUsingDataSource = 151;
	t.RULE_tableDataSource = 152;
	t.RULE_tablePartition = 153;
	t.RULE_tableBuckets = 154;
	t.RULE_tableSkewed = 155;
	t.RULE_rowFormat = 156;
	t.RULE_recordReader = 157;
	t.RULE_recordWriter = 158;
	t.RULE_rowFormatSerde = 159;
	t.RULE_rowFormatDelimited = 160;
	t.RULE_tableRowFormat = 161;
	t.RULE_tablePropertiesPrefixed = 162;
	t.RULE_tableProperties = 163;
	t.RULE_tablePropertiesList = 164;
	t.RULE_keyValueProperty = 165;
	t.RULE_keyValue = 166;
	t.RULE_keyProperty = 167;
	t.RULE_tableRowFormatFieldIdentifier = 168;
	t.RULE_tableRowFormatFieldIdentifierEcapedBy = 169;
	t.RULE_tableRowFormatCollItemsIdentifier = 170;
	t.RULE_tableRowFormatMapKeysIdentifier = 171;
	t.RULE_tableRowFormatLinesIdentifier = 172;
	t.RULE_tableRowNullFormat = 173;
	t.RULE_tableFileFormat = 174;
	t.RULE_tableFileFormatStoredBy = 175;
	t.RULE_tableFileFormatStoredAs = 176;
	t.RULE_tableFileFormatStoredAsFormat = 177;
	t.RULE_tableInputOutputFileFormat = 178;
	t.RULE_tableInputLiteral = 179;
	t.RULE_tableOutputLiteral = 180;
	t.RULE_tableLocation = 181;
	t.RULE_columnNameTypeList = 182;
	t.RULE_columnNameTypeOrConstraintList = 183;
	t.RULE_columnNameColonTypeList = 184;
	t.RULE_columnNameList = 185;
	t.RULE_columnName = 186;
	t.RULE_extColumnName = 187;
	t.RULE_columnNameOrderList = 188;
	t.RULE_columnParenthesesList = 189;
	t.RULE_enableValidateSpecification = 190;
	t.RULE_enableSpecification = 191;
	t.RULE_validateSpecification = 192;
	t.RULE_enforcedSpecification = 193;
	t.RULE_relySpecification = 194;
	t.RULE_createConstraint = 195;
	t.RULE_alterConstraintWithName = 196;
	t.RULE_tableLevelConstraint = 197;
	t.RULE_pkUkConstraint = 198;
	t.RULE_checkConstraint = 199;
	t.RULE_createForeignKey = 200;
	t.RULE_alterForeignKeyWithName = 201;
	t.RULE_skewedValueElement = 202;
	t.RULE_skewedColumnValuePairList = 203;
	t.RULE_skewedColumnValuePair = 204;
	t.RULE_skewedColumnValues = 205;
	t.RULE_skewedColumnValue = 206;
	t.RULE_skewedValueLocationElement = 207;
	t.RULE_orderSpecification = 208;
	t.RULE_nullOrdering = 209;
	t.RULE_columnNameOrder = 210;
	t.RULE_columnNameCommentList = 211;
	t.RULE_columnNameComment = 212;
	t.RULE_columnRefOrder = 213;
	t.RULE_columnNameType = 214;
	t.RULE_columnNameTypeOrConstraint = 215;
	t.RULE_tableConstraint = 216;
	t.RULE_columnNameTypeConstraint = 217;
	t.RULE_partitionedColumnNameTypeConstraint = 218;
	t.RULE_columnConstraint = 219;
	t.RULE_foreignKeyConstraint = 220;
	t.RULE_colConstraint = 221;
	t.RULE_alterColumnConstraint = 222;
	t.RULE_alterForeignKeyConstraint = 223;
	t.RULE_alterColConstraint = 224;
	t.RULE_columnConstraintType = 225;
	t.RULE_defaultVal = 226;
	t.RULE_tableConstraintType = 227;
	t.RULE_constraintOptsCreate = 228;
	t.RULE_constraintOptsAlter = 229;
	t.RULE_columnNameColonType = 230;
	t.RULE_colType = 231;
	t.RULE_colTypeList = 232;
	t.RULE_type_db_col = 233;
	t.RULE_primitiveType = 234;
	t.RULE_listType = 235;
	t.RULE_structType = 236;
	t.RULE_mapType = 237;
	t.RULE_unionType = 238;
	t.RULE_setOperator = 239;
	t.RULE_queryStatementExpression = 240;
	t.RULE_queryStatementExpressionBody = 241;
	t.RULE_withClause = 242;
	t.RULE_cteStatement = 243;
	t.RULE_fromStatement = 244;
	t.RULE_singleFromStatement = 245;
	t.RULE_regularBody = 246;
	t.RULE_atomSelectStatement = 247;
	t.RULE_selectStatement = 248;
	t.RULE_setOpSelectStatement = 249;
	t.RULE_selectStatementWithCTE = 250;
	t.RULE_body = 251;
	t.RULE_insertClause = 252;
	t.RULE_destination = 253;
	t.RULE_limitClause = 254;
	t.RULE_deleteStatement = 255;
	t.RULE_columnAssignmentClause = 256;
	t.RULE_setColumnsClause = 257;
	t.RULE_updateStatement = 258;
	t.RULE_sqlTransactionStatement = 259;
	t.RULE_startTransactionStatement = 260;
	t.RULE_transactionMode = 261;
	t.RULE_transactionAccessMode = 262;
	t.RULE_isolationLevel = 263;
	t.RULE_levelOfIsolation = 264;
	t.RULE_commitStatement = 265;
	t.RULE_rollbackStatement = 266;
	t.RULE_setAutoCommitStatement = 267;
	t.RULE_abortTransactionStatement = 268;
	t.RULE_mergeStatement = 269;
	t.RULE_whenClauses = 270;
	t.RULE_whenNotMatchedClause = 271;
	t.RULE_whenMatchedAndClause = 272;
	t.RULE_whenMatchedThenClause = 273;
	t.RULE_updateOrDelete = 274;
	t.RULE_killQueryStatement = 275;
	t.RULE_selectClause = 276;
	t.RULE_selectList = 277;
	t.RULE_selectTrfmClause = 278;
	t.RULE_selectItem = 279;
	t.RULE_trfmClause = 280;
	t.RULE_selectExpression = 281;
	t.RULE_selectExpressionList = 282;
	t.RULE_window_clause = 283;
	t.RULE_window_defn = 284;
	t.RULE_window_specification = 285;
	t.RULE_window_frame = 286;
	t.RULE_window_range_expression = 287;
	t.RULE_window_value_expression = 288;
	t.RULE_window_frame_start_boundary = 289;
	t.RULE_window_frame_boundary = 290;
	t.RULE_tableAllColumns = 291;
	t.RULE_tableOrColumn = 292;
	t.RULE_expressionList = 293;
	t.RULE_aliasList = 294;
	t.RULE_fromClause = 295;
	t.RULE_fromSource = 296;
	t.RULE_atomjoinSource = 297;
	t.RULE_joinSource = 298;
	t.RULE_joinSourcePart = 299;
	t.RULE_uniqueJoinSource = 300;
	t.RULE_uniqueJoinExpr = 301;
	t.RULE_uniqueJoinToken = 302;
	t.RULE_joinToken = 303;
	t.RULE_lateralView = 304;
	t.RULE_tableAlias = 305;
	t.RULE_tableBucketSample = 306;
	t.RULE_splitSample = 307;
	t.RULE_tableSample = 308;
	t.RULE_tableSource = 309;
	t.RULE_uniqueJoinTableSource = 310;
	t.RULE_tableName = 311;
	t.RULE_viewName = 312;
	t.RULE_subQuerySource = 313;
	t.RULE_partitioningSpec = 314;
	t.RULE_partitionTableFunctionSource = 315;
	t.RULE_partitionedTableFunction = 316;
	t.RULE_whereClause = 317;
	t.RULE_searchCondition = 318;
	t.RULE_valuesClause = 319;
	t.RULE_valuesTableConstructor = 320;
	t.RULE_valueRowConstructor = 321;
	t.RULE_virtualTableSource = 322;
	t.RULE_groupByClause = 323;
	t.RULE_groupby_expression = 324;
	t.RULE_groupByEmpty = 325;
	t.RULE_rollupStandard = 326;
	t.RULE_rollupOldSyntax = 327;
	t.RULE_groupingSetExpression = 328;
	t.RULE_groupingSetExpressionMultiple = 329;
	t.RULE_groupingExpressionSingle = 330;
	t.RULE_havingClause = 331;
	t.RULE_havingCondition = 332;
	t.RULE_expressionsInParenthesis = 333;
	t.RULE_expressionsNotInParenthesis = 334;
	t.RULE_expressionPart = 335;
	t.RULE_expressions = 336;
	t.RULE_columnRefOrderInParenthesis = 337;
	t.RULE_columnRefOrderNotInParenthesis = 338;
	t.RULE_orderByClause = 339;
	t.RULE_clusterByClause = 340;
	t.RULE_partitionByClause = 341;
	t.RULE_distributeByClause = 342;
	t.RULE_sortByClause = 343;
	t.RULE_functionStatement = 344;
	t.RULE_functionName = 345;
	t.RULE_castExpression = 346;
	t.RULE_caseExpression = 347;
	t.RULE_whenExpression = 348;
	t.RULE_floorExpression = 349;
	t.RULE_floorDateQualifiers = 350;
	t.RULE_extractExpression = 351;
	t.RULE_timeQualifiers = 352;
	t.RULE_constant = 353;
	t.RULE_stringLiteralSequence = 354;
	t.RULE_charSetStringLiteral = 355;
	t.RULE_dateLiteral = 356;
	t.RULE_timestampLiteral = 357;
	t.RULE_timestampLocalTZLiteral = 358;
	t.RULE_intervalValue = 359;
	t.RULE_intervalLiteral = 360;
	t.RULE_intervalExpression = 361;
	t.RULE_intervalQualifiers = 362;
	t.RULE_atomExpression = 363;
	t.RULE_precedenceUnaryOperator = 364;
	t.RULE_isCondition = 365;
	t.RULE_precedenceBitwiseXorOperator = 366;
	t.RULE_precedenceStarOperator = 367;
	t.RULE_precedencePlusOperator = 368;
	t.RULE_precedenceConcatenateOperator = 369;
	t.RULE_precedenceAmpersandOperator = 370;
	t.RULE_precedenceBitwiseOrOperator = 371;
	t.RULE_precedenceRegexpOperator = 372;
	t.RULE_precedenceSimilarOperator = 373;
	t.RULE_precedenceDistinctOperator = 374;
	t.RULE_precedenceEqualOperator = 375;
	t.RULE_precedenceNotOperator = 376;
	t.RULE_precedenceAndOperator = 377;
	t.RULE_precedenceOrOperator = 378;
	t.RULE_expression = 379;
	t.RULE_subQueryExpression = 380;
	t.RULE_precedenceSimilarExpressionPart = 381;
	t.RULE_precedenceSimilarExpressionAtom = 382;
	t.RULE_precedenceSimilarExpressionIn = 383;
	t.RULE_precedenceSimilarExpressionPartNot = 384;
	t.RULE_booleanValue = 385;
	t.RULE_booleanValueTok = 386;
	t.RULE_tableOrPartition = 387;
	t.RULE_partitionSpec = 388;
	t.RULE_partitionVal = 389;
	t.RULE_dropPartitionSpec = 390;
	t.RULE_dropPartitionVal = 391;
	t.RULE_dropPartitionOperator = 392;
	t.RULE_sysFuncNames = 393;
	t.RULE_descFuncNames = 394;
	t.RULE_identifier = 395;
	t.RULE_functionIdentifier = 396;
	t.RULE_principalIdentifier = 397;
	t.RULE_nonReserved = 398;
	t.RULE_sql11ReservedKeywordsUsedAsFunctionName = 399;
	t.RULE_resourcePlanDdlStatements = 400;
	t.RULE_rpAssign = 401;
	t.RULE_rpAssignList = 402;
	t.RULE_rpUnassign = 403;
	t.RULE_rpUnassignList = 404;
	t.RULE_createResourcePlanStatement = 405;
	t.RULE_createResourcePlanStatementLikeExisting = 406;
	t.RULE_createNewResourcePlanStatement = 407;
	t.RULE_withReplace = 408;
	t.RULE_activate = 409;
	t.RULE_enable = 410;
	t.RULE_disable = 411;
	t.RULE_unmanaged = 412;
	t.RULE_alterResourcePlanStatement = 413;
	t.RULE_alterResourcePlanRenameSuffix = 414;
	t.RULE_globalWmStatement = 415;
	t.RULE_replaceResourcePlanStatement = 416;
	t.RULE_dropResourcePlanStatement = 417;
	t.RULE_poolPath = 418;
	t.RULE_triggerExpression = 419;
	t.RULE_triggerExpressionStandalone = 420;
	t.RULE_triggerOrExpression = 421;
	t.RULE_triggerAndExpression = 422;
	t.RULE_triggerAtomExpression = 423;
	t.RULE_triggerLiteral = 424;
	t.RULE_comparisionOperator = 425;
	t.RULE_triggerActionExpression = 426;
	t.RULE_triggerActionExpressionStandalone = 427;
	t.RULE_createTriggerStatement = 428;
	t.RULE_alterTriggerStatement = 429;
	t.RULE_triggerConditionExpression = 430;
	t.RULE_dropTriggerStatement = 431;
	t.RULE_poolAssign = 432;
	t.RULE_poolAssignList = 433;
	t.RULE_createPoolStatement = 434;
	t.RULE_alterPoolStatement = 435;
	t.RULE_dropPoolStatement = 436;
	t.RULE_createMappingStatement = 437;
	t.RULE_alterMappingStatement = 438;
	t.RULE_dropMappingStatement = 439;
	function Za(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_statements),
			this
		);
	}
	Za.prototype = Object.create(s.ParserRuleContext.prototype);
	Za.prototype.constructor = Za;
	Za.prototype.EOF = function () {
		return this.getToken(t.EOF, 0);
	};
	Za.prototype.statement = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(za) : this.getTypedRuleContext(za, u);
	};
	Za.prototype.statementSeparator = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ja) : this.getTypedRuleContext(Ja, u);
	};
	Za.prototype.empty = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Tc) : this.getTypedRuleContext(Tc, u);
	};
	Za.prototype.accept = function (u) {
		return u instanceof d ? u.visitStatements(this) : u.visitChildren(this);
	};
	t.StatementsContext = Za;
	t.prototype.statements = function () {
		var u = new Za(this, this._ctx, this.state);
		this.enterRule(u, 0, t.RULE_statements);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1), this.state = 886, this._errHandler.sync(this), e = this._input.LA(1);
				((e & -32) == 0 &&
					((1 << e) & ((1 << t.KW_DESC) | (1 << t.KW_FROM) | (1 << t.KW_SELECT) | (1 << t.KW_INSERT))) !==
						0) ||
				(((e - 44) & -32) == 0 &&
					((1 << (e - 44)) &
						((1 << (t.KW_SHOW - 44)) |
							(1 << (t.KW_MSCK - 44)) |
							(1 << (t.KW_LOAD - 44)) |
							(1 << (t.KW_EXPORT - 44)) |
							(1 << (t.KW_IMPORT - 44)) |
							(1 << (t.KW_CREATE - 44)) |
							(1 << (t.KW_ALTER - 44)) |
							(1 << (t.KW_DESCRIBE - 44)) |
							(1 << (t.KW_DROP - 44)))) !==
						0) ||
				(((e - 98) & -32) == 0 &&
					((1 << (e - 98)) &
						((1 << (t.KW_MAP - 98)) |
							(1 << (t.KW_REDUCE - 98)) |
							(1 << (t.KW_KILL - 98)) |
							(1 << (t.KW_ENABLE - 98)) |
							(1 << (t.KW_DISABLE - 98)))) !==
						0) ||
				(((e - 135) & -32) == 0 &&
					((1 << (e - 135)) &
						((1 << (t.KW_REPLACE - 135)) |
							(1 << (t.KW_EXPLAIN - 135)) |
							(1 << (t.KW_WITH - 135)) |
							(1 << (t.KW_SET - 135)))) !==
						0) ||
				(((e - 173) & -32) == 0 &&
					((1 << (e - 173)) &
						((1 << (t.KW_DELETE - 173)) |
							(1 << (t.KW_GRANT - 173)) |
							(1 << (t.KW_REVOKE - 173)) |
							(1 << (t.KW_LOCK - 173)) |
							(1 << (t.KW_UNLOCK - 173)) |
							(1 << (t.KW_ANALYZE - 173)))) !==
						0) ||
				(((e - 220) & -32) == 0 &&
					((1 << (e - 220)) &
						((1 << (t.KW_USE - 220)) | (1 << (t.KW_UPDATE - 220)) | (1 << (t.KW_TRUNCATE - 220)))) !==
						0) ||
				(((e - 265) & -32) == 0 &&
					((1 << (e - 265)) &
						((1 << (t.KW_RELOAD - 265)) |
							(1 << (t.KW_START - 265)) |
							(1 << (t.KW_COMMIT - 265)) |
							(1 << (t.KW_ROLLBACK - 265)))) !==
						0) ||
				(((e - 299) & -32) == 0 &&
					((1 << (e - 299)) &
						((1 << (t.KW_ABORT - 299)) | (1 << (t.KW_MERGE - 299)) | (1 << (t.KW_REPL - 299)))) !==
						0) ||
				e === t.SEMICOLON ||
				e === t.LPAREN;

			) {
				switch (((this.state = 884), this._errHandler.sync(this), this._input.LA(1))) {
					case t.KW_DESC:
					case t.KW_FROM:
					case t.KW_SELECT:
					case t.KW_INSERT:
					case t.KW_SHOW:
					case t.KW_MSCK:
					case t.KW_LOAD:
					case t.KW_EXPORT:
					case t.KW_IMPORT:
					case t.KW_CREATE:
					case t.KW_ALTER:
					case t.KW_DESCRIBE:
					case t.KW_DROP:
					case t.KW_MAP:
					case t.KW_REDUCE:
					case t.KW_KILL:
					case t.KW_ENABLE:
					case t.KW_DISABLE:
					case t.KW_REPLACE:
					case t.KW_EXPLAIN:
					case t.KW_WITH:
					case t.KW_SET:
					case t.KW_DELETE:
					case t.KW_GRANT:
					case t.KW_REVOKE:
					case t.KW_LOCK:
					case t.KW_UNLOCK:
					case t.KW_ANALYZE:
					case t.KW_USE:
					case t.KW_UPDATE:
					case t.KW_TRUNCATE:
					case t.KW_RELOAD:
					case t.KW_START:
					case t.KW_COMMIT:
					case t.KW_ROLLBACK:
					case t.KW_ABORT:
					case t.KW_MERGE:
					case t.KW_REPL:
					case t.LPAREN:
						(this.state = 880), this.statement(), (this.state = 881), this.statementSeparator();
						break;
					case t.SEMICOLON:
						(this.state = 883), this.empty();
						break;
					default:
						throw new s.error.NoViableAltException(this);
				}
				(this.state = 888), this._errHandler.sync(this), (e = this._input.LA(1));
			}
			(this.state = 889), this.match(t.EOF);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ja(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_statementSeparator),
			this
		);
	}
	Ja.prototype = Object.create(s.ParserRuleContext.prototype);
	Ja.prototype.constructor = Ja;
	Ja.prototype.SEMICOLON = function () {
		return this.getToken(t.SEMICOLON, 0);
	};
	Ja.prototype.accept = function (u) {
		return u instanceof d ? u.visitStatementSeparator(this) : u.visitChildren(this);
	};
	t.StatementSeparatorContext = Ja;
	t.prototype.statementSeparator = function () {
		var u = new Ja(this, this._ctx, this.state);
		this.enterRule(u, 2, t.RULE_statementSeparator);
		try {
			this.enterOuterAlt(u, 1), (this.state = 891), this.match(t.SEMICOLON);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Tc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_empty),
			this
		);
	}
	Tc.prototype = Object.create(s.ParserRuleContext.prototype);
	Tc.prototype.constructor = Tc;
	Tc.prototype.statementSeparator = function () {
		return this.getTypedRuleContext(Ja, 0);
	};
	Tc.prototype.accept = function (u) {
		return u instanceof d ? u.visitEmpty(this) : u.visitChildren(this);
	};
	t.EmptyContext = Tc;
	t.prototype.empty = function () {
		var u = new Tc(this, this._ctx, this.state);
		this.enterRule(u, 4, t.RULE_empty);
		try {
			this.enterOuterAlt(u, 1), (this.state = 893), this.statementSeparator();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function za(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_statement),
			this
		);
	}
	za.prototype = Object.create(s.ParserRuleContext.prototype);
	za.prototype.constructor = za;
	za.prototype.explainStatement = function () {
		return this.getTypedRuleContext(un, 0);
	};
	za.prototype.execStatement = function () {
		return this.getTypedRuleContext(uu, 0);
	};
	za.prototype.accept = function (u) {
		return u instanceof d ? u.visitStatement(this) : u.visitChildren(this);
	};
	t.StatementContext = za;
	t.prototype.statement = function () {
		var u = new za(this, this._ctx, this.state);
		this.enterRule(u, 6, t.RULE_statement);
		try {
			switch (((this.state = 897), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_EXPLAIN:
					this.enterOuterAlt(u, 1), (this.state = 895), this.explainStatement();
					break;
				case t.KW_DESC:
				case t.KW_FROM:
				case t.KW_SELECT:
				case t.KW_INSERT:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_IMPORT:
				case t.KW_CREATE:
				case t.KW_ALTER:
				case t.KW_DESCRIBE:
				case t.KW_DROP:
				case t.KW_MAP:
				case t.KW_REDUCE:
				case t.KW_KILL:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_REPLACE:
				case t.KW_WITH:
				case t.KW_SET:
				case t.KW_DELETE:
				case t.KW_GRANT:
				case t.KW_REVOKE:
				case t.KW_LOCK:
				case t.KW_UNLOCK:
				case t.KW_ANALYZE:
				case t.KW_USE:
				case t.KW_UPDATE:
				case t.KW_TRUNCATE:
				case t.KW_RELOAD:
				case t.KW_START:
				case t.KW_COMMIT:
				case t.KW_ROLLBACK:
				case t.KW_ABORT:
				case t.KW_MERGE:
				case t.KW_REPL:
				case t.LPAREN:
					this.enterOuterAlt(u, 2), (this.state = 896), this.execStatement();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function un(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_explainStatement),
			this
		);
	}
	un.prototype = Object.create(s.ParserRuleContext.prototype);
	un.prototype.constructor = un;
	un.prototype.KW_EXPLAIN = function () {
		return this.getToken(t.KW_EXPLAIN, 0);
	};
	un.prototype.execStatement = function () {
		return this.getTypedRuleContext(uu, 0);
	};
	un.prototype.KW_REWRITE = function () {
		return this.getToken(t.KW_REWRITE, 0);
	};
	un.prototype.queryStatementExpression = function () {
		return this.getTypedRuleContext(Un, 0);
	};
	un.prototype.explainOption = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Nu) : this.getTypedRuleContext(Nu, u);
	};
	un.prototype.accept = function (u) {
		return u instanceof d ? u.visitExplainStatement(this) : u.visitChildren(this);
	};
	t.ExplainStatementContext = un;
	t.prototype.explainStatement = function () {
		var u = new un(this, this._ctx, this.state);
		this.enterRule(u, 8, t.RULE_explainStatement);
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 899),
				this.match(t.KW_EXPLAIN),
				(this.state = 909),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_DESC:
				case t.KW_FROM:
				case t.KW_SELECT:
				case t.KW_INSERT:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_IMPORT:
				case t.KW_CREATE:
				case t.KW_ALTER:
				case t.KW_DESCRIBE:
				case t.KW_DROP:
				case t.KW_MAP:
				case t.KW_REDUCE:
				case t.KW_KILL:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_REPLACE:
				case t.KW_EXTENDED:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_WITH:
				case t.KW_SET:
				case t.KW_DELETE:
				case t.KW_GRANT:
				case t.KW_REVOKE:
				case t.KW_LOCK:
				case t.KW_UNLOCK:
				case t.KW_ANALYZE:
				case t.KW_USE:
				case t.KW_UPDATE:
				case t.KW_TRUNCATE:
				case t.KW_AUTHORIZATION:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_START:
				case t.KW_COMMIT:
				case t.KW_ROLLBACK:
				case t.KW_ABORT:
				case t.KW_MERGE:
				case t.KW_REPL:
				case t.KW_VECTORIZATION:
				case t.LPAREN:
					(this.state = 903), this._errHandler.sync(this);
					for (
						var e = this._interp.adaptivePredict(this._input, 3, this._ctx);
						e != 2 && e != s.atn.ATN.INVALID_ALT_NUMBER;

					)
						e === 1 && ((this.state = 900), this.explainOption()),
							(this.state = 905),
							this._errHandler.sync(this),
							(e = this._interp.adaptivePredict(this._input, 3, this._ctx));
					(this.state = 906), this.execStatement();
					break;
				case t.KW_REWRITE:
					(this.state = 907), this.match(t.KW_REWRITE), (this.state = 908), this.queryStatementExpression();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Nu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_explainOption),
			this
		);
	}
	Nu.prototype = Object.create(s.ParserRuleContext.prototype);
	Nu.prototype.constructor = Nu;
	Nu.prototype.KW_EXTENDED = function () {
		return this.getToken(t.KW_EXTENDED, 0);
	};
	Nu.prototype.KW_FORMATTED = function () {
		return this.getToken(t.KW_FORMATTED, 0);
	};
	Nu.prototype.KW_DEPENDENCY = function () {
		return this.getToken(t.KW_DEPENDENCY, 0);
	};
	Nu.prototype.KW_LOGICAL = function () {
		return this.getToken(t.KW_LOGICAL, 0);
	};
	Nu.prototype.KW_AUTHORIZATION = function () {
		return this.getToken(t.KW_AUTHORIZATION, 0);
	};
	Nu.prototype.KW_ANALYZE = function () {
		return this.getToken(t.KW_ANALYZE, 0);
	};
	Nu.prototype.KW_REOPTIMIZATION = function () {
		return this.getToken(t.KW_REOPTIMIZATION, 0);
	};
	Nu.prototype.KW_VECTORIZATION = function () {
		return this.getToken(t.KW_VECTORIZATION, 0);
	};
	Nu.prototype.vectorizationOnly = function () {
		return this.getTypedRuleContext(v3, 0);
	};
	Nu.prototype.vectorizatonDetail = function () {
		return this.getTypedRuleContext(Xs, 0);
	};
	Nu.prototype.accept = function (u) {
		return u instanceof d ? u.visitExplainOption(this) : u.visitChildren(this);
	};
	t.ExplainOptionContext = Nu;
	t.prototype.explainOption = function () {
		var u = new Nu(this, this._ctx, this.state);
		this.enterRule(u, 10, t.RULE_explainOption);
		var e = 0;
		try {
			switch (((this.state = 925), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_EXTENDED:
					this.enterOuterAlt(u, 1), (this.state = 911), this.match(t.KW_EXTENDED);
					break;
				case t.KW_FORMATTED:
					this.enterOuterAlt(u, 2), (this.state = 912), this.match(t.KW_FORMATTED);
					break;
				case t.KW_DEPENDENCY:
					this.enterOuterAlt(u, 3), (this.state = 913), this.match(t.KW_DEPENDENCY);
					break;
				case t.KW_LOGICAL:
					this.enterOuterAlt(u, 4), (this.state = 914), this.match(t.KW_LOGICAL);
					break;
				case t.KW_AUTHORIZATION:
					this.enterOuterAlt(u, 5), (this.state = 915), this.match(t.KW_AUTHORIZATION);
					break;
				case t.KW_ANALYZE:
					this.enterOuterAlt(u, 6), (this.state = 916), this.match(t.KW_ANALYZE);
					break;
				case t.KW_REOPTIMIZATION:
					this.enterOuterAlt(u, 7), (this.state = 917), this.match(t.KW_REOPTIMIZATION);
					break;
				case t.KW_VECTORIZATION:
					this.enterOuterAlt(u, 8),
						(this.state = 918),
						this.match(t.KW_VECTORIZATION),
						(this.state = 920),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_ONLY && ((this.state = 919), this.vectorizationOnly()),
						(this.state = 923),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						((e - 308) & -32) == 0 &&
							((1 << (e - 308)) &
								((1 << (t.KW_SUMMARY - 308)) |
									(1 << (t.KW_OPERATOR - 308)) |
									(1 << (t.KW_EXPRESSION - 308)) |
									(1 << (t.KW_DETAIL - 308)))) !==
								0 &&
							((this.state = 922), this.vectorizatonDetail());
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function v3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_vectorizationOnly),
			this
		);
	}
	v3.prototype = Object.create(s.ParserRuleContext.prototype);
	v3.prototype.constructor = v3;
	v3.prototype.KW_ONLY = function () {
		return this.getToken(t.KW_ONLY, 0);
	};
	v3.prototype.accept = function (u) {
		return u instanceof d ? u.visitVectorizationOnly(this) : u.visitChildren(this);
	};
	t.VectorizationOnlyContext = v3;
	t.prototype.vectorizationOnly = function () {
		var u = new v3(this, this._ctx, this.state);
		this.enterRule(u, 12, t.RULE_vectorizationOnly);
		try {
			this.enterOuterAlt(u, 1), (this.state = 927), this.match(t.KW_ONLY);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Xs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_vectorizatonDetail),
			this
		);
	}
	Xs.prototype = Object.create(s.ParserRuleContext.prototype);
	Xs.prototype.constructor = Xs;
	Xs.prototype.KW_SUMMARY = function () {
		return this.getToken(t.KW_SUMMARY, 0);
	};
	Xs.prototype.KW_OPERATOR = function () {
		return this.getToken(t.KW_OPERATOR, 0);
	};
	Xs.prototype.KW_EXPRESSION = function () {
		return this.getToken(t.KW_EXPRESSION, 0);
	};
	Xs.prototype.KW_DETAIL = function () {
		return this.getToken(t.KW_DETAIL, 0);
	};
	Xs.prototype.accept = function (u) {
		return u instanceof d ? u.visitVectorizatonDetail(this) : u.visitChildren(this);
	};
	t.VectorizatonDetailContext = Xs;
	t.prototype.vectorizatonDetail = function () {
		var u = new Xs(this, this._ctx, this.state);
		this.enterRule(u, 14, t.RULE_vectorizatonDetail);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 929),
				(e = this._input.LA(1)),
				((e - 308) & -32) == 0 &&
				((1 << (e - 308)) &
					((1 << (t.KW_SUMMARY - 308)) |
						(1 << (t.KW_OPERATOR - 308)) |
						(1 << (t.KW_EXPRESSION - 308)) |
						(1 << (t.KW_DETAIL - 308)))) !==
					0
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function uu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_execStatement),
			this
		);
	}
	uu.prototype = Object.create(s.ParserRuleContext.prototype);
	uu.prototype.constructor = uu;
	uu.prototype.queryStatementExpression = function () {
		return this.getTypedRuleContext(Un, 0);
	};
	uu.prototype.loadStatement = function () {
		return this.getTypedRuleContext(et, 0);
	};
	uu.prototype.exportStatement = function () {
		return this.getTypedRuleContext(ji, 0);
	};
	uu.prototype.importStatement = function () {
		return this.getTypedRuleContext(je, 0);
	};
	uu.prototype.replDumpStatement = function () {
		return this.getTypedRuleContext(it, 0);
	};
	uu.prototype.replLoadStatement = function () {
		return this.getTypedRuleContext(ie, 0);
	};
	uu.prototype.replStatusStatement = function () {
		return this.getTypedRuleContext(Xi, 0);
	};
	uu.prototype.ddlStatement = function () {
		return this.getTypedRuleContext(H, 0);
	};
	uu.prototype.deleteStatement = function () {
		return this.getTypedRuleContext(L2, 0);
	};
	uu.prototype.updateStatement = function () {
		return this.getTypedRuleContext(N2, 0);
	};
	uu.prototype.sqlTransactionStatement = function () {
		return this.getTypedRuleContext(P2, 0);
	};
	uu.prototype.mergeStatement = function () {
		return this.getTypedRuleContext(lt, 0);
	};
	uu.prototype.accept = function (u) {
		return u instanceof d ? u.visitExecStatement(this) : u.visitChildren(this);
	};
	t.ExecStatementContext = uu;
	t.prototype.execStatement = function () {
		var u = new uu(this, this._ctx, this.state);
		this.enterRule(u, 16, t.RULE_execStatement);
		try {
			(this.state = 943), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 8, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 931), this.queryStatementExpression();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 932), this.loadStatement();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 933), this.exportStatement();
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 934), this.importStatement();
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 935), this.replDumpStatement();
					break;
				case 6:
					this.enterOuterAlt(u, 6), (this.state = 936), this.replLoadStatement();
					break;
				case 7:
					this.enterOuterAlt(u, 7), (this.state = 937), this.replStatusStatement();
					break;
				case 8:
					this.enterOuterAlt(u, 8), (this.state = 938), this.ddlStatement();
					break;
				case 9:
					this.enterOuterAlt(u, 9), (this.state = 939), this.deleteStatement();
					break;
				case 10:
					this.enterOuterAlt(u, 10), (this.state = 940), this.updateStatement();
					break;
				case 11:
					this.enterOuterAlt(u, 11), (this.state = 941), this.sqlTransactionStatement();
					break;
				case 12:
					this.enterOuterAlt(u, 12), (this.state = 942), this.mergeStatement();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function et(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_loadStatement),
			this
		);
	}
	et.prototype = Object.create(s.ParserRuleContext.prototype);
	et.prototype.constructor = et;
	et.prototype.KW_LOAD = function () {
		return this.getToken(t.KW_LOAD, 0);
	};
	et.prototype.KW_DATA = function () {
		return this.getToken(t.KW_DATA, 0);
	};
	et.prototype.KW_INPATH = function () {
		return this.getToken(t.KW_INPATH, 0);
	};
	et.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	et.prototype.KW_INTO = function () {
		return this.getToken(t.KW_INTO, 0);
	};
	et.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	et.prototype.tableOrPartition = function () {
		return this.getTypedRuleContext(fi, 0);
	};
	et.prototype.KW_LOCAL = function () {
		return this.getToken(t.KW_LOCAL, 0);
	};
	et.prototype.KW_OVERWRITE = function () {
		return this.getToken(t.KW_OVERWRITE, 0);
	};
	et.prototype.inputFileFormat = function () {
		return this.getTypedRuleContext(_o, 0);
	};
	et.prototype.accept = function (u) {
		return u instanceof d ? u.visitLoadStatement(this) : u.visitChildren(this);
	};
	t.LoadStatementContext = et;
	t.prototype.loadStatement = function () {
		var u = new et(this, this._ctx, this.state);
		this.enterRule(u, 18, t.RULE_loadStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 945),
				this.match(t.KW_LOAD),
				(this.state = 946),
				this.match(t.KW_DATA),
				(this.state = 948),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_LOCAL && ((this.state = 947), this.match(t.KW_LOCAL)),
				(this.state = 950),
				this.match(t.KW_INPATH),
				(this.state = 951),
				this.match(t.StringLiteral),
				(this.state = 953),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_OVERWRITE && ((this.state = 952), this.match(t.KW_OVERWRITE)),
				(this.state = 955),
				this.match(t.KW_INTO),
				(this.state = 956),
				this.match(t.KW_TABLE),
				(this.state = 957),
				this.tableOrPartition(),
				(this.state = 959),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_INPUTFORMAT && ((this.state = 958), this.inputFileFormat());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ee(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_replicationClause),
			this
		);
	}
	ee.prototype = Object.create(s.ParserRuleContext.prototype);
	ee.prototype.constructor = ee;
	ee.prototype.KW_FOR = function () {
		return this.getToken(t.KW_FOR, 0);
	};
	ee.prototype.KW_REPLICATION = function () {
		return this.getToken(t.KW_REPLICATION, 0);
	};
	ee.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	ee.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	ee.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	ee.prototype.KW_METADATA = function () {
		return this.getToken(t.KW_METADATA, 0);
	};
	ee.prototype.accept = function (u) {
		return u instanceof d ? u.visitReplicationClause(this) : u.visitChildren(this);
	};
	t.ReplicationClauseContext = ee;
	t.prototype.replicationClause = function () {
		var u = new ee(this, this._ctx, this.state);
		this.enterRule(u, 20, t.RULE_replicationClause);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 961),
				this.match(t.KW_FOR),
				(this.state = 963),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_METADATA && ((this.state = 962), this.match(t.KW_METADATA)),
				(this.state = 965),
				this.match(t.KW_REPLICATION),
				(this.state = 966),
				this.match(t.LPAREN),
				(this.state = 967),
				this.match(t.StringLiteral),
				(this.state = 968),
				this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ji(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_exportStatement),
			this
		);
	}
	ji.prototype = Object.create(s.ParserRuleContext.prototype);
	ji.prototype.constructor = ji;
	ji.prototype.KW_EXPORT = function () {
		return this.getToken(t.KW_EXPORT, 0);
	};
	ji.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	ji.prototype.tableOrPartition = function () {
		return this.getTypedRuleContext(fi, 0);
	};
	ji.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	ji.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	ji.prototype.replicationClause = function () {
		return this.getTypedRuleContext(ee, 0);
	};
	ji.prototype.accept = function (u) {
		return u instanceof d ? u.visitExportStatement(this) : u.visitChildren(this);
	};
	t.ExportStatementContext = ji;
	t.prototype.exportStatement = function () {
		var u = new ji(this, this._ctx, this.state);
		this.enterRule(u, 22, t.RULE_exportStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 970),
				this.match(t.KW_EXPORT),
				(this.state = 971),
				this.match(t.KW_TABLE),
				(this.state = 972),
				this.tableOrPartition(),
				(this.state = 973),
				this.match(t.KW_TO),
				(this.state = 974),
				this.match(t.StringLiteral),
				(this.state = 976),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_FOR && ((this.state = 975), this.replicationClause());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function je(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_importStatement),
			(this.path = null),
			this
		);
	}
	je.prototype = Object.create(s.ParserRuleContext.prototype);
	je.prototype.constructor = je;
	je.prototype.KW_IMPORT = function () {
		return this.getToken(t.KW_IMPORT, 0);
	};
	je.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	je.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	je.prototype.tableOrPartition = function () {
		return this.getTypedRuleContext(fi, 0);
	};
	je.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	je.prototype.tableLocation = function () {
		return this.getTypedRuleContext(Ln, 0);
	};
	je.prototype.KW_EXTERNAL = function () {
		return this.getToken(t.KW_EXTERNAL, 0);
	};
	je.prototype.accept = function (u) {
		return u instanceof d ? u.visitImportStatement(this) : u.visitChildren(this);
	};
	t.ImportStatementContext = je;
	t.prototype.importStatement = function () {
		var u = new je(this, this._ctx, this.state);
		this.enterRule(u, 24, t.RULE_importStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 978),
				this.match(t.KW_IMPORT),
				(this.state = 984),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_TABLE || e === t.KW_EXTERNAL) &&
					((this.state = 980),
					this._errHandler.sync(this),
					(e = this._input.LA(1)),
					e === t.KW_EXTERNAL && ((this.state = 979), this.match(t.KW_EXTERNAL)),
					(this.state = 982),
					this.match(t.KW_TABLE),
					(this.state = 983),
					this.tableOrPartition()),
				(this.state = 986),
				this.match(t.KW_FROM),
				(this.state = 987),
				(u.path = this.match(t.StringLiteral)),
				(this.state = 989),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_LOCATION && ((this.state = 988), this.tableLocation());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function it(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_replDumpStatement),
			this
		);
	}
	it.prototype = Object.create(s.ParserRuleContext.prototype);
	it.prototype.constructor = it;
	it.prototype.KW_REPL = function () {
		return this.getToken(t.KW_REPL, 0);
	};
	it.prototype.KW_DUMP = function () {
		return this.getToken(t.KW_DUMP, 0);
	};
	it.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	it.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	it.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	it.prototype.Number = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.Number) : this.getToken(t.Number, u);
	};
	it.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	it.prototype.replConfigs = function () {
		return this.getTypedRuleContext(tn, 0);
	};
	it.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	it.prototype.KW_LIMIT = function () {
		return this.getToken(t.KW_LIMIT, 0);
	};
	it.prototype.accept = function (u) {
		return u instanceof d ? u.visitReplDumpStatement(this) : u.visitChildren(this);
	};
	t.ReplDumpStatementContext = it;
	t.prototype.replDumpStatement = function () {
		var u = new it(this, this._ctx, this.state);
		this.enterRule(u, 26, t.RULE_replDumpStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 991),
				this.match(t.KW_REPL),
				(this.state = 992),
				this.match(t.KW_DUMP),
				(this.state = 993),
				this.identifier(),
				(this.state = 996),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.DOT && ((this.state = 994), this.match(t.DOT), (this.state = 995), this.identifier()),
				(this.state = 1008),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_FROM &&
					((this.state = 998),
					this.match(t.KW_FROM),
					(this.state = 999),
					this.match(t.Number),
					(this.state = 1002),
					this._errHandler.sync(this),
					(e = this._input.LA(1)),
					e === t.KW_TO &&
						((this.state = 1e3), this.match(t.KW_TO), (this.state = 1001), this.match(t.Number)),
					(this.state = 1006),
					this._errHandler.sync(this),
					(e = this._input.LA(1)),
					e === t.KW_LIMIT &&
						((this.state = 1004), this.match(t.KW_LIMIT), (this.state = 1005), this.match(t.Number))),
				(this.state = 1012),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 1010), this.match(t.KW_WITH), (this.state = 1011), this.replConfigs());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ie(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_replLoadStatement),
			this
		);
	}
	ie.prototype = Object.create(s.ParserRuleContext.prototype);
	ie.prototype.constructor = ie;
	ie.prototype.KW_REPL = function () {
		return this.getToken(t.KW_REPL, 0);
	};
	ie.prototype.KW_LOAD = function () {
		return this.getToken(t.KW_LOAD, 0);
	};
	ie.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	ie.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	ie.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	ie.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	ie.prototype.replConfigs = function () {
		return this.getTypedRuleContext(tn, 0);
	};
	ie.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	ie.prototype.accept = function (u) {
		return u instanceof d ? u.visitReplLoadStatement(this) : u.visitChildren(this);
	};
	t.ReplLoadStatementContext = ie;
	t.prototype.replLoadStatement = function () {
		var u = new ie(this, this._ctx, this.state);
		this.enterRule(u, 28, t.RULE_replLoadStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1014),
				this.match(t.KW_REPL),
				(this.state = 1015),
				this.match(t.KW_LOAD),
				(this.state = 1021),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(((e & -32) == 0 &&
					((1 << e) &
						((1 << t.KW_ASC) |
							(1 << t.KW_DESC) |
							(1 << t.KW_NULLS) |
							(1 << t.KW_LAST) |
							(1 << t.KW_OVERWRITE))) !==
						0) ||
					(((e - 36) & -32) == 0 &&
						((1 << (e - 36)) &
							((1 << (t.KW_PARTITIONS - 36)) |
								(1 << (t.KW_TABLES - 36)) |
								(1 << (t.KW_COLUMNS - 36)) |
								(1 << (t.KW_INDEX - 36)) |
								(1 << (t.KW_INDEXES - 36)) |
								(1 << (t.KW_REBUILD - 36)) |
								(1 << (t.KW_FUNCTIONS - 36)) |
								(1 << (t.KW_SHOW - 36)) |
								(1 << (t.KW_MSCK - 36)) |
								(1 << (t.KW_REPAIR - 36)) |
								(1 << (t.KW_DIRECTORY - 36)) |
								(1 << (t.KW_CLUSTER - 36)) |
								(1 << (t.KW_DISTRIBUTE - 36)) |
								(1 << (t.KW_SORT - 36)) |
								(1 << (t.KW_LOAD - 36)) |
								(1 << (t.KW_EXPORT - 36)) |
								(1 << (t.KW_REPLICATION - 36)) |
								(1 << (t.KW_METADATA - 36)) |
								(1 << (t.KW_DATA - 36)) |
								(1 << (t.KW_INPATH - 36)))) !==
							0) ||
					(((e - 68) & -32) == 0 &&
						((1 << (e - 68)) &
							((1 << (t.KW_CHANGE - 68)) |
								(1 << (t.KW_FIRST - 68)) |
								(1 << (t.KW_AFTER - 68)) |
								(1 << (t.KW_RENAME - 68)) |
								(1 << (t.KW_COMMENT - 68)) |
								(1 << (t.KW_TINYINT - 68)) |
								(1 << (t.KW_DATETIME - 68)) |
								(1 << (t.KW_ZONE - 68)) |
								(1 << (t.KW_STRING - 68)) |
								(1 << (t.KW_STRUCT - 68)) |
								(1 << (t.KW_UNIONTYPE - 68)))) !==
							0) ||
					(((e - 101) & -32) == 0 &&
						((1 << (e - 101)) &
							((1 << (t.KW_PARTITIONED - 101)) |
								(1 << (t.KW_CLUSTERED - 101)) |
								(1 << (t.KW_SORTED - 101)) |
								(1 << (t.KW_BUCKETS - 101)) |
								(1 << (t.KW_FORMAT - 101)) |
								(1 << (t.KW_DELIMITED - 101)) |
								(1 << (t.KW_FIELDS - 101)) |
								(1 << (t.KW_TERMINATED - 101)) |
								(1 << (t.KW_ESCAPED - 101)) |
								(1 << (t.KW_COLLECTION - 101)) |
								(1 << (t.KW_ITEMS - 101)) |
								(1 << (t.KW_KEYS - 101)) |
								(1 << (t.KW_KEY_TYPE - 101)) |
								(1 << (t.KW_KILL - 101)) |
								(1 << (t.KW_LINES - 101)) |
								(1 << (t.KW_STORED - 101)) |
								(1 << (t.KW_FILEFORMAT - 101)) |
								(1 << (t.KW_INPUTFORMAT - 101)) |
								(1 << (t.KW_OUTPUTFORMAT - 101)) |
								(1 << (t.KW_INPUTDRIVER - 101)) |
								(1 << (t.KW_OUTPUTDRIVER - 101)) |
								(1 << (t.KW_ENABLE - 101)) |
								(1 << (t.KW_DISABLE - 101)) |
								(1 << (t.KW_LOCATION - 101)) |
								(1 << (t.KW_BUCKET - 101)))) !==
							0) ||
					(((e - 134) & -32) == 0 &&
						((1 << (e - 134)) &
							((1 << (t.KW_ADD - 134)) |
								(1 << (t.KW_REPLACE - 134)) |
								(1 << (t.KW_TEMPORARY - 134)) |
								(1 << (t.KW_FILE - 134)) |
								(1 << (t.KW_JAR - 134)) |
								(1 << (t.KW_EXPLAIN - 134)) |
								(1 << (t.KW_FORMATTED - 134)) |
								(1 << (t.KW_DEPENDENCY - 134)) |
								(1 << (t.KW_LOGICAL - 134)) |
								(1 << (t.KW_SERDE - 134)) |
								(1 << (t.KW_DEFERRED - 134)) |
								(1 << (t.KW_SERDEPROPERTIES - 134)) |
								(1 << (t.KW_DBPROPERTIES - 134)) |
								(1 << (t.KW_LIMIT - 134)) |
								(1 << (t.KW_OFFSET - 134)) |
								(1 << (t.KW_UNSET - 134)) |
								(1 << (t.KW_TBLPROPERTIES - 134)) |
								(1 << (t.KW_IDXPROPERTIES - 134)) |
								(1 << (t.KW_VALUE_TYPE - 134)) |
								(1 << (t.KW_ELEM_TYPE - 134)) |
								(1 << (t.KW_DEFINED - 134)))) !==
							0) ||
					(((e - 167) & -32) == 0 &&
						((1 << (e - 167)) &
							((1 << (t.KW_MAPJOIN - 167)) |
								(1 << (t.KW_STREAMTABLE - 167)) |
								(1 << (t.KW_CLUSTERSTATUS - 167)) |
								(1 << (t.KW_UTC - 167)) |
								(1 << (t.KW_UTCTIMESTAMP - 167)) |
								(1 << (t.KW_LONG - 167)) |
								(1 << (t.KW_PLUS - 167)) |
								(1 << (t.KW_VIEW - 167)) |
								(1 << (t.KW_VIEWS - 167)) |
								(1 << (t.KW_DATABASES - 167)) |
								(1 << (t.KW_MATERIALIZED - 167)) |
								(1 << (t.KW_SCHEMA - 167)) |
								(1 << (t.KW_SCHEMAS - 167)) |
								(1 << (t.KW_SSL - 167)) |
								(1 << (t.KW_UNDO - 167)) |
								(1 << (t.KW_LOCK - 167)) |
								(1 << (t.KW_LOCKS - 167)) |
								(1 << (t.KW_UNLOCK - 167)) |
								(1 << (t.KW_SHARED - 167)) |
								(1 << (t.KW_EXCLUSIVE - 167)) |
								(1 << (t.KW_UNSIGNED - 167)) |
								(1 << (t.KW_WHILE - 167)) |
								(1 << (t.KW_READ - 167)))) !==
							0) ||
					(((e - 200) & -32) == 0 &&
						((1 << (e - 200)) &
							((1 << (t.KW_PURGE - 200)) |
								(1 << (t.KW_ANALYZE - 200)) |
								(1 << (t.KW_BEFORE - 200)) |
								(1 << (t.KW_CONTINUE - 200)) |
								(1 << (t.KW_RECORDREADER - 200)) |
								(1 << (t.KW_RECORDWRITER - 200)) |
								(1 << (t.KW_SEMI - 200)) |
								(1 << (t.KW_TOUCH - 200)) |
								(1 << (t.KW_ARCHIVE - 200)) |
								(1 << (t.KW_UNARCHIVE - 200)) |
								(1 << (t.KW_COMPUTE - 200)) |
								(1 << (t.KW_STATISTICS - 200)) |
								(1 << (t.KW_USE - 200)) |
								(1 << (t.KW_OPTION - 200)) |
								(1 << (t.KW_CONCATENATE - 200)) |
								(1 << (t.KW_SHOW_DATABASE - 200)) |
								(1 << (t.KW_RESTRICT - 200)) |
								(1 << (t.KW_CASCADE - 200)) |
								(1 << (t.KW_SKEWED - 200)) |
								(1 << (t.KW_DIRECTORIES - 200)))) !==
							0) ||
					(((e - 244) & -32) == 0 &&
						((1 << (e - 244)) &
							((1 << (t.KW_SETS - 244)) |
								(1 << (t.KW_NOSCAN - 244)) |
								(1 << (t.KW_ROLE - 244)) |
								(1 << (t.KW_ROLES - 244)) |
								(1 << (t.KW_URI - 244)) |
								(1 << (t.KW_SERVER - 244)) |
								(1 << (t.KW_ADMIN - 244)) |
								(1 << (t.KW_OWNER - 244)) |
								(1 << (t.KW_PRINCIPALS - 244)) |
								(1 << (t.KW_COMPACT - 244)) |
								(1 << (t.KW_COMPACTIONS - 244)) |
								(1 << (t.KW_TRANSACTIONS - 244)) |
								(1 << (t.KW_REWRITE - 244)) |
								(1 << (t.KW_REOPTIMIZATION - 244)) |
								(1 << (t.KW_RELOAD - 244)) |
								(1 << (t.KW_YEAR - 244)) |
								(1 << (t.KW_QUERY - 244)) |
								(1 << (t.KW_QUARTER - 244)) |
								(1 << (t.KW_MONTH - 244)) |
								(1 << (t.KW_WEEK - 244)) |
								(1 << (t.KW_DAY - 244)) |
								(1 << (t.KW_DOW - 244)) |
								(1 << (t.KW_HOUR - 244)) |
								(1 << (t.KW_MINUTE - 244)) |
								(1 << (t.KW_SECOND - 244)))) !==
							0) ||
					(((e - 277) & -32) == 0 &&
						((1 << (e - 277)) &
							((1 << (t.KW_TRANSACTION - 277)) |
								(1 << (t.KW_WORK - 277)) |
								(1 << (t.KW_WRITE - 277)) |
								(1 << (t.KW_ISOLATION - 277)) |
								(1 << (t.KW_LEVEL - 277)) |
								(1 << (t.KW_SNAPSHOT - 277)) |
								(1 << (t.KW_AUTOCOMMIT - 277)) |
								(1 << (t.KW_CACHE - 277)) |
								(1 << (t.KW_ENFORCED - 277)) |
								(1 << (t.KW_VALIDATE - 277)) |
								(1 << (t.KW_NOVALIDATE - 277)) |
								(1 << (t.KW_RELY - 277)) |
								(1 << (t.KW_NORELY - 277)) |
								(1 << (t.KW_KEY - 277)) |
								(1 << (t.KW_ABORT - 277)) |
								(1 << (t.KW_MATCHED - 277)) |
								(1 << (t.KW_REPL - 277)) |
								(1 << (t.KW_DUMP - 277)) |
								(1 << (t.KW_STATUS - 277)) |
								(1 << (t.KW_VECTORIZATION - 277)) |
								(1 << (t.KW_SUMMARY - 277)))) !==
							0) ||
					(((e - 309) & -32) == 0 &&
						((1 << (e - 309)) &
							((1 << (t.KW_OPERATOR - 309)) |
								(1 << (t.KW_EXPRESSION - 309)) |
								(1 << (t.KW_DETAIL - 309)) |
								(1 << (t.KW_WAIT - 309)) |
								(1 << (t.KW_RESOURCE - 309)) |
								(1 << (t.KW_PLAN - 309)) |
								(1 << (t.KW_QUERY_PARALLELISM - 309)) |
								(1 << (t.KW_PLANS - 309)) |
								(1 << (t.KW_ACTIVATE - 309)) |
								(1 << (t.KW_DEFAULT - 309)) |
								(1 << (t.KW_CHECK - 309)) |
								(1 << (t.KW_POOL - 309)) |
								(1 << (t.KW_MOVE - 309)) |
								(1 << (t.KW_DO - 309)) |
								(1 << (t.KW_ALLOC_FRACTION - 309)) |
								(1 << (t.KW_SCHEDULING_POLICY - 309)) |
								(1 << (t.KW_PATH - 309)) |
								(1 << (t.KW_MAPPING - 309)) |
								(1 << (t.KW_WORKLOAD - 309)) |
								(1 << (t.KW_MANAGEMENT - 309)) |
								(1 << (t.KW_ACTIVE - 309)) |
								(1 << (t.KW_UNMANAGED - 309)) |
								(1 << (t.KW_DELTA - 309)) |
								(1 << (t.KW_CSV - 309)))) !==
							0) ||
					e === t.KW_JSON ||
					e === t.KW_BLOOMFILTER ||
					e === t.Identifier) &&
					((this.state = 1016),
					this.identifier(),
					(this.state = 1019),
					this._errHandler.sync(this),
					(e = this._input.LA(1)),
					e === t.DOT && ((this.state = 1017), this.match(t.DOT), (this.state = 1018), this.identifier())),
				(this.state = 1023),
				this.match(t.KW_FROM),
				(this.state = 1024),
				this.match(t.StringLiteral),
				(this.state = 1027),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 1025), this.match(t.KW_WITH), (this.state = 1026), this.replConfigs());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function tn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_replConfigs),
			this
		);
	}
	tn.prototype = Object.create(s.ParserRuleContext.prototype);
	tn.prototype.constructor = tn;
	tn.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	tn.prototype.replConfigsList = function () {
		return this.getTypedRuleContext(Rc, 0);
	};
	tn.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	tn.prototype.accept = function (u) {
		return u instanceof d ? u.visitReplConfigs(this) : u.visitChildren(this);
	};
	t.ReplConfigsContext = tn;
	t.prototype.replConfigs = function () {
		var u = new tn(this, this._ctx, this.state);
		this.enterRule(u, 30, t.RULE_replConfigs);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1029),
				this.match(t.LPAREN),
				(this.state = 1030),
				this.replConfigsList(),
				(this.state = 1031),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Rc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_replConfigsList),
			this
		);
	}
	Rc.prototype = Object.create(s.ParserRuleContext.prototype);
	Rc.prototype.constructor = Rc;
	Rc.prototype.keyValueProperty = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ce) : this.getTypedRuleContext(ce, u);
	};
	Rc.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Rc.prototype.accept = function (u) {
		return u instanceof d ? u.visitReplConfigsList(this) : u.visitChildren(this);
	};
	t.ReplConfigsListContext = Rc;
	t.prototype.replConfigsList = function () {
		var u = new Rc(this, this._ctx, this.state);
		this.enterRule(u, 32, t.RULE_replConfigsList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1033,
					this.keyValueProperty(),
					this.state = 1038,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 1034),
					this.match(t.COMMA),
					(this.state = 1035),
					this.keyValueProperty(),
					(this.state = 1040),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Xi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_replStatusStatement),
			this
		);
	}
	Xi.prototype = Object.create(s.ParserRuleContext.prototype);
	Xi.prototype.constructor = Xi;
	Xi.prototype.KW_REPL = function () {
		return this.getToken(t.KW_REPL, 0);
	};
	Xi.prototype.KW_STATUS = function () {
		return this.getToken(t.KW_STATUS, 0);
	};
	Xi.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	Xi.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	Xi.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	Xi.prototype.replConfigs = function () {
		return this.getTypedRuleContext(tn, 0);
	};
	Xi.prototype.accept = function (u) {
		return u instanceof d ? u.visitReplStatusStatement(this) : u.visitChildren(this);
	};
	t.ReplStatusStatementContext = Xi;
	t.prototype.replStatusStatement = function () {
		var u = new Xi(this, this._ctx, this.state);
		this.enterRule(u, 34, t.RULE_replStatusStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1041),
				this.match(t.KW_REPL),
				(this.state = 1042),
				this.match(t.KW_STATUS),
				(this.state = 1043),
				this.identifier(),
				(this.state = 1046),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.DOT && ((this.state = 1044), this.match(t.DOT), (this.state = 1045), this.identifier()),
				(this.state = 1050),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 1048), this.match(t.KW_WITH), (this.state = 1049), this.replConfigs());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function H(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_ddlStatement),
			this
		);
	}
	H.prototype = Object.create(s.ParserRuleContext.prototype);
	H.prototype.constructor = H;
	H.prototype.createDatabaseStatement = function () {
		return this.getTypedRuleContext(nt, 0);
	};
	H.prototype.switchDatabaseStatement = function () {
		return this.getTypedRuleContext(Ac, 0);
	};
	H.prototype.dropDatabaseStatement = function () {
		return this.getTypedRuleContext(Qi, 0);
	};
	H.prototype.createTableStatement = function () {
		return this.getTypedRuleContext(c0, 0);
	};
	H.prototype.dropTableStatement = function () {
		return this.getTypedRuleContext(qi, 0);
	};
	H.prototype.truncateTableStatement = function () {
		return this.getTypedRuleContext(Xe, 0);
	};
	H.prototype.alterStatement = function () {
		return this.getTypedRuleContext(G0, 0);
	};
	H.prototype.descStatement = function () {
		return this.getTypedRuleContext(st, 0);
	};
	H.prototype.showStatement = function () {
		return this.getTypedRuleContext(j, 0);
	};
	H.prototype.metastoreCheck = function () {
		return this.getTypedRuleContext(It, 0);
	};
	H.prototype.createViewStatement = function () {
		return this.getTypedRuleContext(tu, 0);
	};
	H.prototype.createMaterializedViewStatement = function () {
		return this.getTypedRuleContext(eu, 0);
	};
	H.prototype.dropViewStatement = function () {
		return this.getTypedRuleContext(h2, 0);
	};
	H.prototype.dropMaterializedViewStatement = function () {
		return this.getTypedRuleContext(bn, 0);
	};
	H.prototype.createFunctionStatement = function () {
		return this.getTypedRuleContext(se, 0);
	};
	H.prototype.createMacroStatement = function () {
		return this.getTypedRuleContext(ae, 0);
	};
	H.prototype.dropFunctionStatement = function () {
		return this.getTypedRuleContext(mn, 0);
	};
	H.prototype.reloadFunctionStatement = function () {
		return this.getTypedRuleContext(Hc, 0);
	};
	H.prototype.dropMacroStatement = function () {
		return this.getTypedRuleContext(yn, 0);
	};
	H.prototype.analyzeStatement = function () {
		return this.getTypedRuleContext(Pu, 0);
	};
	H.prototype.lockStatement = function () {
		return this.getTypedRuleContext(dn, 0);
	};
	H.prototype.unlockStatement = function () {
		return this.getTypedRuleContext(o2, 0);
	};
	H.prototype.lockDatabase = function () {
		return this.getTypedRuleContext(fn, 0);
	};
	H.prototype.unlockDatabase = function () {
		return this.getTypedRuleContext(c2, 0);
	};
	H.prototype.createRoleStatement = function () {
		return this.getTypedRuleContext(Ro, 0);
	};
	H.prototype.dropRoleStatement = function () {
		return this.getTypedRuleContext(mo, 0);
	};
	H.prototype.grantPrivileges = function () {
		return this.getTypedRuleContext($i, 0);
	};
	H.prototype.revokePrivileges = function () {
		return this.getTypedRuleContext(ur, 0);
	};
	H.prototype.showGrants = function () {
		return this.getTypedRuleContext(En, 0);
	};
	H.prototype.showRoleGrants = function () {
		return this.getTypedRuleContext(p2, 0);
	};
	H.prototype.showRolePrincipals = function () {
		return this.getTypedRuleContext(Co, 0);
	};
	H.prototype.showRoles = function () {
		return this.getTypedRuleContext(vc, 0);
	};
	H.prototype.grantRole = function () {
		return this.getTypedRuleContext(ze, 0);
	};
	H.prototype.revokeRole = function () {
		return this.getTypedRuleContext($e, 0);
	};
	H.prototype.setRole = function () {
		return this.getTypedRuleContext(_n, 0);
	};
	H.prototype.showCurrentRole = function () {
		return this.getTypedRuleContext(yo, 0);
	};
	H.prototype.abortTransactionStatement = function () {
		return this.getTypedRuleContext(zo, 0);
	};
	H.prototype.killQueryStatement = function () {
		return this.getTypedRuleContext(u1, 0);
	};
	H.prototype.resourcePlanDdlStatements = function () {
		return this.getTypedRuleContext(X0, 0);
	};
	H.prototype.createIndexStatement = function () {
		return this.getTypedRuleContext(T0, 0);
	};
	H.prototype.dropIndexStatement = function () {
		return this.getTypedRuleContext(pn, 0);
	};
	H.prototype.createBloomfilterIndexStatement = function () {
		return this.getTypedRuleContext(hn, 0);
	};
	H.prototype.dropBloomfilterIndexStatement = function () {
		return this.getTypedRuleContext(a2, 0);
	};
	H.prototype.accept = function (u) {
		return u instanceof d ? u.visitDdlStatement(this) : u.visitChildren(this);
	};
	t.DdlStatementContext = H;
	t.prototype.ddlStatement = function () {
		var u = new H(this, this._ctx, this.state);
		this.enterRule(u, 36, t.RULE_ddlStatement);
		try {
			(this.state = 1095), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 28, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 1052), this.createDatabaseStatement();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 1053), this.switchDatabaseStatement();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 1054), this.dropDatabaseStatement();
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 1055), this.createTableStatement();
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 1056), this.dropTableStatement();
					break;
				case 6:
					this.enterOuterAlt(u, 6), (this.state = 1057), this.truncateTableStatement();
					break;
				case 7:
					this.enterOuterAlt(u, 7), (this.state = 1058), this.alterStatement();
					break;
				case 8:
					this.enterOuterAlt(u, 8), (this.state = 1059), this.descStatement();
					break;
				case 9:
					this.enterOuterAlt(u, 9), (this.state = 1060), this.showStatement();
					break;
				case 10:
					this.enterOuterAlt(u, 10), (this.state = 1061), this.metastoreCheck();
					break;
				case 11:
					this.enterOuterAlt(u, 11), (this.state = 1062), this.createViewStatement();
					break;
				case 12:
					this.enterOuterAlt(u, 12), (this.state = 1063), this.createMaterializedViewStatement();
					break;
				case 13:
					this.enterOuterAlt(u, 13), (this.state = 1064), this.dropViewStatement();
					break;
				case 14:
					this.enterOuterAlt(u, 14), (this.state = 1065), this.dropMaterializedViewStatement();
					break;
				case 15:
					this.enterOuterAlt(u, 15), (this.state = 1066), this.createFunctionStatement();
					break;
				case 16:
					this.enterOuterAlt(u, 16), (this.state = 1067), this.createMacroStatement();
					break;
				case 17:
					this.enterOuterAlt(u, 17), (this.state = 1068), this.dropFunctionStatement();
					break;
				case 18:
					this.enterOuterAlt(u, 18), (this.state = 1069), this.reloadFunctionStatement();
					break;
				case 19:
					this.enterOuterAlt(u, 19), (this.state = 1070), this.dropMacroStatement();
					break;
				case 20:
					this.enterOuterAlt(u, 20), (this.state = 1071), this.analyzeStatement();
					break;
				case 21:
					this.enterOuterAlt(u, 21), (this.state = 1072), this.lockStatement();
					break;
				case 22:
					this.enterOuterAlt(u, 22), (this.state = 1073), this.unlockStatement();
					break;
				case 23:
					this.enterOuterAlt(u, 23), (this.state = 1074), this.lockDatabase();
					break;
				case 24:
					this.enterOuterAlt(u, 24), (this.state = 1075), this.unlockDatabase();
					break;
				case 25:
					this.enterOuterAlt(u, 25), (this.state = 1076), this.createRoleStatement();
					break;
				case 26:
					this.enterOuterAlt(u, 26), (this.state = 1077), this.dropRoleStatement();
					break;
				case 27:
					this.enterOuterAlt(u, 27), (this.state = 1078), this.grantPrivileges();
					break;
				case 28:
					this.enterOuterAlt(u, 28), (this.state = 1079), this.revokePrivileges();
					break;
				case 29:
					this.enterOuterAlt(u, 29), (this.state = 1080), this.showGrants();
					break;
				case 30:
					this.enterOuterAlt(u, 30), (this.state = 1081), this.showRoleGrants();
					break;
				case 31:
					this.enterOuterAlt(u, 31), (this.state = 1082), this.showRolePrincipals();
					break;
				case 32:
					this.enterOuterAlt(u, 32), (this.state = 1083), this.showRoles();
					break;
				case 33:
					this.enterOuterAlt(u, 33), (this.state = 1084), this.grantRole();
					break;
				case 34:
					this.enterOuterAlt(u, 34), (this.state = 1085), this.revokeRole();
					break;
				case 35:
					this.enterOuterAlt(u, 35), (this.state = 1086), this.setRole();
					break;
				case 36:
					this.enterOuterAlt(u, 36), (this.state = 1087), this.showCurrentRole();
					break;
				case 37:
					this.enterOuterAlt(u, 37), (this.state = 1088), this.abortTransactionStatement();
					break;
				case 38:
					this.enterOuterAlt(u, 38), (this.state = 1089), this.killQueryStatement();
					break;
				case 39:
					this.enterOuterAlt(u, 39), (this.state = 1090), this.resourcePlanDdlStatements();
					break;
				case 40:
					this.enterOuterAlt(u, 40), (this.state = 1091), this.createIndexStatement();
					break;
				case 41:
					this.enterOuterAlt(u, 41), (this.state = 1092), this.dropIndexStatement();
					break;
				case 42:
					this.enterOuterAlt(u, 42), (this.state = 1093), this.createBloomfilterIndexStatement();
					break;
				case 43:
					this.enterOuterAlt(u, 43), (this.state = 1094), this.dropBloomfilterIndexStatement();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function rt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_ifExists),
			this
		);
	}
	rt.prototype = Object.create(s.ParserRuleContext.prototype);
	rt.prototype.constructor = rt;
	rt.prototype.KW_IF = function () {
		return this.getToken(t.KW_IF, 0);
	};
	rt.prototype.KW_EXISTS = function () {
		return this.getToken(t.KW_EXISTS, 0);
	};
	rt.prototype.accept = function (u) {
		return u instanceof d ? u.visitIfExists(this) : u.visitChildren(this);
	};
	t.IfExistsContext = rt;
	t.prototype.ifExists = function () {
		var u = new rt(this, this._ctx, this.state);
		this.enterRule(u, 38, t.RULE_ifExists);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1097),
				this.match(t.KW_IF),
				(this.state = 1098),
				this.match(t.KW_EXISTS);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function en(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_restrictOrCascade),
			this
		);
	}
	en.prototype = Object.create(s.ParserRuleContext.prototype);
	en.prototype.constructor = en;
	en.prototype.KW_RESTRICT = function () {
		return this.getToken(t.KW_RESTRICT, 0);
	};
	en.prototype.KW_CASCADE = function () {
		return this.getToken(t.KW_CASCADE, 0);
	};
	en.prototype.accept = function (u) {
		return u instanceof d ? u.visitRestrictOrCascade(this) : u.visitChildren(this);
	};
	t.RestrictOrCascadeContext = en;
	t.prototype.restrictOrCascade = function () {
		var u = new en(this, this._ctx, this.state);
		this.enterRule(u, 40, t.RULE_restrictOrCascade);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1100),
				(e = this._input.LA(1)),
				e === t.KW_RESTRICT || e === t.KW_CASCADE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function re(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_ifNotExists),
			this
		);
	}
	re.prototype = Object.create(s.ParserRuleContext.prototype);
	re.prototype.constructor = re;
	re.prototype.KW_IF = function () {
		return this.getToken(t.KW_IF, 0);
	};
	re.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	re.prototype.KW_EXISTS = function () {
		return this.getToken(t.KW_EXISTS, 0);
	};
	re.prototype.accept = function (u) {
		return u instanceof d ? u.visitIfNotExists(this) : u.visitChildren(this);
	};
	t.IfNotExistsContext = re;
	t.prototype.ifNotExists = function () {
		var u = new re(this, this._ctx, this.state);
		this.enterRule(u, 42, t.RULE_ifNotExists);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1102),
				this.match(t.KW_IF),
				(this.state = 1103),
				this.match(t.KW_NOT),
				(this.state = 1104),
				this.match(t.KW_EXISTS);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function mc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rewriteEnabled),
			this
		);
	}
	mc.prototype = Object.create(s.ParserRuleContext.prototype);
	mc.prototype.constructor = mc;
	mc.prototype.KW_ENABLE = function () {
		return this.getToken(t.KW_ENABLE, 0);
	};
	mc.prototype.KW_REWRITE = function () {
		return this.getToken(t.KW_REWRITE, 0);
	};
	mc.prototype.accept = function (u) {
		return u instanceof d ? u.visitRewriteEnabled(this) : u.visitChildren(this);
	};
	t.RewriteEnabledContext = mc;
	t.prototype.rewriteEnabled = function () {
		var u = new mc(this, this._ctx, this.state);
		this.enterRule(u, 44, t.RULE_rewriteEnabled);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1106),
				this.match(t.KW_ENABLE),
				(this.state = 1107),
				this.match(t.KW_REWRITE);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $a(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rewriteDisabled),
			this
		);
	}
	$a.prototype = Object.create(s.ParserRuleContext.prototype);
	$a.prototype.constructor = $a;
	$a.prototype.KW_DISABLE = function () {
		return this.getToken(t.KW_DISABLE, 0);
	};
	$a.prototype.KW_REWRITE = function () {
		return this.getToken(t.KW_REWRITE, 0);
	};
	$a.prototype.accept = function (u) {
		return u instanceof d ? u.visitRewriteDisabled(this) : u.visitChildren(this);
	};
	t.RewriteDisabledContext = $a;
	t.prototype.rewriteDisabled = function () {
		var u = new $a(this, this._ctx, this.state);
		this.enterRule(u, 46, t.RULE_rewriteDisabled);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1109),
				this.match(t.KW_DISABLE),
				(this.state = 1110),
				this.match(t.KW_REWRITE);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Qs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_storedAsDirs),
			this
		);
	}
	Qs.prototype = Object.create(s.ParserRuleContext.prototype);
	Qs.prototype.constructor = Qs;
	Qs.prototype.KW_STORED = function () {
		return this.getToken(t.KW_STORED, 0);
	};
	Qs.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	Qs.prototype.KW_DIRECTORIES = function () {
		return this.getToken(t.KW_DIRECTORIES, 0);
	};
	Qs.prototype.accept = function (u) {
		return u instanceof d ? u.visitStoredAsDirs(this) : u.visitChildren(this);
	};
	t.StoredAsDirsContext = Qs;
	t.prototype.storedAsDirs = function () {
		var u = new Qs(this, this._ctx, this.state);
		this.enterRule(u, 48, t.RULE_storedAsDirs);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1112),
				this.match(t.KW_STORED),
				(this.state = 1113),
				this.match(t.KW_AS),
				(this.state = 1114),
				this.match(t.KW_DIRECTORIES);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function yc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_orReplace),
			this
		);
	}
	yc.prototype = Object.create(s.ParserRuleContext.prototype);
	yc.prototype.constructor = yc;
	yc.prototype.KW_OR = function () {
		return this.getToken(t.KW_OR, 0);
	};
	yc.prototype.KW_REPLACE = function () {
		return this.getToken(t.KW_REPLACE, 0);
	};
	yc.prototype.accept = function (u) {
		return u instanceof d ? u.visitOrReplace(this) : u.visitChildren(this);
	};
	t.OrReplaceContext = yc;
	t.prototype.orReplace = function () {
		var u = new yc(this, this._ctx, this.state);
		this.enterRule(u, 50, t.RULE_orReplace);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1116),
				this.match(t.KW_OR),
				(this.state = 1117),
				this.match(t.KW_REPLACE);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function nt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createDatabaseStatement),
			this
		);
	}
	nt.prototype = Object.create(s.ParserRuleContext.prototype);
	nt.prototype.constructor = nt;
	nt.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	nt.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	nt.prototype.KW_DATABASE = function () {
		return this.getToken(t.KW_DATABASE, 0);
	};
	nt.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	nt.prototype.ifNotExists = function () {
		return this.getTypedRuleContext(re, 0);
	};
	nt.prototype.databaseComment = function () {
		return this.getTypedRuleContext(Wc, 0);
	};
	nt.prototype.dbLocation = function () {
		return this.getTypedRuleContext(Cc, 0);
	};
	nt.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	nt.prototype.KW_DBPROPERTIES = function () {
		return this.getToken(t.KW_DBPROPERTIES, 0);
	};
	nt.prototype.dbProperties = function () {
		return this.getTypedRuleContext(qs, 0);
	};
	nt.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateDatabaseStatement(this) : u.visitChildren(this);
	};
	t.CreateDatabaseStatementContext = nt;
	t.prototype.createDatabaseStatement = function () {
		var u = new nt(this, this._ctx, this.state);
		this.enterRule(u, 52, t.RULE_createDatabaseStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1119),
				this.match(t.KW_CREATE),
				(this.state = 1120),
				(e = this._input.LA(1)),
				e === t.KW_DATABASE || e === t.KW_SCHEMA
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this),
				(this.state = 1122),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 1121), this.ifNotExists()),
				(this.state = 1124),
				this.identifier(),
				(this.state = 1126),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT && ((this.state = 1125), this.databaseComment()),
				(this.state = 1129),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_LOCATION && ((this.state = 1128), this.dbLocation()),
				(this.state = 1134),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 1131),
					this.match(t.KW_WITH),
					(this.state = 1132),
					this.match(t.KW_DBPROPERTIES),
					(this.state = 1133),
					this.dbProperties());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Cc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dbLocation),
			this
		);
	}
	Cc.prototype = Object.create(s.ParserRuleContext.prototype);
	Cc.prototype.constructor = Cc;
	Cc.prototype.KW_LOCATION = function () {
		return this.getToken(t.KW_LOCATION, 0);
	};
	Cc.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Cc.prototype.accept = function (u) {
		return u instanceof d ? u.visitDbLocation(this) : u.visitChildren(this);
	};
	t.DbLocationContext = Cc;
	t.prototype.dbLocation = function () {
		var u = new Cc(this, this._ctx, this.state);
		this.enterRule(u, 54, t.RULE_dbLocation);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1136),
				this.match(t.KW_LOCATION),
				(this.state = 1137),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dbProperties),
			this
		);
	}
	qs.prototype = Object.create(s.ParserRuleContext.prototype);
	qs.prototype.constructor = qs;
	qs.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	qs.prototype.dbPropertiesList = function () {
		return this.getTypedRuleContext(bc, 0);
	};
	qs.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	qs.prototype.accept = function (u) {
		return u instanceof d ? u.visitDbProperties(this) : u.visitChildren(this);
	};
	t.DbPropertiesContext = qs;
	t.prototype.dbProperties = function () {
		var u = new qs(this, this._ctx, this.state);
		this.enterRule(u, 56, t.RULE_dbProperties);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1139),
				this.match(t.LPAREN),
				(this.state = 1140),
				this.dbPropertiesList(),
				(this.state = 1141),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function bc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dbPropertiesList),
			this
		);
	}
	bc.prototype = Object.create(s.ParserRuleContext.prototype);
	bc.prototype.constructor = bc;
	bc.prototype.keyValueProperty = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ce) : this.getTypedRuleContext(ce, u);
	};
	bc.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	bc.prototype.accept = function (u) {
		return u instanceof d ? u.visitDbPropertiesList(this) : u.visitChildren(this);
	};
	t.DbPropertiesListContext = bc;
	t.prototype.dbPropertiesList = function () {
		var u = new bc(this, this._ctx, this.state);
		this.enterRule(u, 58, t.RULE_dbPropertiesList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1143,
					this.keyValueProperty(),
					this.state = 1148,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 1144),
					this.match(t.COMMA),
					(this.state = 1145),
					this.keyValueProperty(),
					(this.state = 1150),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ac(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_switchDatabaseStatement),
			this
		);
	}
	Ac.prototype = Object.create(s.ParserRuleContext.prototype);
	Ac.prototype.constructor = Ac;
	Ac.prototype.KW_USE = function () {
		return this.getToken(t.KW_USE, 0);
	};
	Ac.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Ac.prototype.accept = function (u) {
		return u instanceof d ? u.visitSwitchDatabaseStatement(this) : u.visitChildren(this);
	};
	t.SwitchDatabaseStatementContext = Ac;
	t.prototype.switchDatabaseStatement = function () {
		var u = new Ac(this, this._ctx, this.state);
		this.enterRule(u, 60, t.RULE_switchDatabaseStatement);
		try {
			this.enterOuterAlt(u, 1), (this.state = 1151), this.match(t.KW_USE), (this.state = 1152), this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Qi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropDatabaseStatement),
			this
		);
	}
	Qi.prototype = Object.create(s.ParserRuleContext.prototype);
	Qi.prototype.constructor = Qi;
	Qi.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	Qi.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Qi.prototype.KW_DATABASE = function () {
		return this.getToken(t.KW_DATABASE, 0);
	};
	Qi.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	Qi.prototype.ifExists = function () {
		return this.getTypedRuleContext(rt, 0);
	};
	Qi.prototype.restrictOrCascade = function () {
		return this.getTypedRuleContext(en, 0);
	};
	Qi.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropDatabaseStatement(this) : u.visitChildren(this);
	};
	t.DropDatabaseStatementContext = Qi;
	t.prototype.dropDatabaseStatement = function () {
		var u = new Qi(this, this._ctx, this.state);
		this.enterRule(u, 62, t.RULE_dropDatabaseStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1154),
				this.match(t.KW_DROP),
				(this.state = 1155),
				(e = this._input.LA(1)),
				e === t.KW_DATABASE || e === t.KW_SCHEMA
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this),
				(this.state = 1157),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 1156), this.ifExists()),
				(this.state = 1159),
				this.identifier(),
				(this.state = 1161),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_RESTRICT || e === t.KW_CASCADE) && ((this.state = 1160), this.restrictOrCascade());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Wc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_databaseComment),
			this
		);
	}
	Wc.prototype = Object.create(s.ParserRuleContext.prototype);
	Wc.prototype.constructor = Wc;
	Wc.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	Wc.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Wc.prototype.accept = function (u) {
		return u instanceof d ? u.visitDatabaseComment(this) : u.visitChildren(this);
	};
	t.DatabaseCommentContext = Wc;
	t.prototype.databaseComment = function () {
		var u = new Wc(this, this._ctx, this.state);
		this.enterRule(u, 64, t.RULE_databaseComment);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1163),
				this.match(t.KW_COMMENT),
				(this.state = 1164),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function c0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createTableStatement),
			this
		);
	}
	c0.prototype = Object.create(s.ParserRuleContext.prototype);
	c0.prototype.constructor = c0;
	c0.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	c0.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	c0.prototype.tableName = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(X) : this.getTypedRuleContext(X, u);
	};
	c0.prototype.KW_LIKE = function () {
		return this.getToken(t.KW_LIKE, 0);
	};
	c0.prototype.KW_TEMPORARY = function () {
		return this.getToken(t.KW_TEMPORARY, 0);
	};
	c0.prototype.KW_EXTERNAL = function () {
		return this.getToken(t.KW_EXTERNAL, 0);
	};
	c0.prototype.ifNotExists = function () {
		return this.getTypedRuleContext(re, 0);
	};
	c0.prototype.tableRowFormat = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ir) : this.getTypedRuleContext(ir, u);
	};
	c0.prototype.tableFileFormat = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ti) : this.getTypedRuleContext(ti, u);
	};
	c0.prototype.tableUsingDataSource = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Io) : this.getTypedRuleContext(Io, u);
	};
	c0.prototype.tableLocation = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ln) : this.getTypedRuleContext(Ln, u);
	};
	c0.prototype.tablePropertiesPrefixed = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(rr) : this.getTypedRuleContext(rr, u);
	};
	c0.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	c0.prototype.columnNameTypeOrConstraintList = function () {
		return this.getTypedRuleContext(Yc, 0);
	};
	c0.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	c0.prototype.tableBuckets = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(mu) : this.getTypedRuleContext(mu, u);
	};
	c0.prototype.tableSkewed = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ct) : this.getTypedRuleContext(ct, u);
	};
	c0.prototype.tablePartition = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ui) : this.getTypedRuleContext(ui, u);
	};
	c0.prototype.tableComment = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(tr) : this.getTypedRuleContext(tr, u);
	};
	c0.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	c0.prototype.selectStatementWithCTE = function () {
		return this.getTypedRuleContext(vn, 0);
	};
	c0.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateTableStatement(this) : u.visitChildren(this);
	};
	t.CreateTableStatementContext = c0;
	t.prototype.createTableStatement = function () {
		var u = new c0(this, this._ctx, this.state);
		this.enterRule(u, 66, t.RULE_createTableStatement);
		var e = 0;
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 1166),
				this.match(t.KW_CREATE),
				(this.state = 1168),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TEMPORARY && ((this.state = 1167), this.match(t.KW_TEMPORARY)),
				(this.state = 1171),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_EXTERNAL && ((this.state = 1170), this.match(t.KW_EXTERNAL)),
				(this.state = 1173),
				this.match(t.KW_TABLE),
				(this.state = 1175),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 1174), this.ifNotExists()),
				(this.state = 1177),
				this.tableName(),
				(this.state = 1219),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_LIKE:
					(this.state = 1178),
						this.match(t.KW_LIKE),
						(this.state = 1179),
						this.tableName(),
						(this.state = 1181),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_ROW && ((this.state = 1180), this.tableRowFormat()),
						(this.state = 1184),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_STORED && ((this.state = 1183), this.tableFileFormat()),
						(this.state = 1187),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_USING && ((this.state = 1186), this.tableUsingDataSource()),
						(this.state = 1190),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_LOCATION && ((this.state = 1189), this.tableLocation()),
						(this.state = 1193),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_TBLPROPERTIES && ((this.state = 1192), this.tablePropertiesPrefixed());
					break;
				case t.KW_AS:
				case t.KW_USING:
				case t.KW_COMMENT:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_ROW:
				case t.KW_STORED:
				case t.KW_LOCATION:
				case t.KW_TBLPROPERTIES:
				case t.KW_SKEWED:
				case t.SEMICOLON:
				case t.LPAREN:
					for (
						this.state = 1199,
							this._errHandler.sync(this),
							e = this._input.LA(1),
							e === t.LPAREN &&
								((this.state = 1195),
								this.match(t.LPAREN),
								(this.state = 1196),
								this.columnNameTypeOrConstraintList(),
								(this.state = 1197),
								this.match(t.RPAREN)),
							this.state = 1212,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === t.KW_USING ||
						e === t.KW_COMMENT ||
						(((e - 101) & -32) == 0 &&
							((1 << (e - 101)) &
								((1 << (t.KW_PARTITIONED - 101)) |
									(1 << (t.KW_CLUSTERED - 101)) |
									(1 << (t.KW_ROW - 101)) |
									(1 << (t.KW_STORED - 101)) |
									(1 << (t.KW_LOCATION - 101)))) !==
								0) ||
						e === t.KW_TBLPROPERTIES ||
						e === t.KW_SKEWED;

					) {
						switch (((this.state = 1210), this._errHandler.sync(this), this._input.LA(1))) {
							case t.KW_USING:
								(this.state = 1201), this.tableUsingDataSource();
								break;
							case t.KW_CLUSTERED:
								(this.state = 1202), this.tableBuckets();
								break;
							case t.KW_SKEWED:
								(this.state = 1203), this.tableSkewed();
								break;
							case t.KW_ROW:
								(this.state = 1204), this.tableRowFormat();
								break;
							case t.KW_STORED:
								(this.state = 1205), this.tableFileFormat();
								break;
							case t.KW_PARTITIONED:
								(this.state = 1206), this.tablePartition();
								break;
							case t.KW_LOCATION:
								(this.state = 1207), this.tableLocation();
								break;
							case t.KW_TBLPROPERTIES:
								(this.state = 1208), this.tablePropertiesPrefixed();
								break;
							case t.KW_COMMENT:
								(this.state = 1209), this.tableComment();
								break;
							default:
								throw new s.error.NoViableAltException(this);
						}
						(this.state = 1214), this._errHandler.sync(this), (e = this._input.LA(1));
					}
					(this.state = 1217),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_AS &&
							((this.state = 1215),
							this.match(t.KW_AS),
							(this.state = 1216),
							this.selectStatementWithCTE());
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Xe(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_truncateTableStatement),
			this
		);
	}
	Xe.prototype = Object.create(s.ParserRuleContext.prototype);
	Xe.prototype.constructor = Xe;
	Xe.prototype.KW_TRUNCATE = function () {
		return this.getToken(t.KW_TRUNCATE, 0);
	};
	Xe.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	Xe.prototype.tablePartitionPrefix = function () {
		return this.getTypedRuleContext(gc, 0);
	};
	Xe.prototype.KW_COLUMNS = function () {
		return this.getToken(t.KW_COLUMNS, 0);
	};
	Xe.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Xe.prototype.columnNameList = function () {
		return this.getTypedRuleContext(pt, 0);
	};
	Xe.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Xe.prototype.accept = function (u) {
		return u instanceof d ? u.visitTruncateTableStatement(this) : u.visitChildren(this);
	};
	t.TruncateTableStatementContext = Xe;
	t.prototype.truncateTableStatement = function () {
		var u = new Xe(this, this._ctx, this.state);
		this.enterRule(u, 68, t.RULE_truncateTableStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1221),
				this.match(t.KW_TRUNCATE),
				(this.state = 1222),
				this.match(t.KW_TABLE),
				(this.state = 1223),
				this.tablePartitionPrefix(),
				(this.state = 1229),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COLUMNS &&
					((this.state = 1224),
					this.match(t.KW_COLUMNS),
					(this.state = 1225),
					this.match(t.LPAREN),
					(this.state = 1226),
					this.columnNameList(),
					(this.state = 1227),
					this.match(t.RPAREN));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropTableStatement),
			this
		);
	}
	qi.prototype = Object.create(s.ParserRuleContext.prototype);
	qi.prototype.constructor = qi;
	qi.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	qi.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	qi.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	qi.prototype.ifExists = function () {
		return this.getTypedRuleContext(rt, 0);
	};
	qi.prototype.KW_PURGE = function () {
		return this.getToken(t.KW_PURGE, 0);
	};
	qi.prototype.replicationClause = function () {
		return this.getTypedRuleContext(ee, 0);
	};
	qi.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropTableStatement(this) : u.visitChildren(this);
	};
	t.DropTableStatementContext = qi;
	t.prototype.dropTableStatement = function () {
		var u = new qi(this, this._ctx, this.state);
		this.enterRule(u, 70, t.RULE_dropTableStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1231),
				this.match(t.KW_DROP),
				(this.state = 1232),
				this.match(t.KW_TABLE),
				(this.state = 1234),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 1233), this.ifExists()),
				(this.state = 1236),
				this.tableName(),
				(this.state = 1238),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PURGE && ((this.state = 1237), this.match(t.KW_PURGE)),
				(this.state = 1241),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_FOR && ((this.state = 1240), this.replicationClause());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function G0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatement),
			this
		);
	}
	G0.prototype = Object.create(s.ParserRuleContext.prototype);
	G0.prototype.constructor = G0;
	G0.prototype.KW_ALTER = function () {
		return this.getToken(t.KW_ALTER, 0);
	};
	G0.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	G0.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	G0.prototype.alterTableStatementSuffix = function () {
		return this.getTypedRuleContext(M0, 0);
	};
	G0.prototype.KW_VIEW = function () {
		return this.getToken(t.KW_VIEW, 0);
	};
	G0.prototype.alterViewStatementSuffix = function () {
		return this.getTypedRuleContext(nn, 0);
	};
	G0.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	G0.prototype.KW_MATERIALIZED = function () {
		return this.getToken(t.KW_MATERIALIZED, 0);
	};
	G0.prototype.alterMaterializedViewStatementSuffix = function () {
		return this.getTypedRuleContext(Kc, 0);
	};
	G0.prototype.alterDatabaseStatementSuffix = function () {
		return this.getTypedRuleContext(uo, 0);
	};
	G0.prototype.KW_DATABASE = function () {
		return this.getToken(t.KW_DATABASE, 0);
	};
	G0.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	G0.prototype.KW_INDEX = function () {
		return this.getToken(t.KW_INDEX, 0);
	};
	G0.prototype.alterIndexStatementSuffix = function () {
		return this.getTypedRuleContext(on, 0);
	};
	G0.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatement(this) : u.visitChildren(this);
	};
	t.AlterStatementContext = G0;
	t.prototype.alterStatement = function () {
		var u = new G0(this, this._ctx, this.state);
		this.enterRule(u, 72, t.RULE_alterStatement);
		var e = 0;
		try {
			(this.state = 1268), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 54, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1243),
						this.match(t.KW_ALTER),
						(this.state = 1244),
						this.match(t.KW_TABLE),
						(this.state = 1245),
						this.tableName(),
						(this.state = 1246),
						this.alterTableStatementSuffix();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 1248),
						this.match(t.KW_ALTER),
						(this.state = 1249),
						this.match(t.KW_VIEW),
						(this.state = 1250),
						this.tableName(),
						(this.state = 1252),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_AS && ((this.state = 1251), this.match(t.KW_AS)),
						(this.state = 1254),
						this.alterViewStatementSuffix();
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 1256),
						this.match(t.KW_ALTER),
						(this.state = 1257),
						this.match(t.KW_MATERIALIZED),
						(this.state = 1258),
						this.match(t.KW_VIEW),
						(this.state = 1259),
						this.tableName(),
						(this.state = 1260),
						this.alterMaterializedViewStatementSuffix();
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 1262),
						this.match(t.KW_ALTER),
						(this.state = 1263),
						(e = this._input.LA(1)),
						e === t.KW_DATABASE || e === t.KW_SCHEMA
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 1264),
						this.alterDatabaseStatementSuffix();
					break;
				case 5:
					this.enterOuterAlt(u, 5),
						(this.state = 1265),
						this.match(t.KW_ALTER),
						(this.state = 1266),
						this.match(t.KW_INDEX),
						(this.state = 1267),
						this.alterIndexStatementSuffix();
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function M0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterTableStatementSuffix),
			this
		);
	}
	M0.prototype = Object.create(s.ParserRuleContext.prototype);
	M0.prototype.constructor = M0;
	M0.prototype.alterStatementSuffixRename = function () {
		return this.getTypedRuleContext($s, 0);
	};
	M0.prototype.alterStatementSuffixDropPartitions = function () {
		return this.getTypedRuleContext(qe, 0);
	};
	M0.prototype.alterStatementSuffixAddPartitions = function () {
		return this.getTypedRuleContext(t2, 0);
	};
	M0.prototype.alterStatementSuffixTouch = function () {
		return this.getTypedRuleContext(xc, 0);
	};
	M0.prototype.alterStatementSuffixArchive = function () {
		return this.getTypedRuleContext(Oc, 0);
	};
	M0.prototype.alterStatementSuffixUnArchive = function () {
		return this.getTypedRuleContext(Lc, 0);
	};
	M0.prototype.alterStatementSuffixProperties = function () {
		return this.getTypedRuleContext(sn, 0);
	};
	M0.prototype.alterStatementSuffixSkewedby = function () {
		return this.getTypedRuleContext(n2, 0);
	};
	M0.prototype.alterStatementSuffixExchangePartition = function () {
		return this.getTypedRuleContext(cn, 0);
	};
	M0.prototype.alterStatementPartitionKeyType = function () {
		return this.getTypedRuleContext(rn, 0);
	};
	M0.prototype.alterStatementSuffixDropConstraint = function () {
		return this.getTypedRuleContext(io, 0);
	};
	M0.prototype.alterStatementSuffixAddConstraint = function () {
		return this.getTypedRuleContext(to, 0);
	};
	M0.prototype.alterTblPartitionStatementSuffix = function () {
		return this.getTypedRuleContext(j0, 0);
	};
	M0.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	M0.prototype.alterStatementSuffixSetOwner = function () {
		return this.getTypedRuleContext(fo, 0);
	};
	M0.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterTableStatementSuffix(this) : u.visitChildren(this);
	};
	t.AlterTableStatementSuffixContext = M0;
	t.prototype.alterTableStatementSuffix = function () {
		var u = new M0(this, this._ctx, this.state);
		this.enterRule(u, 74, t.RULE_alterTableStatementSuffix);
		var e = 0;
		try {
			(this.state = 1287), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 56, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 1270), this.alterStatementSuffixRename();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 1271), this.alterStatementSuffixDropPartitions();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 1272), this.alterStatementSuffixAddPartitions();
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 1273), this.alterStatementSuffixTouch();
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 1274), this.alterStatementSuffixArchive();
					break;
				case 6:
					this.enterOuterAlt(u, 6), (this.state = 1275), this.alterStatementSuffixUnArchive();
					break;
				case 7:
					this.enterOuterAlt(u, 7), (this.state = 1276), this.alterStatementSuffixProperties();
					break;
				case 8:
					this.enterOuterAlt(u, 8), (this.state = 1277), this.alterStatementSuffixSkewedby();
					break;
				case 9:
					this.enterOuterAlt(u, 9), (this.state = 1278), this.alterStatementSuffixExchangePartition();
					break;
				case 10:
					this.enterOuterAlt(u, 10), (this.state = 1279), this.alterStatementPartitionKeyType();
					break;
				case 11:
					this.enterOuterAlt(u, 11), (this.state = 1280), this.alterStatementSuffixDropConstraint();
					break;
				case 12:
					this.enterOuterAlt(u, 12), (this.state = 1281), this.alterStatementSuffixAddConstraint();
					break;
				case 13:
					this.enterOuterAlt(u, 13),
						(this.state = 1283),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_PARTITION && ((this.state = 1282), this.partitionSpec()),
						(this.state = 1285),
						this.alterTblPartitionStatementSuffix();
					break;
				case 14:
					this.enterOuterAlt(u, 14), (this.state = 1286), this.alterStatementSuffixSetOwner();
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function j0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterTblPartitionStatementSuffix),
			this
		);
	}
	j0.prototype = Object.create(s.ParserRuleContext.prototype);
	j0.prototype.constructor = j0;
	j0.prototype.alterStatementSuffixFileFormat = function () {
		return this.getTypedRuleContext(so, 0);
	};
	j0.prototype.alterStatementSuffixLocation = function () {
		return this.getTypedRuleContext(oo, 0);
	};
	j0.prototype.alterStatementSuffixMergeFiles = function () {
		return this.getTypedRuleContext(M3, 0);
	};
	j0.prototype.alterStatementSuffixSerdeProperties = function () {
		return this.getTypedRuleContext(Zi, 0);
	};
	j0.prototype.alterStatementSuffixRenamePart = function () {
		return this.getTypedRuleContext(co, 0);
	};
	j0.prototype.alterStatementSuffixBucketNum = function () {
		return this.getTypedRuleContext(po, 0);
	};
	j0.prototype.alterTblPartitionStatementSuffixSkewedLocation = function () {
		return this.getTypedRuleContext(i2, 0);
	};
	j0.prototype.alterStatementSuffixClusterbySortby = function () {
		return this.getTypedRuleContext(e2, 0);
	};
	j0.prototype.alterStatementSuffixCompact = function () {
		return this.getTypedRuleContext(Ze, 0);
	};
	j0.prototype.alterStatementSuffixUpdateStatsCol = function () {
		return this.getTypedRuleContext(Ot, 0);
	};
	j0.prototype.alterStatementSuffixUpdateStats = function () {
		return this.getTypedRuleContext(u2, 0);
	};
	j0.prototype.alterStatementSuffixRenameCol = function () {
		return this.getTypedRuleContext(xt, 0);
	};
	j0.prototype.alterStatementSuffixAddCol = function () {
		return this.getTypedRuleContext(Qe, 0);
	};
	j0.prototype.alterStatementSuffixUpdateColumns = function () {
		return this.getTypedRuleContext(eo, 0);
	};
	j0.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterTblPartitionStatementSuffix(this) : u.visitChildren(this);
	};
	t.AlterTblPartitionStatementSuffixContext = j0;
	t.prototype.alterTblPartitionStatementSuffix = function () {
		var u = new j0(this, this._ctx, this.state);
		this.enterRule(u, 76, t.RULE_alterTblPartitionStatementSuffix);
		try {
			(this.state = 1303), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 57, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 1289), this.alterStatementSuffixFileFormat();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 1290), this.alterStatementSuffixLocation();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 1291), this.alterStatementSuffixMergeFiles();
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 1292), this.alterStatementSuffixSerdeProperties();
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 1293), this.alterStatementSuffixRenamePart();
					break;
				case 6:
					this.enterOuterAlt(u, 6), (this.state = 1294), this.alterStatementSuffixBucketNum();
					break;
				case 7:
					this.enterOuterAlt(u, 7),
						(this.state = 1295),
						this.alterTblPartitionStatementSuffixSkewedLocation();
					break;
				case 8:
					this.enterOuterAlt(u, 8), (this.state = 1296), this.alterStatementSuffixClusterbySortby();
					break;
				case 9:
					this.enterOuterAlt(u, 9), (this.state = 1297), this.alterStatementSuffixCompact();
					break;
				case 10:
					this.enterOuterAlt(u, 10), (this.state = 1298), this.alterStatementSuffixUpdateStatsCol();
					break;
				case 11:
					this.enterOuterAlt(u, 11), (this.state = 1299), this.alterStatementSuffixUpdateStats();
					break;
				case 12:
					this.enterOuterAlt(u, 12), (this.state = 1300), this.alterStatementSuffixRenameCol();
					break;
				case 13:
					this.enterOuterAlt(u, 13), (this.state = 1301), this.alterStatementSuffixAddCol();
					break;
				case 14:
					this.enterOuterAlt(u, 14), (this.state = 1302), this.alterStatementSuffixUpdateColumns();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function rn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementPartitionKeyType),
			this
		);
	}
	rn.prototype = Object.create(s.ParserRuleContext.prototype);
	rn.prototype.constructor = rn;
	rn.prototype.KW_PARTITION = function () {
		return this.getToken(t.KW_PARTITION, 0);
	};
	rn.prototype.KW_COLUMN = function () {
		return this.getToken(t.KW_COLUMN, 0);
	};
	rn.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	rn.prototype.columnNameType = function () {
		return this.getTypedRuleContext(sr, 0);
	};
	rn.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	rn.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementPartitionKeyType(this) : u.visitChildren(this);
	};
	t.AlterStatementPartitionKeyTypeContext = rn;
	t.prototype.alterStatementPartitionKeyType = function () {
		var u = new rn(this, this._ctx, this.state);
		this.enterRule(u, 78, t.RULE_alterStatementPartitionKeyType);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1305),
				this.match(t.KW_PARTITION),
				(this.state = 1306),
				this.match(t.KW_COLUMN),
				(this.state = 1307),
				this.match(t.LPAREN),
				(this.state = 1308),
				this.columnNameType(),
				(this.state = 1309),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function nn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterViewStatementSuffix),
			this
		);
	}
	nn.prototype = Object.create(s.ParserRuleContext.prototype);
	nn.prototype.constructor = nn;
	nn.prototype.alterViewSuffixProperties = function () {
		return this.getTypedRuleContext(an, 0);
	};
	nn.prototype.alterStatementSuffixRename = function () {
		return this.getTypedRuleContext($s, 0);
	};
	nn.prototype.alterStatementSuffixAddPartitions = function () {
		return this.getTypedRuleContext(t2, 0);
	};
	nn.prototype.alterStatementSuffixDropPartitions = function () {
		return this.getTypedRuleContext(qe, 0);
	};
	nn.prototype.selectStatementWithCTE = function () {
		return this.getTypedRuleContext(vn, 0);
	};
	nn.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterViewStatementSuffix(this) : u.visitChildren(this);
	};
	t.AlterViewStatementSuffixContext = nn;
	t.prototype.alterViewStatementSuffix = function () {
		var u = new nn(this, this._ctx, this.state);
		this.enterRule(u, 80, t.RULE_alterViewStatementSuffix);
		try {
			switch (((this.state = 1316), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_SET:
				case t.KW_UNSET:
					this.enterOuterAlt(u, 1), (this.state = 1311), this.alterViewSuffixProperties();
					break;
				case t.KW_RENAME:
					this.enterOuterAlt(u, 2), (this.state = 1312), this.alterStatementSuffixRename();
					break;
				case t.KW_ADD:
					this.enterOuterAlt(u, 3), (this.state = 1313), this.alterStatementSuffixAddPartitions();
					break;
				case t.KW_DROP:
					this.enterOuterAlt(u, 4), (this.state = 1314), this.alterStatementSuffixDropPartitions();
					break;
				case t.KW_SELECT:
				case t.KW_MAP:
				case t.KW_REDUCE:
				case t.KW_WITH:
				case t.LPAREN:
					this.enterOuterAlt(u, 5), (this.state = 1315), this.selectStatementWithCTE();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Kc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterMaterializedViewStatementSuffix),
			this
		);
	}
	Kc.prototype = Object.create(s.ParserRuleContext.prototype);
	Kc.prototype.constructor = Kc;
	Kc.prototype.alterMaterializedViewSuffixRewrite = function () {
		return this.getTypedRuleContext(Ic, 0);
	};
	Kc.prototype.alterMaterializedViewSuffixRebuild = function () {
		return this.getTypedRuleContext(w3, 0);
	};
	Kc.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterMaterializedViewStatementSuffix(this) : u.visitChildren(this);
	};
	t.AlterMaterializedViewStatementSuffixContext = Kc;
	t.prototype.alterMaterializedViewStatementSuffix = function () {
		var u = new Kc(this, this._ctx, this.state);
		this.enterRule(u, 82, t.RULE_alterMaterializedViewStatementSuffix);
		try {
			switch (((this.state = 1320), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ENABLE:
				case t.KW_DISABLE:
					this.enterOuterAlt(u, 1), (this.state = 1318), this.alterMaterializedViewSuffixRewrite();
					break;
				case t.KW_REBUILD:
					this.enterOuterAlt(u, 2), (this.state = 1319), this.alterMaterializedViewSuffixRebuild();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function uo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterDatabaseStatementSuffix),
			this
		);
	}
	uo.prototype = Object.create(s.ParserRuleContext.prototype);
	uo.prototype.constructor = uo;
	uo.prototype.alterDatabaseSuffixProperties = function () {
		return this.getTypedRuleContext(Zs, 0);
	};
	uo.prototype.alterDatabaseSuffixSetOwner = function () {
		return this.getTypedRuleContext(Js, 0);
	};
	uo.prototype.alterDatabaseSuffixSetLocation = function () {
		return this.getTypedRuleContext(zs, 0);
	};
	uo.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterDatabaseStatementSuffix(this) : u.visitChildren(this);
	};
	t.AlterDatabaseStatementSuffixContext = uo;
	t.prototype.alterDatabaseStatementSuffix = function () {
		var u = new uo(this, this._ctx, this.state);
		this.enterRule(u, 84, t.RULE_alterDatabaseStatementSuffix);
		try {
			(this.state = 1325), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 60, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 1322), this.alterDatabaseSuffixProperties();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 1323), this.alterDatabaseSuffixSetOwner();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 1324), this.alterDatabaseSuffixSetLocation();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Zs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterDatabaseSuffixProperties),
			this
		);
	}
	Zs.prototype = Object.create(s.ParserRuleContext.prototype);
	Zs.prototype.constructor = Zs;
	Zs.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Zs.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	Zs.prototype.KW_DBPROPERTIES = function () {
		return this.getToken(t.KW_DBPROPERTIES, 0);
	};
	Zs.prototype.dbProperties = function () {
		return this.getTypedRuleContext(qs, 0);
	};
	Zs.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterDatabaseSuffixProperties(this) : u.visitChildren(this);
	};
	t.AlterDatabaseSuffixPropertiesContext = Zs;
	t.prototype.alterDatabaseSuffixProperties = function () {
		var u = new Zs(this, this._ctx, this.state);
		this.enterRule(u, 86, t.RULE_alterDatabaseSuffixProperties);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1327),
				this.identifier(),
				(this.state = 1328),
				this.match(t.KW_SET),
				(this.state = 1329),
				this.match(t.KW_DBPROPERTIES),
				(this.state = 1330),
				this.dbProperties();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Js(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterDatabaseSuffixSetOwner),
			this
		);
	}
	Js.prototype = Object.create(s.ParserRuleContext.prototype);
	Js.prototype.constructor = Js;
	Js.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Js.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	Js.prototype.KW_OWNER = function () {
		return this.getToken(t.KW_OWNER, 0);
	};
	Js.prototype.principalName = function () {
		return this.getTypedRuleContext(ot, 0);
	};
	Js.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterDatabaseSuffixSetOwner(this) : u.visitChildren(this);
	};
	t.AlterDatabaseSuffixSetOwnerContext = Js;
	t.prototype.alterDatabaseSuffixSetOwner = function () {
		var u = new Js(this, this._ctx, this.state);
		this.enterRule(u, 88, t.RULE_alterDatabaseSuffixSetOwner);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1332),
				this.identifier(),
				(this.state = 1333),
				this.match(t.KW_SET),
				(this.state = 1334),
				this.match(t.KW_OWNER),
				(this.state = 1335),
				this.principalName();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function zs(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterDatabaseSuffixSetLocation),
			this
		);
	}
	zs.prototype = Object.create(s.ParserRuleContext.prototype);
	zs.prototype.constructor = zs;
	zs.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	zs.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	zs.prototype.KW_LOCATION = function () {
		return this.getToken(t.KW_LOCATION, 0);
	};
	zs.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	zs.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterDatabaseSuffixSetLocation(this) : u.visitChildren(this);
	};
	t.AlterDatabaseSuffixSetLocationContext = zs;
	t.prototype.alterDatabaseSuffixSetLocation = function () {
		var u = new zs(this, this._ctx, this.state);
		this.enterRule(u, 90, t.RULE_alterDatabaseSuffixSetLocation);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1337),
				this.identifier(),
				(this.state = 1338),
				this.match(t.KW_SET),
				(this.state = 1339),
				this.match(t.KW_LOCATION),
				(this.state = 1340),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $s(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixRename),
			this
		);
	}
	$s.prototype = Object.create(s.ParserRuleContext.prototype);
	$s.prototype.constructor = $s;
	$s.prototype.KW_RENAME = function () {
		return this.getToken(t.KW_RENAME, 0);
	};
	$s.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	$s.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	$s.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixRename(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixRenameContext = $s;
	t.prototype.alterStatementSuffixRename = function () {
		var u = new $s(this, this._ctx, this.state);
		this.enterRule(u, 92, t.RULE_alterStatementSuffixRename);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1342),
				this.match(t.KW_RENAME),
				(this.state = 1343),
				this.match(t.KW_TO),
				(this.state = 1344),
				this.tableName();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Qe(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixAddCol),
			this
		);
	}
	Qe.prototype = Object.create(s.ParserRuleContext.prototype);
	Qe.prototype.constructor = Qe;
	Qe.prototype.KW_COLUMNS = function () {
		return this.getToken(t.KW_COLUMNS, 0);
	};
	Qe.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Qe.prototype.columnNameTypeList = function () {
		return this.getTypedRuleContext(Sn, 0);
	};
	Qe.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Qe.prototype.KW_ADD = function () {
		return this.getToken(t.KW_ADD, 0);
	};
	Qe.prototype.KW_REPLACE = function () {
		return this.getToken(t.KW_REPLACE, 0);
	};
	Qe.prototype.restrictOrCascade = function () {
		return this.getTypedRuleContext(en, 0);
	};
	Qe.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixAddCol(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixAddColContext = Qe;
	t.prototype.alterStatementSuffixAddCol = function () {
		var u = new Qe(this, this._ctx, this.state);
		this.enterRule(u, 94, t.RULE_alterStatementSuffixAddCol);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1346),
				(e = this._input.LA(1)),
				e === t.KW_ADD || e === t.KW_REPLACE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this),
				(this.state = 1347),
				this.match(t.KW_COLUMNS),
				(this.state = 1348),
				this.match(t.LPAREN),
				(this.state = 1349),
				this.columnNameTypeList(),
				(this.state = 1350),
				this.match(t.RPAREN),
				(this.state = 1352),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_RESTRICT || e === t.KW_CASCADE) && ((this.state = 1351), this.restrictOrCascade());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function to(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixAddConstraint),
			this
		);
	}
	to.prototype = Object.create(s.ParserRuleContext.prototype);
	to.prototype.constructor = to;
	to.prototype.KW_ADD = function () {
		return this.getToken(t.KW_ADD, 0);
	};
	to.prototype.alterForeignKeyWithName = function () {
		return this.getTypedRuleContext(le, 0);
	};
	to.prototype.alterConstraintWithName = function () {
		return this.getTypedRuleContext(T2, 0);
	};
	to.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixAddConstraint(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixAddConstraintContext = to;
	t.prototype.alterStatementSuffixAddConstraint = function () {
		var u = new to(this, this._ctx, this.state);
		this.enterRule(u, 96, t.RULE_alterStatementSuffixAddConstraint);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1354),
				this.match(t.KW_ADD),
				(this.state = 1357),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 62, this._ctx);
			switch (e) {
				case 1:
					(this.state = 1355), this.alterForeignKeyWithName();
					break;
				case 2:
					(this.state = 1356), this.alterConstraintWithName();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function eo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixUpdateColumns),
			this
		);
	}
	eo.prototype = Object.create(s.ParserRuleContext.prototype);
	eo.prototype.constructor = eo;
	eo.prototype.KW_UPDATE = function () {
		return this.getToken(t.KW_UPDATE, 0);
	};
	eo.prototype.KW_COLUMNS = function () {
		return this.getToken(t.KW_COLUMNS, 0);
	};
	eo.prototype.restrictOrCascade = function () {
		return this.getTypedRuleContext(en, 0);
	};
	eo.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixUpdateColumns(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixUpdateColumnsContext = eo;
	t.prototype.alterStatementSuffixUpdateColumns = function () {
		var u = new eo(this, this._ctx, this.state);
		this.enterRule(u, 98, t.RULE_alterStatementSuffixUpdateColumns);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1359),
				this.match(t.KW_UPDATE),
				(this.state = 1360),
				this.match(t.KW_COLUMNS),
				(this.state = 1362),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_RESTRICT || e === t.KW_CASCADE) && ((this.state = 1361), this.restrictOrCascade());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function io(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixDropConstraint),
			this
		);
	}
	io.prototype = Object.create(s.ParserRuleContext.prototype);
	io.prototype.constructor = io;
	io.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	io.prototype.KW_CONSTRAINT = function () {
		return this.getToken(t.KW_CONSTRAINT, 0);
	};
	io.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	io.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixDropConstraint(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixDropConstraintContext = io;
	t.prototype.alterStatementSuffixDropConstraint = function () {
		var u = new io(this, this._ctx, this.state);
		this.enterRule(u, 100, t.RULE_alterStatementSuffixDropConstraint);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1364),
				this.match(t.KW_DROP),
				(this.state = 1365),
				this.match(t.KW_CONSTRAINT),
				(this.state = 1366),
				this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function xt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixRenameCol),
			this
		);
	}
	xt.prototype = Object.create(s.ParserRuleContext.prototype);
	xt.prototype.constructor = xt;
	xt.prototype.KW_CHANGE = function () {
		return this.getToken(t.KW_CHANGE, 0);
	};
	xt.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	xt.prototype.colType = function () {
		return this.getTypedRuleContext(ii, 0);
	};
	xt.prototype.KW_COLUMN = function () {
		return this.getToken(t.KW_COLUMN, 0);
	};
	xt.prototype.alterColumnConstraint = function () {
		return this.getTypedRuleContext(ip, 0);
	};
	xt.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	xt.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	xt.prototype.alterStatementChangeColPosition = function () {
		return this.getTypedRuleContext(ro, 0);
	};
	xt.prototype.restrictOrCascade = function () {
		return this.getTypedRuleContext(en, 0);
	};
	xt.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixRenameCol(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixRenameColContext = xt;
	t.prototype.alterStatementSuffixRenameCol = function () {
		var u = new xt(this, this._ctx, this.state);
		this.enterRule(u, 102, t.RULE_alterStatementSuffixRenameCol);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1368),
				this.match(t.KW_CHANGE),
				(this.state = 1370),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COLUMN && ((this.state = 1369), this.match(t.KW_COLUMN)),
				(this.state = 1372),
				this.identifier(),
				(this.state = 1373),
				this.identifier(),
				(this.state = 1374),
				this.colType(),
				(this.state = 1376),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT ||
					(((e - 288) & -32) == 0 &&
						((1 << (e - 288)) &
							((1 << (t.KW_PRIMARY - 288)) |
								(1 << (t.KW_REFERENCES - 288)) |
								(1 << (t.KW_CONSTRAINT - 288)) |
								(1 << (t.KW_UNIQUE - 288)) |
								(1 << (t.KW_DEFAULT - 288)) |
								(1 << (t.KW_CHECK - 288)))) !==
							0)) &&
					((this.state = 1375), this.alterColumnConstraint()),
				(this.state = 1380),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT &&
					((this.state = 1378), this.match(t.KW_COMMENT), (this.state = 1379), this.match(t.StringLiteral)),
				(this.state = 1383),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_FIRST || e === t.KW_AFTER) && ((this.state = 1382), this.alterStatementChangeColPosition()),
				(this.state = 1386),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_RESTRICT || e === t.KW_CASCADE) && ((this.state = 1385), this.restrictOrCascade());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ot(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixUpdateStatsCol),
			this
		);
	}
	Ot.prototype = Object.create(s.ParserRuleContext.prototype);
	Ot.prototype.constructor = Ot;
	Ot.prototype.KW_UPDATE = function () {
		return this.getToken(t.KW_UPDATE, 0);
	};
	Ot.prototype.KW_STATISTICS = function () {
		return this.getToken(t.KW_STATISTICS, 0);
	};
	Ot.prototype.KW_FOR = function () {
		return this.getToken(t.KW_FOR, 0);
	};
	Ot.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Ot.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	Ot.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	Ot.prototype.KW_COLUMN = function () {
		return this.getToken(t.KW_COLUMN, 0);
	};
	Ot.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	Ot.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Ot.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixUpdateStatsCol(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixUpdateStatsColContext = Ot;
	t.prototype.alterStatementSuffixUpdateStatsCol = function () {
		var u = new Ot(this, this._ctx, this.state);
		this.enterRule(u, 104, t.RULE_alterStatementSuffixUpdateStatsCol);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1388),
				this.match(t.KW_UPDATE),
				(this.state = 1389),
				this.match(t.KW_STATISTICS),
				(this.state = 1390),
				this.match(t.KW_FOR),
				(this.state = 1392),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COLUMN && ((this.state = 1391), this.match(t.KW_COLUMN)),
				(this.state = 1394),
				this.identifier(),
				(this.state = 1395),
				this.match(t.KW_SET),
				(this.state = 1396),
				this.tableProperties(),
				(this.state = 1399),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT &&
					((this.state = 1397), this.match(t.KW_COMMENT), (this.state = 1398), this.match(t.StringLiteral));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function u2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixUpdateStats),
			this
		);
	}
	u2.prototype = Object.create(s.ParserRuleContext.prototype);
	u2.prototype.constructor = u2;
	u2.prototype.KW_UPDATE = function () {
		return this.getToken(t.KW_UPDATE, 0);
	};
	u2.prototype.KW_STATISTICS = function () {
		return this.getToken(t.KW_STATISTICS, 0);
	};
	u2.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	u2.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	u2.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixUpdateStats(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixUpdateStatsContext = u2;
	t.prototype.alterStatementSuffixUpdateStats = function () {
		var u = new u2(this, this._ctx, this.state);
		this.enterRule(u, 106, t.RULE_alterStatementSuffixUpdateStats);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1401),
				this.match(t.KW_UPDATE),
				(this.state = 1402),
				this.match(t.KW_STATISTICS),
				(this.state = 1403),
				this.match(t.KW_SET),
				(this.state = 1404),
				this.tableProperties();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ro(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementChangeColPosition),
			(this.first = null),
			this
		);
	}
	ro.prototype = Object.create(s.ParserRuleContext.prototype);
	ro.prototype.constructor = ro;
	ro.prototype.KW_FIRST = function () {
		return this.getToken(t.KW_FIRST, 0);
	};
	ro.prototype.KW_AFTER = function () {
		return this.getToken(t.KW_AFTER, 0);
	};
	ro.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	ro.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementChangeColPosition(this) : u.visitChildren(this);
	};
	t.AlterStatementChangeColPositionContext = ro;
	t.prototype.alterStatementChangeColPosition = function () {
		var u = new ro(this, this._ctx, this.state);
		this.enterRule(u, 108, t.RULE_alterStatementChangeColPosition);
		try {
			switch (((this.state = 1409), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_FIRST:
					this.enterOuterAlt(u, 1), (this.state = 1406), (u.first = this.match(t.KW_FIRST));
					break;
				case t.KW_AFTER:
					this.enterOuterAlt(u, 2),
						(this.state = 1407),
						this.match(t.KW_AFTER),
						(this.state = 1408),
						this.identifier();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function t2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixAddPartitions),
			this
		);
	}
	t2.prototype = Object.create(s.ParserRuleContext.prototype);
	t2.prototype.constructor = t2;
	t2.prototype.KW_ADD = function () {
		return this.getToken(t.KW_ADD, 0);
	};
	t2.prototype.ifNotExists = function () {
		return this.getTypedRuleContext(re, 0);
	};
	t2.prototype.alterStatementSuffixAddPartitionsElement = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(no) : this.getTypedRuleContext(no, u);
	};
	t2.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixAddPartitions(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixAddPartitionsContext = t2;
	t.prototype.alterStatementSuffixAddPartitions = function () {
		var u = new t2(this, this._ctx, this.state);
		this.enterRule(u, 110, t.RULE_alterStatementSuffixAddPartitions);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1411),
				this.match(t.KW_ADD),
				(this.state = 1413),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 1412), this.ifNotExists()),
				(this.state = 1416),
				this._errHandler.sync(this),
				(e = this._input.LA(1));
			do
				(this.state = 1415),
					this.alterStatementSuffixAddPartitionsElement(),
					(this.state = 1418),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			while (e === t.KW_PARTITION);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function no(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixAddPartitionsElement),
			this
		);
	}
	no.prototype = Object.create(s.ParserRuleContext.prototype);
	no.prototype.constructor = no;
	no.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	no.prototype.partitionLocation = function () {
		return this.getTypedRuleContext(Sc, 0);
	};
	no.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixAddPartitionsElement(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixAddPartitionsElementContext = no;
	t.prototype.alterStatementSuffixAddPartitionsElement = function () {
		var u = new no(this, this._ctx, this.state);
		this.enterRule(u, 112, t.RULE_alterStatementSuffixAddPartitionsElement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1420),
				this.partitionSpec(),
				(this.state = 1422),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_LOCATION && ((this.state = 1421), this.partitionLocation());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function xc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixTouch),
			this
		);
	}
	xc.prototype = Object.create(s.ParserRuleContext.prototype);
	xc.prototype.constructor = xc;
	xc.prototype.KW_TOUCH = function () {
		return this.getToken(t.KW_TOUCH, 0);
	};
	xc.prototype.partitionSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts($) : this.getTypedRuleContext($, u);
	};
	xc.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixTouch(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixTouchContext = xc;
	t.prototype.alterStatementSuffixTouch = function () {
		var u = new xc(this, this._ctx, this.state);
		this.enterRule(u, 114, t.RULE_alterStatementSuffixTouch);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1424,
					this.match(t.KW_TOUCH),
					this.state = 1428,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.KW_PARTITION;

			)
				(this.state = 1425),
					this.partitionSpec(),
					(this.state = 1430),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Oc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixArchive),
			this
		);
	}
	Oc.prototype = Object.create(s.ParserRuleContext.prototype);
	Oc.prototype.constructor = Oc;
	Oc.prototype.KW_ARCHIVE = function () {
		return this.getToken(t.KW_ARCHIVE, 0);
	};
	Oc.prototype.partitionSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts($) : this.getTypedRuleContext($, u);
	};
	Oc.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixArchive(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixArchiveContext = Oc;
	t.prototype.alterStatementSuffixArchive = function () {
		var u = new Oc(this, this._ctx, this.state);
		this.enterRule(u, 116, t.RULE_alterStatementSuffixArchive);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1431,
					this.match(t.KW_ARCHIVE),
					this.state = 1435,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.KW_PARTITION;

			)
				(this.state = 1432),
					this.partitionSpec(),
					(this.state = 1437),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Lc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixUnArchive),
			this
		);
	}
	Lc.prototype = Object.create(s.ParserRuleContext.prototype);
	Lc.prototype.constructor = Lc;
	Lc.prototype.KW_UNARCHIVE = function () {
		return this.getToken(t.KW_UNARCHIVE, 0);
	};
	Lc.prototype.partitionSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts($) : this.getTypedRuleContext($, u);
	};
	Lc.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixUnArchive(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixUnArchiveContext = Lc;
	t.prototype.alterStatementSuffixUnArchive = function () {
		var u = new Lc(this, this._ctx, this.state);
		this.enterRule(u, 118, t.RULE_alterStatementSuffixUnArchive);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1438,
					this.match(t.KW_UNARCHIVE),
					this.state = 1442,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.KW_PARTITION;

			)
				(this.state = 1439),
					this.partitionSpec(),
					(this.state = 1444),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Sc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_partitionLocation),
			this
		);
	}
	Sc.prototype = Object.create(s.ParserRuleContext.prototype);
	Sc.prototype.constructor = Sc;
	Sc.prototype.KW_LOCATION = function () {
		return this.getToken(t.KW_LOCATION, 0);
	};
	Sc.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Sc.prototype.accept = function (u) {
		return u instanceof d ? u.visitPartitionLocation(this) : u.visitChildren(this);
	};
	t.PartitionLocationContext = Sc;
	t.prototype.partitionLocation = function () {
		var u = new Sc(this, this._ctx, this.state);
		this.enterRule(u, 120, t.RULE_partitionLocation);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1445),
				this.match(t.KW_LOCATION),
				(this.state = 1446),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qe(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixDropPartitions),
			this
		);
	}
	qe.prototype = Object.create(s.ParserRuleContext.prototype);
	qe.prototype.constructor = qe;
	qe.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	qe.prototype.dropPartitionSpec = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Cr) : this.getTypedRuleContext(Cr, u);
	};
	qe.prototype.ifExists = function () {
		return this.getTypedRuleContext(rt, 0);
	};
	qe.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	qe.prototype.KW_PURGE = function () {
		return this.getToken(t.KW_PURGE, 0);
	};
	qe.prototype.replicationClause = function () {
		return this.getTypedRuleContext(ee, 0);
	};
	qe.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixDropPartitions(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixDropPartitionsContext = qe;
	t.prototype.alterStatementSuffixDropPartitions = function () {
		var u = new qe(this, this._ctx, this.state);
		this.enterRule(u, 122, t.RULE_alterStatementSuffixDropPartitions);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1448,
					this.match(t.KW_DROP),
					this.state = 1450,
					this._errHandler.sync(this),
					e = this._input.LA(1),
					e === t.KW_IF && ((this.state = 1449), this.ifExists()),
					this.state = 1452,
					this.dropPartitionSpec(),
					this.state = 1457,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 1453),
					this.match(t.COMMA),
					(this.state = 1454),
					this.dropPartitionSpec(),
					(this.state = 1459),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 1461),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PURGE && ((this.state = 1460), this.match(t.KW_PURGE)),
				(this.state = 1464),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_FOR && ((this.state = 1463), this.replicationClause());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function sn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixProperties),
			this
		);
	}
	sn.prototype = Object.create(s.ParserRuleContext.prototype);
	sn.prototype.constructor = sn;
	sn.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	sn.prototype.KW_TBLPROPERTIES = function () {
		return this.getToken(t.KW_TBLPROPERTIES, 0);
	};
	sn.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	sn.prototype.KW_UNSET = function () {
		return this.getToken(t.KW_UNSET, 0);
	};
	sn.prototype.ifExists = function () {
		return this.getTypedRuleContext(rt, 0);
	};
	sn.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixProperties(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixPropertiesContext = sn;
	t.prototype.alterStatementSuffixProperties = function () {
		var u = new sn(this, this._ctx, this.state);
		this.enterRule(u, 124, t.RULE_alterStatementSuffixProperties);
		var e = 0;
		try {
			switch (((this.state = 1475), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_SET:
					this.enterOuterAlt(u, 1),
						(this.state = 1466),
						this.match(t.KW_SET),
						(this.state = 1467),
						this.match(t.KW_TBLPROPERTIES),
						(this.state = 1468),
						this.tableProperties();
					break;
				case t.KW_UNSET:
					this.enterOuterAlt(u, 2),
						(this.state = 1469),
						this.match(t.KW_UNSET),
						(this.state = 1470),
						this.match(t.KW_TBLPROPERTIES),
						(this.state = 1472),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_IF && ((this.state = 1471), this.ifExists()),
						(this.state = 1474),
						this.tableProperties();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function an(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterViewSuffixProperties),
			this
		);
	}
	an.prototype = Object.create(s.ParserRuleContext.prototype);
	an.prototype.constructor = an;
	an.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	an.prototype.KW_TBLPROPERTIES = function () {
		return this.getToken(t.KW_TBLPROPERTIES, 0);
	};
	an.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	an.prototype.KW_UNSET = function () {
		return this.getToken(t.KW_UNSET, 0);
	};
	an.prototype.ifExists = function () {
		return this.getTypedRuleContext(rt, 0);
	};
	an.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterViewSuffixProperties(this) : u.visitChildren(this);
	};
	t.AlterViewSuffixPropertiesContext = an;
	t.prototype.alterViewSuffixProperties = function () {
		var u = new an(this, this._ctx, this.state);
		this.enterRule(u, 126, t.RULE_alterViewSuffixProperties);
		var e = 0;
		try {
			switch (((this.state = 1486), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_SET:
					this.enterOuterAlt(u, 1),
						(this.state = 1477),
						this.match(t.KW_SET),
						(this.state = 1478),
						this.match(t.KW_TBLPROPERTIES),
						(this.state = 1479),
						this.tableProperties();
					break;
				case t.KW_UNSET:
					this.enterOuterAlt(u, 2),
						(this.state = 1480),
						this.match(t.KW_UNSET),
						(this.state = 1481),
						this.match(t.KW_TBLPROPERTIES),
						(this.state = 1483),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_IF && ((this.state = 1482), this.ifExists()),
						(this.state = 1485),
						this.tableProperties();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ic(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterMaterializedViewSuffixRewrite),
			this
		);
	}
	Ic.prototype = Object.create(s.ParserRuleContext.prototype);
	Ic.prototype.constructor = Ic;
	Ic.prototype.rewriteEnabled = function () {
		return this.getTypedRuleContext(mc, 0);
	};
	Ic.prototype.rewriteDisabled = function () {
		return this.getTypedRuleContext($a, 0);
	};
	Ic.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterMaterializedViewSuffixRewrite(this) : u.visitChildren(this);
	};
	t.AlterMaterializedViewSuffixRewriteContext = Ic;
	t.prototype.alterMaterializedViewSuffixRewrite = function () {
		var u = new Ic(this, this._ctx, this.state);
		this.enterRule(u, 128, t.RULE_alterMaterializedViewSuffixRewrite);
		try {
			switch ((this.enterOuterAlt(u, 1), (this.state = 1490), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ENABLE:
					(this.state = 1488), this.rewriteEnabled();
					break;
				case t.KW_DISABLE:
					(this.state = 1489), this.rewriteDisabled();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function w3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterMaterializedViewSuffixRebuild),
			this
		);
	}
	w3.prototype = Object.create(s.ParserRuleContext.prototype);
	w3.prototype.constructor = w3;
	w3.prototype.KW_REBUILD = function () {
		return this.getToken(t.KW_REBUILD, 0);
	};
	w3.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterMaterializedViewSuffixRebuild(this) : u.visitChildren(this);
	};
	t.AlterMaterializedViewSuffixRebuildContext = w3;
	t.prototype.alterMaterializedViewSuffixRebuild = function () {
		var u = new w3(this, this._ctx, this.state);
		this.enterRule(u, 130, t.RULE_alterMaterializedViewSuffixRebuild);
		try {
			this.enterOuterAlt(u, 1), (this.state = 1492), this.match(t.KW_REBUILD);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Zi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixSerdeProperties),
			this
		);
	}
	Zi.prototype = Object.create(s.ParserRuleContext.prototype);
	Zi.prototype.constructor = Zi;
	Zi.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	Zi.prototype.KW_SERDE = function () {
		return this.getToken(t.KW_SERDE, 0);
	};
	Zi.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Zi.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	Zi.prototype.KW_SERDEPROPERTIES = function () {
		return this.getToken(t.KW_SERDEPROPERTIES, 0);
	};
	Zi.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	Zi.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixSerdeProperties(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixSerdePropertiesContext = Zi;
	t.prototype.alterStatementSuffixSerdeProperties = function () {
		var u = new Zi(this, this._ctx, this.state);
		this.enterRule(u, 132, t.RULE_alterStatementSuffixSerdeProperties);
		var e = 0;
		try {
			(this.state = 1505), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 88, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1494),
						this.match(t.KW_SET),
						(this.state = 1495),
						this.match(t.KW_SERDE),
						(this.state = 1496),
						this.match(t.StringLiteral),
						(this.state = 1500),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_WITH &&
							((this.state = 1497),
							this.match(t.KW_WITH),
							(this.state = 1498),
							this.match(t.KW_SERDEPROPERTIES),
							(this.state = 1499),
							this.tableProperties());
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 1502),
						this.match(t.KW_SET),
						(this.state = 1503),
						this.match(t.KW_SERDEPROPERTIES),
						(this.state = 1504),
						this.tableProperties();
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function on(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterIndexStatementSuffix),
			this
		);
	}
	on.prototype = Object.create(s.ParserRuleContext.prototype);
	on.prototype.constructor = on;
	on.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	on.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	on.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	on.prototype.KW_REBUILD = function () {
		return this.getToken(t.KW_REBUILD, 0);
	};
	on.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	on.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterIndexStatementSuffix(this) : u.visitChildren(this);
	};
	t.AlterIndexStatementSuffixContext = on;
	t.prototype.alterIndexStatementSuffix = function () {
		var u = new on(this, this._ctx, this.state);
		this.enterRule(u, 134, t.RULE_alterIndexStatementSuffix);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1507),
				this.identifier(),
				(this.state = 1508),
				this.match(t.KW_ON),
				(this.state = 1509),
				this.tableName(),
				(this.state = 1511),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PARTITION && ((this.state = 1510), this.partitionSpec()),
				(this.state = 1513),
				this.match(t.KW_REBUILD);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function so(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixFileFormat),
			this
		);
	}
	so.prototype = Object.create(s.ParserRuleContext.prototype);
	so.prototype.constructor = so;
	so.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	so.prototype.KW_FILEFORMAT = function () {
		return this.getToken(t.KW_FILEFORMAT, 0);
	};
	so.prototype.fileFormat = function () {
		return this.getTypedRuleContext(Je, 0);
	};
	so.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixFileFormat(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixFileFormatContext = so;
	t.prototype.alterStatementSuffixFileFormat = function () {
		var u = new so(this, this._ctx, this.state);
		this.enterRule(u, 136, t.RULE_alterStatementSuffixFileFormat);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1515),
				this.match(t.KW_SET),
				(this.state = 1516),
				this.match(t.KW_FILEFORMAT),
				(this.state = 1517),
				this.fileFormat();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function e2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixClusterbySortby),
			this
		);
	}
	e2.prototype = Object.create(s.ParserRuleContext.prototype);
	e2.prototype.constructor = e2;
	e2.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	e2.prototype.KW_CLUSTERED = function () {
		return this.getToken(t.KW_CLUSTERED, 0);
	};
	e2.prototype.KW_SORTED = function () {
		return this.getToken(t.KW_SORTED, 0);
	};
	e2.prototype.tableBuckets = function () {
		return this.getTypedRuleContext(mu, 0);
	};
	e2.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixClusterbySortby(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixClusterbySortbyContext = e2;
	t.prototype.alterStatementSuffixClusterbySortby = function () {
		var u = new e2(this, this._ctx, this.state);
		this.enterRule(u, 138, t.RULE_alterStatementSuffixClusterbySortby);
		try {
			(this.state = 1524), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 90, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1519),
						this.match(t.KW_NOT),
						(this.state = 1520),
						this.match(t.KW_CLUSTERED);
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 1521),
						this.match(t.KW_NOT),
						(this.state = 1522),
						this.match(t.KW_SORTED);
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 1523), this.tableBuckets();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function i2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterTblPartitionStatementSuffixSkewedLocation),
			this
		);
	}
	i2.prototype = Object.create(s.ParserRuleContext.prototype);
	i2.prototype.constructor = i2;
	i2.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	i2.prototype.KW_SKEWED = function () {
		return this.getToken(t.KW_SKEWED, 0);
	};
	i2.prototype.KW_LOCATION = function () {
		return this.getToken(t.KW_LOCATION, 0);
	};
	i2.prototype.skewedLocations = function () {
		return this.getTypedRuleContext(ao, 0);
	};
	i2.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterTblPartitionStatementSuffixSkewedLocation(this) : u.visitChildren(this);
	};
	t.AlterTblPartitionStatementSuffixSkewedLocationContext = i2;
	t.prototype.alterTblPartitionStatementSuffixSkewedLocation = function () {
		var u = new i2(this, this._ctx, this.state);
		this.enterRule(u, 140, t.RULE_alterTblPartitionStatementSuffixSkewedLocation);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1526),
				this.match(t.KW_SET),
				(this.state = 1527),
				this.match(t.KW_SKEWED),
				(this.state = 1528),
				this.match(t.KW_LOCATION),
				(this.state = 1529),
				this.skewedLocations();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ao(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_skewedLocations),
			this
		);
	}
	ao.prototype = Object.create(s.ParserRuleContext.prototype);
	ao.prototype.constructor = ao;
	ao.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	ao.prototype.skewedLocationsList = function () {
		return this.getTypedRuleContext(Nc, 0);
	};
	ao.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	ao.prototype.accept = function (u) {
		return u instanceof d ? u.visitSkewedLocations(this) : u.visitChildren(this);
	};
	t.SkewedLocationsContext = ao;
	t.prototype.skewedLocations = function () {
		var u = new ao(this, this._ctx, this.state);
		this.enterRule(u, 142, t.RULE_skewedLocations);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1531),
				this.match(t.LPAREN),
				(this.state = 1532),
				this.skewedLocationsList(),
				(this.state = 1533),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Nc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_skewedLocationsList),
			this
		);
	}
	Nc.prototype = Object.create(s.ParserRuleContext.prototype);
	Nc.prototype.constructor = Nc;
	Nc.prototype.skewedLocationMap = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(r2) : this.getTypedRuleContext(r2, u);
	};
	Nc.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Nc.prototype.accept = function (u) {
		return u instanceof d ? u.visitSkewedLocationsList(this) : u.visitChildren(this);
	};
	t.SkewedLocationsListContext = Nc;
	t.prototype.skewedLocationsList = function () {
		var u = new Nc(this, this._ctx, this.state);
		this.enterRule(u, 144, t.RULE_skewedLocationsList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1535,
					this.skewedLocationMap(),
					this.state = 1540,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 1536),
					this.match(t.COMMA),
					(this.state = 1537),
					this.skewedLocationMap(),
					(this.state = 1542),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function r2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_skewedLocationMap),
			this
		);
	}
	r2.prototype = Object.create(s.ParserRuleContext.prototype);
	r2.prototype.constructor = r2;
	r2.prototype.skewedValueLocationElement = function () {
		return this.getTypedRuleContext($c, 0);
	};
	r2.prototype.EQUAL = function () {
		return this.getToken(t.EQUAL, 0);
	};
	r2.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	r2.prototype.accept = function (u) {
		return u instanceof d ? u.visitSkewedLocationMap(this) : u.visitChildren(this);
	};
	t.SkewedLocationMapContext = r2;
	t.prototype.skewedLocationMap = function () {
		var u = new r2(this, this._ctx, this.state);
		this.enterRule(u, 146, t.RULE_skewedLocationMap);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1543),
				this.skewedValueLocationElement(),
				(this.state = 1544),
				this.match(t.EQUAL),
				(this.state = 1545),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function oo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixLocation),
			this
		);
	}
	oo.prototype = Object.create(s.ParserRuleContext.prototype);
	oo.prototype.constructor = oo;
	oo.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	oo.prototype.KW_LOCATION = function () {
		return this.getToken(t.KW_LOCATION, 0);
	};
	oo.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	oo.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixLocation(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixLocationContext = oo;
	t.prototype.alterStatementSuffixLocation = function () {
		var u = new oo(this, this._ctx, this.state);
		this.enterRule(u, 148, t.RULE_alterStatementSuffixLocation);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1547),
				this.match(t.KW_SET),
				(this.state = 1548),
				this.match(t.KW_LOCATION),
				(this.state = 1549),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function n2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixSkewedby),
			this
		);
	}
	n2.prototype = Object.create(s.ParserRuleContext.prototype);
	n2.prototype.constructor = n2;
	n2.prototype.tableSkewed = function () {
		return this.getTypedRuleContext(ct, 0);
	};
	n2.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	n2.prototype.KW_SKEWED = function () {
		return this.getToken(t.KW_SKEWED, 0);
	};
	n2.prototype.storedAsDirs = function () {
		return this.getTypedRuleContext(Qs, 0);
	};
	n2.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixSkewedby(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixSkewedbyContext = n2;
	t.prototype.alterStatementSuffixSkewedby = function () {
		var u = new n2(this, this._ctx, this.state);
		this.enterRule(u, 150, t.RULE_alterStatementSuffixSkewedby);
		try {
			(this.state = 1556), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 92, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 1551), this.tableSkewed();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 1552),
						this.match(t.KW_NOT),
						(this.state = 1553),
						this.match(t.KW_SKEWED);
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 1554),
						this.match(t.KW_NOT),
						(this.state = 1555),
						this.storedAsDirs();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function cn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixExchangePartition),
			this
		);
	}
	cn.prototype = Object.create(s.ParserRuleContext.prototype);
	cn.prototype.constructor = cn;
	cn.prototype.KW_EXCHANGE = function () {
		return this.getToken(t.KW_EXCHANGE, 0);
	};
	cn.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	cn.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	cn.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	cn.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	cn.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixExchangePartition(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixExchangePartitionContext = cn;
	t.prototype.alterStatementSuffixExchangePartition = function () {
		var u = new cn(this, this._ctx, this.state);
		this.enterRule(u, 152, t.RULE_alterStatementSuffixExchangePartition);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1558),
				this.match(t.KW_EXCHANGE),
				(this.state = 1559),
				this.partitionSpec(),
				(this.state = 1560),
				this.match(t.KW_WITH),
				(this.state = 1561),
				this.match(t.KW_TABLE),
				(this.state = 1562),
				this.tableName();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function co(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixRenamePart),
			this
		);
	}
	co.prototype = Object.create(s.ParserRuleContext.prototype);
	co.prototype.constructor = co;
	co.prototype.KW_RENAME = function () {
		return this.getToken(t.KW_RENAME, 0);
	};
	co.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	co.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	co.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixRenamePart(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixRenamePartContext = co;
	t.prototype.alterStatementSuffixRenamePart = function () {
		var u = new co(this, this._ctx, this.state);
		this.enterRule(u, 154, t.RULE_alterStatementSuffixRenamePart);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1564),
				this.match(t.KW_RENAME),
				(this.state = 1565),
				this.match(t.KW_TO),
				(this.state = 1566),
				this.partitionSpec();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ne(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixStatsPart),
			this
		);
	}
	ne.prototype = Object.create(s.ParserRuleContext.prototype);
	ne.prototype.constructor = ne;
	ne.prototype.KW_UPDATE = function () {
		return this.getToken(t.KW_UPDATE, 0);
	};
	ne.prototype.KW_STATISTICS = function () {
		return this.getToken(t.KW_STATISTICS, 0);
	};
	ne.prototype.KW_FOR = function () {
		return this.getToken(t.KW_FOR, 0);
	};
	ne.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	ne.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	ne.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	ne.prototype.KW_COLUMN = function () {
		return this.getToken(t.KW_COLUMN, 0);
	};
	ne.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	ne.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	ne.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixStatsPart(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixStatsPartContext = ne;
	t.prototype.alterStatementSuffixStatsPart = function () {
		var u = new ne(this, this._ctx, this.state);
		this.enterRule(u, 156, t.RULE_alterStatementSuffixStatsPart);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1568),
				this.match(t.KW_UPDATE),
				(this.state = 1569),
				this.match(t.KW_STATISTICS),
				(this.state = 1570),
				this.match(t.KW_FOR),
				(this.state = 1572),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COLUMN && ((this.state = 1571), this.match(t.KW_COLUMN)),
				(this.state = 1574),
				this.identifier(),
				(this.state = 1575),
				this.match(t.KW_SET),
				(this.state = 1576),
				this.tableProperties(),
				(this.state = 1579),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT &&
					((this.state = 1577), this.match(t.KW_COMMENT), (this.state = 1578), this.match(t.StringLiteral));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function M3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixMergeFiles),
			this
		);
	}
	M3.prototype = Object.create(s.ParserRuleContext.prototype);
	M3.prototype.constructor = M3;
	M3.prototype.KW_CONCATENATE = function () {
		return this.getToken(t.KW_CONCATENATE, 0);
	};
	M3.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixMergeFiles(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixMergeFilesContext = M3;
	t.prototype.alterStatementSuffixMergeFiles = function () {
		var u = new M3(this, this._ctx, this.state);
		this.enterRule(u, 158, t.RULE_alterStatementSuffixMergeFiles);
		try {
			this.enterOuterAlt(u, 1), (this.state = 1581), this.match(t.KW_CONCATENATE);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function po(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixBucketNum),
			this
		);
	}
	po.prototype = Object.create(s.ParserRuleContext.prototype);
	po.prototype.constructor = po;
	po.prototype.KW_INTO = function () {
		return this.getToken(t.KW_INTO, 0);
	};
	po.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	po.prototype.KW_BUCKETS = function () {
		return this.getToken(t.KW_BUCKETS, 0);
	};
	po.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixBucketNum(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixBucketNumContext = po;
	t.prototype.alterStatementSuffixBucketNum = function () {
		var u = new po(this, this._ctx, this.state);
		this.enterRule(u, 160, t.RULE_alterStatementSuffixBucketNum);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1583),
				this.match(t.KW_INTO),
				(this.state = 1584),
				this.match(t.Number),
				(this.state = 1585),
				this.match(t.KW_BUCKETS);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function T0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createIndexStatement),
			this
		);
	}
	T0.prototype = Object.create(s.ParserRuleContext.prototype);
	T0.prototype.constructor = T0;
	T0.prototype.createIndexMainStatement = function () {
		return this.getTypedRuleContext(Lt, 0);
	};
	T0.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	T0.prototype.KW_DEFERRED = function () {
		return this.getToken(t.KW_DEFERRED, 0);
	};
	T0.prototype.KW_REBUILD = function () {
		return this.getToken(t.KW_REBUILD, 0);
	};
	T0.prototype.KW_IDXPROPERTIES = function () {
		return this.getToken(t.KW_IDXPROPERTIES, 0);
	};
	T0.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	T0.prototype.KW_IN = function () {
		return this.getToken(t.KW_IN, 0);
	};
	T0.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	T0.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	T0.prototype.KW_PARTITIONED = function () {
		return this.getToken(t.KW_PARTITIONED, 0);
	};
	T0.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	T0.prototype.columnParenthesesList = function () {
		return this.getTypedRuleContext(gu, 0);
	};
	T0.prototype.tableFileFormat = function () {
		return this.getTypedRuleContext(ti, 0);
	};
	T0.prototype.KW_LOCATION = function () {
		return this.getToken(t.KW_LOCATION, 0);
	};
	T0.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	T0.prototype.tablePropertiesPrefixed = function () {
		return this.getTypedRuleContext(rr, 0);
	};
	T0.prototype.tableComment = function () {
		return this.getTypedRuleContext(tr, 0);
	};
	T0.prototype.tableRowFormat = function () {
		return this.getTypedRuleContext(ir, 0);
	};
	T0.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateIndexStatement(this) : u.visitChildren(this);
	};
	t.CreateIndexStatementContext = T0;
	t.prototype.createIndexStatement = function () {
		var u = new T0(this, this._ctx, this.state);
		this.enterRule(u, 162, t.RULE_createIndexStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1587),
				this.createIndexMainStatement(),
				(this.state = 1591),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 1588),
					this.match(t.KW_WITH),
					(this.state = 1589),
					this.match(t.KW_DEFERRED),
					(this.state = 1590),
					this.match(t.KW_REBUILD)),
				(this.state = 1595),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IDXPROPERTIES &&
					((this.state = 1593), this.match(t.KW_IDXPROPERTIES), (this.state = 1594), this.tableProperties()),
				(this.state = 1600),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IN &&
					((this.state = 1597),
					this.match(t.KW_IN),
					(this.state = 1598),
					this.match(t.KW_TABLE),
					(this.state = 1599),
					this.tableName()),
				(this.state = 1605),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PARTITIONED &&
					((this.state = 1602),
					this.match(t.KW_PARTITIONED),
					(this.state = 1603),
					this.match(t.KW_BY),
					(this.state = 1604),
					this.columnParenthesesList()),
				(this.state = 1611),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_ROW || e === t.KW_STORED) &&
					((this.state = 1608),
					this._errHandler.sync(this),
					(e = this._input.LA(1)),
					e === t.KW_ROW && ((this.state = 1607), this.tableRowFormat()),
					(this.state = 1610),
					this.tableFileFormat()),
				(this.state = 1615),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_LOCATION &&
					((this.state = 1613), this.match(t.KW_LOCATION), (this.state = 1614), this.poolPath()),
				(this.state = 1618),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TBLPROPERTIES && ((this.state = 1617), this.tablePropertiesPrefixed()),
				(this.state = 1621),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT && ((this.state = 1620), this.tableComment());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Lt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createIndexMainStatement),
			this
		);
	}
	Lt.prototype = Object.create(s.ParserRuleContext.prototype);
	Lt.prototype.constructor = Lt;
	Lt.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	Lt.prototype.KW_INDEX = function () {
		return this.getToken(t.KW_INDEX, 0);
	};
	Lt.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Lt.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	Lt.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	Lt.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	Lt.prototype.columnParenthesesList = function () {
		return this.getTypedRuleContext(gu, 0);
	};
	Lt.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	Lt.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Lt.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateIndexMainStatement(this) : u.visitChildren(this);
	};
	t.CreateIndexMainStatementContext = Lt;
	t.prototype.createIndexMainStatement = function () {
		var u = new Lt(this, this._ctx, this.state);
		this.enterRule(u, 164, t.RULE_createIndexMainStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1623),
				this.match(t.KW_CREATE),
				(this.state = 1624),
				this.match(t.KW_INDEX),
				(this.state = 1625),
				this.identifier(),
				(this.state = 1626),
				this.match(t.KW_ON),
				(this.state = 1627),
				this.match(t.KW_TABLE),
				(this.state = 1628),
				this.tableName(),
				(this.state = 1629),
				this.columnParenthesesList(),
				(this.state = 1630),
				this.match(t.KW_AS),
				(this.state = 1631),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function pn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropIndexStatement),
			this
		);
	}
	pn.prototype = Object.create(s.ParserRuleContext.prototype);
	pn.prototype.constructor = pn;
	pn.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	pn.prototype.KW_INDEX = function () {
		return this.getToken(t.KW_INDEX, 0);
	};
	pn.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	pn.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	pn.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	pn.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropIndexStatement(this) : u.visitChildren(this);
	};
	t.DropIndexStatementContext = pn;
	t.prototype.dropIndexStatement = function () {
		var u = new pn(this, this._ctx, this.state);
		this.enterRule(u, 166, t.RULE_dropIndexStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1633),
				this.match(t.KW_DROP),
				(this.state = 1634),
				this.match(t.KW_INDEX),
				(this.state = 1635),
				this.identifier(),
				(this.state = 1636),
				this.match(t.KW_ON),
				(this.state = 1637),
				this.tableName();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function hn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createBloomfilterIndexStatement),
			this
		);
	}
	hn.prototype = Object.create(s.ParserRuleContext.prototype);
	hn.prototype.constructor = hn;
	hn.prototype.createBloomfilterIndexMainStatement = function () {
		return this.getTypedRuleContext(Ji, 0);
	};
	hn.prototype.KW_FOR = function () {
		return this.getToken(t.KW_FOR, 0);
	};
	hn.prototype.KW_COLUMNS = function () {
		return this.getToken(t.KW_COLUMNS, 0);
	};
	hn.prototype.bloomfilterColumnParenthesesList = function () {
		return this.getTypedRuleContext(s2, 0);
	};
	hn.prototype.bloomfilterIndexOptions = function () {
		return this.getTypedRuleContext(lo, 0);
	};
	hn.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateBloomfilterIndexStatement(this) : u.visitChildren(this);
	};
	t.CreateBloomfilterIndexStatementContext = hn;
	t.prototype.createBloomfilterIndexStatement = function () {
		var u = new hn(this, this._ctx, this.state);
		this.enterRule(u, 168, t.RULE_createBloomfilterIndexStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1639),
				this.createBloomfilterIndexMainStatement(),
				(this.state = 1643),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_FOR &&
					((this.state = 1640),
					this.match(t.KW_FOR),
					(this.state = 1641),
					this.match(t.KW_COLUMNS),
					(this.state = 1642),
					this.bloomfilterColumnParenthesesList()),
				(this.state = 1646),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_OPTIONS && ((this.state = 1645), this.bloomfilterIndexOptions());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ji(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createBloomfilterIndexMainStatement),
			this
		);
	}
	Ji.prototype = Object.create(s.ParserRuleContext.prototype);
	Ji.prototype.constructor = Ji;
	Ji.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	Ji.prototype.KW_BLOOMFILTER = function () {
		return this.getToken(t.KW_BLOOMFILTER, 0);
	};
	Ji.prototype.KW_INDEX = function () {
		return this.getToken(t.KW_INDEX, 0);
	};
	Ji.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	Ji.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	Ji.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	Ji.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateBloomfilterIndexMainStatement(this) : u.visitChildren(this);
	};
	t.CreateBloomfilterIndexMainStatementContext = Ji;
	t.prototype.createBloomfilterIndexMainStatement = function () {
		var u = new Ji(this, this._ctx, this.state);
		this.enterRule(u, 170, t.RULE_createBloomfilterIndexMainStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1648),
				this.match(t.KW_CREATE),
				(this.state = 1649),
				this.match(t.KW_BLOOMFILTER),
				(this.state = 1650),
				this.match(t.KW_INDEX),
				(this.state = 1651),
				this.match(t.KW_ON),
				(this.state = 1653),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TABLE && ((this.state = 1652), this.match(t.KW_TABLE)),
				(this.state = 1655),
				this.tableName();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function s2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_bloomfilterColumnParenthesesList),
			this
		);
	}
	s2.prototype = Object.create(s.ParserRuleContext.prototype);
	s2.prototype.constructor = s2;
	s2.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	s2.prototype.bloomfilterColumnNameList = function () {
		return this.getTypedRuleContext(Pc, 0);
	};
	s2.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	s2.prototype.accept = function (u) {
		return u instanceof d ? u.visitBloomfilterColumnParenthesesList(this) : u.visitChildren(this);
	};
	t.BloomfilterColumnParenthesesListContext = s2;
	t.prototype.bloomfilterColumnParenthesesList = function () {
		var u = new s2(this, this._ctx, this.state);
		this.enterRule(u, 172, t.RULE_bloomfilterColumnParenthesesList);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1657),
				this.match(t.LPAREN),
				(this.state = 1658),
				this.bloomfilterColumnNameList(),
				(this.state = 1659),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Pc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_bloomfilterColumnNameList),
			this
		);
	}
	Pc.prototype = Object.create(s.ParserRuleContext.prototype);
	Pc.prototype.constructor = Pc;
	Pc.prototype.bloomfilterColumnName = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ho) : this.getTypedRuleContext(ho, u);
	};
	Pc.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Pc.prototype.accept = function (u) {
		return u instanceof d ? u.visitBloomfilterColumnNameList(this) : u.visitChildren(this);
	};
	t.BloomfilterColumnNameListContext = Pc;
	t.prototype.bloomfilterColumnNameList = function () {
		var u = new Pc(this, this._ctx, this.state);
		this.enterRule(u, 174, t.RULE_bloomfilterColumnNameList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 1661,
					this.bloomfilterColumnName(),
					this.state = 1666,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 1662),
					this.match(t.COMMA),
					(this.state = 1663),
					this.bloomfilterColumnName(),
					(this.state = 1668),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ho(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_bloomfilterColumnName),
			this
		);
	}
	ho.prototype = Object.create(s.ParserRuleContext.prototype);
	ho.prototype.constructor = ho;
	ho.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	ho.prototype.bloomfilterIndexOptions = function () {
		return this.getTypedRuleContext(lo, 0);
	};
	ho.prototype.accept = function (u) {
		return u instanceof d ? u.visitBloomfilterColumnName(this) : u.visitChildren(this);
	};
	t.BloomfilterColumnNameContext = ho;
	t.prototype.bloomfilterColumnName = function () {
		var u = new ho(this, this._ctx, this.state);
		this.enterRule(u, 176, t.RULE_bloomfilterColumnName);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1669),
				this.identifier(),
				(this.state = 1671),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_OPTIONS && ((this.state = 1670), this.bloomfilterIndexOptions());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function lo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_bloomfilterIndexOptions),
			this
		);
	}
	lo.prototype = Object.create(s.ParserRuleContext.prototype);
	lo.prototype.constructor = lo;
	lo.prototype.KW_OPTIONS = function () {
		return this.getToken(t.KW_OPTIONS, 0);
	};
	lo.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	lo.prototype.accept = function (u) {
		return u instanceof d ? u.visitBloomfilterIndexOptions(this) : u.visitChildren(this);
	};
	t.BloomfilterIndexOptionsContext = lo;
	t.prototype.bloomfilterIndexOptions = function () {
		var u = new lo(this, this._ctx, this.state);
		this.enterRule(u, 178, t.RULE_bloomfilterIndexOptions);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1673),
				this.match(t.KW_OPTIONS),
				(this.state = 1674),
				this.tableProperties();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function a2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropBloomfilterIndexStatement),
			this
		);
	}
	a2.prototype = Object.create(s.ParserRuleContext.prototype);
	a2.prototype.constructor = a2;
	a2.prototype.dropBloomfilterIndexMainStatement = function () {
		return this.getTypedRuleContext(zi, 0);
	};
	a2.prototype.KW_FOR = function () {
		return this.getToken(t.KW_FOR, 0);
	};
	a2.prototype.KW_COLUMNS = function () {
		return this.getToken(t.KW_COLUMNS, 0);
	};
	a2.prototype.bloomfilterColumnParenthesesList = function () {
		return this.getTypedRuleContext(s2, 0);
	};
	a2.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropBloomfilterIndexStatement(this) : u.visitChildren(this);
	};
	t.DropBloomfilterIndexStatementContext = a2;
	t.prototype.dropBloomfilterIndexStatement = function () {
		var u = new a2(this, this._ctx, this.state);
		this.enterRule(u, 180, t.RULE_dropBloomfilterIndexStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1676),
				this.dropBloomfilterIndexMainStatement(),
				(this.state = 1680),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_FOR &&
					((this.state = 1677),
					this.match(t.KW_FOR),
					(this.state = 1678),
					this.match(t.KW_COLUMNS),
					(this.state = 1679),
					this.bloomfilterColumnParenthesesList());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function zi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropBloomfilterIndexMainStatement),
			this
		);
	}
	zi.prototype = Object.create(s.ParserRuleContext.prototype);
	zi.prototype.constructor = zi;
	zi.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	zi.prototype.KW_BLOOMFILTER = function () {
		return this.getToken(t.KW_BLOOMFILTER, 0);
	};
	zi.prototype.KW_INDEX = function () {
		return this.getToken(t.KW_INDEX, 0);
	};
	zi.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	zi.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	zi.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	zi.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropBloomfilterIndexMainStatement(this) : u.visitChildren(this);
	};
	t.DropBloomfilterIndexMainStatementContext = zi;
	t.prototype.dropBloomfilterIndexMainStatement = function () {
		var u = new zi(this, this._ctx, this.state);
		this.enterRule(u, 182, t.RULE_dropBloomfilterIndexMainStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1682),
				this.match(t.KW_DROP),
				(this.state = 1683),
				this.match(t.KW_BLOOMFILTER),
				(this.state = 1684),
				this.match(t.KW_INDEX),
				(this.state = 1685),
				this.match(t.KW_ON),
				(this.state = 1687),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TABLE && ((this.state = 1686), this.match(t.KW_TABLE)),
				(this.state = 1689),
				this.tableName();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function gc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tablePartitionPrefix),
			this
		);
	}
	gc.prototype = Object.create(s.ParserRuleContext.prototype);
	gc.prototype.constructor = gc;
	gc.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	gc.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	gc.prototype.accept = function (u) {
		return u instanceof d ? u.visitTablePartitionPrefix(this) : u.visitChildren(this);
	};
	t.TablePartitionPrefixContext = gc;
	t.prototype.tablePartitionPrefix = function () {
		var u = new gc(this, this._ctx, this.state);
		this.enterRule(u, 184, t.RULE_tablePartitionPrefix);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1691),
				this.tableName(),
				(this.state = 1693),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PARTITION && ((this.state = 1692), this.partitionSpec());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Dc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_blocking),
			this
		);
	}
	Dc.prototype = Object.create(s.ParserRuleContext.prototype);
	Dc.prototype.constructor = Dc;
	Dc.prototype.KW_AND = function () {
		return this.getToken(t.KW_AND, 0);
	};
	Dc.prototype.KW_WAIT = function () {
		return this.getToken(t.KW_WAIT, 0);
	};
	Dc.prototype.accept = function (u) {
		return u instanceof d ? u.visitBlocking(this) : u.visitChildren(this);
	};
	t.BlockingContext = Dc;
	t.prototype.blocking = function () {
		var u = new Dc(this, this._ctx, this.state);
		this.enterRule(u, 186, t.RULE_blocking);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1695),
				this.match(t.KW_AND),
				(this.state = 1696),
				this.match(t.KW_WAIT);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ze(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixCompact),
			this
		);
	}
	Ze.prototype = Object.create(s.ParserRuleContext.prototype);
	Ze.prototype.constructor = Ze;
	Ze.prototype.KW_COMPACT = function () {
		return this.getToken(t.KW_COMPACT, 0);
	};
	Ze.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Ze.prototype.blocking = function () {
		return this.getTypedRuleContext(Dc, 0);
	};
	Ze.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	Ze.prototype.KW_OVERWRITE = function () {
		return this.getToken(t.KW_OVERWRITE, 0);
	};
	Ze.prototype.KW_TBLPROPERTIES = function () {
		return this.getToken(t.KW_TBLPROPERTIES, 0);
	};
	Ze.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	Ze.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixCompact(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixCompactContext = Ze;
	t.prototype.alterStatementSuffixCompact = function () {
		var u = new Ze(this, this._ctx, this.state);
		this.enterRule(u, 188, t.RULE_alterStatementSuffixCompact);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1698),
				this.match(t.KW_COMPACT),
				(this.state = 1699),
				this.match(t.StringLiteral),
				(this.state = 1701),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_AND && ((this.state = 1700), this.blocking()),
				(this.state = 1707),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 1703),
					this.match(t.KW_WITH),
					(this.state = 1704),
					this.match(t.KW_OVERWRITE),
					(this.state = 1705),
					this.match(t.KW_TBLPROPERTIES),
					(this.state = 1706),
					this.tableProperties());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function fo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterStatementSuffixSetOwner),
			this
		);
	}
	fo.prototype = Object.create(s.ParserRuleContext.prototype);
	fo.prototype.constructor = fo;
	fo.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	fo.prototype.KW_OWNER = function () {
		return this.getToken(t.KW_OWNER, 0);
	};
	fo.prototype.principalName = function () {
		return this.getTypedRuleContext(ot, 0);
	};
	fo.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterStatementSuffixSetOwner(this) : u.visitChildren(this);
	};
	t.AlterStatementSuffixSetOwnerContext = fo;
	t.prototype.alterStatementSuffixSetOwner = function () {
		var u = new fo(this, this._ctx, this.state);
		this.enterRule(u, 190, t.RULE_alterStatementSuffixSetOwner);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1709),
				this.match(t.KW_SET),
				(this.state = 1710),
				this.match(t.KW_OWNER),
				(this.state = 1711),
				this.principalName();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Je(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_fileFormat),
			this
		);
	}
	Je.prototype = Object.create(s.ParserRuleContext.prototype);
	Je.prototype.constructor = Je;
	Je.prototype.KW_INPUTFORMAT = function () {
		return this.getToken(t.KW_INPUTFORMAT, 0);
	};
	Je.prototype.StringLiteral = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(t.StringLiteral) : this.getToken(t.StringLiteral, u)
		);
	};
	Je.prototype.KW_OUTPUTFORMAT = function () {
		return this.getToken(t.KW_OUTPUTFORMAT, 0);
	};
	Je.prototype.KW_SERDE = function () {
		return this.getToken(t.KW_SERDE, 0);
	};
	Je.prototype.KW_INPUTDRIVER = function () {
		return this.getToken(t.KW_INPUTDRIVER, 0);
	};
	Je.prototype.KW_OUTPUTDRIVER = function () {
		return this.getToken(t.KW_OUTPUTDRIVER, 0);
	};
	Je.prototype.tableFileFormatStoredAsFormat = function () {
		return this.getTypedRuleContext(pe, 0);
	};
	Je.prototype.accept = function (u) {
		return u instanceof d ? u.visitFileFormat(this) : u.visitChildren(this);
	};
	t.FileFormatContext = Je;
	t.prototype.fileFormat = function () {
		var u = new Je(this, this._ctx, this.state);
		this.enterRule(u, 192, t.RULE_fileFormat);
		var e = 0;
		try {
			switch (((this.state = 1726), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_INPUTFORMAT:
					this.enterOuterAlt(u, 1),
						(this.state = 1713),
						this.match(t.KW_INPUTFORMAT),
						(this.state = 1714),
						this.match(t.StringLiteral),
						(this.state = 1715),
						this.match(t.KW_OUTPUTFORMAT),
						(this.state = 1716),
						this.match(t.StringLiteral),
						(this.state = 1717),
						this.match(t.KW_SERDE),
						(this.state = 1718),
						this.match(t.StringLiteral),
						(this.state = 1723),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_INPUTDRIVER &&
							((this.state = 1719),
							this.match(t.KW_INPUTDRIVER),
							(this.state = 1720),
							this.match(t.StringLiteral),
							(this.state = 1721),
							this.match(t.KW_OUTPUTDRIVER),
							(this.state = 1722),
							this.match(t.StringLiteral));
					break;
				case t.KW_SEQUENCEFILE:
				case t.KW_TEXTFILE:
				case t.KW_RCFILE:
				case t.KW_ORC:
				case t.KW_PARQUET:
				case t.KW_AVRO:
				case t.KW_JSONFILE:
					this.enterOuterAlt(u, 2), (this.state = 1725), this.tableFileFormatStoredAsFormat();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _o(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_inputFileFormat),
			this
		);
	}
	_o.prototype = Object.create(s.ParserRuleContext.prototype);
	_o.prototype.constructor = _o;
	_o.prototype.KW_INPUTFORMAT = function () {
		return this.getToken(t.KW_INPUTFORMAT, 0);
	};
	_o.prototype.StringLiteral = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(t.StringLiteral) : this.getToken(t.StringLiteral, u)
		);
	};
	_o.prototype.KW_SERDE = function () {
		return this.getToken(t.KW_SERDE, 0);
	};
	_o.prototype.accept = function (u) {
		return u instanceof d ? u.visitInputFileFormat(this) : u.visitChildren(this);
	};
	t.InputFileFormatContext = _o;
	t.prototype.inputFileFormat = function () {
		var u = new _o(this, this._ctx, this.state);
		this.enterRule(u, 194, t.RULE_inputFileFormat);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1728),
				this.match(t.KW_INPUTFORMAT),
				(this.state = 1729),
				this.match(t.StringLiteral),
				(this.state = 1730),
				this.match(t.KW_SERDE),
				(this.state = 1731),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ln(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tabTypeExpr),
			this
		);
	}
	ln.prototype = Object.create(s.ParserRuleContext.prototype);
	ln.prototype.constructor = ln;
	ln.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	ln.prototype.DOT = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.DOT) : this.getToken(t.DOT, u);
	};
	ln.prototype.KW_ELEM_TYPE = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(t.KW_ELEM_TYPE) : this.getToken(t.KW_ELEM_TYPE, u)
		);
	};
	ln.prototype.KW_KEY_TYPE = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_KEY_TYPE) : this.getToken(t.KW_KEY_TYPE, u);
	};
	ln.prototype.KW_VALUE_TYPE = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(t.KW_VALUE_TYPE) : this.getToken(t.KW_VALUE_TYPE, u)
		);
	};
	ln.prototype.accept = function (u) {
		return u instanceof d ? u.visitTabTypeExpr(this) : u.visitChildren(this);
	};
	t.TabTypeExprContext = ln;
	t.prototype.tabTypeExpr = function () {
		var u = new ln(this, this._ctx, this.state);
		this.enterRule(u, 196, t.RULE_tabTypeExpr);
		var e = 0;
		try {
			if (
				(this.enterOuterAlt(u, 1),
				(this.state = 1733),
				this.identifier(),
				(this.state = 1736),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.DOT && ((this.state = 1734), this.match(t.DOT), (this.state = 1735), this.identifier()),
				(this.state = 1751),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				((e & -32) == 0 &&
					((1 << e) &
						((1 << t.KW_ASC) |
							(1 << t.KW_DESC) |
							(1 << t.KW_NULLS) |
							(1 << t.KW_LAST) |
							(1 << t.KW_OVERWRITE))) !==
						0) ||
					(((e - 36) & -32) == 0 &&
						((1 << (e - 36)) &
							((1 << (t.KW_PARTITIONS - 36)) |
								(1 << (t.KW_TABLES - 36)) |
								(1 << (t.KW_COLUMNS - 36)) |
								(1 << (t.KW_INDEX - 36)) |
								(1 << (t.KW_INDEXES - 36)) |
								(1 << (t.KW_REBUILD - 36)) |
								(1 << (t.KW_FUNCTIONS - 36)) |
								(1 << (t.KW_SHOW - 36)) |
								(1 << (t.KW_MSCK - 36)) |
								(1 << (t.KW_REPAIR - 36)) |
								(1 << (t.KW_DIRECTORY - 36)) |
								(1 << (t.KW_CLUSTER - 36)) |
								(1 << (t.KW_DISTRIBUTE - 36)) |
								(1 << (t.KW_SORT - 36)) |
								(1 << (t.KW_LOAD - 36)) |
								(1 << (t.KW_EXPORT - 36)) |
								(1 << (t.KW_REPLICATION - 36)) |
								(1 << (t.KW_METADATA - 36)) |
								(1 << (t.KW_DATA - 36)) |
								(1 << (t.KW_INPATH - 36)))) !==
							0) ||
					(((e - 68) & -32) == 0 &&
						((1 << (e - 68)) &
							((1 << (t.KW_CHANGE - 68)) |
								(1 << (t.KW_FIRST - 68)) |
								(1 << (t.KW_AFTER - 68)) |
								(1 << (t.KW_RENAME - 68)) |
								(1 << (t.KW_COMMENT - 68)) |
								(1 << (t.KW_TINYINT - 68)) |
								(1 << (t.KW_DATETIME - 68)) |
								(1 << (t.KW_ZONE - 68)) |
								(1 << (t.KW_STRING - 68)) |
								(1 << (t.KW_STRUCT - 68)) |
								(1 << (t.KW_UNIONTYPE - 68)))) !==
							0) ||
					(((e - 101) & -32) == 0 &&
						((1 << (e - 101)) &
							((1 << (t.KW_PARTITIONED - 101)) |
								(1 << (t.KW_CLUSTERED - 101)) |
								(1 << (t.KW_SORTED - 101)) |
								(1 << (t.KW_BUCKETS - 101)) |
								(1 << (t.KW_FORMAT - 101)) |
								(1 << (t.KW_DELIMITED - 101)) |
								(1 << (t.KW_FIELDS - 101)) |
								(1 << (t.KW_TERMINATED - 101)) |
								(1 << (t.KW_ESCAPED - 101)) |
								(1 << (t.KW_COLLECTION - 101)) |
								(1 << (t.KW_ITEMS - 101)) |
								(1 << (t.KW_KEYS - 101)) |
								(1 << (t.KW_KEY_TYPE - 101)) |
								(1 << (t.KW_KILL - 101)) |
								(1 << (t.KW_LINES - 101)) |
								(1 << (t.KW_STORED - 101)) |
								(1 << (t.KW_FILEFORMAT - 101)) |
								(1 << (t.KW_INPUTFORMAT - 101)) |
								(1 << (t.KW_OUTPUTFORMAT - 101)) |
								(1 << (t.KW_INPUTDRIVER - 101)) |
								(1 << (t.KW_OUTPUTDRIVER - 101)) |
								(1 << (t.KW_ENABLE - 101)) |
								(1 << (t.KW_DISABLE - 101)) |
								(1 << (t.KW_LOCATION - 101)) |
								(1 << (t.KW_BUCKET - 101)))) !==
							0) ||
					(((e - 134) & -32) == 0 &&
						((1 << (e - 134)) &
							((1 << (t.KW_ADD - 134)) |
								(1 << (t.KW_REPLACE - 134)) |
								(1 << (t.KW_TEMPORARY - 134)) |
								(1 << (t.KW_FILE - 134)) |
								(1 << (t.KW_JAR - 134)) |
								(1 << (t.KW_EXPLAIN - 134)) |
								(1 << (t.KW_FORMATTED - 134)) |
								(1 << (t.KW_DEPENDENCY - 134)) |
								(1 << (t.KW_LOGICAL - 134)) |
								(1 << (t.KW_SERDE - 134)) |
								(1 << (t.KW_DEFERRED - 134)) |
								(1 << (t.KW_SERDEPROPERTIES - 134)) |
								(1 << (t.KW_DBPROPERTIES - 134)) |
								(1 << (t.KW_LIMIT - 134)) |
								(1 << (t.KW_OFFSET - 134)) |
								(1 << (t.KW_UNSET - 134)) |
								(1 << (t.KW_TBLPROPERTIES - 134)) |
								(1 << (t.KW_IDXPROPERTIES - 134)) |
								(1 << (t.KW_VALUE_TYPE - 134)) |
								(1 << (t.KW_ELEM_TYPE - 134)) |
								(1 << (t.KW_DEFINED - 134)))) !==
							0) ||
					(((e - 167) & -32) == 0 &&
						((1 << (e - 167)) &
							((1 << (t.KW_MAPJOIN - 167)) |
								(1 << (t.KW_STREAMTABLE - 167)) |
								(1 << (t.KW_CLUSTERSTATUS - 167)) |
								(1 << (t.KW_UTC - 167)) |
								(1 << (t.KW_UTCTIMESTAMP - 167)) |
								(1 << (t.KW_LONG - 167)) |
								(1 << (t.KW_PLUS - 167)) |
								(1 << (t.KW_VIEW - 167)) |
								(1 << (t.KW_VIEWS - 167)) |
								(1 << (t.KW_DATABASES - 167)) |
								(1 << (t.KW_MATERIALIZED - 167)) |
								(1 << (t.KW_SCHEMA - 167)) |
								(1 << (t.KW_SCHEMAS - 167)) |
								(1 << (t.KW_SSL - 167)) |
								(1 << (t.KW_UNDO - 167)) |
								(1 << (t.KW_LOCK - 167)) |
								(1 << (t.KW_LOCKS - 167)) |
								(1 << (t.KW_UNLOCK - 167)) |
								(1 << (t.KW_SHARED - 167)) |
								(1 << (t.KW_EXCLUSIVE - 167)) |
								(1 << (t.KW_UNSIGNED - 167)) |
								(1 << (t.KW_WHILE - 167)) |
								(1 << (t.KW_READ - 167)))) !==
							0) ||
					(((e - 200) & -32) == 0 &&
						((1 << (e - 200)) &
							((1 << (t.KW_PURGE - 200)) |
								(1 << (t.KW_ANALYZE - 200)) |
								(1 << (t.KW_BEFORE - 200)) |
								(1 << (t.KW_CONTINUE - 200)) |
								(1 << (t.KW_RECORDREADER - 200)) |
								(1 << (t.KW_RECORDWRITER - 200)) |
								(1 << (t.KW_SEMI - 200)) |
								(1 << (t.KW_TOUCH - 200)) |
								(1 << (t.KW_ARCHIVE - 200)) |
								(1 << (t.KW_UNARCHIVE - 200)) |
								(1 << (t.KW_COMPUTE - 200)) |
								(1 << (t.KW_STATISTICS - 200)) |
								(1 << (t.KW_USE - 200)) |
								(1 << (t.KW_OPTION - 200)) |
								(1 << (t.KW_CONCATENATE - 200)) |
								(1 << (t.KW_SHOW_DATABASE - 200)) |
								(1 << (t.KW_RESTRICT - 200)) |
								(1 << (t.KW_CASCADE - 200)) |
								(1 << (t.KW_SKEWED - 200)) |
								(1 << (t.KW_DIRECTORIES - 200)))) !==
							0) ||
					(((e - 244) & -32) == 0 &&
						((1 << (e - 244)) &
							((1 << (t.KW_SETS - 244)) |
								(1 << (t.KW_NOSCAN - 244)) |
								(1 << (t.KW_ROLE - 244)) |
								(1 << (t.KW_ROLES - 244)) |
								(1 << (t.KW_URI - 244)) |
								(1 << (t.KW_SERVER - 244)) |
								(1 << (t.KW_ADMIN - 244)) |
								(1 << (t.KW_OWNER - 244)) |
								(1 << (t.KW_PRINCIPALS - 244)) |
								(1 << (t.KW_COMPACT - 244)) |
								(1 << (t.KW_COMPACTIONS - 244)) |
								(1 << (t.KW_TRANSACTIONS - 244)) |
								(1 << (t.KW_REWRITE - 244)) |
								(1 << (t.KW_REOPTIMIZATION - 244)) |
								(1 << (t.KW_RELOAD - 244)) |
								(1 << (t.KW_YEAR - 244)) |
								(1 << (t.KW_QUERY - 244)) |
								(1 << (t.KW_QUARTER - 244)) |
								(1 << (t.KW_MONTH - 244)) |
								(1 << (t.KW_WEEK - 244)) |
								(1 << (t.KW_DAY - 244)) |
								(1 << (t.KW_DOW - 244)) |
								(1 << (t.KW_HOUR - 244)) |
								(1 << (t.KW_MINUTE - 244)) |
								(1 << (t.KW_SECOND - 244)))) !==
							0) ||
					(((e - 277) & -32) == 0 &&
						((1 << (e - 277)) &
							((1 << (t.KW_TRANSACTION - 277)) |
								(1 << (t.KW_WORK - 277)) |
								(1 << (t.KW_WRITE - 277)) |
								(1 << (t.KW_ISOLATION - 277)) |
								(1 << (t.KW_LEVEL - 277)) |
								(1 << (t.KW_SNAPSHOT - 277)) |
								(1 << (t.KW_AUTOCOMMIT - 277)) |
								(1 << (t.KW_CACHE - 277)) |
								(1 << (t.KW_ENFORCED - 277)) |
								(1 << (t.KW_VALIDATE - 277)) |
								(1 << (t.KW_NOVALIDATE - 277)) |
								(1 << (t.KW_RELY - 277)) |
								(1 << (t.KW_NORELY - 277)) |
								(1 << (t.KW_KEY - 277)) |
								(1 << (t.KW_ABORT - 277)) |
								(1 << (t.KW_MATCHED - 277)) |
								(1 << (t.KW_REPL - 277)) |
								(1 << (t.KW_DUMP - 277)) |
								(1 << (t.KW_STATUS - 277)) |
								(1 << (t.KW_VECTORIZATION - 277)) |
								(1 << (t.KW_SUMMARY - 277)))) !==
							0) ||
					(((e - 309) & -32) == 0 &&
						((1 << (e - 309)) &
							((1 << (t.KW_OPERATOR - 309)) |
								(1 << (t.KW_EXPRESSION - 309)) |
								(1 << (t.KW_DETAIL - 309)) |
								(1 << (t.KW_WAIT - 309)) |
								(1 << (t.KW_RESOURCE - 309)) |
								(1 << (t.KW_PLAN - 309)) |
								(1 << (t.KW_QUERY_PARALLELISM - 309)) |
								(1 << (t.KW_PLANS - 309)) |
								(1 << (t.KW_ACTIVATE - 309)) |
								(1 << (t.KW_DEFAULT - 309)) |
								(1 << (t.KW_CHECK - 309)) |
								(1 << (t.KW_POOL - 309)) |
								(1 << (t.KW_MOVE - 309)) |
								(1 << (t.KW_DO - 309)) |
								(1 << (t.KW_ALLOC_FRACTION - 309)) |
								(1 << (t.KW_SCHEDULING_POLICY - 309)) |
								(1 << (t.KW_PATH - 309)) |
								(1 << (t.KW_MAPPING - 309)) |
								(1 << (t.KW_WORKLOAD - 309)) |
								(1 << (t.KW_MANAGEMENT - 309)) |
								(1 << (t.KW_ACTIVE - 309)) |
								(1 << (t.KW_UNMANAGED - 309)) |
								(1 << (t.KW_DELTA - 309)) |
								(1 << (t.KW_CSV - 309)))) !==
							0) ||
					e === t.KW_JSON ||
					e === t.KW_BLOOMFILTER ||
					e === t.Identifier)
			)
				for (
					this.state = 1738,
						this.identifier(),
						this.state = 1748,
						this._errHandler.sync(this),
						e = this._input.LA(1);
					e === t.DOT;

				) {
					(this.state = 1739), this.match(t.DOT), (this.state = 1744), this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 117, this._ctx);
					switch (i) {
						case 1:
							(this.state = 1740), this.match(t.KW_ELEM_TYPE);
							break;
						case 2:
							(this.state = 1741), this.match(t.KW_KEY_TYPE);
							break;
						case 3:
							(this.state = 1742), this.match(t.KW_VALUE_TYPE);
							break;
						case 4:
							(this.state = 1743), this.identifier();
							break;
					}
					(this.state = 1750), this._errHandler.sync(this), (e = this._input.LA(1));
				}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Uc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_partTypeExpr),
			this
		);
	}
	Uc.prototype = Object.create(s.ParserRuleContext.prototype);
	Uc.prototype.constructor = Uc;
	Uc.prototype.tabTypeExpr = function () {
		return this.getTypedRuleContext(ln, 0);
	};
	Uc.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	Uc.prototype.accept = function (u) {
		return u instanceof d ? u.visitPartTypeExpr(this) : u.visitChildren(this);
	};
	t.PartTypeExprContext = Uc;
	t.prototype.partTypeExpr = function () {
		var u = new Uc(this, this._ctx, this.state);
		this.enterRule(u, 198, t.RULE_partTypeExpr);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1753),
				this.tabTypeExpr(),
				(this.state = 1755),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PARTITION && ((this.state = 1754), this.partitionSpec());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Eo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tabPartColTypeExpr),
			this
		);
	}
	Eo.prototype = Object.create(s.ParserRuleContext.prototype);
	Eo.prototype.constructor = Eo;
	Eo.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	Eo.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	Eo.prototype.extColumnName = function () {
		return this.getTypedRuleContext(In, 0);
	};
	Eo.prototype.accept = function (u) {
		return u instanceof d ? u.visitTabPartColTypeExpr(this) : u.visitChildren(this);
	};
	t.TabPartColTypeExprContext = Eo;
	t.prototype.tabPartColTypeExpr = function () {
		var u = new Eo(this, this._ctx, this.state);
		this.enterRule(u, 200, t.RULE_tabPartColTypeExpr);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1757),
				this.tableName(),
				(this.state = 1759),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PARTITION && ((this.state = 1758), this.partitionSpec()),
				(this.state = 1762),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(((e & -32) == 0 &&
					((1 << e) &
						((1 << t.KW_ASC) |
							(1 << t.KW_DESC) |
							(1 << t.KW_NULLS) |
							(1 << t.KW_LAST) |
							(1 << t.KW_OVERWRITE))) !==
						0) ||
					(((e - 36) & -32) == 0 &&
						((1 << (e - 36)) &
							((1 << (t.KW_PARTITIONS - 36)) |
								(1 << (t.KW_TABLES - 36)) |
								(1 << (t.KW_COLUMNS - 36)) |
								(1 << (t.KW_INDEX - 36)) |
								(1 << (t.KW_INDEXES - 36)) |
								(1 << (t.KW_REBUILD - 36)) |
								(1 << (t.KW_FUNCTIONS - 36)) |
								(1 << (t.KW_SHOW - 36)) |
								(1 << (t.KW_MSCK - 36)) |
								(1 << (t.KW_REPAIR - 36)) |
								(1 << (t.KW_DIRECTORY - 36)) |
								(1 << (t.KW_CLUSTER - 36)) |
								(1 << (t.KW_DISTRIBUTE - 36)) |
								(1 << (t.KW_SORT - 36)) |
								(1 << (t.KW_LOAD - 36)) |
								(1 << (t.KW_EXPORT - 36)) |
								(1 << (t.KW_REPLICATION - 36)) |
								(1 << (t.KW_METADATA - 36)) |
								(1 << (t.KW_DATA - 36)) |
								(1 << (t.KW_INPATH - 36)))) !==
							0) ||
					(((e - 68) & -32) == 0 &&
						((1 << (e - 68)) &
							((1 << (t.KW_CHANGE - 68)) |
								(1 << (t.KW_FIRST - 68)) |
								(1 << (t.KW_AFTER - 68)) |
								(1 << (t.KW_RENAME - 68)) |
								(1 << (t.KW_COMMENT - 68)) |
								(1 << (t.KW_TINYINT - 68)) |
								(1 << (t.KW_DATETIME - 68)) |
								(1 << (t.KW_ZONE - 68)) |
								(1 << (t.KW_STRING - 68)) |
								(1 << (t.KW_STRUCT - 68)) |
								(1 << (t.KW_UNIONTYPE - 68)))) !==
							0) ||
					(((e - 101) & -32) == 0 &&
						((1 << (e - 101)) &
							((1 << (t.KW_PARTITIONED - 101)) |
								(1 << (t.KW_CLUSTERED - 101)) |
								(1 << (t.KW_SORTED - 101)) |
								(1 << (t.KW_BUCKETS - 101)) |
								(1 << (t.KW_FORMAT - 101)) |
								(1 << (t.KW_DELIMITED - 101)) |
								(1 << (t.KW_FIELDS - 101)) |
								(1 << (t.KW_TERMINATED - 101)) |
								(1 << (t.KW_ESCAPED - 101)) |
								(1 << (t.KW_COLLECTION - 101)) |
								(1 << (t.KW_ITEMS - 101)) |
								(1 << (t.KW_KEYS - 101)) |
								(1 << (t.KW_KEY_TYPE - 101)) |
								(1 << (t.KW_KILL - 101)) |
								(1 << (t.KW_LINES - 101)) |
								(1 << (t.KW_STORED - 101)) |
								(1 << (t.KW_FILEFORMAT - 101)) |
								(1 << (t.KW_INPUTFORMAT - 101)) |
								(1 << (t.KW_OUTPUTFORMAT - 101)) |
								(1 << (t.KW_INPUTDRIVER - 101)) |
								(1 << (t.KW_OUTPUTDRIVER - 101)) |
								(1 << (t.KW_ENABLE - 101)) |
								(1 << (t.KW_DISABLE - 101)) |
								(1 << (t.KW_LOCATION - 101)) |
								(1 << (t.KW_BUCKET - 101)))) !==
							0) ||
					(((e - 134) & -32) == 0 &&
						((1 << (e - 134)) &
							((1 << (t.KW_ADD - 134)) |
								(1 << (t.KW_REPLACE - 134)) |
								(1 << (t.KW_TEMPORARY - 134)) |
								(1 << (t.KW_FILE - 134)) |
								(1 << (t.KW_JAR - 134)) |
								(1 << (t.KW_EXPLAIN - 134)) |
								(1 << (t.KW_FORMATTED - 134)) |
								(1 << (t.KW_DEPENDENCY - 134)) |
								(1 << (t.KW_LOGICAL - 134)) |
								(1 << (t.KW_SERDE - 134)) |
								(1 << (t.KW_DEFERRED - 134)) |
								(1 << (t.KW_SERDEPROPERTIES - 134)) |
								(1 << (t.KW_DBPROPERTIES - 134)) |
								(1 << (t.KW_LIMIT - 134)) |
								(1 << (t.KW_OFFSET - 134)) |
								(1 << (t.KW_UNSET - 134)) |
								(1 << (t.KW_TBLPROPERTIES - 134)) |
								(1 << (t.KW_IDXPROPERTIES - 134)) |
								(1 << (t.KW_VALUE_TYPE - 134)) |
								(1 << (t.KW_ELEM_TYPE - 134)) |
								(1 << (t.KW_DEFINED - 134)))) !==
							0) ||
					(((e - 167) & -32) == 0 &&
						((1 << (e - 167)) &
							((1 << (t.KW_MAPJOIN - 167)) |
								(1 << (t.KW_STREAMTABLE - 167)) |
								(1 << (t.KW_CLUSTERSTATUS - 167)) |
								(1 << (t.KW_UTC - 167)) |
								(1 << (t.KW_UTCTIMESTAMP - 167)) |
								(1 << (t.KW_LONG - 167)) |
								(1 << (t.KW_PLUS - 167)) |
								(1 << (t.KW_VIEW - 167)) |
								(1 << (t.KW_VIEWS - 167)) |
								(1 << (t.KW_DATABASES - 167)) |
								(1 << (t.KW_MATERIALIZED - 167)) |
								(1 << (t.KW_SCHEMA - 167)) |
								(1 << (t.KW_SCHEMAS - 167)) |
								(1 << (t.KW_SSL - 167)) |
								(1 << (t.KW_UNDO - 167)) |
								(1 << (t.KW_LOCK - 167)) |
								(1 << (t.KW_LOCKS - 167)) |
								(1 << (t.KW_UNLOCK - 167)) |
								(1 << (t.KW_SHARED - 167)) |
								(1 << (t.KW_EXCLUSIVE - 167)) |
								(1 << (t.KW_UNSIGNED - 167)) |
								(1 << (t.KW_WHILE - 167)) |
								(1 << (t.KW_READ - 167)))) !==
							0) ||
					(((e - 200) & -32) == 0 &&
						((1 << (e - 200)) &
							((1 << (t.KW_PURGE - 200)) |
								(1 << (t.KW_ANALYZE - 200)) |
								(1 << (t.KW_BEFORE - 200)) |
								(1 << (t.KW_CONTINUE - 200)) |
								(1 << (t.KW_RECORDREADER - 200)) |
								(1 << (t.KW_RECORDWRITER - 200)) |
								(1 << (t.KW_SEMI - 200)) |
								(1 << (t.KW_TOUCH - 200)) |
								(1 << (t.KW_ARCHIVE - 200)) |
								(1 << (t.KW_UNARCHIVE - 200)) |
								(1 << (t.KW_COMPUTE - 200)) |
								(1 << (t.KW_STATISTICS - 200)) |
								(1 << (t.KW_USE - 200)) |
								(1 << (t.KW_OPTION - 200)) |
								(1 << (t.KW_CONCATENATE - 200)) |
								(1 << (t.KW_SHOW_DATABASE - 200)) |
								(1 << (t.KW_RESTRICT - 200)) |
								(1 << (t.KW_CASCADE - 200)) |
								(1 << (t.KW_SKEWED - 200)) |
								(1 << (t.KW_DIRECTORIES - 200)))) !==
							0) ||
					(((e - 244) & -32) == 0 &&
						((1 << (e - 244)) &
							((1 << (t.KW_SETS - 244)) |
								(1 << (t.KW_NOSCAN - 244)) |
								(1 << (t.KW_ROLE - 244)) |
								(1 << (t.KW_ROLES - 244)) |
								(1 << (t.KW_URI - 244)) |
								(1 << (t.KW_SERVER - 244)) |
								(1 << (t.KW_ADMIN - 244)) |
								(1 << (t.KW_OWNER - 244)) |
								(1 << (t.KW_PRINCIPALS - 244)) |
								(1 << (t.KW_COMPACT - 244)) |
								(1 << (t.KW_COMPACTIONS - 244)) |
								(1 << (t.KW_TRANSACTIONS - 244)) |
								(1 << (t.KW_REWRITE - 244)) |
								(1 << (t.KW_REOPTIMIZATION - 244)) |
								(1 << (t.KW_RELOAD - 244)) |
								(1 << (t.KW_YEAR - 244)) |
								(1 << (t.KW_QUERY - 244)) |
								(1 << (t.KW_QUARTER - 244)) |
								(1 << (t.KW_MONTH - 244)) |
								(1 << (t.KW_WEEK - 244)) |
								(1 << (t.KW_DAY - 244)) |
								(1 << (t.KW_DOW - 244)) |
								(1 << (t.KW_HOUR - 244)) |
								(1 << (t.KW_MINUTE - 244)) |
								(1 << (t.KW_SECOND - 244)))) !==
							0) ||
					(((e - 277) & -32) == 0 &&
						((1 << (e - 277)) &
							((1 << (t.KW_TRANSACTION - 277)) |
								(1 << (t.KW_WORK - 277)) |
								(1 << (t.KW_WRITE - 277)) |
								(1 << (t.KW_ISOLATION - 277)) |
								(1 << (t.KW_LEVEL - 277)) |
								(1 << (t.KW_SNAPSHOT - 277)) |
								(1 << (t.KW_AUTOCOMMIT - 277)) |
								(1 << (t.KW_CACHE - 277)) |
								(1 << (t.KW_ENFORCED - 277)) |
								(1 << (t.KW_VALIDATE - 277)) |
								(1 << (t.KW_NOVALIDATE - 277)) |
								(1 << (t.KW_RELY - 277)) |
								(1 << (t.KW_NORELY - 277)) |
								(1 << (t.KW_KEY - 277)) |
								(1 << (t.KW_ABORT - 277)) |
								(1 << (t.KW_MATCHED - 277)) |
								(1 << (t.KW_REPL - 277)) |
								(1 << (t.KW_DUMP - 277)) |
								(1 << (t.KW_STATUS - 277)) |
								(1 << (t.KW_VECTORIZATION - 277)) |
								(1 << (t.KW_SUMMARY - 277)))) !==
							0) ||
					(((e - 309) & -32) == 0 &&
						((1 << (e - 309)) &
							((1 << (t.KW_OPERATOR - 309)) |
								(1 << (t.KW_EXPRESSION - 309)) |
								(1 << (t.KW_DETAIL - 309)) |
								(1 << (t.KW_WAIT - 309)) |
								(1 << (t.KW_RESOURCE - 309)) |
								(1 << (t.KW_PLAN - 309)) |
								(1 << (t.KW_QUERY_PARALLELISM - 309)) |
								(1 << (t.KW_PLANS - 309)) |
								(1 << (t.KW_ACTIVATE - 309)) |
								(1 << (t.KW_DEFAULT - 309)) |
								(1 << (t.KW_CHECK - 309)) |
								(1 << (t.KW_POOL - 309)) |
								(1 << (t.KW_MOVE - 309)) |
								(1 << (t.KW_DO - 309)) |
								(1 << (t.KW_ALLOC_FRACTION - 309)) |
								(1 << (t.KW_SCHEDULING_POLICY - 309)) |
								(1 << (t.KW_PATH - 309)) |
								(1 << (t.KW_MAPPING - 309)) |
								(1 << (t.KW_WORKLOAD - 309)) |
								(1 << (t.KW_MANAGEMENT - 309)) |
								(1 << (t.KW_ACTIVE - 309)) |
								(1 << (t.KW_UNMANAGED - 309)) |
								(1 << (t.KW_DELTA - 309)) |
								(1 << (t.KW_CSV - 309)))) !==
							0) ||
					e === t.KW_JSON ||
					e === t.KW_BLOOMFILTER ||
					e === t.Identifier) &&
					((this.state = 1761), this.extColumnName());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function st(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_descStatement),
			this
		);
	}
	st.prototype = Object.create(s.ParserRuleContext.prototype);
	st.prototype.constructor = st;
	st.prototype.KW_DESCRIBE = function () {
		return this.getToken(t.KW_DESCRIBE, 0);
	};
	st.prototype.KW_DESC = function () {
		return this.getToken(t.KW_DESC, 0);
	};
	st.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	st.prototype.KW_FUNCTION = function () {
		return this.getToken(t.KW_FUNCTION, 0);
	};
	st.prototype.descFuncNames = function () {
		return this.getTypedRuleContext(y1, 0);
	};
	st.prototype.tabPartColTypeExpr = function () {
		return this.getTypedRuleContext(Eo, 0);
	};
	st.prototype.KW_DATABASE = function () {
		return this.getToken(t.KW_DATABASE, 0);
	};
	st.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	st.prototype.KW_EXTENDED = function () {
		return this.getToken(t.KW_EXTENDED, 0);
	};
	st.prototype.KW_FORMATTED = function () {
		return this.getToken(t.KW_FORMATTED, 0);
	};
	st.prototype.accept = function (u) {
		return u instanceof d ? u.visitDescStatement(this) : u.visitChildren(this);
	};
	t.DescStatementContext = st;
	t.prototype.descStatement = function () {
		var u = new st(this, this._ctx, this.state);
		this.enterRule(u, 202, t.RULE_descStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1764),
				(e = this._input.LA(1)),
				e === t.KW_DESC || e === t.KW_DESCRIBE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this),
				(this.state = 1778),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 125, this._ctx);
			switch (i) {
				case 1:
					(this.state = 1765),
						(e = this._input.LA(1)),
						e === t.KW_DATABASE || e === t.KW_SCHEMA
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 1767),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_EXTENDED && ((this.state = 1766), this.match(t.KW_EXTENDED)),
						(this.state = 1769),
						this.identifier();
					break;
				case 2:
					(this.state = 1770),
						this.match(t.KW_FUNCTION),
						(this.state = 1772),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_EXTENDED && ((this.state = 1771), this.match(t.KW_EXTENDED)),
						(this.state = 1774),
						this.descFuncNames();
					break;
				case 3:
					(this.state = 1775),
						(e = this._input.LA(1)),
						e === t.KW_EXTENDED || e === t.KW_FORMATTED
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 1776),
						this.tabPartColTypeExpr();
					break;
				case 4:
					(this.state = 1777), this.tabPartColTypeExpr();
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Pu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_analyzeStatement),
			this
		);
	}
	Pu.prototype = Object.create(s.ParserRuleContext.prototype);
	Pu.prototype.constructor = Pu;
	Pu.prototype.KW_ANALYZE = function () {
		return this.getToken(t.KW_ANALYZE, 0);
	};
	Pu.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	Pu.prototype.tableOrPartition = function () {
		return this.getTypedRuleContext(fi, 0);
	};
	Pu.prototype.KW_COMPUTE = function () {
		return this.getToken(t.KW_COMPUTE, 0);
	};
	Pu.prototype.KW_STATISTICS = function () {
		return this.getToken(t.KW_STATISTICS, 0);
	};
	Pu.prototype.KW_CACHE = function () {
		return this.getToken(t.KW_CACHE, 0);
	};
	Pu.prototype.KW_METADATA = function () {
		return this.getToken(t.KW_METADATA, 0);
	};
	Pu.prototype.KW_NOSCAN = function () {
		return this.getToken(t.KW_NOSCAN, 0);
	};
	Pu.prototype.KW_FOR = function () {
		return this.getToken(t.KW_FOR, 0);
	};
	Pu.prototype.KW_COLUMNS = function () {
		return this.getToken(t.KW_COLUMNS, 0);
	};
	Pu.prototype.columnNameList = function () {
		return this.getTypedRuleContext(pt, 0);
	};
	Pu.prototype.accept = function (u) {
		return u instanceof d ? u.visitAnalyzeStatement(this) : u.visitChildren(this);
	};
	t.AnalyzeStatementContext = Pu;
	t.prototype.analyzeStatement = function () {
		var u = new Pu(this, this._ctx, this.state);
		this.enterRule(u, 204, t.RULE_analyzeStatement);
		var e = 0;
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 1780),
				this.match(t.KW_ANALYZE),
				(this.state = 1781),
				this.match(t.KW_TABLE),
				(this.state = 1782),
				this.tableOrPartition(),
				(this.state = 1795),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_COMPUTE:
					switch (
						((this.state = 1783),
						this.match(t.KW_COMPUTE),
						(this.state = 1784),
						this.match(t.KW_STATISTICS),
						(this.state = 1791),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_NOSCAN:
							(this.state = 1785), this.match(t.KW_NOSCAN);
							break;
						case t.KW_FOR:
							(this.state = 1786),
								this.match(t.KW_FOR),
								(this.state = 1787),
								this.match(t.KW_COLUMNS),
								(this.state = 1789),
								this._errHandler.sync(this),
								(e = this._input.LA(1)),
								(((e & -32) == 0 &&
									((1 << e) &
										((1 << t.KW_ASC) |
											(1 << t.KW_DESC) |
											(1 << t.KW_NULLS) |
											(1 << t.KW_LAST) |
											(1 << t.KW_OVERWRITE))) !==
										0) ||
									(((e - 36) & -32) == 0 &&
										((1 << (e - 36)) &
											((1 << (t.KW_PARTITIONS - 36)) |
												(1 << (t.KW_TABLES - 36)) |
												(1 << (t.KW_COLUMNS - 36)) |
												(1 << (t.KW_INDEX - 36)) |
												(1 << (t.KW_INDEXES - 36)) |
												(1 << (t.KW_REBUILD - 36)) |
												(1 << (t.KW_FUNCTIONS - 36)) |
												(1 << (t.KW_SHOW - 36)) |
												(1 << (t.KW_MSCK - 36)) |
												(1 << (t.KW_REPAIR - 36)) |
												(1 << (t.KW_DIRECTORY - 36)) |
												(1 << (t.KW_CLUSTER - 36)) |
												(1 << (t.KW_DISTRIBUTE - 36)) |
												(1 << (t.KW_SORT - 36)) |
												(1 << (t.KW_LOAD - 36)) |
												(1 << (t.KW_EXPORT - 36)) |
												(1 << (t.KW_REPLICATION - 36)) |
												(1 << (t.KW_METADATA - 36)) |
												(1 << (t.KW_DATA - 36)) |
												(1 << (t.KW_INPATH - 36)))) !==
											0) ||
									(((e - 68) & -32) == 0 &&
										((1 << (e - 68)) &
											((1 << (t.KW_CHANGE - 68)) |
												(1 << (t.KW_FIRST - 68)) |
												(1 << (t.KW_AFTER - 68)) |
												(1 << (t.KW_RENAME - 68)) |
												(1 << (t.KW_COMMENT - 68)) |
												(1 << (t.KW_TINYINT - 68)) |
												(1 << (t.KW_DATETIME - 68)) |
												(1 << (t.KW_ZONE - 68)) |
												(1 << (t.KW_STRING - 68)) |
												(1 << (t.KW_STRUCT - 68)) |
												(1 << (t.KW_UNIONTYPE - 68)))) !==
											0) ||
									(((e - 101) & -32) == 0 &&
										((1 << (e - 101)) &
											((1 << (t.KW_PARTITIONED - 101)) |
												(1 << (t.KW_CLUSTERED - 101)) |
												(1 << (t.KW_SORTED - 101)) |
												(1 << (t.KW_BUCKETS - 101)) |
												(1 << (t.KW_FORMAT - 101)) |
												(1 << (t.KW_DELIMITED - 101)) |
												(1 << (t.KW_FIELDS - 101)) |
												(1 << (t.KW_TERMINATED - 101)) |
												(1 << (t.KW_ESCAPED - 101)) |
												(1 << (t.KW_COLLECTION - 101)) |
												(1 << (t.KW_ITEMS - 101)) |
												(1 << (t.KW_KEYS - 101)) |
												(1 << (t.KW_KEY_TYPE - 101)) |
												(1 << (t.KW_KILL - 101)) |
												(1 << (t.KW_LINES - 101)) |
												(1 << (t.KW_STORED - 101)) |
												(1 << (t.KW_FILEFORMAT - 101)) |
												(1 << (t.KW_INPUTFORMAT - 101)) |
												(1 << (t.KW_OUTPUTFORMAT - 101)) |
												(1 << (t.KW_INPUTDRIVER - 101)) |
												(1 << (t.KW_OUTPUTDRIVER - 101)) |
												(1 << (t.KW_ENABLE - 101)) |
												(1 << (t.KW_DISABLE - 101)) |
												(1 << (t.KW_LOCATION - 101)) |
												(1 << (t.KW_BUCKET - 101)))) !==
											0) ||
									(((e - 134) & -32) == 0 &&
										((1 << (e - 134)) &
											((1 << (t.KW_ADD - 134)) |
												(1 << (t.KW_REPLACE - 134)) |
												(1 << (t.KW_TEMPORARY - 134)) |
												(1 << (t.KW_FILE - 134)) |
												(1 << (t.KW_JAR - 134)) |
												(1 << (t.KW_EXPLAIN - 134)) |
												(1 << (t.KW_FORMATTED - 134)) |
												(1 << (t.KW_DEPENDENCY - 134)) |
												(1 << (t.KW_LOGICAL - 134)) |
												(1 << (t.KW_SERDE - 134)) |
												(1 << (t.KW_DEFERRED - 134)) |
												(1 << (t.KW_SERDEPROPERTIES - 134)) |
												(1 << (t.KW_DBPROPERTIES - 134)) |
												(1 << (t.KW_LIMIT - 134)) |
												(1 << (t.KW_OFFSET - 134)) |
												(1 << (t.KW_UNSET - 134)) |
												(1 << (t.KW_TBLPROPERTIES - 134)) |
												(1 << (t.KW_IDXPROPERTIES - 134)) |
												(1 << (t.KW_VALUE_TYPE - 134)) |
												(1 << (t.KW_ELEM_TYPE - 134)) |
												(1 << (t.KW_DEFINED - 134)))) !==
											0) ||
									(((e - 167) & -32) == 0 &&
										((1 << (e - 167)) &
											((1 << (t.KW_MAPJOIN - 167)) |
												(1 << (t.KW_STREAMTABLE - 167)) |
												(1 << (t.KW_CLUSTERSTATUS - 167)) |
												(1 << (t.KW_UTC - 167)) |
												(1 << (t.KW_UTCTIMESTAMP - 167)) |
												(1 << (t.KW_LONG - 167)) |
												(1 << (t.KW_PLUS - 167)) |
												(1 << (t.KW_VIEW - 167)) |
												(1 << (t.KW_VIEWS - 167)) |
												(1 << (t.KW_DATABASES - 167)) |
												(1 << (t.KW_MATERIALIZED - 167)) |
												(1 << (t.KW_SCHEMA - 167)) |
												(1 << (t.KW_SCHEMAS - 167)) |
												(1 << (t.KW_SSL - 167)) |
												(1 << (t.KW_UNDO - 167)) |
												(1 << (t.KW_LOCK - 167)) |
												(1 << (t.KW_LOCKS - 167)) |
												(1 << (t.KW_UNLOCK - 167)) |
												(1 << (t.KW_SHARED - 167)) |
												(1 << (t.KW_EXCLUSIVE - 167)) |
												(1 << (t.KW_UNSIGNED - 167)) |
												(1 << (t.KW_WHILE - 167)) |
												(1 << (t.KW_READ - 167)))) !==
											0) ||
									(((e - 200) & -32) == 0 &&
										((1 << (e - 200)) &
											((1 << (t.KW_PURGE - 200)) |
												(1 << (t.KW_ANALYZE - 200)) |
												(1 << (t.KW_BEFORE - 200)) |
												(1 << (t.KW_CONTINUE - 200)) |
												(1 << (t.KW_RECORDREADER - 200)) |
												(1 << (t.KW_RECORDWRITER - 200)) |
												(1 << (t.KW_SEMI - 200)) |
												(1 << (t.KW_TOUCH - 200)) |
												(1 << (t.KW_ARCHIVE - 200)) |
												(1 << (t.KW_UNARCHIVE - 200)) |
												(1 << (t.KW_COMPUTE - 200)) |
												(1 << (t.KW_STATISTICS - 200)) |
												(1 << (t.KW_USE - 200)) |
												(1 << (t.KW_OPTION - 200)) |
												(1 << (t.KW_CONCATENATE - 200)) |
												(1 << (t.KW_SHOW_DATABASE - 200)) |
												(1 << (t.KW_RESTRICT - 200)) |
												(1 << (t.KW_CASCADE - 200)) |
												(1 << (t.KW_SKEWED - 200)) |
												(1 << (t.KW_DIRECTORIES - 200)))) !==
											0) ||
									(((e - 244) & -32) == 0 &&
										((1 << (e - 244)) &
											((1 << (t.KW_SETS - 244)) |
												(1 << (t.KW_NOSCAN - 244)) |
												(1 << (t.KW_ROLE - 244)) |
												(1 << (t.KW_ROLES - 244)) |
												(1 << (t.KW_URI - 244)) |
												(1 << (t.KW_SERVER - 244)) |
												(1 << (t.KW_ADMIN - 244)) |
												(1 << (t.KW_OWNER - 244)) |
												(1 << (t.KW_PRINCIPALS - 244)) |
												(1 << (t.KW_COMPACT - 244)) |
												(1 << (t.KW_COMPACTIONS - 244)) |
												(1 << (t.KW_TRANSACTIONS - 244)) |
												(1 << (t.KW_REWRITE - 244)) |
												(1 << (t.KW_REOPTIMIZATION - 244)) |
												(1 << (t.KW_RELOAD - 244)) |
												(1 << (t.KW_YEAR - 244)) |
												(1 << (t.KW_QUERY - 244)) |
												(1 << (t.KW_QUARTER - 244)) |
												(1 << (t.KW_MONTH - 244)) |
												(1 << (t.KW_WEEK - 244)) |
												(1 << (t.KW_DAY - 244)) |
												(1 << (t.KW_DOW - 244)) |
												(1 << (t.KW_HOUR - 244)) |
												(1 << (t.KW_MINUTE - 244)) |
												(1 << (t.KW_SECOND - 244)))) !==
											0) ||
									(((e - 277) & -32) == 0 &&
										((1 << (e - 277)) &
											((1 << (t.KW_TRANSACTION - 277)) |
												(1 << (t.KW_WORK - 277)) |
												(1 << (t.KW_WRITE - 277)) |
												(1 << (t.KW_ISOLATION - 277)) |
												(1 << (t.KW_LEVEL - 277)) |
												(1 << (t.KW_SNAPSHOT - 277)) |
												(1 << (t.KW_AUTOCOMMIT - 277)) |
												(1 << (t.KW_CACHE - 277)) |
												(1 << (t.KW_ENFORCED - 277)) |
												(1 << (t.KW_VALIDATE - 277)) |
												(1 << (t.KW_NOVALIDATE - 277)) |
												(1 << (t.KW_RELY - 277)) |
												(1 << (t.KW_NORELY - 277)) |
												(1 << (t.KW_KEY - 277)) |
												(1 << (t.KW_ABORT - 277)) |
												(1 << (t.KW_MATCHED - 277)) |
												(1 << (t.KW_REPL - 277)) |
												(1 << (t.KW_DUMP - 277)) |
												(1 << (t.KW_STATUS - 277)) |
												(1 << (t.KW_VECTORIZATION - 277)) |
												(1 << (t.KW_SUMMARY - 277)))) !==
											0) ||
									(((e - 309) & -32) == 0 &&
										((1 << (e - 309)) &
											((1 << (t.KW_OPERATOR - 309)) |
												(1 << (t.KW_EXPRESSION - 309)) |
												(1 << (t.KW_DETAIL - 309)) |
												(1 << (t.KW_WAIT - 309)) |
												(1 << (t.KW_RESOURCE - 309)) |
												(1 << (t.KW_PLAN - 309)) |
												(1 << (t.KW_QUERY_PARALLELISM - 309)) |
												(1 << (t.KW_PLANS - 309)) |
												(1 << (t.KW_ACTIVATE - 309)) |
												(1 << (t.KW_DEFAULT - 309)) |
												(1 << (t.KW_CHECK - 309)) |
												(1 << (t.KW_POOL - 309)) |
												(1 << (t.KW_MOVE - 309)) |
												(1 << (t.KW_DO - 309)) |
												(1 << (t.KW_ALLOC_FRACTION - 309)) |
												(1 << (t.KW_SCHEDULING_POLICY - 309)) |
												(1 << (t.KW_PATH - 309)) |
												(1 << (t.KW_MAPPING - 309)) |
												(1 << (t.KW_WORKLOAD - 309)) |
												(1 << (t.KW_MANAGEMENT - 309)) |
												(1 << (t.KW_ACTIVE - 309)) |
												(1 << (t.KW_UNMANAGED - 309)) |
												(1 << (t.KW_DELTA - 309)) |
												(1 << (t.KW_CSV - 309)))) !==
											0) ||
									e === t.KW_JSON ||
									e === t.KW_BLOOMFILTER ||
									e === t.Identifier) &&
									((this.state = 1788), this.columnNameList());
							break;
						case t.SEMICOLON:
							break;
						default:
							break;
					}
					break;
				case t.KW_CACHE:
					(this.state = 1793), this.match(t.KW_CACHE), (this.state = 1794), this.match(t.KW_METADATA);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function j(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_showStatement),
			this
		);
	}
	j.prototype = Object.create(s.ParserRuleContext.prototype);
	j.prototype.constructor = j;
	j.prototype.KW_SHOW = function () {
		return this.getToken(t.KW_SHOW, 0);
	};
	j.prototype.KW_DATABASES = function () {
		return this.getToken(t.KW_DATABASES, 0);
	};
	j.prototype.KW_SCHEMAS = function () {
		return this.getToken(t.KW_SCHEMAS, 0);
	};
	j.prototype.KW_LIKE = function () {
		return this.getToken(t.KW_LIKE, 0);
	};
	j.prototype.showStmtIdentifier = function () {
		return this.getTypedRuleContext(kc, 0);
	};
	j.prototype.KW_TABLES = function () {
		return this.getToken(t.KW_TABLES, 0);
	};
	j.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	j.prototype.KW_FROM = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_FROM) : this.getToken(t.KW_FROM, u);
	};
	j.prototype.KW_IN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_IN) : this.getToken(t.KW_IN, u);
	};
	j.prototype.KW_VIEWS = function () {
		return this.getToken(t.KW_VIEWS, 0);
	};
	j.prototype.KW_MATERIALIZED = function () {
		return this.getToken(t.KW_MATERIALIZED, 0);
	};
	j.prototype.KW_COLUMNS = function () {
		return this.getToken(t.KW_COLUMNS, 0);
	};
	j.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	j.prototype.KW_FUNCTIONS = function () {
		return this.getToken(t.KW_FUNCTIONS, 0);
	};
	j.prototype.showFunctionIdentifier = function () {
		return this.getTypedRuleContext(Fc, 0);
	};
	j.prototype.KW_PARTITIONS = function () {
		return this.getToken(t.KW_PARTITIONS, 0);
	};
	j.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	j.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	j.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	j.prototype.KW_DATABASE = function () {
		return this.getToken(t.KW_DATABASE, 0);
	};
	j.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	j.prototype.KW_EXTENDED = function () {
		return this.getToken(t.KW_EXTENDED, 0);
	};
	j.prototype.KW_TBLPROPERTIES = function () {
		return this.getToken(t.KW_TBLPROPERTIES, 0);
	};
	j.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	j.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	j.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	j.prototype.KW_LOCKS = function () {
		return this.getToken(t.KW_LOCKS, 0);
	};
	j.prototype.partTypeExpr = function () {
		return this.getTypedRuleContext(Uc, 0);
	};
	j.prototype.KW_COMPACTIONS = function () {
		return this.getToken(t.KW_COMPACTIONS, 0);
	};
	j.prototype.KW_TRANSACTIONS = function () {
		return this.getToken(t.KW_TRANSACTIONS, 0);
	};
	j.prototype.KW_CONF = function () {
		return this.getToken(t.KW_CONF, 0);
	};
	j.prototype.KW_RESOURCE = function () {
		return this.getToken(t.KW_RESOURCE, 0);
	};
	j.prototype.KW_PLANS = function () {
		return this.getToken(t.KW_PLANS, 0);
	};
	j.prototype.KW_PLAN = function () {
		return this.getToken(t.KW_PLAN, 0);
	};
	j.prototype.accept = function (u) {
		return u instanceof d ? u.visitShowStatement(this) : u.visitChildren(this);
	};
	t.ShowStatementContext = j;
	t.prototype.showStatement = function () {
		var u = new j(this, this._ctx, this.state);
		this.enterRule(u, 206, t.RULE_showStatement);
		var e = 0;
		try {
			(this.state = 1920), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 149, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 1797),
						this.match(t.KW_SHOW),
						(this.state = 1798),
						(e = this._input.LA(1)),
						e === t.KW_DATABASES || e === t.KW_SCHEMAS
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 1801),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_LIKE &&
							((this.state = 1799),
							this.match(t.KW_LIKE),
							(this.state = 1800),
							this.showStmtIdentifier());
					break;
				case 2:
					switch (
						(this.enterOuterAlt(u, 2),
						(this.state = 1803),
						this.match(t.KW_SHOW),
						(this.state = 1804),
						this.match(t.KW_TABLES),
						(this.state = 1807),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_FROM || e === t.KW_IN) &&
							((this.state = 1805),
							(e = this._input.LA(1)),
							e === t.KW_FROM || e === t.KW_IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 1806),
							this.identifier()),
						(this.state = 1812),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_LIKE:
							(this.state = 1809), this.match(t.KW_LIKE), (this.state = 1810), this.showStmtIdentifier();
							break;
						case t.KW_ASC:
						case t.KW_DESC:
						case t.KW_NULLS:
						case t.KW_LAST:
						case t.KW_OVERWRITE:
						case t.KW_PARTITIONS:
						case t.KW_TABLES:
						case t.KW_COLUMNS:
						case t.KW_INDEX:
						case t.KW_INDEXES:
						case t.KW_REBUILD:
						case t.KW_FUNCTIONS:
						case t.KW_SHOW:
						case t.KW_MSCK:
						case t.KW_REPAIR:
						case t.KW_DIRECTORY:
						case t.KW_CLUSTER:
						case t.KW_DISTRIBUTE:
						case t.KW_SORT:
						case t.KW_LOAD:
						case t.KW_EXPORT:
						case t.KW_REPLICATION:
						case t.KW_METADATA:
						case t.KW_DATA:
						case t.KW_INPATH:
						case t.KW_CHANGE:
						case t.KW_FIRST:
						case t.KW_AFTER:
						case t.KW_RENAME:
						case t.KW_COMMENT:
						case t.KW_TINYINT:
						case t.KW_DATETIME:
						case t.KW_ZONE:
						case t.KW_STRING:
						case t.KW_STRUCT:
						case t.KW_UNIONTYPE:
						case t.KW_PARTITIONED:
						case t.KW_CLUSTERED:
						case t.KW_SORTED:
						case t.KW_BUCKETS:
						case t.KW_FORMAT:
						case t.KW_DELIMITED:
						case t.KW_FIELDS:
						case t.KW_TERMINATED:
						case t.KW_ESCAPED:
						case t.KW_COLLECTION:
						case t.KW_ITEMS:
						case t.KW_KEYS:
						case t.KW_KEY_TYPE:
						case t.KW_KILL:
						case t.KW_LINES:
						case t.KW_STORED:
						case t.KW_FILEFORMAT:
						case t.KW_INPUTFORMAT:
						case t.KW_OUTPUTFORMAT:
						case t.KW_INPUTDRIVER:
						case t.KW_OUTPUTDRIVER:
						case t.KW_ENABLE:
						case t.KW_DISABLE:
						case t.KW_LOCATION:
						case t.KW_BUCKET:
						case t.KW_ADD:
						case t.KW_REPLACE:
						case t.KW_TEMPORARY:
						case t.KW_FILE:
						case t.KW_JAR:
						case t.KW_EXPLAIN:
						case t.KW_FORMATTED:
						case t.KW_DEPENDENCY:
						case t.KW_LOGICAL:
						case t.KW_SERDE:
						case t.KW_DEFERRED:
						case t.KW_SERDEPROPERTIES:
						case t.KW_DBPROPERTIES:
						case t.KW_LIMIT:
						case t.KW_OFFSET:
						case t.KW_UNSET:
						case t.KW_TBLPROPERTIES:
						case t.KW_IDXPROPERTIES:
						case t.KW_VALUE_TYPE:
						case t.KW_ELEM_TYPE:
						case t.KW_DEFINED:
						case t.KW_MAPJOIN:
						case t.KW_STREAMTABLE:
						case t.KW_CLUSTERSTATUS:
						case t.KW_UTC:
						case t.KW_UTCTIMESTAMP:
						case t.KW_LONG:
						case t.KW_PLUS:
						case t.KW_VIEW:
						case t.KW_VIEWS:
						case t.KW_DATABASES:
						case t.KW_MATERIALIZED:
						case t.KW_SCHEMA:
						case t.KW_SCHEMAS:
						case t.KW_SSL:
						case t.KW_UNDO:
						case t.KW_LOCK:
						case t.KW_LOCKS:
						case t.KW_UNLOCK:
						case t.KW_SHARED:
						case t.KW_EXCLUSIVE:
						case t.KW_UNSIGNED:
						case t.KW_WHILE:
						case t.KW_READ:
						case t.KW_PURGE:
						case t.KW_ANALYZE:
						case t.KW_BEFORE:
						case t.KW_CONTINUE:
						case t.KW_RECORDREADER:
						case t.KW_RECORDWRITER:
						case t.KW_SEMI:
						case t.KW_TOUCH:
						case t.KW_ARCHIVE:
						case t.KW_UNARCHIVE:
						case t.KW_COMPUTE:
						case t.KW_STATISTICS:
						case t.KW_USE:
						case t.KW_OPTION:
						case t.KW_CONCATENATE:
						case t.KW_SHOW_DATABASE:
						case t.KW_RESTRICT:
						case t.KW_CASCADE:
						case t.KW_SKEWED:
						case t.KW_DIRECTORIES:
						case t.KW_SETS:
						case t.KW_NOSCAN:
						case t.KW_ROLE:
						case t.KW_ROLES:
						case t.KW_URI:
						case t.KW_SERVER:
						case t.KW_ADMIN:
						case t.KW_OWNER:
						case t.KW_PRINCIPALS:
						case t.KW_COMPACT:
						case t.KW_COMPACTIONS:
						case t.KW_TRANSACTIONS:
						case t.KW_REWRITE:
						case t.KW_REOPTIMIZATION:
						case t.KW_RELOAD:
						case t.KW_YEAR:
						case t.KW_QUERY:
						case t.KW_QUARTER:
						case t.KW_MONTH:
						case t.KW_WEEK:
						case t.KW_DAY:
						case t.KW_DOW:
						case t.KW_HOUR:
						case t.KW_MINUTE:
						case t.KW_SECOND:
						case t.KW_TRANSACTION:
						case t.KW_WORK:
						case t.KW_WRITE:
						case t.KW_ISOLATION:
						case t.KW_LEVEL:
						case t.KW_SNAPSHOT:
						case t.KW_AUTOCOMMIT:
						case t.KW_CACHE:
						case t.KW_ENFORCED:
						case t.KW_VALIDATE:
						case t.KW_NOVALIDATE:
						case t.KW_RELY:
						case t.KW_NORELY:
						case t.KW_KEY:
						case t.KW_ABORT:
						case t.KW_MATCHED:
						case t.KW_REPL:
						case t.KW_DUMP:
						case t.KW_STATUS:
						case t.KW_VECTORIZATION:
						case t.KW_SUMMARY:
						case t.KW_OPERATOR:
						case t.KW_EXPRESSION:
						case t.KW_DETAIL:
						case t.KW_WAIT:
						case t.KW_RESOURCE:
						case t.KW_PLAN:
						case t.KW_QUERY_PARALLELISM:
						case t.KW_PLANS:
						case t.KW_ACTIVATE:
						case t.KW_DEFAULT:
						case t.KW_CHECK:
						case t.KW_POOL:
						case t.KW_MOVE:
						case t.KW_DO:
						case t.KW_ALLOC_FRACTION:
						case t.KW_SCHEDULING_POLICY:
						case t.KW_PATH:
						case t.KW_MAPPING:
						case t.KW_WORKLOAD:
						case t.KW_MANAGEMENT:
						case t.KW_ACTIVE:
						case t.KW_UNMANAGED:
						case t.KW_DELTA:
						case t.KW_CSV:
						case t.KW_JSON:
						case t.KW_BLOOMFILTER:
						case t.StringLiteral:
						case t.Identifier:
							(this.state = 1811), this.showStmtIdentifier();
							break;
						case t.SEMICOLON:
							break;
						default:
							break;
					}
					break;
				case 3:
					switch (
						(this.enterOuterAlt(u, 3),
						(this.state = 1814),
						this.match(t.KW_SHOW),
						(this.state = 1815),
						this.match(t.KW_VIEWS),
						(this.state = 1818),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_FROM || e === t.KW_IN) &&
							((this.state = 1816),
							(e = this._input.LA(1)),
							e === t.KW_FROM || e === t.KW_IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 1817),
							this.identifier()),
						(this.state = 1823),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_LIKE:
							(this.state = 1820), this.match(t.KW_LIKE), (this.state = 1821), this.showStmtIdentifier();
							break;
						case t.KW_ASC:
						case t.KW_DESC:
						case t.KW_NULLS:
						case t.KW_LAST:
						case t.KW_OVERWRITE:
						case t.KW_PARTITIONS:
						case t.KW_TABLES:
						case t.KW_COLUMNS:
						case t.KW_INDEX:
						case t.KW_INDEXES:
						case t.KW_REBUILD:
						case t.KW_FUNCTIONS:
						case t.KW_SHOW:
						case t.KW_MSCK:
						case t.KW_REPAIR:
						case t.KW_DIRECTORY:
						case t.KW_CLUSTER:
						case t.KW_DISTRIBUTE:
						case t.KW_SORT:
						case t.KW_LOAD:
						case t.KW_EXPORT:
						case t.KW_REPLICATION:
						case t.KW_METADATA:
						case t.KW_DATA:
						case t.KW_INPATH:
						case t.KW_CHANGE:
						case t.KW_FIRST:
						case t.KW_AFTER:
						case t.KW_RENAME:
						case t.KW_COMMENT:
						case t.KW_TINYINT:
						case t.KW_DATETIME:
						case t.KW_ZONE:
						case t.KW_STRING:
						case t.KW_STRUCT:
						case t.KW_UNIONTYPE:
						case t.KW_PARTITIONED:
						case t.KW_CLUSTERED:
						case t.KW_SORTED:
						case t.KW_BUCKETS:
						case t.KW_FORMAT:
						case t.KW_DELIMITED:
						case t.KW_FIELDS:
						case t.KW_TERMINATED:
						case t.KW_ESCAPED:
						case t.KW_COLLECTION:
						case t.KW_ITEMS:
						case t.KW_KEYS:
						case t.KW_KEY_TYPE:
						case t.KW_KILL:
						case t.KW_LINES:
						case t.KW_STORED:
						case t.KW_FILEFORMAT:
						case t.KW_INPUTFORMAT:
						case t.KW_OUTPUTFORMAT:
						case t.KW_INPUTDRIVER:
						case t.KW_OUTPUTDRIVER:
						case t.KW_ENABLE:
						case t.KW_DISABLE:
						case t.KW_LOCATION:
						case t.KW_BUCKET:
						case t.KW_ADD:
						case t.KW_REPLACE:
						case t.KW_TEMPORARY:
						case t.KW_FILE:
						case t.KW_JAR:
						case t.KW_EXPLAIN:
						case t.KW_FORMATTED:
						case t.KW_DEPENDENCY:
						case t.KW_LOGICAL:
						case t.KW_SERDE:
						case t.KW_DEFERRED:
						case t.KW_SERDEPROPERTIES:
						case t.KW_DBPROPERTIES:
						case t.KW_LIMIT:
						case t.KW_OFFSET:
						case t.KW_UNSET:
						case t.KW_TBLPROPERTIES:
						case t.KW_IDXPROPERTIES:
						case t.KW_VALUE_TYPE:
						case t.KW_ELEM_TYPE:
						case t.KW_DEFINED:
						case t.KW_MAPJOIN:
						case t.KW_STREAMTABLE:
						case t.KW_CLUSTERSTATUS:
						case t.KW_UTC:
						case t.KW_UTCTIMESTAMP:
						case t.KW_LONG:
						case t.KW_PLUS:
						case t.KW_VIEW:
						case t.KW_VIEWS:
						case t.KW_DATABASES:
						case t.KW_MATERIALIZED:
						case t.KW_SCHEMA:
						case t.KW_SCHEMAS:
						case t.KW_SSL:
						case t.KW_UNDO:
						case t.KW_LOCK:
						case t.KW_LOCKS:
						case t.KW_UNLOCK:
						case t.KW_SHARED:
						case t.KW_EXCLUSIVE:
						case t.KW_UNSIGNED:
						case t.KW_WHILE:
						case t.KW_READ:
						case t.KW_PURGE:
						case t.KW_ANALYZE:
						case t.KW_BEFORE:
						case t.KW_CONTINUE:
						case t.KW_RECORDREADER:
						case t.KW_RECORDWRITER:
						case t.KW_SEMI:
						case t.KW_TOUCH:
						case t.KW_ARCHIVE:
						case t.KW_UNARCHIVE:
						case t.KW_COMPUTE:
						case t.KW_STATISTICS:
						case t.KW_USE:
						case t.KW_OPTION:
						case t.KW_CONCATENATE:
						case t.KW_SHOW_DATABASE:
						case t.KW_RESTRICT:
						case t.KW_CASCADE:
						case t.KW_SKEWED:
						case t.KW_DIRECTORIES:
						case t.KW_SETS:
						case t.KW_NOSCAN:
						case t.KW_ROLE:
						case t.KW_ROLES:
						case t.KW_URI:
						case t.KW_SERVER:
						case t.KW_ADMIN:
						case t.KW_OWNER:
						case t.KW_PRINCIPALS:
						case t.KW_COMPACT:
						case t.KW_COMPACTIONS:
						case t.KW_TRANSACTIONS:
						case t.KW_REWRITE:
						case t.KW_REOPTIMIZATION:
						case t.KW_RELOAD:
						case t.KW_YEAR:
						case t.KW_QUERY:
						case t.KW_QUARTER:
						case t.KW_MONTH:
						case t.KW_WEEK:
						case t.KW_DAY:
						case t.KW_DOW:
						case t.KW_HOUR:
						case t.KW_MINUTE:
						case t.KW_SECOND:
						case t.KW_TRANSACTION:
						case t.KW_WORK:
						case t.KW_WRITE:
						case t.KW_ISOLATION:
						case t.KW_LEVEL:
						case t.KW_SNAPSHOT:
						case t.KW_AUTOCOMMIT:
						case t.KW_CACHE:
						case t.KW_ENFORCED:
						case t.KW_VALIDATE:
						case t.KW_NOVALIDATE:
						case t.KW_RELY:
						case t.KW_NORELY:
						case t.KW_KEY:
						case t.KW_ABORT:
						case t.KW_MATCHED:
						case t.KW_REPL:
						case t.KW_DUMP:
						case t.KW_STATUS:
						case t.KW_VECTORIZATION:
						case t.KW_SUMMARY:
						case t.KW_OPERATOR:
						case t.KW_EXPRESSION:
						case t.KW_DETAIL:
						case t.KW_WAIT:
						case t.KW_RESOURCE:
						case t.KW_PLAN:
						case t.KW_QUERY_PARALLELISM:
						case t.KW_PLANS:
						case t.KW_ACTIVATE:
						case t.KW_DEFAULT:
						case t.KW_CHECK:
						case t.KW_POOL:
						case t.KW_MOVE:
						case t.KW_DO:
						case t.KW_ALLOC_FRACTION:
						case t.KW_SCHEDULING_POLICY:
						case t.KW_PATH:
						case t.KW_MAPPING:
						case t.KW_WORKLOAD:
						case t.KW_MANAGEMENT:
						case t.KW_ACTIVE:
						case t.KW_UNMANAGED:
						case t.KW_DELTA:
						case t.KW_CSV:
						case t.KW_JSON:
						case t.KW_BLOOMFILTER:
						case t.StringLiteral:
						case t.Identifier:
							(this.state = 1822), this.showStmtIdentifier();
							break;
						case t.SEMICOLON:
							break;
						default:
							break;
					}
					break;
				case 4:
					switch (
						(this.enterOuterAlt(u, 4),
						(this.state = 1825),
						this.match(t.KW_SHOW),
						(this.state = 1826),
						this.match(t.KW_MATERIALIZED),
						(this.state = 1827),
						this.match(t.KW_VIEWS),
						(this.state = 1830),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_FROM || e === t.KW_IN) &&
							((this.state = 1828),
							(e = this._input.LA(1)),
							e === t.KW_FROM || e === t.KW_IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 1829),
							this.identifier()),
						(this.state = 1835),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_LIKE:
							(this.state = 1832), this.match(t.KW_LIKE), (this.state = 1833), this.showStmtIdentifier();
							break;
						case t.KW_ASC:
						case t.KW_DESC:
						case t.KW_NULLS:
						case t.KW_LAST:
						case t.KW_OVERWRITE:
						case t.KW_PARTITIONS:
						case t.KW_TABLES:
						case t.KW_COLUMNS:
						case t.KW_INDEX:
						case t.KW_INDEXES:
						case t.KW_REBUILD:
						case t.KW_FUNCTIONS:
						case t.KW_SHOW:
						case t.KW_MSCK:
						case t.KW_REPAIR:
						case t.KW_DIRECTORY:
						case t.KW_CLUSTER:
						case t.KW_DISTRIBUTE:
						case t.KW_SORT:
						case t.KW_LOAD:
						case t.KW_EXPORT:
						case t.KW_REPLICATION:
						case t.KW_METADATA:
						case t.KW_DATA:
						case t.KW_INPATH:
						case t.KW_CHANGE:
						case t.KW_FIRST:
						case t.KW_AFTER:
						case t.KW_RENAME:
						case t.KW_COMMENT:
						case t.KW_TINYINT:
						case t.KW_DATETIME:
						case t.KW_ZONE:
						case t.KW_STRING:
						case t.KW_STRUCT:
						case t.KW_UNIONTYPE:
						case t.KW_PARTITIONED:
						case t.KW_CLUSTERED:
						case t.KW_SORTED:
						case t.KW_BUCKETS:
						case t.KW_FORMAT:
						case t.KW_DELIMITED:
						case t.KW_FIELDS:
						case t.KW_TERMINATED:
						case t.KW_ESCAPED:
						case t.KW_COLLECTION:
						case t.KW_ITEMS:
						case t.KW_KEYS:
						case t.KW_KEY_TYPE:
						case t.KW_KILL:
						case t.KW_LINES:
						case t.KW_STORED:
						case t.KW_FILEFORMAT:
						case t.KW_INPUTFORMAT:
						case t.KW_OUTPUTFORMAT:
						case t.KW_INPUTDRIVER:
						case t.KW_OUTPUTDRIVER:
						case t.KW_ENABLE:
						case t.KW_DISABLE:
						case t.KW_LOCATION:
						case t.KW_BUCKET:
						case t.KW_ADD:
						case t.KW_REPLACE:
						case t.KW_TEMPORARY:
						case t.KW_FILE:
						case t.KW_JAR:
						case t.KW_EXPLAIN:
						case t.KW_FORMATTED:
						case t.KW_DEPENDENCY:
						case t.KW_LOGICAL:
						case t.KW_SERDE:
						case t.KW_DEFERRED:
						case t.KW_SERDEPROPERTIES:
						case t.KW_DBPROPERTIES:
						case t.KW_LIMIT:
						case t.KW_OFFSET:
						case t.KW_UNSET:
						case t.KW_TBLPROPERTIES:
						case t.KW_IDXPROPERTIES:
						case t.KW_VALUE_TYPE:
						case t.KW_ELEM_TYPE:
						case t.KW_DEFINED:
						case t.KW_MAPJOIN:
						case t.KW_STREAMTABLE:
						case t.KW_CLUSTERSTATUS:
						case t.KW_UTC:
						case t.KW_UTCTIMESTAMP:
						case t.KW_LONG:
						case t.KW_PLUS:
						case t.KW_VIEW:
						case t.KW_VIEWS:
						case t.KW_DATABASES:
						case t.KW_MATERIALIZED:
						case t.KW_SCHEMA:
						case t.KW_SCHEMAS:
						case t.KW_SSL:
						case t.KW_UNDO:
						case t.KW_LOCK:
						case t.KW_LOCKS:
						case t.KW_UNLOCK:
						case t.KW_SHARED:
						case t.KW_EXCLUSIVE:
						case t.KW_UNSIGNED:
						case t.KW_WHILE:
						case t.KW_READ:
						case t.KW_PURGE:
						case t.KW_ANALYZE:
						case t.KW_BEFORE:
						case t.KW_CONTINUE:
						case t.KW_RECORDREADER:
						case t.KW_RECORDWRITER:
						case t.KW_SEMI:
						case t.KW_TOUCH:
						case t.KW_ARCHIVE:
						case t.KW_UNARCHIVE:
						case t.KW_COMPUTE:
						case t.KW_STATISTICS:
						case t.KW_USE:
						case t.KW_OPTION:
						case t.KW_CONCATENATE:
						case t.KW_SHOW_DATABASE:
						case t.KW_RESTRICT:
						case t.KW_CASCADE:
						case t.KW_SKEWED:
						case t.KW_DIRECTORIES:
						case t.KW_SETS:
						case t.KW_NOSCAN:
						case t.KW_ROLE:
						case t.KW_ROLES:
						case t.KW_URI:
						case t.KW_SERVER:
						case t.KW_ADMIN:
						case t.KW_OWNER:
						case t.KW_PRINCIPALS:
						case t.KW_COMPACT:
						case t.KW_COMPACTIONS:
						case t.KW_TRANSACTIONS:
						case t.KW_REWRITE:
						case t.KW_REOPTIMIZATION:
						case t.KW_RELOAD:
						case t.KW_YEAR:
						case t.KW_QUERY:
						case t.KW_QUARTER:
						case t.KW_MONTH:
						case t.KW_WEEK:
						case t.KW_DAY:
						case t.KW_DOW:
						case t.KW_HOUR:
						case t.KW_MINUTE:
						case t.KW_SECOND:
						case t.KW_TRANSACTION:
						case t.KW_WORK:
						case t.KW_WRITE:
						case t.KW_ISOLATION:
						case t.KW_LEVEL:
						case t.KW_SNAPSHOT:
						case t.KW_AUTOCOMMIT:
						case t.KW_CACHE:
						case t.KW_ENFORCED:
						case t.KW_VALIDATE:
						case t.KW_NOVALIDATE:
						case t.KW_RELY:
						case t.KW_NORELY:
						case t.KW_KEY:
						case t.KW_ABORT:
						case t.KW_MATCHED:
						case t.KW_REPL:
						case t.KW_DUMP:
						case t.KW_STATUS:
						case t.KW_VECTORIZATION:
						case t.KW_SUMMARY:
						case t.KW_OPERATOR:
						case t.KW_EXPRESSION:
						case t.KW_DETAIL:
						case t.KW_WAIT:
						case t.KW_RESOURCE:
						case t.KW_PLAN:
						case t.KW_QUERY_PARALLELISM:
						case t.KW_PLANS:
						case t.KW_ACTIVATE:
						case t.KW_DEFAULT:
						case t.KW_CHECK:
						case t.KW_POOL:
						case t.KW_MOVE:
						case t.KW_DO:
						case t.KW_ALLOC_FRACTION:
						case t.KW_SCHEDULING_POLICY:
						case t.KW_PATH:
						case t.KW_MAPPING:
						case t.KW_WORKLOAD:
						case t.KW_MANAGEMENT:
						case t.KW_ACTIVE:
						case t.KW_UNMANAGED:
						case t.KW_DELTA:
						case t.KW_CSV:
						case t.KW_JSON:
						case t.KW_BLOOMFILTER:
						case t.StringLiteral:
						case t.Identifier:
							(this.state = 1834), this.showStmtIdentifier();
							break;
						case t.SEMICOLON:
							break;
						default:
							break;
					}
					break;
				case 5:
					switch (
						(this.enterOuterAlt(u, 5),
						(this.state = 1837),
						this.match(t.KW_SHOW),
						(this.state = 1838),
						this.match(t.KW_COLUMNS),
						(this.state = 1839),
						(e = this._input.LA(1)),
						e === t.KW_FROM || e === t.KW_IN
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 1840),
						this.tableName(),
						(this.state = 1843),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_FROM || e === t.KW_IN) &&
							((this.state = 1841),
							(e = this._input.LA(1)),
							e === t.KW_FROM || e === t.KW_IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 1842),
							this.identifier()),
						(this.state = 1848),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_LIKE:
							(this.state = 1845), this.match(t.KW_LIKE), (this.state = 1846), this.showStmtIdentifier();
							break;
						case t.KW_ASC:
						case t.KW_DESC:
						case t.KW_NULLS:
						case t.KW_LAST:
						case t.KW_OVERWRITE:
						case t.KW_PARTITIONS:
						case t.KW_TABLES:
						case t.KW_COLUMNS:
						case t.KW_INDEX:
						case t.KW_INDEXES:
						case t.KW_REBUILD:
						case t.KW_FUNCTIONS:
						case t.KW_SHOW:
						case t.KW_MSCK:
						case t.KW_REPAIR:
						case t.KW_DIRECTORY:
						case t.KW_CLUSTER:
						case t.KW_DISTRIBUTE:
						case t.KW_SORT:
						case t.KW_LOAD:
						case t.KW_EXPORT:
						case t.KW_REPLICATION:
						case t.KW_METADATA:
						case t.KW_DATA:
						case t.KW_INPATH:
						case t.KW_CHANGE:
						case t.KW_FIRST:
						case t.KW_AFTER:
						case t.KW_RENAME:
						case t.KW_COMMENT:
						case t.KW_TINYINT:
						case t.KW_DATETIME:
						case t.KW_ZONE:
						case t.KW_STRING:
						case t.KW_STRUCT:
						case t.KW_UNIONTYPE:
						case t.KW_PARTITIONED:
						case t.KW_CLUSTERED:
						case t.KW_SORTED:
						case t.KW_BUCKETS:
						case t.KW_FORMAT:
						case t.KW_DELIMITED:
						case t.KW_FIELDS:
						case t.KW_TERMINATED:
						case t.KW_ESCAPED:
						case t.KW_COLLECTION:
						case t.KW_ITEMS:
						case t.KW_KEYS:
						case t.KW_KEY_TYPE:
						case t.KW_KILL:
						case t.KW_LINES:
						case t.KW_STORED:
						case t.KW_FILEFORMAT:
						case t.KW_INPUTFORMAT:
						case t.KW_OUTPUTFORMAT:
						case t.KW_INPUTDRIVER:
						case t.KW_OUTPUTDRIVER:
						case t.KW_ENABLE:
						case t.KW_DISABLE:
						case t.KW_LOCATION:
						case t.KW_BUCKET:
						case t.KW_ADD:
						case t.KW_REPLACE:
						case t.KW_TEMPORARY:
						case t.KW_FILE:
						case t.KW_JAR:
						case t.KW_EXPLAIN:
						case t.KW_FORMATTED:
						case t.KW_DEPENDENCY:
						case t.KW_LOGICAL:
						case t.KW_SERDE:
						case t.KW_DEFERRED:
						case t.KW_SERDEPROPERTIES:
						case t.KW_DBPROPERTIES:
						case t.KW_LIMIT:
						case t.KW_OFFSET:
						case t.KW_UNSET:
						case t.KW_TBLPROPERTIES:
						case t.KW_IDXPROPERTIES:
						case t.KW_VALUE_TYPE:
						case t.KW_ELEM_TYPE:
						case t.KW_DEFINED:
						case t.KW_MAPJOIN:
						case t.KW_STREAMTABLE:
						case t.KW_CLUSTERSTATUS:
						case t.KW_UTC:
						case t.KW_UTCTIMESTAMP:
						case t.KW_LONG:
						case t.KW_PLUS:
						case t.KW_VIEW:
						case t.KW_VIEWS:
						case t.KW_DATABASES:
						case t.KW_MATERIALIZED:
						case t.KW_SCHEMA:
						case t.KW_SCHEMAS:
						case t.KW_SSL:
						case t.KW_UNDO:
						case t.KW_LOCK:
						case t.KW_LOCKS:
						case t.KW_UNLOCK:
						case t.KW_SHARED:
						case t.KW_EXCLUSIVE:
						case t.KW_UNSIGNED:
						case t.KW_WHILE:
						case t.KW_READ:
						case t.KW_PURGE:
						case t.KW_ANALYZE:
						case t.KW_BEFORE:
						case t.KW_CONTINUE:
						case t.KW_RECORDREADER:
						case t.KW_RECORDWRITER:
						case t.KW_SEMI:
						case t.KW_TOUCH:
						case t.KW_ARCHIVE:
						case t.KW_UNARCHIVE:
						case t.KW_COMPUTE:
						case t.KW_STATISTICS:
						case t.KW_USE:
						case t.KW_OPTION:
						case t.KW_CONCATENATE:
						case t.KW_SHOW_DATABASE:
						case t.KW_RESTRICT:
						case t.KW_CASCADE:
						case t.KW_SKEWED:
						case t.KW_DIRECTORIES:
						case t.KW_SETS:
						case t.KW_NOSCAN:
						case t.KW_ROLE:
						case t.KW_ROLES:
						case t.KW_URI:
						case t.KW_SERVER:
						case t.KW_ADMIN:
						case t.KW_OWNER:
						case t.KW_PRINCIPALS:
						case t.KW_COMPACT:
						case t.KW_COMPACTIONS:
						case t.KW_TRANSACTIONS:
						case t.KW_REWRITE:
						case t.KW_REOPTIMIZATION:
						case t.KW_RELOAD:
						case t.KW_YEAR:
						case t.KW_QUERY:
						case t.KW_QUARTER:
						case t.KW_MONTH:
						case t.KW_WEEK:
						case t.KW_DAY:
						case t.KW_DOW:
						case t.KW_HOUR:
						case t.KW_MINUTE:
						case t.KW_SECOND:
						case t.KW_TRANSACTION:
						case t.KW_WORK:
						case t.KW_WRITE:
						case t.KW_ISOLATION:
						case t.KW_LEVEL:
						case t.KW_SNAPSHOT:
						case t.KW_AUTOCOMMIT:
						case t.KW_CACHE:
						case t.KW_ENFORCED:
						case t.KW_VALIDATE:
						case t.KW_NOVALIDATE:
						case t.KW_RELY:
						case t.KW_NORELY:
						case t.KW_KEY:
						case t.KW_ABORT:
						case t.KW_MATCHED:
						case t.KW_REPL:
						case t.KW_DUMP:
						case t.KW_STATUS:
						case t.KW_VECTORIZATION:
						case t.KW_SUMMARY:
						case t.KW_OPERATOR:
						case t.KW_EXPRESSION:
						case t.KW_DETAIL:
						case t.KW_WAIT:
						case t.KW_RESOURCE:
						case t.KW_PLAN:
						case t.KW_QUERY_PARALLELISM:
						case t.KW_PLANS:
						case t.KW_ACTIVATE:
						case t.KW_DEFAULT:
						case t.KW_CHECK:
						case t.KW_POOL:
						case t.KW_MOVE:
						case t.KW_DO:
						case t.KW_ALLOC_FRACTION:
						case t.KW_SCHEDULING_POLICY:
						case t.KW_PATH:
						case t.KW_MAPPING:
						case t.KW_WORKLOAD:
						case t.KW_MANAGEMENT:
						case t.KW_ACTIVE:
						case t.KW_UNMANAGED:
						case t.KW_DELTA:
						case t.KW_CSV:
						case t.KW_JSON:
						case t.KW_BLOOMFILTER:
						case t.StringLiteral:
						case t.Identifier:
							(this.state = 1847), this.showStmtIdentifier();
							break;
						case t.SEMICOLON:
							break;
						default:
							break;
					}
					break;
				case 6:
					switch (
						(this.enterOuterAlt(u, 6),
						(this.state = 1850),
						this.match(t.KW_SHOW),
						(this.state = 1851),
						this.match(t.KW_FUNCTIONS),
						(this.state = 1855),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_LIKE:
							(this.state = 1852),
								this.match(t.KW_LIKE),
								(this.state = 1853),
								this.showFunctionIdentifier();
							break;
						case t.KW_ASC:
						case t.KW_DESC:
						case t.KW_NULLS:
						case t.KW_LAST:
						case t.KW_OVERWRITE:
						case t.KW_PARTITIONS:
						case t.KW_TABLES:
						case t.KW_COLUMNS:
						case t.KW_INDEX:
						case t.KW_INDEXES:
						case t.KW_REBUILD:
						case t.KW_FUNCTIONS:
						case t.KW_SHOW:
						case t.KW_MSCK:
						case t.KW_REPAIR:
						case t.KW_DIRECTORY:
						case t.KW_CLUSTER:
						case t.KW_DISTRIBUTE:
						case t.KW_SORT:
						case t.KW_LOAD:
						case t.KW_EXPORT:
						case t.KW_REPLICATION:
						case t.KW_METADATA:
						case t.KW_DATA:
						case t.KW_INPATH:
						case t.KW_CHANGE:
						case t.KW_FIRST:
						case t.KW_AFTER:
						case t.KW_RENAME:
						case t.KW_COMMENT:
						case t.KW_TINYINT:
						case t.KW_DATETIME:
						case t.KW_ZONE:
						case t.KW_STRING:
						case t.KW_STRUCT:
						case t.KW_UNIONTYPE:
						case t.KW_PARTITIONED:
						case t.KW_CLUSTERED:
						case t.KW_SORTED:
						case t.KW_BUCKETS:
						case t.KW_FORMAT:
						case t.KW_DELIMITED:
						case t.KW_FIELDS:
						case t.KW_TERMINATED:
						case t.KW_ESCAPED:
						case t.KW_COLLECTION:
						case t.KW_ITEMS:
						case t.KW_KEYS:
						case t.KW_KEY_TYPE:
						case t.KW_KILL:
						case t.KW_LINES:
						case t.KW_STORED:
						case t.KW_FILEFORMAT:
						case t.KW_INPUTFORMAT:
						case t.KW_OUTPUTFORMAT:
						case t.KW_INPUTDRIVER:
						case t.KW_OUTPUTDRIVER:
						case t.KW_ENABLE:
						case t.KW_DISABLE:
						case t.KW_LOCATION:
						case t.KW_BUCKET:
						case t.KW_ADD:
						case t.KW_REPLACE:
						case t.KW_TEMPORARY:
						case t.KW_FILE:
						case t.KW_JAR:
						case t.KW_EXPLAIN:
						case t.KW_FORMATTED:
						case t.KW_DEPENDENCY:
						case t.KW_LOGICAL:
						case t.KW_SERDE:
						case t.KW_DEFERRED:
						case t.KW_SERDEPROPERTIES:
						case t.KW_DBPROPERTIES:
						case t.KW_LIMIT:
						case t.KW_OFFSET:
						case t.KW_UNSET:
						case t.KW_TBLPROPERTIES:
						case t.KW_IDXPROPERTIES:
						case t.KW_VALUE_TYPE:
						case t.KW_ELEM_TYPE:
						case t.KW_DEFINED:
						case t.KW_MAPJOIN:
						case t.KW_STREAMTABLE:
						case t.KW_CLUSTERSTATUS:
						case t.KW_UTC:
						case t.KW_UTCTIMESTAMP:
						case t.KW_LONG:
						case t.KW_PLUS:
						case t.KW_VIEW:
						case t.KW_VIEWS:
						case t.KW_DATABASES:
						case t.KW_MATERIALIZED:
						case t.KW_SCHEMA:
						case t.KW_SCHEMAS:
						case t.KW_SSL:
						case t.KW_UNDO:
						case t.KW_LOCK:
						case t.KW_LOCKS:
						case t.KW_UNLOCK:
						case t.KW_SHARED:
						case t.KW_EXCLUSIVE:
						case t.KW_UNSIGNED:
						case t.KW_WHILE:
						case t.KW_READ:
						case t.KW_PURGE:
						case t.KW_ANALYZE:
						case t.KW_BEFORE:
						case t.KW_CONTINUE:
						case t.KW_RECORDREADER:
						case t.KW_RECORDWRITER:
						case t.KW_SEMI:
						case t.KW_TOUCH:
						case t.KW_ARCHIVE:
						case t.KW_UNARCHIVE:
						case t.KW_COMPUTE:
						case t.KW_STATISTICS:
						case t.KW_USE:
						case t.KW_OPTION:
						case t.KW_CONCATENATE:
						case t.KW_SHOW_DATABASE:
						case t.KW_RESTRICT:
						case t.KW_CASCADE:
						case t.KW_SKEWED:
						case t.KW_DIRECTORIES:
						case t.KW_SETS:
						case t.KW_NOSCAN:
						case t.KW_ROLE:
						case t.KW_ROLES:
						case t.KW_URI:
						case t.KW_SERVER:
						case t.KW_ADMIN:
						case t.KW_OWNER:
						case t.KW_PRINCIPALS:
						case t.KW_COMPACT:
						case t.KW_COMPACTIONS:
						case t.KW_TRANSACTIONS:
						case t.KW_REWRITE:
						case t.KW_REOPTIMIZATION:
						case t.KW_RELOAD:
						case t.KW_YEAR:
						case t.KW_QUERY:
						case t.KW_QUARTER:
						case t.KW_MONTH:
						case t.KW_WEEK:
						case t.KW_DAY:
						case t.KW_DOW:
						case t.KW_HOUR:
						case t.KW_MINUTE:
						case t.KW_SECOND:
						case t.KW_TRANSACTION:
						case t.KW_WORK:
						case t.KW_WRITE:
						case t.KW_ISOLATION:
						case t.KW_LEVEL:
						case t.KW_SNAPSHOT:
						case t.KW_AUTOCOMMIT:
						case t.KW_CACHE:
						case t.KW_ENFORCED:
						case t.KW_VALIDATE:
						case t.KW_NOVALIDATE:
						case t.KW_RELY:
						case t.KW_NORELY:
						case t.KW_KEY:
						case t.KW_ABORT:
						case t.KW_MATCHED:
						case t.KW_REPL:
						case t.KW_DUMP:
						case t.KW_STATUS:
						case t.KW_VECTORIZATION:
						case t.KW_SUMMARY:
						case t.KW_OPERATOR:
						case t.KW_EXPRESSION:
						case t.KW_DETAIL:
						case t.KW_WAIT:
						case t.KW_RESOURCE:
						case t.KW_PLAN:
						case t.KW_QUERY_PARALLELISM:
						case t.KW_PLANS:
						case t.KW_ACTIVATE:
						case t.KW_DEFAULT:
						case t.KW_CHECK:
						case t.KW_POOL:
						case t.KW_MOVE:
						case t.KW_DO:
						case t.KW_ALLOC_FRACTION:
						case t.KW_SCHEDULING_POLICY:
						case t.KW_PATH:
						case t.KW_MAPPING:
						case t.KW_WORKLOAD:
						case t.KW_MANAGEMENT:
						case t.KW_ACTIVE:
						case t.KW_UNMANAGED:
						case t.KW_DELTA:
						case t.KW_CSV:
						case t.KW_JSON:
						case t.KW_BLOOMFILTER:
						case t.StringLiteral:
						case t.Identifier:
							(this.state = 1854), this.showFunctionIdentifier();
							break;
						case t.SEMICOLON:
							break;
						default:
							break;
					}
					break;
				case 7:
					this.enterOuterAlt(u, 7),
						(this.state = 1857),
						this.match(t.KW_SHOW),
						(this.state = 1858),
						this.match(t.KW_PARTITIONS),
						(this.state = 1859),
						this.tableName(),
						(this.state = 1861),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_PARTITION && ((this.state = 1860), this.partitionSpec());
					break;
				case 8:
					switch (
						(this.enterOuterAlt(u, 8),
						(this.state = 1863),
						this.match(t.KW_SHOW),
						(this.state = 1864),
						this.match(t.KW_CREATE),
						(this.state = 1869),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_DATABASE:
						case t.KW_SCHEMA:
							(this.state = 1865),
								(e = this._input.LA(1)),
								e === t.KW_DATABASE || e === t.KW_SCHEMA
									? (this._errHandler.reportMatch(this), this.consume())
									: this._errHandler.recoverInline(this),
								(this.state = 1866),
								this.identifier();
							break;
						case t.KW_TABLE:
							(this.state = 1867), this.match(t.KW_TABLE), (this.state = 1868), this.tableName();
							break;
						default:
							throw new s.error.NoViableAltException(this);
					}
					break;
				case 9:
					this.enterOuterAlt(u, 9),
						(this.state = 1871),
						this.match(t.KW_SHOW),
						(this.state = 1872),
						this.match(t.KW_TABLE),
						(this.state = 1873),
						this.match(t.KW_EXTENDED),
						(this.state = 1876),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_FROM || e === t.KW_IN) &&
							((this.state = 1874),
							(e = this._input.LA(1)),
							e === t.KW_FROM || e === t.KW_IN
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 1875),
							this.identifier()),
						(this.state = 1878),
						this.match(t.KW_LIKE),
						(this.state = 1879),
						this.showStmtIdentifier(),
						(this.state = 1881),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_PARTITION && ((this.state = 1880), this.partitionSpec());
					break;
				case 10:
					this.enterOuterAlt(u, 10),
						(this.state = 1883),
						this.match(t.KW_SHOW),
						(this.state = 1884),
						this.match(t.KW_TBLPROPERTIES),
						(this.state = 1885),
						this.tableName(),
						(this.state = 1889),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.LPAREN &&
							((this.state = 1886),
							this.match(t.LPAREN),
							(this.state = 1887),
							this.match(t.StringLiteral),
							(this.state = 1888),
							this.match(t.RPAREN));
					break;
				case 11:
					this.enterOuterAlt(u, 11),
						(this.state = 1891),
						this.match(t.KW_SHOW),
						(this.state = 1892),
						this.match(t.KW_LOCKS),
						(this.state = 1904),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 147, this._ctx);
					switch (i) {
						case 1:
							(this.state = 1893),
								(e = this._input.LA(1)),
								e === t.KW_DATABASE || e === t.KW_SCHEMA
									? (this._errHandler.reportMatch(this), this.consume())
									: this._errHandler.recoverInline(this),
								(this.state = 1894),
								this.identifier(),
								(this.state = 1896),
								this._errHandler.sync(this),
								(e = this._input.LA(1)),
								e === t.KW_EXTENDED && ((this.state = 1895), this.match(t.KW_EXTENDED));
							break;
						case 2:
							(this.state = 1899),
								this._errHandler.sync(this),
								(e = this._input.LA(1)),
								(((e & -32) == 0 &&
									((1 << e) &
										((1 << t.KW_ASC) |
											(1 << t.KW_DESC) |
											(1 << t.KW_NULLS) |
											(1 << t.KW_LAST) |
											(1 << t.KW_OVERWRITE))) !==
										0) ||
									(((e - 36) & -32) == 0 &&
										((1 << (e - 36)) &
											((1 << (t.KW_PARTITIONS - 36)) |
												(1 << (t.KW_TABLES - 36)) |
												(1 << (t.KW_COLUMNS - 36)) |
												(1 << (t.KW_INDEX - 36)) |
												(1 << (t.KW_INDEXES - 36)) |
												(1 << (t.KW_REBUILD - 36)) |
												(1 << (t.KW_FUNCTIONS - 36)) |
												(1 << (t.KW_SHOW - 36)) |
												(1 << (t.KW_MSCK - 36)) |
												(1 << (t.KW_REPAIR - 36)) |
												(1 << (t.KW_DIRECTORY - 36)) |
												(1 << (t.KW_CLUSTER - 36)) |
												(1 << (t.KW_DISTRIBUTE - 36)) |
												(1 << (t.KW_SORT - 36)) |
												(1 << (t.KW_LOAD - 36)) |
												(1 << (t.KW_EXPORT - 36)) |
												(1 << (t.KW_REPLICATION - 36)) |
												(1 << (t.KW_METADATA - 36)) |
												(1 << (t.KW_DATA - 36)) |
												(1 << (t.KW_INPATH - 36)))) !==
											0) ||
									(((e - 68) & -32) == 0 &&
										((1 << (e - 68)) &
											((1 << (t.KW_CHANGE - 68)) |
												(1 << (t.KW_FIRST - 68)) |
												(1 << (t.KW_AFTER - 68)) |
												(1 << (t.KW_RENAME - 68)) |
												(1 << (t.KW_COMMENT - 68)) |
												(1 << (t.KW_TINYINT - 68)) |
												(1 << (t.KW_DATETIME - 68)) |
												(1 << (t.KW_ZONE - 68)) |
												(1 << (t.KW_STRING - 68)) |
												(1 << (t.KW_STRUCT - 68)) |
												(1 << (t.KW_UNIONTYPE - 68)))) !==
											0) ||
									(((e - 101) & -32) == 0 &&
										((1 << (e - 101)) &
											((1 << (t.KW_PARTITIONED - 101)) |
												(1 << (t.KW_CLUSTERED - 101)) |
												(1 << (t.KW_SORTED - 101)) |
												(1 << (t.KW_BUCKETS - 101)) |
												(1 << (t.KW_FORMAT - 101)) |
												(1 << (t.KW_DELIMITED - 101)) |
												(1 << (t.KW_FIELDS - 101)) |
												(1 << (t.KW_TERMINATED - 101)) |
												(1 << (t.KW_ESCAPED - 101)) |
												(1 << (t.KW_COLLECTION - 101)) |
												(1 << (t.KW_ITEMS - 101)) |
												(1 << (t.KW_KEYS - 101)) |
												(1 << (t.KW_KEY_TYPE - 101)) |
												(1 << (t.KW_KILL - 101)) |
												(1 << (t.KW_LINES - 101)) |
												(1 << (t.KW_STORED - 101)) |
												(1 << (t.KW_FILEFORMAT - 101)) |
												(1 << (t.KW_INPUTFORMAT - 101)) |
												(1 << (t.KW_OUTPUTFORMAT - 101)) |
												(1 << (t.KW_INPUTDRIVER - 101)) |
												(1 << (t.KW_OUTPUTDRIVER - 101)) |
												(1 << (t.KW_ENABLE - 101)) |
												(1 << (t.KW_DISABLE - 101)) |
												(1 << (t.KW_LOCATION - 101)) |
												(1 << (t.KW_BUCKET - 101)))) !==
											0) ||
									(((e - 134) & -32) == 0 &&
										((1 << (e - 134)) &
											((1 << (t.KW_ADD - 134)) |
												(1 << (t.KW_REPLACE - 134)) |
												(1 << (t.KW_TEMPORARY - 134)) |
												(1 << (t.KW_FILE - 134)) |
												(1 << (t.KW_JAR - 134)) |
												(1 << (t.KW_EXPLAIN - 134)) |
												(1 << (t.KW_FORMATTED - 134)) |
												(1 << (t.KW_DEPENDENCY - 134)) |
												(1 << (t.KW_LOGICAL - 134)) |
												(1 << (t.KW_SERDE - 134)) |
												(1 << (t.KW_DEFERRED - 134)) |
												(1 << (t.KW_SERDEPROPERTIES - 134)) |
												(1 << (t.KW_DBPROPERTIES - 134)) |
												(1 << (t.KW_LIMIT - 134)) |
												(1 << (t.KW_OFFSET - 134)) |
												(1 << (t.KW_UNSET - 134)) |
												(1 << (t.KW_TBLPROPERTIES - 134)) |
												(1 << (t.KW_IDXPROPERTIES - 134)) |
												(1 << (t.KW_VALUE_TYPE - 134)) |
												(1 << (t.KW_ELEM_TYPE - 134)) |
												(1 << (t.KW_DEFINED - 134)))) !==
											0) ||
									(((e - 167) & -32) == 0 &&
										((1 << (e - 167)) &
											((1 << (t.KW_MAPJOIN - 167)) |
												(1 << (t.KW_STREAMTABLE - 167)) |
												(1 << (t.KW_CLUSTERSTATUS - 167)) |
												(1 << (t.KW_UTC - 167)) |
												(1 << (t.KW_UTCTIMESTAMP - 167)) |
												(1 << (t.KW_LONG - 167)) |
												(1 << (t.KW_PLUS - 167)) |
												(1 << (t.KW_VIEW - 167)) |
												(1 << (t.KW_VIEWS - 167)) |
												(1 << (t.KW_DATABASES - 167)) |
												(1 << (t.KW_MATERIALIZED - 167)) |
												(1 << (t.KW_SCHEMA - 167)) |
												(1 << (t.KW_SCHEMAS - 167)) |
												(1 << (t.KW_SSL - 167)) |
												(1 << (t.KW_UNDO - 167)) |
												(1 << (t.KW_LOCK - 167)) |
												(1 << (t.KW_LOCKS - 167)) |
												(1 << (t.KW_UNLOCK - 167)) |
												(1 << (t.KW_SHARED - 167)) |
												(1 << (t.KW_EXCLUSIVE - 167)) |
												(1 << (t.KW_UNSIGNED - 167)) |
												(1 << (t.KW_WHILE - 167)) |
												(1 << (t.KW_READ - 167)))) !==
											0) ||
									(((e - 200) & -32) == 0 &&
										((1 << (e - 200)) &
											((1 << (t.KW_PURGE - 200)) |
												(1 << (t.KW_ANALYZE - 200)) |
												(1 << (t.KW_BEFORE - 200)) |
												(1 << (t.KW_CONTINUE - 200)) |
												(1 << (t.KW_RECORDREADER - 200)) |
												(1 << (t.KW_RECORDWRITER - 200)) |
												(1 << (t.KW_SEMI - 200)) |
												(1 << (t.KW_TOUCH - 200)) |
												(1 << (t.KW_ARCHIVE - 200)) |
												(1 << (t.KW_UNARCHIVE - 200)) |
												(1 << (t.KW_COMPUTE - 200)) |
												(1 << (t.KW_STATISTICS - 200)) |
												(1 << (t.KW_USE - 200)) |
												(1 << (t.KW_OPTION - 200)) |
												(1 << (t.KW_CONCATENATE - 200)) |
												(1 << (t.KW_SHOW_DATABASE - 200)) |
												(1 << (t.KW_RESTRICT - 200)) |
												(1 << (t.KW_CASCADE - 200)) |
												(1 << (t.KW_SKEWED - 200)) |
												(1 << (t.KW_DIRECTORIES - 200)))) !==
											0) ||
									(((e - 244) & -32) == 0 &&
										((1 << (e - 244)) &
											((1 << (t.KW_SETS - 244)) |
												(1 << (t.KW_NOSCAN - 244)) |
												(1 << (t.KW_ROLE - 244)) |
												(1 << (t.KW_ROLES - 244)) |
												(1 << (t.KW_URI - 244)) |
												(1 << (t.KW_SERVER - 244)) |
												(1 << (t.KW_ADMIN - 244)) |
												(1 << (t.KW_OWNER - 244)) |
												(1 << (t.KW_PRINCIPALS - 244)) |
												(1 << (t.KW_COMPACT - 244)) |
												(1 << (t.KW_COMPACTIONS - 244)) |
												(1 << (t.KW_TRANSACTIONS - 244)) |
												(1 << (t.KW_REWRITE - 244)) |
												(1 << (t.KW_REOPTIMIZATION - 244)) |
												(1 << (t.KW_RELOAD - 244)) |
												(1 << (t.KW_YEAR - 244)) |
												(1 << (t.KW_QUERY - 244)) |
												(1 << (t.KW_QUARTER - 244)) |
												(1 << (t.KW_MONTH - 244)) |
												(1 << (t.KW_WEEK - 244)) |
												(1 << (t.KW_DAY - 244)) |
												(1 << (t.KW_DOW - 244)) |
												(1 << (t.KW_HOUR - 244)) |
												(1 << (t.KW_MINUTE - 244)) |
												(1 << (t.KW_SECOND - 244)))) !==
											0) ||
									(((e - 277) & -32) == 0 &&
										((1 << (e - 277)) &
											((1 << (t.KW_TRANSACTION - 277)) |
												(1 << (t.KW_WORK - 277)) |
												(1 << (t.KW_WRITE - 277)) |
												(1 << (t.KW_ISOLATION - 277)) |
												(1 << (t.KW_LEVEL - 277)) |
												(1 << (t.KW_SNAPSHOT - 277)) |
												(1 << (t.KW_AUTOCOMMIT - 277)) |
												(1 << (t.KW_CACHE - 277)) |
												(1 << (t.KW_ENFORCED - 277)) |
												(1 << (t.KW_VALIDATE - 277)) |
												(1 << (t.KW_NOVALIDATE - 277)) |
												(1 << (t.KW_RELY - 277)) |
												(1 << (t.KW_NORELY - 277)) |
												(1 << (t.KW_KEY - 277)) |
												(1 << (t.KW_ABORT - 277)) |
												(1 << (t.KW_MATCHED - 277)) |
												(1 << (t.KW_REPL - 277)) |
												(1 << (t.KW_DUMP - 277)) |
												(1 << (t.KW_STATUS - 277)) |
												(1 << (t.KW_VECTORIZATION - 277)) |
												(1 << (t.KW_SUMMARY - 277)))) !==
											0) ||
									(((e - 309) & -32) == 0 &&
										((1 << (e - 309)) &
											((1 << (t.KW_OPERATOR - 309)) |
												(1 << (t.KW_EXPRESSION - 309)) |
												(1 << (t.KW_DETAIL - 309)) |
												(1 << (t.KW_WAIT - 309)) |
												(1 << (t.KW_RESOURCE - 309)) |
												(1 << (t.KW_PLAN - 309)) |
												(1 << (t.KW_QUERY_PARALLELISM - 309)) |
												(1 << (t.KW_PLANS - 309)) |
												(1 << (t.KW_ACTIVATE - 309)) |
												(1 << (t.KW_DEFAULT - 309)) |
												(1 << (t.KW_CHECK - 309)) |
												(1 << (t.KW_POOL - 309)) |
												(1 << (t.KW_MOVE - 309)) |
												(1 << (t.KW_DO - 309)) |
												(1 << (t.KW_ALLOC_FRACTION - 309)) |
												(1 << (t.KW_SCHEDULING_POLICY - 309)) |
												(1 << (t.KW_PATH - 309)) |
												(1 << (t.KW_MAPPING - 309)) |
												(1 << (t.KW_WORKLOAD - 309)) |
												(1 << (t.KW_MANAGEMENT - 309)) |
												(1 << (t.KW_ACTIVE - 309)) |
												(1 << (t.KW_UNMANAGED - 309)) |
												(1 << (t.KW_DELTA - 309)) |
												(1 << (t.KW_CSV - 309)))) !==
											0) ||
									e === t.KW_JSON ||
									e === t.KW_BLOOMFILTER ||
									e === t.Identifier) &&
									((this.state = 1898), this.partTypeExpr()),
								(this.state = 1902),
								this._errHandler.sync(this),
								(e = this._input.LA(1)),
								e === t.KW_EXTENDED && ((this.state = 1901), this.match(t.KW_EXTENDED));
							break;
					}
					break;
				case 12:
					this.enterOuterAlt(u, 12),
						(this.state = 1906),
						this.match(t.KW_SHOW),
						(this.state = 1907),
						this.match(t.KW_COMPACTIONS);
					break;
				case 13:
					this.enterOuterAlt(u, 13),
						(this.state = 1908),
						this.match(t.KW_SHOW),
						(this.state = 1909),
						this.match(t.KW_TRANSACTIONS);
					break;
				case 14:
					this.enterOuterAlt(u, 14),
						(this.state = 1910),
						this.match(t.KW_SHOW),
						(this.state = 1911),
						this.match(t.KW_CONF),
						(this.state = 1912),
						this.match(t.StringLiteral);
					break;
				case 15:
					switch (
						(this.enterOuterAlt(u, 15),
						(this.state = 1913),
						this.match(t.KW_SHOW),
						(this.state = 1914),
						this.match(t.KW_RESOURCE),
						(this.state = 1918),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_PLAN:
							(this.state = 1915), this.match(t.KW_PLAN), (this.state = 1916), this.identifier();
							break;
						case t.KW_PLANS:
							(this.state = 1917), this.match(t.KW_PLANS);
							break;
						default:
							throw new s.error.NoViableAltException(this);
					}
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function dn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_lockStatement),
			this
		);
	}
	dn.prototype = Object.create(s.ParserRuleContext.prototype);
	dn.prototype.constructor = dn;
	dn.prototype.KW_LOCK = function () {
		return this.getToken(t.KW_LOCK, 0);
	};
	dn.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	dn.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	dn.prototype.lockMode = function () {
		return this.getTypedRuleContext(To, 0);
	};
	dn.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	dn.prototype.accept = function (u) {
		return u instanceof d ? u.visitLockStatement(this) : u.visitChildren(this);
	};
	t.LockStatementContext = dn;
	t.prototype.lockStatement = function () {
		var u = new dn(this, this._ctx, this.state);
		this.enterRule(u, 208, t.RULE_lockStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1922),
				this.match(t.KW_LOCK),
				(this.state = 1923),
				this.match(t.KW_TABLE),
				(this.state = 1924),
				this.tableName(),
				(this.state = 1926),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PARTITION && ((this.state = 1925), this.partitionSpec()),
				(this.state = 1928),
				this.lockMode();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function fn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_lockDatabase),
			this
		);
	}
	fn.prototype = Object.create(s.ParserRuleContext.prototype);
	fn.prototype.constructor = fn;
	fn.prototype.KW_LOCK = function () {
		return this.getToken(t.KW_LOCK, 0);
	};
	fn.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	fn.prototype.lockMode = function () {
		return this.getTypedRuleContext(To, 0);
	};
	fn.prototype.KW_DATABASE = function () {
		return this.getToken(t.KW_DATABASE, 0);
	};
	fn.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	fn.prototype.accept = function (u) {
		return u instanceof d ? u.visitLockDatabase(this) : u.visitChildren(this);
	};
	t.LockDatabaseContext = fn;
	t.prototype.lockDatabase = function () {
		var u = new fn(this, this._ctx, this.state);
		this.enterRule(u, 210, t.RULE_lockDatabase);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1930),
				this.match(t.KW_LOCK),
				(this.state = 1931),
				(e = this._input.LA(1)),
				e === t.KW_DATABASE || e === t.KW_SCHEMA
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this),
				(this.state = 1932),
				this.identifier(),
				(this.state = 1933),
				this.lockMode();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function To(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_lockMode),
			this
		);
	}
	To.prototype = Object.create(s.ParserRuleContext.prototype);
	To.prototype.constructor = To;
	To.prototype.KW_SHARED = function () {
		return this.getToken(t.KW_SHARED, 0);
	};
	To.prototype.KW_EXCLUSIVE = function () {
		return this.getToken(t.KW_EXCLUSIVE, 0);
	};
	To.prototype.accept = function (u) {
		return u instanceof d ? u.visitLockMode(this) : u.visitChildren(this);
	};
	t.LockModeContext = To;
	t.prototype.lockMode = function () {
		var u = new To(this, this._ctx, this.state);
		this.enterRule(u, 212, t.RULE_lockMode);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1935),
				(e = this._input.LA(1)),
				e === t.KW_SHARED || e === t.KW_EXCLUSIVE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function o2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_unlockStatement),
			this
		);
	}
	o2.prototype = Object.create(s.ParserRuleContext.prototype);
	o2.prototype.constructor = o2;
	o2.prototype.KW_UNLOCK = function () {
		return this.getToken(t.KW_UNLOCK, 0);
	};
	o2.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	o2.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	o2.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	o2.prototype.accept = function (u) {
		return u instanceof d ? u.visitUnlockStatement(this) : u.visitChildren(this);
	};
	t.UnlockStatementContext = o2;
	t.prototype.unlockStatement = function () {
		var u = new o2(this, this._ctx, this.state);
		this.enterRule(u, 214, t.RULE_unlockStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1937),
				this.match(t.KW_UNLOCK),
				(this.state = 1938),
				this.match(t.KW_TABLE),
				(this.state = 1939),
				this.tableName(),
				(this.state = 1941),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PARTITION && ((this.state = 1940), this.partitionSpec());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function c2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_unlockDatabase),
			this
		);
	}
	c2.prototype = Object.create(s.ParserRuleContext.prototype);
	c2.prototype.constructor = c2;
	c2.prototype.KW_UNLOCK = function () {
		return this.getToken(t.KW_UNLOCK, 0);
	};
	c2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	c2.prototype.KW_DATABASE = function () {
		return this.getToken(t.KW_DATABASE, 0);
	};
	c2.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	c2.prototype.accept = function (u) {
		return u instanceof d ? u.visitUnlockDatabase(this) : u.visitChildren(this);
	};
	t.UnlockDatabaseContext = c2;
	t.prototype.unlockDatabase = function () {
		var u = new c2(this, this._ctx, this.state);
		this.enterRule(u, 216, t.RULE_unlockDatabase);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1943),
				this.match(t.KW_UNLOCK),
				(this.state = 1944),
				(e = this._input.LA(1)),
				e === t.KW_DATABASE || e === t.KW_SCHEMA
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this),
				(this.state = 1945),
				this.identifier();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ro(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createRoleStatement),
			this
		);
	}
	Ro.prototype = Object.create(s.ParserRuleContext.prototype);
	Ro.prototype.constructor = Ro;
	Ro.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	Ro.prototype.KW_ROLE = function () {
		return this.getToken(t.KW_ROLE, 0);
	};
	Ro.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Ro.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateRoleStatement(this) : u.visitChildren(this);
	};
	t.CreateRoleStatementContext = Ro;
	t.prototype.createRoleStatement = function () {
		var u = new Ro(this, this._ctx, this.state);
		this.enterRule(u, 218, t.RULE_createRoleStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1947),
				this.match(t.KW_CREATE),
				(this.state = 1948),
				this.match(t.KW_ROLE),
				(this.state = 1949),
				this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function mo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropRoleStatement),
			this
		);
	}
	mo.prototype = Object.create(s.ParserRuleContext.prototype);
	mo.prototype.constructor = mo;
	mo.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	mo.prototype.KW_ROLE = function () {
		return this.getToken(t.KW_ROLE, 0);
	};
	mo.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	mo.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropRoleStatement(this) : u.visitChildren(this);
	};
	t.DropRoleStatementContext = mo;
	t.prototype.dropRoleStatement = function () {
		var u = new mo(this, this._ctx, this.state);
		this.enterRule(u, 220, t.RULE_dropRoleStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1951),
				this.match(t.KW_DROP),
				(this.state = 1952),
				this.match(t.KW_ROLE),
				(this.state = 1953),
				this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $i(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_grantPrivileges),
			this
		);
	}
	$i.prototype = Object.create(s.ParserRuleContext.prototype);
	$i.prototype.constructor = $i;
	$i.prototype.KW_GRANT = function () {
		return this.getToken(t.KW_GRANT, 0);
	};
	$i.prototype.privilegeList = function () {
		return this.getTypedRuleContext(Ao, 0);
	};
	$i.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	$i.prototype.principalSpecification = function () {
		return this.getTypedRuleContext(Rn, 0);
	};
	$i.prototype.privilegeObject = function () {
		return this.getTypedRuleContext(bo, 0);
	};
	$i.prototype.withGrantOption = function () {
		return this.getTypedRuleContext(Wo, 0);
	};
	$i.prototype.accept = function (u) {
		return u instanceof d ? u.visitGrantPrivileges(this) : u.visitChildren(this);
	};
	t.GrantPrivilegesContext = $i;
	t.prototype.grantPrivileges = function () {
		var u = new $i(this, this._ctx, this.state);
		this.enterRule(u, 222, t.RULE_grantPrivileges);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1955),
				this.match(t.KW_GRANT),
				(this.state = 1956),
				this.privilegeList(),
				(this.state = 1958),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ON && ((this.state = 1957), this.privilegeObject()),
				(this.state = 1960),
				this.match(t.KW_TO),
				(this.state = 1961),
				this.principalSpecification(),
				(this.state = 1963),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH && ((this.state = 1962), this.withGrantOption());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ur(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_revokePrivileges),
			this
		);
	}
	ur.prototype = Object.create(s.ParserRuleContext.prototype);
	ur.prototype.constructor = ur;
	ur.prototype.KW_REVOKE = function () {
		return this.getToken(t.KW_REVOKE, 0);
	};
	ur.prototype.privilegeList = function () {
		return this.getTypedRuleContext(Ao, 0);
	};
	ur.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	ur.prototype.principalSpecification = function () {
		return this.getTypedRuleContext(Rn, 0);
	};
	ur.prototype.grantOptionFor = function () {
		return this.getTypedRuleContext(Ko, 0);
	};
	ur.prototype.privilegeObject = function () {
		return this.getTypedRuleContext(bo, 0);
	};
	ur.prototype.accept = function (u) {
		return u instanceof d ? u.visitRevokePrivileges(this) : u.visitChildren(this);
	};
	t.RevokePrivilegesContext = ur;
	t.prototype.revokePrivileges = function () {
		var u = new ur(this, this._ctx, this.state);
		this.enterRule(u, 224, t.RULE_revokePrivileges);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1965),
				this.match(t.KW_REVOKE),
				(this.state = 1967),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_GRANT && ((this.state = 1966), this.grantOptionFor()),
				(this.state = 1969),
				this.privilegeList(),
				(this.state = 1971),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ON && ((this.state = 1970), this.privilegeObject()),
				(this.state = 1973),
				this.match(t.KW_FROM),
				(this.state = 1974),
				this.principalSpecification();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ze(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_grantRole),
			this
		);
	}
	ze.prototype = Object.create(s.ParserRuleContext.prototype);
	ze.prototype.constructor = ze;
	ze.prototype.KW_GRANT = function () {
		return this.getToken(t.KW_GRANT, 0);
	};
	ze.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	ze.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	ze.prototype.principalSpecification = function () {
		return this.getTypedRuleContext(Rn, 0);
	};
	ze.prototype.KW_ROLE = function () {
		return this.getToken(t.KW_ROLE, 0);
	};
	ze.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	ze.prototype.withAdminOption = function () {
		return this.getTypedRuleContext(Oo, 0);
	};
	ze.prototype.accept = function (u) {
		return u instanceof d ? u.visitGrantRole(this) : u.visitChildren(this);
	};
	t.GrantRoleContext = ze;
	t.prototype.grantRole = function () {
		var u = new ze(this, this._ctx, this.state);
		this.enterRule(u, 226, t.RULE_grantRole);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1976),
				this.match(t.KW_GRANT),
				(this.state = 1978),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 156, this._ctx);
			for (
				i === 1 && ((this.state = 1977), this.match(t.KW_ROLE)),
					this.state = 1980,
					this.identifier(),
					this.state = 1985,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 1981),
					this.match(t.COMMA),
					(this.state = 1982),
					this.identifier(),
					(this.state = 1987),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 1988),
				this.match(t.KW_TO),
				(this.state = 1989),
				this.principalSpecification(),
				(this.state = 1991),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH && ((this.state = 1990), this.withAdminOption());
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $e(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_revokeRole),
			this
		);
	}
	$e.prototype = Object.create(s.ParserRuleContext.prototype);
	$e.prototype.constructor = $e;
	$e.prototype.KW_REVOKE = function () {
		return this.getToken(t.KW_REVOKE, 0);
	};
	$e.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	$e.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	$e.prototype.principalSpecification = function () {
		return this.getTypedRuleContext(Rn, 0);
	};
	$e.prototype.adminOptionFor = function () {
		return this.getTypedRuleContext(xo, 0);
	};
	$e.prototype.KW_ROLE = function () {
		return this.getToken(t.KW_ROLE, 0);
	};
	$e.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	$e.prototype.accept = function (u) {
		return u instanceof d ? u.visitRevokeRole(this) : u.visitChildren(this);
	};
	t.RevokeRoleContext = $e;
	t.prototype.revokeRole = function () {
		var u = new $e(this, this._ctx, this.state);
		this.enterRule(u, 228, t.RULE_revokeRole);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 1993),
				this.match(t.KW_REVOKE),
				(this.state = 1995),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 159, this._ctx);
			i === 1 && ((this.state = 1994), this.adminOptionFor()), (this.state = 1998), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 160, this._ctx);
			for (
				i === 1 && ((this.state = 1997), this.match(t.KW_ROLE)),
					this.state = 2e3,
					this.identifier(),
					this.state = 2005,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2001),
					this.match(t.COMMA),
					(this.state = 2002),
					this.identifier(),
					(this.state = 2007),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 2008), this.match(t.KW_FROM), (this.state = 2009), this.principalSpecification();
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function p2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_showRoleGrants),
			this
		);
	}
	p2.prototype = Object.create(s.ParserRuleContext.prototype);
	p2.prototype.constructor = p2;
	p2.prototype.KW_SHOW = function () {
		return this.getToken(t.KW_SHOW, 0);
	};
	p2.prototype.KW_ROLE = function () {
		return this.getToken(t.KW_ROLE, 0);
	};
	p2.prototype.KW_GRANT = function () {
		return this.getToken(t.KW_GRANT, 0);
	};
	p2.prototype.principalName = function () {
		return this.getTypedRuleContext(ot, 0);
	};
	p2.prototype.accept = function (u) {
		return u instanceof d ? u.visitShowRoleGrants(this) : u.visitChildren(this);
	};
	t.ShowRoleGrantsContext = p2;
	t.prototype.showRoleGrants = function () {
		var u = new p2(this, this._ctx, this.state);
		this.enterRule(u, 230, t.RULE_showRoleGrants);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2011),
				this.match(t.KW_SHOW),
				(this.state = 2012),
				this.match(t.KW_ROLE),
				(this.state = 2013),
				this.match(t.KW_GRANT),
				(this.state = 2014),
				this.principalName();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function vc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_showRoles),
			this
		);
	}
	vc.prototype = Object.create(s.ParserRuleContext.prototype);
	vc.prototype.constructor = vc;
	vc.prototype.KW_SHOW = function () {
		return this.getToken(t.KW_SHOW, 0);
	};
	vc.prototype.KW_ROLES = function () {
		return this.getToken(t.KW_ROLES, 0);
	};
	vc.prototype.accept = function (u) {
		return u instanceof d ? u.visitShowRoles(this) : u.visitChildren(this);
	};
	t.ShowRolesContext = vc;
	t.prototype.showRoles = function () {
		var u = new vc(this, this._ctx, this.state);
		this.enterRule(u, 232, t.RULE_showRoles);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2016),
				this.match(t.KW_SHOW),
				(this.state = 2017),
				this.match(t.KW_ROLES);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function yo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_showCurrentRole),
			this
		);
	}
	yo.prototype = Object.create(s.ParserRuleContext.prototype);
	yo.prototype.constructor = yo;
	yo.prototype.KW_SHOW = function () {
		return this.getToken(t.KW_SHOW, 0);
	};
	yo.prototype.KW_CURRENT = function () {
		return this.getToken(t.KW_CURRENT, 0);
	};
	yo.prototype.KW_ROLES = function () {
		return this.getToken(t.KW_ROLES, 0);
	};
	yo.prototype.accept = function (u) {
		return u instanceof d ? u.visitShowCurrentRole(this) : u.visitChildren(this);
	};
	t.ShowCurrentRoleContext = yo;
	t.prototype.showCurrentRole = function () {
		var u = new yo(this, this._ctx, this.state);
		this.enterRule(u, 234, t.RULE_showCurrentRole);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2019),
				this.match(t.KW_SHOW),
				(this.state = 2020),
				this.match(t.KW_CURRENT),
				(this.state = 2021),
				this.match(t.KW_ROLES);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _n(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_setRole),
			this
		);
	}
	_n.prototype = Object.create(s.ParserRuleContext.prototype);
	_n.prototype.constructor = _n;
	_n.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	_n.prototype.KW_ROLE = function () {
		return this.getToken(t.KW_ROLE, 0);
	};
	_n.prototype.KW_ALL = function () {
		return this.getToken(t.KW_ALL, 0);
	};
	_n.prototype.KW_NONE = function () {
		return this.getToken(t.KW_NONE, 0);
	};
	_n.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	_n.prototype.accept = function (u) {
		return u instanceof d ? u.visitSetRole(this) : u.visitChildren(this);
	};
	t.SetRoleContext = _n;
	t.prototype.setRole = function () {
		var u = new _n(this, this._ctx, this.state);
		this.enterRule(u, 236, t.RULE_setRole);
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 2023),
				this.match(t.KW_SET),
				(this.state = 2024),
				this.match(t.KW_ROLE),
				(this.state = 2028),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_ALL:
					(this.state = 2025), this.match(t.KW_ALL);
					break;
				case t.KW_NONE:
					(this.state = 2026), this.match(t.KW_NONE);
					break;
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.Identifier:
					(this.state = 2027), this.identifier();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function En(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_showGrants),
			this
		);
	}
	En.prototype = Object.create(s.ParserRuleContext.prototype);
	En.prototype.constructor = En;
	En.prototype.KW_SHOW = function () {
		return this.getToken(t.KW_SHOW, 0);
	};
	En.prototype.KW_GRANT = function () {
		return this.getToken(t.KW_GRANT, 0);
	};
	En.prototype.principalName = function () {
		return this.getTypedRuleContext(ot, 0);
	};
	En.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	En.prototype.privilegeIncludeColObject = function () {
		return this.getTypedRuleContext(wc, 0);
	};
	En.prototype.accept = function (u) {
		return u instanceof d ? u.visitShowGrants(this) : u.visitChildren(this);
	};
	t.ShowGrantsContext = En;
	t.prototype.showGrants = function () {
		var u = new En(this, this._ctx, this.state);
		this.enterRule(u, 238, t.RULE_showGrants);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2030),
				this.match(t.KW_SHOW),
				(this.state = 2031),
				this.match(t.KW_GRANT),
				(this.state = 2033),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_GROUP || e === t.KW_USER || e === t.KW_ROLE) && ((this.state = 2032), this.principalName()),
				(this.state = 2037),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ON &&
					((this.state = 2035), this.match(t.KW_ON), (this.state = 2036), this.privilegeIncludeColObject());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Co(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_showRolePrincipals),
			this
		);
	}
	Co.prototype = Object.create(s.ParserRuleContext.prototype);
	Co.prototype.constructor = Co;
	Co.prototype.KW_SHOW = function () {
		return this.getToken(t.KW_SHOW, 0);
	};
	Co.prototype.KW_PRINCIPALS = function () {
		return this.getToken(t.KW_PRINCIPALS, 0);
	};
	Co.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Co.prototype.accept = function (u) {
		return u instanceof d ? u.visitShowRolePrincipals(this) : u.visitChildren(this);
	};
	t.ShowRolePrincipalsContext = Co;
	t.prototype.showRolePrincipals = function () {
		var u = new Co(this, this._ctx, this.state);
		this.enterRule(u, 240, t.RULE_showRolePrincipals);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2039),
				this.match(t.KW_SHOW),
				(this.state = 2040),
				this.match(t.KW_PRINCIPALS),
				(this.state = 2041),
				this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function wc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_privilegeIncludeColObject),
			this
		);
	}
	wc.prototype = Object.create(s.ParserRuleContext.prototype);
	wc.prototype.constructor = wc;
	wc.prototype.KW_ALL = function () {
		return this.getToken(t.KW_ALL, 0);
	};
	wc.prototype.privObjectCols = function () {
		return this.getTypedRuleContext(Ru, 0);
	};
	wc.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrivilegeIncludeColObject(this) : u.visitChildren(this);
	};
	t.PrivilegeIncludeColObjectContext = wc;
	t.prototype.privilegeIncludeColObject = function () {
		var u = new wc(this, this._ctx, this.state);
		this.enterRule(u, 242, t.RULE_privilegeIncludeColObject);
		try {
			switch (((this.state = 2045), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ALL:
					this.enterOuterAlt(u, 1), (this.state = 2043), this.match(t.KW_ALL);
					break;
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLE:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASE:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.Identifier:
					this.enterOuterAlt(u, 2), (this.state = 2044), this.privObjectCols();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function bo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_privilegeObject),
			this
		);
	}
	bo.prototype = Object.create(s.ParserRuleContext.prototype);
	bo.prototype.constructor = bo;
	bo.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	bo.prototype.privObject = function () {
		return this.getTypedRuleContext(St, 0);
	};
	bo.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrivilegeObject(this) : u.visitChildren(this);
	};
	t.PrivilegeObjectContext = bo;
	t.prototype.privilegeObject = function () {
		var u = new bo(this, this._ctx, this.state);
		this.enterRule(u, 244, t.RULE_privilegeObject);
		try {
			this.enterOuterAlt(u, 1), (this.state = 2047), this.match(t.KW_ON), (this.state = 2048), this.privObject();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function St(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_privObject),
			this
		);
	}
	St.prototype = Object.create(s.ParserRuleContext.prototype);
	St.prototype.constructor = St;
	St.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	St.prototype.KW_DATABASE = function () {
		return this.getToken(t.KW_DATABASE, 0);
	};
	St.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	St.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	St.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	St.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	St.prototype.KW_URI = function () {
		return this.getToken(t.KW_URI, 0);
	};
	St.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	St.prototype.KW_SERVER = function () {
		return this.getToken(t.KW_SERVER, 0);
	};
	St.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrivObject(this) : u.visitChildren(this);
	};
	t.PrivObjectContext = St;
	t.prototype.privObject = function () {
		var u = new St(this, this._ctx, this.state);
		this.enterRule(u, 246, t.RULE_privObject);
		var e = 0;
		try {
			(this.state = 2063), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 168, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 2050),
						(e = this._input.LA(1)),
						e === t.KW_DATABASE || e === t.KW_SCHEMA
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 2051),
						this.identifier();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 2053),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_TABLE && ((this.state = 2052), this.match(t.KW_TABLE)),
						(this.state = 2055),
						this.tableName(),
						(this.state = 2057),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_PARTITION && ((this.state = 2056), this.partitionSpec());
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 2059),
						this.match(t.KW_URI),
						(this.state = 2060),
						this.match(t.StringLiteral);
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 2061),
						this.match(t.KW_SERVER),
						(this.state = 2062),
						this.identifier();
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ru(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_privObjectCols),
			this
		);
	}
	Ru.prototype = Object.create(s.ParserRuleContext.prototype);
	Ru.prototype.constructor = Ru;
	Ru.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Ru.prototype.KW_DATABASE = function () {
		return this.getToken(t.KW_DATABASE, 0);
	};
	Ru.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	Ru.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	Ru.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	Ru.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Ru.prototype.columnNameList = function () {
		return this.getTypedRuleContext(pt, 0);
	};
	Ru.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Ru.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	Ru.prototype.KW_URI = function () {
		return this.getToken(t.KW_URI, 0);
	};
	Ru.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Ru.prototype.KW_SERVER = function () {
		return this.getToken(t.KW_SERVER, 0);
	};
	Ru.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrivObjectCols(this) : u.visitChildren(this);
	};
	t.PrivObjectColsContext = Ru;
	t.prototype.privObjectCols = function () {
		var u = new Ru(this, this._ctx, this.state);
		this.enterRule(u, 248, t.RULE_privObjectCols);
		var e = 0;
		try {
			(this.state = 2084), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 172, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 2065),
						(e = this._input.LA(1)),
						e === t.KW_DATABASE || e === t.KW_SCHEMA
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 2066),
						this.identifier();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 2068),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_TABLE && ((this.state = 2067), this.match(t.KW_TABLE)),
						(this.state = 2070),
						this.tableName(),
						(this.state = 2075),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.LPAREN &&
							((this.state = 2071),
							this.match(t.LPAREN),
							(this.state = 2072),
							this.columnNameList(),
							(this.state = 2073),
							this.match(t.RPAREN)),
						(this.state = 2078),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_PARTITION && ((this.state = 2077), this.partitionSpec());
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 2080),
						this.match(t.KW_URI),
						(this.state = 2081),
						this.match(t.StringLiteral);
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 2082),
						this.match(t.KW_SERVER),
						(this.state = 2083),
						this.identifier();
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ao(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_privilegeList),
			this
		);
	}
	Ao.prototype = Object.create(s.ParserRuleContext.prototype);
	Ao.prototype.constructor = Ao;
	Ao.prototype.privlegeDef = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Tn) : this.getTypedRuleContext(Tn, u);
	};
	Ao.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Ao.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrivilegeList(this) : u.visitChildren(this);
	};
	t.PrivilegeListContext = Ao;
	t.prototype.privilegeList = function () {
		var u = new Ao(this, this._ctx, this.state);
		this.enterRule(u, 250, t.RULE_privilegeList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2086,
					this.privlegeDef(),
					this.state = 2091,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2087),
					this.match(t.COMMA),
					(this.state = 2088),
					this.privlegeDef(),
					(this.state = 2093),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Tn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_privlegeDef),
			this
		);
	}
	Tn.prototype = Object.create(s.ParserRuleContext.prototype);
	Tn.prototype.constructor = Tn;
	Tn.prototype.privilegeType = function () {
		return this.getTypedRuleContext(at, 0);
	};
	Tn.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Tn.prototype.columnNameList = function () {
		return this.getTypedRuleContext(pt, 0);
	};
	Tn.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Tn.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrivlegeDef(this) : u.visitChildren(this);
	};
	t.PrivlegeDefContext = Tn;
	t.prototype.privlegeDef = function () {
		var u = new Tn(this, this._ctx, this.state);
		this.enterRule(u, 252, t.RULE_privlegeDef);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2094),
				this.privilegeType(),
				(this.state = 2099),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.LPAREN &&
					((this.state = 2095),
					this.match(t.LPAREN),
					(this.state = 2096),
					this.columnNameList(),
					(this.state = 2097),
					this.match(t.RPAREN));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function at(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_privilegeType),
			this
		);
	}
	at.prototype = Object.create(s.ParserRuleContext.prototype);
	at.prototype.constructor = at;
	at.prototype.KW_ALL = function () {
		return this.getToken(t.KW_ALL, 0);
	};
	at.prototype.KW_ALTER = function () {
		return this.getToken(t.KW_ALTER, 0);
	};
	at.prototype.KW_UPDATE = function () {
		return this.getToken(t.KW_UPDATE, 0);
	};
	at.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	at.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	at.prototype.KW_LOCK = function () {
		return this.getToken(t.KW_LOCK, 0);
	};
	at.prototype.KW_SELECT = function () {
		return this.getToken(t.KW_SELECT, 0);
	};
	at.prototype.KW_SHOW_DATABASE = function () {
		return this.getToken(t.KW_SHOW_DATABASE, 0);
	};
	at.prototype.KW_INSERT = function () {
		return this.getToken(t.KW_INSERT, 0);
	};
	at.prototype.KW_DELETE = function () {
		return this.getToken(t.KW_DELETE, 0);
	};
	at.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrivilegeType(this) : u.visitChildren(this);
	};
	t.PrivilegeTypeContext = at;
	t.prototype.privilegeType = function () {
		var u = new at(this, this._ctx, this.state);
		this.enterRule(u, 254, t.RULE_privilegeType);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2101),
				(e = this._input.LA(1)),
				((e & -32) == 0 && ((1 << e) & ((1 << t.KW_ALL) | (1 << t.KW_SELECT) | (1 << t.KW_INSERT))) !== 0) ||
				(((e - 65) & -32) == 0 &&
					((1 << (e - 65)) &
						((1 << (t.KW_CREATE - 65)) | (1 << (t.KW_ALTER - 65)) | (1 << (t.KW_DROP - 65)))) !==
						0) ||
				e === t.KW_DELETE ||
				e === t.KW_LOCK ||
				e === t.KW_SHOW_DATABASE ||
				e === t.KW_UPDATE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Rn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_principalSpecification),
			this
		);
	}
	Rn.prototype = Object.create(s.ParserRuleContext.prototype);
	Rn.prototype.constructor = Rn;
	Rn.prototype.principalName = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ot) : this.getTypedRuleContext(ot, u);
	};
	Rn.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Rn.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrincipalSpecification(this) : u.visitChildren(this);
	};
	t.PrincipalSpecificationContext = Rn;
	t.prototype.principalSpecification = function () {
		var u = new Rn(this, this._ctx, this.state);
		this.enterRule(u, 256, t.RULE_principalSpecification);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2103,
					this.principalName(),
					this.state = 2108,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2104),
					this.match(t.COMMA),
					(this.state = 2105),
					this.principalName(),
					(this.state = 2110),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ot(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_principalName),
			this
		);
	}
	ot.prototype = Object.create(s.ParserRuleContext.prototype);
	ot.prototype.constructor = ot;
	ot.prototype.KW_USER = function () {
		return this.getToken(t.KW_USER, 0);
	};
	ot.prototype.principalIdentifier = function () {
		return this.getTypedRuleContext(xp, 0);
	};
	ot.prototype.KW_GROUP = function () {
		return this.getToken(t.KW_GROUP, 0);
	};
	ot.prototype.KW_ROLE = function () {
		return this.getToken(t.KW_ROLE, 0);
	};
	ot.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	ot.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrincipalName(this) : u.visitChildren(this);
	};
	t.PrincipalNameContext = ot;
	t.prototype.principalName = function () {
		var u = new ot(this, this._ctx, this.state);
		this.enterRule(u, 258, t.RULE_principalName);
		try {
			switch (((this.state = 2117), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_USER:
					this.enterOuterAlt(u, 1),
						(this.state = 2111),
						this.match(t.KW_USER),
						(this.state = 2112),
						this.principalIdentifier();
					break;
				case t.KW_GROUP:
					this.enterOuterAlt(u, 2),
						(this.state = 2113),
						this.match(t.KW_GROUP),
						(this.state = 2114),
						this.principalIdentifier();
					break;
				case t.KW_ROLE:
					this.enterOuterAlt(u, 3),
						(this.state = 2115),
						this.match(t.KW_ROLE),
						(this.state = 2116),
						this.identifier();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Wo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_withGrantOption),
			this
		);
	}
	Wo.prototype = Object.create(s.ParserRuleContext.prototype);
	Wo.prototype.constructor = Wo;
	Wo.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	Wo.prototype.KW_GRANT = function () {
		return this.getToken(t.KW_GRANT, 0);
	};
	Wo.prototype.KW_OPTION = function () {
		return this.getToken(t.KW_OPTION, 0);
	};
	Wo.prototype.accept = function (u) {
		return u instanceof d ? u.visitWithGrantOption(this) : u.visitChildren(this);
	};
	t.WithGrantOptionContext = Wo;
	t.prototype.withGrantOption = function () {
		var u = new Wo(this, this._ctx, this.state);
		this.enterRule(u, 260, t.RULE_withGrantOption);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2119),
				this.match(t.KW_WITH),
				(this.state = 2120),
				this.match(t.KW_GRANT),
				(this.state = 2121),
				this.match(t.KW_OPTION);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ko(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_grantOptionFor),
			this
		);
	}
	Ko.prototype = Object.create(s.ParserRuleContext.prototype);
	Ko.prototype.constructor = Ko;
	Ko.prototype.KW_GRANT = function () {
		return this.getToken(t.KW_GRANT, 0);
	};
	Ko.prototype.KW_OPTION = function () {
		return this.getToken(t.KW_OPTION, 0);
	};
	Ko.prototype.KW_FOR = function () {
		return this.getToken(t.KW_FOR, 0);
	};
	Ko.prototype.accept = function (u) {
		return u instanceof d ? u.visitGrantOptionFor(this) : u.visitChildren(this);
	};
	t.GrantOptionForContext = Ko;
	t.prototype.grantOptionFor = function () {
		var u = new Ko(this, this._ctx, this.state);
		this.enterRule(u, 262, t.RULE_grantOptionFor);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2123),
				this.match(t.KW_GRANT),
				(this.state = 2124),
				this.match(t.KW_OPTION),
				(this.state = 2125),
				this.match(t.KW_FOR);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function xo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_adminOptionFor),
			this
		);
	}
	xo.prototype = Object.create(s.ParserRuleContext.prototype);
	xo.prototype.constructor = xo;
	xo.prototype.KW_ADMIN = function () {
		return this.getToken(t.KW_ADMIN, 0);
	};
	xo.prototype.KW_OPTION = function () {
		return this.getToken(t.KW_OPTION, 0);
	};
	xo.prototype.KW_FOR = function () {
		return this.getToken(t.KW_FOR, 0);
	};
	xo.prototype.accept = function (u) {
		return u instanceof d ? u.visitAdminOptionFor(this) : u.visitChildren(this);
	};
	t.AdminOptionForContext = xo;
	t.prototype.adminOptionFor = function () {
		var u = new xo(this, this._ctx, this.state);
		this.enterRule(u, 264, t.RULE_adminOptionFor);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2127),
				this.match(t.KW_ADMIN),
				(this.state = 2128),
				this.match(t.KW_OPTION),
				(this.state = 2129),
				this.match(t.KW_FOR);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Oo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_withAdminOption),
			this
		);
	}
	Oo.prototype = Object.create(s.ParserRuleContext.prototype);
	Oo.prototype.constructor = Oo;
	Oo.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	Oo.prototype.KW_ADMIN = function () {
		return this.getToken(t.KW_ADMIN, 0);
	};
	Oo.prototype.KW_OPTION = function () {
		return this.getToken(t.KW_OPTION, 0);
	};
	Oo.prototype.accept = function (u) {
		return u instanceof d ? u.visitWithAdminOption(this) : u.visitChildren(this);
	};
	t.WithAdminOptionContext = Oo;
	t.prototype.withAdminOption = function () {
		var u = new Oo(this, this._ctx, this.state);
		this.enterRule(u, 266, t.RULE_withAdminOption);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2131),
				this.match(t.KW_WITH),
				(this.state = 2132),
				this.match(t.KW_ADMIN),
				(this.state = 2133),
				this.match(t.KW_OPTION);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function It(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_metastoreCheck),
			this
		);
	}
	It.prototype = Object.create(s.ParserRuleContext.prototype);
	It.prototype.constructor = It;
	It.prototype.KW_MSCK = function () {
		return this.getToken(t.KW_MSCK, 0);
	};
	It.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	It.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	It.prototype.KW_REPAIR = function () {
		return this.getToken(t.KW_REPAIR, 0);
	};
	It.prototype.KW_PARTITIONS = function () {
		return this.getToken(t.KW_PARTITIONS, 0);
	};
	It.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	It.prototype.KW_ADD = function () {
		return this.getToken(t.KW_ADD, 0);
	};
	It.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	It.prototype.KW_SYNC = function () {
		return this.getToken(t.KW_SYNC, 0);
	};
	It.prototype.accept = function (u) {
		return u instanceof d ? u.visitMetastoreCheck(this) : u.visitChildren(this);
	};
	t.MetastoreCheckContext = It;
	t.prototype.metastoreCheck = function () {
		var u = new It(this, this._ctx, this.state);
		this.enterRule(u, 268, t.RULE_metastoreCheck);
		var e = 0;
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 2135),
				this.match(t.KW_MSCK),
				(this.state = 2137),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_REPAIR && ((this.state = 2136), this.match(t.KW_REPAIR)),
				(this.state = 2148),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_TABLE:
					(this.state = 2139),
						this.match(t.KW_TABLE),
						(this.state = 2140),
						this.tableName(),
						(this.state = 2143),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_DROP || e === t.KW_ADD || e === t.KW_SYNC) &&
							((this.state = 2141),
							(e = this._input.LA(1)),
							e === t.KW_DROP || e === t.KW_ADD || e === t.KW_SYNC
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this),
							(this.state = 2142),
							this.match(t.KW_PARTITIONS));
					break;
				case t.KW_PARTITION:
				case t.SEMICOLON:
					(this.state = 2146),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_PARTITION && ((this.state = 2145), this.partitionSpec());
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Mc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_resourceList),
			this
		);
	}
	Mc.prototype = Object.create(s.ParserRuleContext.prototype);
	Mc.prototype.constructor = Mc;
	Mc.prototype.resource = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Lo) : this.getTypedRuleContext(Lo, u);
	};
	Mc.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Mc.prototype.accept = function (u) {
		return u instanceof d ? u.visitResourceList(this) : u.visitChildren(this);
	};
	t.ResourceListContext = Mc;
	t.prototype.resourceList = function () {
		var u = new Mc(this, this._ctx, this.state);
		this.enterRule(u, 270, t.RULE_resourceList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2150,
					this.resource(),
					this.state = 2155,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2151),
					this.match(t.COMMA),
					(this.state = 2152),
					this.resource(),
					(this.state = 2157),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Lo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_resource),
			this
		);
	}
	Lo.prototype = Object.create(s.ParserRuleContext.prototype);
	Lo.prototype.constructor = Lo;
	Lo.prototype.resourceType = function () {
		return this.getTypedRuleContext(So, 0);
	};
	Lo.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Lo.prototype.accept = function (u) {
		return u instanceof d ? u.visitResource(this) : u.visitChildren(this);
	};
	t.ResourceContext = Lo;
	t.prototype.resource = function () {
		var u = new Lo(this, this._ctx, this.state);
		this.enterRule(u, 272, t.RULE_resource);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2158),
				this.resourceType(),
				(this.state = 2159),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function So(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_resourceType),
			this
		);
	}
	So.prototype = Object.create(s.ParserRuleContext.prototype);
	So.prototype.constructor = So;
	So.prototype.KW_JAR = function () {
		return this.getToken(t.KW_JAR, 0);
	};
	So.prototype.KW_FILE = function () {
		return this.getToken(t.KW_FILE, 0);
	};
	So.prototype.KW_ARCHIVE = function () {
		return this.getToken(t.KW_ARCHIVE, 0);
	};
	So.prototype.accept = function (u) {
		return u instanceof d ? u.visitResourceType(this) : u.visitChildren(this);
	};
	t.ResourceTypeContext = So;
	t.prototype.resourceType = function () {
		var u = new So(this, this._ctx, this.state);
		this.enterRule(u, 274, t.RULE_resourceType);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2161),
				(e = this._input.LA(1)),
				e === t.KW_FILE || e === t.KW_JAR || e === t.KW_ARCHIVE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function se(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createFunctionStatement),
			this
		);
	}
	se.prototype = Object.create(s.ParserRuleContext.prototype);
	se.prototype.constructor = se;
	se.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	se.prototype.KW_FUNCTION = function () {
		return this.getToken(t.KW_FUNCTION, 0);
	};
	se.prototype.functionIdentifier = function () {
		return this.getTypedRuleContext(Ar, 0);
	};
	se.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	se.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	se.prototype.KW_TEMPORARY = function () {
		return this.getToken(t.KW_TEMPORARY, 0);
	};
	se.prototype.KW_USING = function () {
		return this.getToken(t.KW_USING, 0);
	};
	se.prototype.resourceList = function () {
		return this.getTypedRuleContext(Mc, 0);
	};
	se.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateFunctionStatement(this) : u.visitChildren(this);
	};
	t.CreateFunctionStatementContext = se;
	t.prototype.createFunctionStatement = function () {
		var u = new se(this, this._ctx, this.state);
		this.enterRule(u, 276, t.RULE_createFunctionStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2163),
				this.match(t.KW_CREATE),
				(this.state = 2165),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TEMPORARY && ((this.state = 2164), this.match(t.KW_TEMPORARY)),
				(this.state = 2167),
				this.match(t.KW_FUNCTION),
				(this.state = 2168),
				this.functionIdentifier(),
				(this.state = 2169),
				this.match(t.KW_AS),
				(this.state = 2170),
				this.match(t.StringLiteral),
				(this.state = 2173),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_USING &&
					((this.state = 2171), this.match(t.KW_USING), (this.state = 2172), this.resourceList());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function mn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropFunctionStatement),
			this
		);
	}
	mn.prototype = Object.create(s.ParserRuleContext.prototype);
	mn.prototype.constructor = mn;
	mn.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	mn.prototype.KW_FUNCTION = function () {
		return this.getToken(t.KW_FUNCTION, 0);
	};
	mn.prototype.functionIdentifier = function () {
		return this.getTypedRuleContext(Ar, 0);
	};
	mn.prototype.KW_TEMPORARY = function () {
		return this.getToken(t.KW_TEMPORARY, 0);
	};
	mn.prototype.ifExists = function () {
		return this.getTypedRuleContext(rt, 0);
	};
	mn.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropFunctionStatement(this) : u.visitChildren(this);
	};
	t.DropFunctionStatementContext = mn;
	t.prototype.dropFunctionStatement = function () {
		var u = new mn(this, this._ctx, this.state);
		this.enterRule(u, 278, t.RULE_dropFunctionStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2175),
				this.match(t.KW_DROP),
				(this.state = 2177),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TEMPORARY && ((this.state = 2176), this.match(t.KW_TEMPORARY)),
				(this.state = 2179),
				this.match(t.KW_FUNCTION),
				(this.state = 2181),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 2180), this.ifExists()),
				(this.state = 2183),
				this.functionIdentifier();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Hc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_reloadFunctionStatement),
			this
		);
	}
	Hc.prototype = Object.create(s.ParserRuleContext.prototype);
	Hc.prototype.constructor = Hc;
	Hc.prototype.KW_RELOAD = function () {
		return this.getToken(t.KW_RELOAD, 0);
	};
	Hc.prototype.KW_FUNCTION = function () {
		return this.getToken(t.KW_FUNCTION, 0);
	};
	Hc.prototype.accept = function (u) {
		return u instanceof d ? u.visitReloadFunctionStatement(this) : u.visitChildren(this);
	};
	t.ReloadFunctionStatementContext = Hc;
	t.prototype.reloadFunctionStatement = function () {
		var u = new Hc(this, this._ctx, this.state);
		this.enterRule(u, 280, t.RULE_reloadFunctionStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2185),
				this.match(t.KW_RELOAD),
				(this.state = 2186),
				this.match(t.KW_FUNCTION);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ae(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createMacroStatement),
			this
		);
	}
	ae.prototype = Object.create(s.ParserRuleContext.prototype);
	ae.prototype.constructor = ae;
	ae.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	ae.prototype.KW_TEMPORARY = function () {
		return this.getToken(t.KW_TEMPORARY, 0);
	};
	ae.prototype.KW_MACRO = function () {
		return this.getToken(t.KW_MACRO, 0);
	};
	ae.prototype.Identifier = function () {
		return this.getToken(t.Identifier, 0);
	};
	ae.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	ae.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	ae.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	ae.prototype.columnNameTypeList = function () {
		return this.getTypedRuleContext(Sn, 0);
	};
	ae.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateMacroStatement(this) : u.visitChildren(this);
	};
	t.CreateMacroStatementContext = ae;
	t.prototype.createMacroStatement = function () {
		var u = new ae(this, this._ctx, this.state);
		this.enterRule(u, 282, t.RULE_createMacroStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2188),
				this.match(t.KW_CREATE),
				(this.state = 2189),
				this.match(t.KW_TEMPORARY),
				(this.state = 2190),
				this.match(t.KW_MACRO),
				(this.state = 2191),
				this.match(t.Identifier),
				(this.state = 2192),
				this.match(t.LPAREN),
				(this.state = 2194),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(((e & -32) == 0 &&
					((1 << e) &
						((1 << t.KW_ASC) |
							(1 << t.KW_DESC) |
							(1 << t.KW_NULLS) |
							(1 << t.KW_LAST) |
							(1 << t.KW_OVERWRITE))) !==
						0) ||
					(((e - 36) & -32) == 0 &&
						((1 << (e - 36)) &
							((1 << (t.KW_PARTITIONS - 36)) |
								(1 << (t.KW_TABLES - 36)) |
								(1 << (t.KW_COLUMNS - 36)) |
								(1 << (t.KW_INDEX - 36)) |
								(1 << (t.KW_INDEXES - 36)) |
								(1 << (t.KW_REBUILD - 36)) |
								(1 << (t.KW_FUNCTIONS - 36)) |
								(1 << (t.KW_SHOW - 36)) |
								(1 << (t.KW_MSCK - 36)) |
								(1 << (t.KW_REPAIR - 36)) |
								(1 << (t.KW_DIRECTORY - 36)) |
								(1 << (t.KW_CLUSTER - 36)) |
								(1 << (t.KW_DISTRIBUTE - 36)) |
								(1 << (t.KW_SORT - 36)) |
								(1 << (t.KW_LOAD - 36)) |
								(1 << (t.KW_EXPORT - 36)) |
								(1 << (t.KW_REPLICATION - 36)) |
								(1 << (t.KW_METADATA - 36)) |
								(1 << (t.KW_DATA - 36)) |
								(1 << (t.KW_INPATH - 36)))) !==
							0) ||
					(((e - 68) & -32) == 0 &&
						((1 << (e - 68)) &
							((1 << (t.KW_CHANGE - 68)) |
								(1 << (t.KW_FIRST - 68)) |
								(1 << (t.KW_AFTER - 68)) |
								(1 << (t.KW_RENAME - 68)) |
								(1 << (t.KW_COMMENT - 68)) |
								(1 << (t.KW_TINYINT - 68)) |
								(1 << (t.KW_DATETIME - 68)) |
								(1 << (t.KW_ZONE - 68)) |
								(1 << (t.KW_STRING - 68)) |
								(1 << (t.KW_STRUCT - 68)) |
								(1 << (t.KW_UNIONTYPE - 68)))) !==
							0) ||
					(((e - 101) & -32) == 0 &&
						((1 << (e - 101)) &
							((1 << (t.KW_PARTITIONED - 101)) |
								(1 << (t.KW_CLUSTERED - 101)) |
								(1 << (t.KW_SORTED - 101)) |
								(1 << (t.KW_BUCKETS - 101)) |
								(1 << (t.KW_FORMAT - 101)) |
								(1 << (t.KW_DELIMITED - 101)) |
								(1 << (t.KW_FIELDS - 101)) |
								(1 << (t.KW_TERMINATED - 101)) |
								(1 << (t.KW_ESCAPED - 101)) |
								(1 << (t.KW_COLLECTION - 101)) |
								(1 << (t.KW_ITEMS - 101)) |
								(1 << (t.KW_KEYS - 101)) |
								(1 << (t.KW_KEY_TYPE - 101)) |
								(1 << (t.KW_KILL - 101)) |
								(1 << (t.KW_LINES - 101)) |
								(1 << (t.KW_STORED - 101)) |
								(1 << (t.KW_FILEFORMAT - 101)) |
								(1 << (t.KW_INPUTFORMAT - 101)) |
								(1 << (t.KW_OUTPUTFORMAT - 101)) |
								(1 << (t.KW_INPUTDRIVER - 101)) |
								(1 << (t.KW_OUTPUTDRIVER - 101)) |
								(1 << (t.KW_ENABLE - 101)) |
								(1 << (t.KW_DISABLE - 101)) |
								(1 << (t.KW_LOCATION - 101)) |
								(1 << (t.KW_BUCKET - 101)))) !==
							0) ||
					(((e - 134) & -32) == 0 &&
						((1 << (e - 134)) &
							((1 << (t.KW_ADD - 134)) |
								(1 << (t.KW_REPLACE - 134)) |
								(1 << (t.KW_TEMPORARY - 134)) |
								(1 << (t.KW_FILE - 134)) |
								(1 << (t.KW_JAR - 134)) |
								(1 << (t.KW_EXPLAIN - 134)) |
								(1 << (t.KW_FORMATTED - 134)) |
								(1 << (t.KW_DEPENDENCY - 134)) |
								(1 << (t.KW_LOGICAL - 134)) |
								(1 << (t.KW_SERDE - 134)) |
								(1 << (t.KW_DEFERRED - 134)) |
								(1 << (t.KW_SERDEPROPERTIES - 134)) |
								(1 << (t.KW_DBPROPERTIES - 134)) |
								(1 << (t.KW_LIMIT - 134)) |
								(1 << (t.KW_OFFSET - 134)) |
								(1 << (t.KW_UNSET - 134)) |
								(1 << (t.KW_TBLPROPERTIES - 134)) |
								(1 << (t.KW_IDXPROPERTIES - 134)) |
								(1 << (t.KW_VALUE_TYPE - 134)) |
								(1 << (t.KW_ELEM_TYPE - 134)) |
								(1 << (t.KW_DEFINED - 134)))) !==
							0) ||
					(((e - 167) & -32) == 0 &&
						((1 << (e - 167)) &
							((1 << (t.KW_MAPJOIN - 167)) |
								(1 << (t.KW_STREAMTABLE - 167)) |
								(1 << (t.KW_CLUSTERSTATUS - 167)) |
								(1 << (t.KW_UTC - 167)) |
								(1 << (t.KW_UTCTIMESTAMP - 167)) |
								(1 << (t.KW_LONG - 167)) |
								(1 << (t.KW_PLUS - 167)) |
								(1 << (t.KW_VIEW - 167)) |
								(1 << (t.KW_VIEWS - 167)) |
								(1 << (t.KW_DATABASES - 167)) |
								(1 << (t.KW_MATERIALIZED - 167)) |
								(1 << (t.KW_SCHEMA - 167)) |
								(1 << (t.KW_SCHEMAS - 167)) |
								(1 << (t.KW_SSL - 167)) |
								(1 << (t.KW_UNDO - 167)) |
								(1 << (t.KW_LOCK - 167)) |
								(1 << (t.KW_LOCKS - 167)) |
								(1 << (t.KW_UNLOCK - 167)) |
								(1 << (t.KW_SHARED - 167)) |
								(1 << (t.KW_EXCLUSIVE - 167)) |
								(1 << (t.KW_UNSIGNED - 167)) |
								(1 << (t.KW_WHILE - 167)) |
								(1 << (t.KW_READ - 167)))) !==
							0) ||
					(((e - 200) & -32) == 0 &&
						((1 << (e - 200)) &
							((1 << (t.KW_PURGE - 200)) |
								(1 << (t.KW_ANALYZE - 200)) |
								(1 << (t.KW_BEFORE - 200)) |
								(1 << (t.KW_CONTINUE - 200)) |
								(1 << (t.KW_RECORDREADER - 200)) |
								(1 << (t.KW_RECORDWRITER - 200)) |
								(1 << (t.KW_SEMI - 200)) |
								(1 << (t.KW_TOUCH - 200)) |
								(1 << (t.KW_ARCHIVE - 200)) |
								(1 << (t.KW_UNARCHIVE - 200)) |
								(1 << (t.KW_COMPUTE - 200)) |
								(1 << (t.KW_STATISTICS - 200)) |
								(1 << (t.KW_USE - 200)) |
								(1 << (t.KW_OPTION - 200)) |
								(1 << (t.KW_CONCATENATE - 200)) |
								(1 << (t.KW_SHOW_DATABASE - 200)) |
								(1 << (t.KW_RESTRICT - 200)) |
								(1 << (t.KW_CASCADE - 200)) |
								(1 << (t.KW_SKEWED - 200)) |
								(1 << (t.KW_DIRECTORIES - 200)))) !==
							0) ||
					(((e - 244) & -32) == 0 &&
						((1 << (e - 244)) &
							((1 << (t.KW_SETS - 244)) |
								(1 << (t.KW_NOSCAN - 244)) |
								(1 << (t.KW_ROLE - 244)) |
								(1 << (t.KW_ROLES - 244)) |
								(1 << (t.KW_URI - 244)) |
								(1 << (t.KW_SERVER - 244)) |
								(1 << (t.KW_ADMIN - 244)) |
								(1 << (t.KW_OWNER - 244)) |
								(1 << (t.KW_PRINCIPALS - 244)) |
								(1 << (t.KW_COMPACT - 244)) |
								(1 << (t.KW_COMPACTIONS - 244)) |
								(1 << (t.KW_TRANSACTIONS - 244)) |
								(1 << (t.KW_REWRITE - 244)) |
								(1 << (t.KW_REOPTIMIZATION - 244)) |
								(1 << (t.KW_RELOAD - 244)) |
								(1 << (t.KW_YEAR - 244)) |
								(1 << (t.KW_QUERY - 244)) |
								(1 << (t.KW_QUARTER - 244)) |
								(1 << (t.KW_MONTH - 244)) |
								(1 << (t.KW_WEEK - 244)) |
								(1 << (t.KW_DAY - 244)) |
								(1 << (t.KW_DOW - 244)) |
								(1 << (t.KW_HOUR - 244)) |
								(1 << (t.KW_MINUTE - 244)) |
								(1 << (t.KW_SECOND - 244)))) !==
							0) ||
					(((e - 277) & -32) == 0 &&
						((1 << (e - 277)) &
							((1 << (t.KW_TRANSACTION - 277)) |
								(1 << (t.KW_WORK - 277)) |
								(1 << (t.KW_WRITE - 277)) |
								(1 << (t.KW_ISOLATION - 277)) |
								(1 << (t.KW_LEVEL - 277)) |
								(1 << (t.KW_SNAPSHOT - 277)) |
								(1 << (t.KW_AUTOCOMMIT - 277)) |
								(1 << (t.KW_CACHE - 277)) |
								(1 << (t.KW_ENFORCED - 277)) |
								(1 << (t.KW_VALIDATE - 277)) |
								(1 << (t.KW_NOVALIDATE - 277)) |
								(1 << (t.KW_RELY - 277)) |
								(1 << (t.KW_NORELY - 277)) |
								(1 << (t.KW_KEY - 277)) |
								(1 << (t.KW_ABORT - 277)) |
								(1 << (t.KW_MATCHED - 277)) |
								(1 << (t.KW_REPL - 277)) |
								(1 << (t.KW_DUMP - 277)) |
								(1 << (t.KW_STATUS - 277)) |
								(1 << (t.KW_VECTORIZATION - 277)) |
								(1 << (t.KW_SUMMARY - 277)))) !==
							0) ||
					(((e - 309) & -32) == 0 &&
						((1 << (e - 309)) &
							((1 << (t.KW_OPERATOR - 309)) |
								(1 << (t.KW_EXPRESSION - 309)) |
								(1 << (t.KW_DETAIL - 309)) |
								(1 << (t.KW_WAIT - 309)) |
								(1 << (t.KW_RESOURCE - 309)) |
								(1 << (t.KW_PLAN - 309)) |
								(1 << (t.KW_QUERY_PARALLELISM - 309)) |
								(1 << (t.KW_PLANS - 309)) |
								(1 << (t.KW_ACTIVATE - 309)) |
								(1 << (t.KW_DEFAULT - 309)) |
								(1 << (t.KW_CHECK - 309)) |
								(1 << (t.KW_POOL - 309)) |
								(1 << (t.KW_MOVE - 309)) |
								(1 << (t.KW_DO - 309)) |
								(1 << (t.KW_ALLOC_FRACTION - 309)) |
								(1 << (t.KW_SCHEDULING_POLICY - 309)) |
								(1 << (t.KW_PATH - 309)) |
								(1 << (t.KW_MAPPING - 309)) |
								(1 << (t.KW_WORKLOAD - 309)) |
								(1 << (t.KW_MANAGEMENT - 309)) |
								(1 << (t.KW_ACTIVE - 309)) |
								(1 << (t.KW_UNMANAGED - 309)) |
								(1 << (t.KW_DELTA - 309)) |
								(1 << (t.KW_CSV - 309)))) !==
							0) ||
					e === t.KW_JSON ||
					e === t.KW_BLOOMFILTER ||
					e === t.Identifier) &&
					((this.state = 2193), this.columnNameTypeList()),
				(this.state = 2196),
				this.match(t.RPAREN),
				(this.state = 2197),
				this.expression(0);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function yn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropMacroStatement),
			this
		);
	}
	yn.prototype = Object.create(s.ParserRuleContext.prototype);
	yn.prototype.constructor = yn;
	yn.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	yn.prototype.KW_TEMPORARY = function () {
		return this.getToken(t.KW_TEMPORARY, 0);
	};
	yn.prototype.KW_MACRO = function () {
		return this.getToken(t.KW_MACRO, 0);
	};
	yn.prototype.Identifier = function () {
		return this.getToken(t.Identifier, 0);
	};
	yn.prototype.ifExists = function () {
		return this.getTypedRuleContext(rt, 0);
	};
	yn.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropMacroStatement(this) : u.visitChildren(this);
	};
	t.DropMacroStatementContext = yn;
	t.prototype.dropMacroStatement = function () {
		var u = new yn(this, this._ctx, this.state);
		this.enterRule(u, 284, t.RULE_dropMacroStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2199),
				this.match(t.KW_DROP),
				(this.state = 2200),
				this.match(t.KW_TEMPORARY),
				(this.state = 2201),
				this.match(t.KW_MACRO),
				(this.state = 2203),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 2202), this.ifExists()),
				(this.state = 2205),
				this.match(t.Identifier);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function tu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createViewStatement),
			this
		);
	}
	tu.prototype = Object.create(s.ParserRuleContext.prototype);
	tu.prototype.constructor = tu;
	tu.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	tu.prototype.KW_VIEW = function () {
		return this.getToken(t.KW_VIEW, 0);
	};
	tu.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	tu.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	tu.prototype.selectStatementWithCTE = function () {
		return this.getTypedRuleContext(vn, 0);
	};
	tu.prototype.orReplace = function () {
		return this.getTypedRuleContext(yc, 0);
	};
	tu.prototype.ifNotExists = function () {
		return this.getTypedRuleContext(re, 0);
	};
	tu.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	tu.prototype.columnNameCommentList = function () {
		return this.getTypedRuleContext(up, 0);
	};
	tu.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	tu.prototype.tableComment = function () {
		return this.getTypedRuleContext(tr, 0);
	};
	tu.prototype.viewPartition = function () {
		return this.getTypedRuleContext(Cn, 0);
	};
	tu.prototype.tablePropertiesPrefixed = function () {
		return this.getTypedRuleContext(rr, 0);
	};
	tu.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateViewStatement(this) : u.visitChildren(this);
	};
	t.CreateViewStatementContext = tu;
	t.prototype.createViewStatement = function () {
		var u = new tu(this, this._ctx, this.state);
		this.enterRule(u, 286, t.RULE_createViewStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2207),
				this.match(t.KW_CREATE),
				(this.state = 2209),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_OR && ((this.state = 2208), this.orReplace()),
				(this.state = 2211),
				this.match(t.KW_VIEW),
				(this.state = 2213),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 2212), this.ifNotExists()),
				(this.state = 2215),
				this.tableName(),
				(this.state = 2220),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.LPAREN &&
					((this.state = 2216),
					this.match(t.LPAREN),
					(this.state = 2217),
					this.columnNameCommentList(),
					(this.state = 2218),
					this.match(t.RPAREN)),
				(this.state = 2223),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT && ((this.state = 2222), this.tableComment()),
				(this.state = 2226),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PARTITIONED && ((this.state = 2225), this.viewPartition()),
				(this.state = 2229),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TBLPROPERTIES && ((this.state = 2228), this.tablePropertiesPrefixed()),
				(this.state = 2231),
				this.match(t.KW_AS),
				(this.state = 2232),
				this.selectStatementWithCTE();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function eu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createMaterializedViewStatement),
			this
		);
	}
	eu.prototype = Object.create(s.ParserRuleContext.prototype);
	eu.prototype.constructor = eu;
	eu.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	eu.prototype.KW_MATERIALIZED = function () {
		return this.getToken(t.KW_MATERIALIZED, 0);
	};
	eu.prototype.KW_VIEW = function () {
		return this.getToken(t.KW_VIEW, 0);
	};
	eu.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	eu.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	eu.prototype.selectStatementWithCTE = function () {
		return this.getTypedRuleContext(vn, 0);
	};
	eu.prototype.ifNotExists = function () {
		return this.getTypedRuleContext(re, 0);
	};
	eu.prototype.rewriteDisabled = function () {
		return this.getTypedRuleContext($a, 0);
	};
	eu.prototype.tableComment = function () {
		return this.getTypedRuleContext(tr, 0);
	};
	eu.prototype.tableRowFormat = function () {
		return this.getTypedRuleContext(ir, 0);
	};
	eu.prototype.tableFileFormat = function () {
		return this.getTypedRuleContext(ti, 0);
	};
	eu.prototype.tableLocation = function () {
		return this.getTypedRuleContext(Ln, 0);
	};
	eu.prototype.tablePropertiesPrefixed = function () {
		return this.getTypedRuleContext(rr, 0);
	};
	eu.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateMaterializedViewStatement(this) : u.visitChildren(this);
	};
	t.CreateMaterializedViewStatementContext = eu;
	t.prototype.createMaterializedViewStatement = function () {
		var u = new eu(this, this._ctx, this.state);
		this.enterRule(u, 288, t.RULE_createMaterializedViewStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2234),
				this.match(t.KW_CREATE),
				(this.state = 2235),
				this.match(t.KW_MATERIALIZED),
				(this.state = 2236),
				this.match(t.KW_VIEW),
				(this.state = 2238),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 2237), this.ifNotExists()),
				(this.state = 2240),
				this.tableName(),
				(this.state = 2242),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_DISABLE && ((this.state = 2241), this.rewriteDisabled()),
				(this.state = 2245),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT && ((this.state = 2244), this.tableComment()),
				(this.state = 2248),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ROW && ((this.state = 2247), this.tableRowFormat()),
				(this.state = 2251),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_STORED && ((this.state = 2250), this.tableFileFormat()),
				(this.state = 2254),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_LOCATION && ((this.state = 2253), this.tableLocation()),
				(this.state = 2257),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TBLPROPERTIES && ((this.state = 2256), this.tablePropertiesPrefixed()),
				(this.state = 2259),
				this.match(t.KW_AS),
				(this.state = 2260),
				this.selectStatementWithCTE();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Cn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_viewPartition),
			this
		);
	}
	Cn.prototype = Object.create(s.ParserRuleContext.prototype);
	Cn.prototype.constructor = Cn;
	Cn.prototype.KW_PARTITIONED = function () {
		return this.getToken(t.KW_PARTITIONED, 0);
	};
	Cn.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	Cn.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Cn.prototype.columnNameList = function () {
		return this.getTypedRuleContext(pt, 0);
	};
	Cn.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Cn.prototype.accept = function (u) {
		return u instanceof d ? u.visitViewPartition(this) : u.visitChildren(this);
	};
	t.ViewPartitionContext = Cn;
	t.prototype.viewPartition = function () {
		var u = new Cn(this, this._ctx, this.state);
		this.enterRule(u, 290, t.RULE_viewPartition);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2262),
				this.match(t.KW_PARTITIONED),
				(this.state = 2263),
				this.match(t.KW_ON),
				(this.state = 2264),
				this.match(t.LPAREN),
				(this.state = 2265),
				this.columnNameList(),
				(this.state = 2266),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function h2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropViewStatement),
			this
		);
	}
	h2.prototype = Object.create(s.ParserRuleContext.prototype);
	h2.prototype.constructor = h2;
	h2.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	h2.prototype.KW_VIEW = function () {
		return this.getToken(t.KW_VIEW, 0);
	};
	h2.prototype.viewName = function () {
		return this.getTypedRuleContext(s1, 0);
	};
	h2.prototype.ifExists = function () {
		return this.getTypedRuleContext(rt, 0);
	};
	h2.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropViewStatement(this) : u.visitChildren(this);
	};
	t.DropViewStatementContext = h2;
	t.prototype.dropViewStatement = function () {
		var u = new h2(this, this._ctx, this.state);
		this.enterRule(u, 292, t.RULE_dropViewStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2268),
				this.match(t.KW_DROP),
				(this.state = 2269),
				this.match(t.KW_VIEW),
				(this.state = 2271),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 2270), this.ifExists()),
				(this.state = 2273),
				this.viewName();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function bn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropMaterializedViewStatement),
			this
		);
	}
	bn.prototype = Object.create(s.ParserRuleContext.prototype);
	bn.prototype.constructor = bn;
	bn.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	bn.prototype.KW_MATERIALIZED = function () {
		return this.getToken(t.KW_MATERIALIZED, 0);
	};
	bn.prototype.KW_VIEW = function () {
		return this.getToken(t.KW_VIEW, 0);
	};
	bn.prototype.viewName = function () {
		return this.getTypedRuleContext(s1, 0);
	};
	bn.prototype.ifExists = function () {
		return this.getTypedRuleContext(rt, 0);
	};
	bn.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropMaterializedViewStatement(this) : u.visitChildren(this);
	};
	t.DropMaterializedViewStatementContext = bn;
	t.prototype.dropMaterializedViewStatement = function () {
		var u = new bn(this, this._ctx, this.state);
		this.enterRule(u, 294, t.RULE_dropMaterializedViewStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2275),
				this.match(t.KW_DROP),
				(this.state = 2276),
				this.match(t.KW_MATERIALIZED),
				(this.state = 2277),
				this.match(t.KW_VIEW),
				(this.state = 2279),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_IF && ((this.state = 2278), this.ifExists()),
				(this.state = 2281),
				this.viewName();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Fc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_showFunctionIdentifier),
			this
		);
	}
	Fc.prototype = Object.create(s.ParserRuleContext.prototype);
	Fc.prototype.constructor = Fc;
	Fc.prototype.functionIdentifier = function () {
		return this.getTypedRuleContext(Ar, 0);
	};
	Fc.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Fc.prototype.accept = function (u) {
		return u instanceof d ? u.visitShowFunctionIdentifier(this) : u.visitChildren(this);
	};
	t.ShowFunctionIdentifierContext = Fc;
	t.prototype.showFunctionIdentifier = function () {
		var u = new Fc(this, this._ctx, this.state);
		this.enterRule(u, 296, t.RULE_showFunctionIdentifier);
		try {
			switch (((this.state = 2285), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.Identifier:
					this.enterOuterAlt(u, 1), (this.state = 2283), this.functionIdentifier();
					break;
				case t.StringLiteral:
					this.enterOuterAlt(u, 2), (this.state = 2284), this.match(t.StringLiteral);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function kc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_showStmtIdentifier),
			this
		);
	}
	kc.prototype = Object.create(s.ParserRuleContext.prototype);
	kc.prototype.constructor = kc;
	kc.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	kc.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	kc.prototype.accept = function (u) {
		return u instanceof d ? u.visitShowStmtIdentifier(this) : u.visitChildren(this);
	};
	t.ShowStmtIdentifierContext = kc;
	t.prototype.showStmtIdentifier = function () {
		var u = new kc(this, this._ctx, this.state);
		this.enterRule(u, 298, t.RULE_showStmtIdentifier);
		try {
			switch (((this.state = 2289), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.Identifier:
					this.enterOuterAlt(u, 1), (this.state = 2287), this.identifier();
					break;
				case t.StringLiteral:
					this.enterOuterAlt(u, 2), (this.state = 2288), this.match(t.StringLiteral);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function tr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableComment),
			this
		);
	}
	tr.prototype = Object.create(s.ParserRuleContext.prototype);
	tr.prototype.constructor = tr;
	tr.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	tr.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	tr.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableComment(this) : u.visitChildren(this);
	};
	t.TableCommentContext = tr;
	t.prototype.tableComment = function () {
		var u = new tr(this, this._ctx, this.state);
		this.enterRule(u, 300, t.RULE_tableComment);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2291),
				this.match(t.KW_COMMENT),
				(this.state = 2292),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Io(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableUsingDataSource),
			this
		);
	}
	Io.prototype = Object.create(s.ParserRuleContext.prototype);
	Io.prototype.constructor = Io;
	Io.prototype.KW_USING = function () {
		return this.getToken(t.KW_USING, 0);
	};
	Io.prototype.tableDataSource = function () {
		return this.getTypedRuleContext(er, 0);
	};
	Io.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableUsingDataSource(this) : u.visitChildren(this);
	};
	t.TableUsingDataSourceContext = Io;
	t.prototype.tableUsingDataSource = function () {
		var u = new Io(this, this._ctx, this.state);
		this.enterRule(u, 302, t.RULE_tableUsingDataSource);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2294),
				this.match(t.KW_USING),
				(this.state = 2295),
				this.tableDataSource();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function er(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableDataSource),
			this
		);
	}
	er.prototype = Object.create(s.ParserRuleContext.prototype);
	er.prototype.constructor = er;
	er.prototype.KW_AVRO = function () {
		return this.getToken(t.KW_AVRO, 0);
	};
	er.prototype.KW_CSV = function () {
		return this.getToken(t.KW_CSV, 0);
	};
	er.prototype.KW_JSON = function () {
		return this.getToken(t.KW_JSON, 0);
	};
	er.prototype.KW_PARQUET = function () {
		return this.getToken(t.KW_PARQUET, 0);
	};
	er.prototype.KW_ORC = function () {
		return this.getToken(t.KW_ORC, 0);
	};
	er.prototype.KW_DELTA = function () {
		return this.getToken(t.KW_DELTA, 0);
	};
	er.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableDataSource(this) : u.visitChildren(this);
	};
	t.TableDataSourceContext = er;
	t.prototype.tableDataSource = function () {
		var u = new er(this, this._ctx, this.state);
		this.enterRule(u, 304, t.RULE_tableDataSource);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2297),
				(e = this._input.LA(1)),
				((e - 336) & -32) == 0 &&
				((1 << (e - 336)) &
					((1 << (t.KW_ORC - 336)) |
						(1 << (t.KW_PARQUET - 336)) |
						(1 << (t.KW_DELTA - 336)) |
						(1 << (t.KW_AVRO - 336)) |
						(1 << (t.KW_CSV - 336)) |
						(1 << (t.KW_JSON - 336)))) !==
					0
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ui(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tablePartition),
			this
		);
	}
	ui.prototype = Object.create(s.ParserRuleContext.prototype);
	ui.prototype.constructor = ui;
	ui.prototype.KW_PARTITIONED = function () {
		return this.getToken(t.KW_PARTITIONED, 0);
	};
	ui.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	ui.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	ui.prototype.partitionedColumnNameTypeConstraint = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Yo) : this.getTypedRuleContext(Yo, u);
	};
	ui.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	ui.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	ui.prototype.accept = function (u) {
		return u instanceof d ? u.visitTablePartition(this) : u.visitChildren(this);
	};
	t.TablePartitionContext = ui;
	t.prototype.tablePartition = function () {
		var u = new ui(this, this._ctx, this.state);
		this.enterRule(u, 306, t.RULE_tablePartition);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2299,
					this.match(t.KW_PARTITIONED),
					this.state = 2300,
					this.match(t.KW_BY),
					this.state = 2301,
					this.match(t.LPAREN),
					this.state = 2302,
					this.partitionedColumnNameTypeConstraint(),
					this.state = 2307,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2303),
					this.match(t.COMMA),
					(this.state = 2304),
					this.partitionedColumnNameTypeConstraint(),
					(this.state = 2309),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 2310), this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function mu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableBuckets),
			this
		);
	}
	mu.prototype = Object.create(s.ParserRuleContext.prototype);
	mu.prototype.constructor = mu;
	mu.prototype.KW_CLUSTERED = function () {
		return this.getToken(t.KW_CLUSTERED, 0);
	};
	mu.prototype.KW_BY = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_BY) : this.getToken(t.KW_BY, u);
	};
	mu.prototype.LPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.LPAREN) : this.getToken(t.LPAREN, u);
	};
	mu.prototype.columnNameList = function () {
		return this.getTypedRuleContext(pt, 0);
	};
	mu.prototype.RPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.RPAREN) : this.getToken(t.RPAREN, u);
	};
	mu.prototype.KW_INTO = function () {
		return this.getToken(t.KW_INTO, 0);
	};
	mu.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	mu.prototype.KW_BUCKETS = function () {
		return this.getToken(t.KW_BUCKETS, 0);
	};
	mu.prototype.KW_SORTED = function () {
		return this.getToken(t.KW_SORTED, 0);
	};
	mu.prototype.columnNameOrderList = function () {
		return this.getTypedRuleContext(jc, 0);
	};
	mu.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableBuckets(this) : u.visitChildren(this);
	};
	t.TableBucketsContext = mu;
	t.prototype.tableBuckets = function () {
		var u = new mu(this, this._ctx, this.state);
		this.enterRule(u, 308, t.RULE_tableBuckets);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2312),
				this.match(t.KW_CLUSTERED),
				(this.state = 2313),
				this.match(t.KW_BY),
				(this.state = 2314),
				this.match(t.LPAREN),
				(this.state = 2315),
				this.columnNameList(),
				(this.state = 2316),
				this.match(t.RPAREN),
				(this.state = 2323),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_SORTED &&
					((this.state = 2317),
					this.match(t.KW_SORTED),
					(this.state = 2318),
					this.match(t.KW_BY),
					(this.state = 2319),
					this.match(t.LPAREN),
					(this.state = 2320),
					this.columnNameOrderList(),
					(this.state = 2321),
					this.match(t.RPAREN)),
				(this.state = 2325),
				this.match(t.KW_INTO),
				(this.state = 2326),
				this.match(t.Number),
				(this.state = 2327),
				this.match(t.KW_BUCKETS);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ct(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableSkewed),
			this
		);
	}
	ct.prototype = Object.create(s.ParserRuleContext.prototype);
	ct.prototype.constructor = ct;
	ct.prototype.KW_SKEWED = function () {
		return this.getToken(t.KW_SKEWED, 0);
	};
	ct.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	ct.prototype.LPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.LPAREN) : this.getToken(t.LPAREN, u);
	};
	ct.prototype.columnNameList = function () {
		return this.getTypedRuleContext(pt, 0);
	};
	ct.prototype.RPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.RPAREN) : this.getToken(t.RPAREN, u);
	};
	ct.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	ct.prototype.skewedValueElement = function () {
		return this.getTypedRuleContext(Jc, 0);
	};
	ct.prototype.storedAsDirs = function () {
		return this.getTypedRuleContext(Qs, 0);
	};
	ct.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableSkewed(this) : u.visitChildren(this);
	};
	t.TableSkewedContext = ct;
	t.prototype.tableSkewed = function () {
		var u = new ct(this, this._ctx, this.state);
		this.enterRule(u, 310, t.RULE_tableSkewed);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2329),
				this.match(t.KW_SKEWED),
				(this.state = 2330),
				this.match(t.KW_BY),
				(this.state = 2331),
				this.match(t.LPAREN),
				(this.state = 2332),
				this.columnNameList(),
				(this.state = 2333),
				this.match(t.RPAREN),
				(this.state = 2334),
				this.match(t.KW_ON),
				(this.state = 2335),
				this.match(t.LPAREN),
				(this.state = 2336),
				this.skewedValueElement(),
				(this.state = 2337),
				this.match(t.RPAREN),
				(this.state = 2339),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 207, this._ctx);
			e === 1 && ((this.state = 2338), this.storedAsDirs());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function An(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rowFormat),
			this
		);
	}
	An.prototype = Object.create(s.ParserRuleContext.prototype);
	An.prototype.constructor = An;
	An.prototype.rowFormatSerde = function () {
		return this.getTypedRuleContext(oe, 0);
	};
	An.prototype.rowFormatDelimited = function () {
		return this.getTypedRuleContext(Nt, 0);
	};
	An.prototype.accept = function (u) {
		return u instanceof d ? u.visitRowFormat(this) : u.visitChildren(this);
	};
	t.RowFormatContext = An;
	t.prototype.rowFormat = function () {
		var u = new An(this, this._ctx, this.state);
		this.enterRule(u, 312, t.RULE_rowFormat);
		try {
			(this.state = 2343), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 208, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2341), this.rowFormatSerde();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2342), this.rowFormatDelimited();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function No(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_recordReader),
			this
		);
	}
	No.prototype = Object.create(s.ParserRuleContext.prototype);
	No.prototype.constructor = No;
	No.prototype.KW_RECORDREADER = function () {
		return this.getToken(t.KW_RECORDREADER, 0);
	};
	No.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	No.prototype.accept = function (u) {
		return u instanceof d ? u.visitRecordReader(this) : u.visitChildren(this);
	};
	t.RecordReaderContext = No;
	t.prototype.recordReader = function () {
		var u = new No(this, this._ctx, this.state);
		this.enterRule(u, 314, t.RULE_recordReader);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2345),
				this.match(t.KW_RECORDREADER),
				(this.state = 2346),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Po(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_recordWriter),
			this
		);
	}
	Po.prototype = Object.create(s.ParserRuleContext.prototype);
	Po.prototype.constructor = Po;
	Po.prototype.KW_RECORDWRITER = function () {
		return this.getToken(t.KW_RECORDWRITER, 0);
	};
	Po.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Po.prototype.accept = function (u) {
		return u instanceof d ? u.visitRecordWriter(this) : u.visitChildren(this);
	};
	t.RecordWriterContext = Po;
	t.prototype.recordWriter = function () {
		var u = new Po(this, this._ctx, this.state);
		this.enterRule(u, 316, t.RULE_recordWriter);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2348),
				this.match(t.KW_RECORDWRITER),
				(this.state = 2349),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function oe(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rowFormatSerde),
			this
		);
	}
	oe.prototype = Object.create(s.ParserRuleContext.prototype);
	oe.prototype.constructor = oe;
	oe.prototype.KW_ROW = function () {
		return this.getToken(t.KW_ROW, 0);
	};
	oe.prototype.KW_FORMAT = function () {
		return this.getToken(t.KW_FORMAT, 0);
	};
	oe.prototype.KW_SERDE = function () {
		return this.getToken(t.KW_SERDE, 0);
	};
	oe.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	oe.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	oe.prototype.KW_SERDEPROPERTIES = function () {
		return this.getToken(t.KW_SERDEPROPERTIES, 0);
	};
	oe.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	oe.prototype.accept = function (u) {
		return u instanceof d ? u.visitRowFormatSerde(this) : u.visitChildren(this);
	};
	t.RowFormatSerdeContext = oe;
	t.prototype.rowFormatSerde = function () {
		var u = new oe(this, this._ctx, this.state);
		this.enterRule(u, 318, t.RULE_rowFormatSerde);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2351),
				this.match(t.KW_ROW),
				(this.state = 2352),
				this.match(t.KW_FORMAT),
				(this.state = 2353),
				this.match(t.KW_SERDE),
				(this.state = 2354),
				this.match(t.StringLiteral),
				(this.state = 2358),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 2355),
					this.match(t.KW_WITH),
					(this.state = 2356),
					this.match(t.KW_SERDEPROPERTIES),
					(this.state = 2357),
					this.tableProperties());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Nt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rowFormatDelimited),
			this
		);
	}
	Nt.prototype = Object.create(s.ParserRuleContext.prototype);
	Nt.prototype.constructor = Nt;
	Nt.prototype.KW_ROW = function () {
		return this.getToken(t.KW_ROW, 0);
	};
	Nt.prototype.KW_FORMAT = function () {
		return this.getToken(t.KW_FORMAT, 0);
	};
	Nt.prototype.KW_DELIMITED = function () {
		return this.getToken(t.KW_DELIMITED, 0);
	};
	Nt.prototype.tableRowFormatFieldIdentifier = function () {
		return this.getTypedRuleContext(Kn, 0);
	};
	Nt.prototype.tableRowFormatCollItemsIdentifier = function () {
		return this.getTypedRuleContext(xn, 0);
	};
	Nt.prototype.tableRowFormatMapKeysIdentifier = function () {
		return this.getTypedRuleContext(On, 0);
	};
	Nt.prototype.tableRowFormatLinesIdentifier = function () {
		return this.getTypedRuleContext(l2, 0);
	};
	Nt.prototype.tableRowNullFormat = function () {
		return this.getTypedRuleContext(d2, 0);
	};
	Nt.prototype.accept = function (u) {
		return u instanceof d ? u.visitRowFormatDelimited(this) : u.visitChildren(this);
	};
	t.RowFormatDelimitedContext = Nt;
	t.prototype.rowFormatDelimited = function () {
		var u = new Nt(this, this._ctx, this.state);
		this.enterRule(u, 320, t.RULE_rowFormatDelimited);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2360),
				this.match(t.KW_ROW),
				(this.state = 2361),
				this.match(t.KW_FORMAT),
				(this.state = 2362),
				this.match(t.KW_DELIMITED),
				(this.state = 2364),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_FIELDS && ((this.state = 2363), this.tableRowFormatFieldIdentifier()),
				(this.state = 2367),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COLLECTION && ((this.state = 2366), this.tableRowFormatCollItemsIdentifier()),
				(this.state = 2370),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 212, this._ctx);
			i === 1 && ((this.state = 2369), this.tableRowFormatMapKeysIdentifier()),
				(this.state = 2373),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_LINES && ((this.state = 2372), this.tableRowFormatLinesIdentifier()),
				(this.state = 2376),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_NULL && ((this.state = 2375), this.tableRowNullFormat());
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ir(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableRowFormat),
			this
		);
	}
	ir.prototype = Object.create(s.ParserRuleContext.prototype);
	ir.prototype.constructor = ir;
	ir.prototype.rowFormatDelimited = function () {
		return this.getTypedRuleContext(Nt, 0);
	};
	ir.prototype.rowFormatSerde = function () {
		return this.getTypedRuleContext(oe, 0);
	};
	ir.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableRowFormat(this) : u.visitChildren(this);
	};
	t.TableRowFormatContext = ir;
	t.prototype.tableRowFormat = function () {
		var u = new ir(this, this._ctx, this.state);
		this.enterRule(u, 322, t.RULE_tableRowFormat);
		try {
			(this.state = 2380), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 215, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2378), this.rowFormatDelimited();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2379), this.rowFormatSerde();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function rr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tablePropertiesPrefixed),
			this
		);
	}
	rr.prototype = Object.create(s.ParserRuleContext.prototype);
	rr.prototype.constructor = rr;
	rr.prototype.KW_TBLPROPERTIES = function () {
		return this.getToken(t.KW_TBLPROPERTIES, 0);
	};
	rr.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	rr.prototype.accept = function (u) {
		return u instanceof d ? u.visitTablePropertiesPrefixed(this) : u.visitChildren(this);
	};
	t.TablePropertiesPrefixedContext = rr;
	t.prototype.tablePropertiesPrefixed = function () {
		var u = new rr(this, this._ctx, this.state);
		this.enterRule(u, 324, t.RULE_tablePropertiesPrefixed);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2382),
				this.match(t.KW_TBLPROPERTIES),
				(this.state = 2383),
				this.tableProperties();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function H0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableProperties),
			this
		);
	}
	H0.prototype = Object.create(s.ParserRuleContext.prototype);
	H0.prototype.constructor = H0;
	H0.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	H0.prototype.tablePropertiesList = function () {
		return this.getTypedRuleContext(go, 0);
	};
	H0.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	H0.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableProperties(this) : u.visitChildren(this);
	};
	t.TablePropertiesContext = H0;
	t.prototype.tableProperties = function () {
		var u = new H0(this, this._ctx, this.state);
		this.enterRule(u, 326, t.RULE_tableProperties);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2385),
				this.match(t.LPAREN),
				(this.state = 2386),
				this.tablePropertiesList(),
				(this.state = 2387),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function go(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tablePropertiesList),
			this
		);
	}
	go.prototype = Object.create(s.ParserRuleContext.prototype);
	go.prototype.constructor = go;
	go.prototype.keyValueProperty = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ce) : this.getTypedRuleContext(ce, u);
	};
	go.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	go.prototype.keyProperty = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Wn) : this.getTypedRuleContext(Wn, u);
	};
	go.prototype.accept = function (u) {
		return u instanceof d ? u.visitTablePropertiesList(this) : u.visitChildren(this);
	};
	t.TablePropertiesListContext = go;
	t.prototype.tablePropertiesList = function () {
		var u = new go(this, this._ctx, this.state);
		this.enterRule(u, 328, t.RULE_tablePropertiesList);
		var e = 0;
		try {
			(this.state = 2405), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 218, this._ctx);
			switch (i) {
				case 1:
					for (
						this.enterOuterAlt(u, 1),
							this.state = 2389,
							this.keyValueProperty(),
							this.state = 2394,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === t.COMMA;

					)
						(this.state = 2390),
							this.match(t.COMMA),
							(this.state = 2391),
							this.keyValueProperty(),
							(this.state = 2396),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					break;
				case 2:
					for (
						this.enterOuterAlt(u, 2),
							this.state = 2397,
							this.keyProperty(),
							this.state = 2402,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === t.COMMA;

					)
						(this.state = 2398),
							this.match(t.COMMA),
							(this.state = 2399),
							this.keyProperty(),
							(this.state = 2404),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ce(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_keyValueProperty),
			this
		);
	}
	ce.prototype = Object.create(s.ParserRuleContext.prototype);
	ce.prototype.constructor = ce;
	ce.prototype.keyProperty = function () {
		return this.getTypedRuleContext(Wn, 0);
	};
	ce.prototype.EQUAL = function () {
		return this.getToken(t.EQUAL, 0);
	};
	ce.prototype.keyValue = function () {
		return this.getTypedRuleContext(Do, 0);
	};
	ce.prototype.accept = function (u) {
		return u instanceof d ? u.visitKeyValueProperty(this) : u.visitChildren(this);
	};
	t.KeyValuePropertyContext = ce;
	t.prototype.keyValueProperty = function () {
		var u = new ce(this, this._ctx, this.state);
		this.enterRule(u, 330, t.RULE_keyValueProperty);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2407),
				this.keyProperty(),
				(this.state = 2408),
				this.match(t.EQUAL),
				(this.state = 2409),
				this.keyValue();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Do(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_keyValue),
			this
		);
	}
	Do.prototype = Object.create(s.ParserRuleContext.prototype);
	Do.prototype.constructor = Do;
	Do.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	Do.prototype.booleanValue = function () {
		return this.getTypedRuleContext(m1, 0);
	};
	Do.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Do.prototype.accept = function (u) {
		return u instanceof d ? u.visitKeyValue(this) : u.visitChildren(this);
	};
	t.KeyValueContext = Do;
	t.prototype.keyValue = function () {
		var u = new Do(this, this._ctx, this.state);
		this.enterRule(u, 332, t.RULE_keyValue);
		try {
			switch (((this.state = 2414), this._errHandler.sync(this), this._input.LA(1))) {
				case t.Number:
					this.enterOuterAlt(u, 1), (this.state = 2411), this.match(t.Number);
					break;
				case t.KW_TRUE:
				case t.KW_FALSE:
					this.enterOuterAlt(u, 2), (this.state = 2412), this.booleanValue();
					break;
				case t.StringLiteral:
					this.enterOuterAlt(u, 3), (this.state = 2413), this.match(t.StringLiteral);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Wn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_keyProperty),
			this
		);
	}
	Wn.prototype = Object.create(s.ParserRuleContext.prototype);
	Wn.prototype.constructor = Wn;
	Wn.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	Wn.prototype.DOT = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.DOT) : this.getToken(t.DOT, u);
	};
	Wn.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Wn.prototype.accept = function (u) {
		return u instanceof d ? u.visitKeyProperty(this) : u.visitChildren(this);
	};
	t.KeyPropertyContext = Wn;
	t.prototype.keyProperty = function () {
		var u = new Wn(this, this._ctx, this.state);
		this.enterRule(u, 334, t.RULE_keyProperty);
		var e = 0;
		try {
			switch (((this.state = 2425), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.Identifier:
					for (
						this.enterOuterAlt(u, 1),
							this.state = 2416,
							this.identifier(),
							this.state = 2421,
							this._errHandler.sync(this),
							e = this._input.LA(1);
						e === t.DOT;

					)
						(this.state = 2417),
							this.match(t.DOT),
							(this.state = 2418),
							this.identifier(),
							(this.state = 2423),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					break;
				case t.StringLiteral:
					this.enterOuterAlt(u, 2), (this.state = 2424), this.match(t.StringLiteral);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Kn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableRowFormatFieldIdentifier),
			this
		);
	}
	Kn.prototype = Object.create(s.ParserRuleContext.prototype);
	Kn.prototype.constructor = Kn;
	Kn.prototype.KW_FIELDS = function () {
		return this.getToken(t.KW_FIELDS, 0);
	};
	Kn.prototype.KW_TERMINATED = function () {
		return this.getToken(t.KW_TERMINATED, 0);
	};
	Kn.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	Kn.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Kn.prototype.tableRowFormatFieldIdentifierEcapedBy = function () {
		return this.getTypedRuleContext(Uo, 0);
	};
	Kn.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableRowFormatFieldIdentifier(this) : u.visitChildren(this);
	};
	t.TableRowFormatFieldIdentifierContext = Kn;
	t.prototype.tableRowFormatFieldIdentifier = function () {
		var u = new Kn(this, this._ctx, this.state);
		this.enterRule(u, 336, t.RULE_tableRowFormatFieldIdentifier);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2427),
				this.match(t.KW_FIELDS),
				(this.state = 2428),
				this.match(t.KW_TERMINATED),
				(this.state = 2429),
				this.match(t.KW_BY),
				(this.state = 2430),
				this.match(t.StringLiteral),
				(this.state = 2432),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ESCAPED && ((this.state = 2431), this.tableRowFormatFieldIdentifierEcapedBy());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Uo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableRowFormatFieldIdentifierEcapedBy),
			this
		);
	}
	Uo.prototype = Object.create(s.ParserRuleContext.prototype);
	Uo.prototype.constructor = Uo;
	Uo.prototype.KW_ESCAPED = function () {
		return this.getToken(t.KW_ESCAPED, 0);
	};
	Uo.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	Uo.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Uo.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableRowFormatFieldIdentifierEcapedBy(this) : u.visitChildren(this);
	};
	t.TableRowFormatFieldIdentifierEcapedByContext = Uo;
	t.prototype.tableRowFormatFieldIdentifierEcapedBy = function () {
		var u = new Uo(this, this._ctx, this.state);
		this.enterRule(u, 338, t.RULE_tableRowFormatFieldIdentifierEcapedBy);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2434),
				this.match(t.KW_ESCAPED),
				(this.state = 2435),
				this.match(t.KW_BY),
				(this.state = 2436),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function xn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableRowFormatCollItemsIdentifier),
			this
		);
	}
	xn.prototype = Object.create(s.ParserRuleContext.prototype);
	xn.prototype.constructor = xn;
	xn.prototype.KW_COLLECTION = function () {
		return this.getToken(t.KW_COLLECTION, 0);
	};
	xn.prototype.KW_ITEMS = function () {
		return this.getToken(t.KW_ITEMS, 0);
	};
	xn.prototype.KW_TERMINATED = function () {
		return this.getToken(t.KW_TERMINATED, 0);
	};
	xn.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	xn.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	xn.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableRowFormatCollItemsIdentifier(this) : u.visitChildren(this);
	};
	t.TableRowFormatCollItemsIdentifierContext = xn;
	t.prototype.tableRowFormatCollItemsIdentifier = function () {
		var u = new xn(this, this._ctx, this.state);
		this.enterRule(u, 340, t.RULE_tableRowFormatCollItemsIdentifier);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2438),
				this.match(t.KW_COLLECTION),
				(this.state = 2439),
				this.match(t.KW_ITEMS),
				(this.state = 2440),
				this.match(t.KW_TERMINATED),
				(this.state = 2441),
				this.match(t.KW_BY),
				(this.state = 2442),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function On(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableRowFormatMapKeysIdentifier),
			this
		);
	}
	On.prototype = Object.create(s.ParserRuleContext.prototype);
	On.prototype.constructor = On;
	On.prototype.KW_MAP = function () {
		return this.getToken(t.KW_MAP, 0);
	};
	On.prototype.KW_KEYS = function () {
		return this.getToken(t.KW_KEYS, 0);
	};
	On.prototype.KW_TERMINATED = function () {
		return this.getToken(t.KW_TERMINATED, 0);
	};
	On.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	On.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	On.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableRowFormatMapKeysIdentifier(this) : u.visitChildren(this);
	};
	t.TableRowFormatMapKeysIdentifierContext = On;
	t.prototype.tableRowFormatMapKeysIdentifier = function () {
		var u = new On(this, this._ctx, this.state);
		this.enterRule(u, 342, t.RULE_tableRowFormatMapKeysIdentifier);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2444),
				this.match(t.KW_MAP),
				(this.state = 2445),
				this.match(t.KW_KEYS),
				(this.state = 2446),
				this.match(t.KW_TERMINATED),
				(this.state = 2447),
				this.match(t.KW_BY),
				(this.state = 2448),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function l2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableRowFormatLinesIdentifier),
			this
		);
	}
	l2.prototype = Object.create(s.ParserRuleContext.prototype);
	l2.prototype.constructor = l2;
	l2.prototype.KW_LINES = function () {
		return this.getToken(t.KW_LINES, 0);
	};
	l2.prototype.KW_TERMINATED = function () {
		return this.getToken(t.KW_TERMINATED, 0);
	};
	l2.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	l2.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	l2.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableRowFormatLinesIdentifier(this) : u.visitChildren(this);
	};
	t.TableRowFormatLinesIdentifierContext = l2;
	t.prototype.tableRowFormatLinesIdentifier = function () {
		var u = new l2(this, this._ctx, this.state);
		this.enterRule(u, 344, t.RULE_tableRowFormatLinesIdentifier);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2450),
				this.match(t.KW_LINES),
				(this.state = 2451),
				this.match(t.KW_TERMINATED),
				(this.state = 2452),
				this.match(t.KW_BY),
				(this.state = 2453),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function d2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableRowNullFormat),
			this
		);
	}
	d2.prototype = Object.create(s.ParserRuleContext.prototype);
	d2.prototype.constructor = d2;
	d2.prototype.KW_NULL = function () {
		return this.getToken(t.KW_NULL, 0);
	};
	d2.prototype.KW_DEFINED = function () {
		return this.getToken(t.KW_DEFINED, 0);
	};
	d2.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	d2.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	d2.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableRowNullFormat(this) : u.visitChildren(this);
	};
	t.TableRowNullFormatContext = d2;
	t.prototype.tableRowNullFormat = function () {
		var u = new d2(this, this._ctx, this.state);
		this.enterRule(u, 346, t.RULE_tableRowNullFormat);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2455),
				this.match(t.KW_NULL),
				(this.state = 2456),
				this.match(t.KW_DEFINED),
				(this.state = 2457),
				this.match(t.KW_AS),
				(this.state = 2458),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ti(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableFileFormat),
			this
		);
	}
	ti.prototype = Object.create(s.ParserRuleContext.prototype);
	ti.prototype.constructor = ti;
	ti.prototype.tableInputOutputFileFormat = function () {
		return this.getTypedRuleContext(ei, 0);
	};
	ti.prototype.tableFileFormatStoredBy = function () {
		return this.getTypedRuleContext(nr, 0);
	};
	ti.prototype.tableFileFormatStoredAs = function () {
		return this.getTypedRuleContext(vo, 0);
	};
	ti.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableFileFormat(this) : u.visitChildren(this);
	};
	t.TableFileFormatContext = ti;
	t.prototype.tableFileFormat = function () {
		var u = new ti(this, this._ctx, this.state);
		this.enterRule(u, 348, t.RULE_tableFileFormat);
		try {
			(this.state = 2463), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 223, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2460), this.tableInputOutputFileFormat();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2461), this.tableFileFormatStoredBy();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 2462), this.tableFileFormatStoredAs();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function nr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableFileFormatStoredBy),
			this
		);
	}
	nr.prototype = Object.create(s.ParserRuleContext.prototype);
	nr.prototype.constructor = nr;
	nr.prototype.KW_STORED = function () {
		return this.getToken(t.KW_STORED, 0);
	};
	nr.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	nr.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	nr.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	nr.prototype.KW_SERDEPROPERTIES = function () {
		return this.getToken(t.KW_SERDEPROPERTIES, 0);
	};
	nr.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	nr.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableFileFormatStoredBy(this) : u.visitChildren(this);
	};
	t.TableFileFormatStoredByContext = nr;
	t.prototype.tableFileFormatStoredBy = function () {
		var u = new nr(this, this._ctx, this.state);
		this.enterRule(u, 350, t.RULE_tableFileFormatStoredBy);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2465),
				this.match(t.KW_STORED),
				(this.state = 2466),
				this.match(t.KW_BY),
				(this.state = 2467),
				this.match(t.StringLiteral),
				(this.state = 2471),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 2468),
					this.match(t.KW_WITH),
					(this.state = 2469),
					this.match(t.KW_SERDEPROPERTIES),
					(this.state = 2470),
					this.tableProperties());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function vo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableFileFormatStoredAs),
			this
		);
	}
	vo.prototype = Object.create(s.ParserRuleContext.prototype);
	vo.prototype.constructor = vo;
	vo.prototype.KW_STORED = function () {
		return this.getToken(t.KW_STORED, 0);
	};
	vo.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	vo.prototype.tableFileFormatStoredAsFormat = function () {
		return this.getTypedRuleContext(pe, 0);
	};
	vo.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableFileFormatStoredAs(this) : u.visitChildren(this);
	};
	t.TableFileFormatStoredAsContext = vo;
	t.prototype.tableFileFormatStoredAs = function () {
		var u = new vo(this, this._ctx, this.state);
		this.enterRule(u, 352, t.RULE_tableFileFormatStoredAs);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2473),
				this.match(t.KW_STORED),
				(this.state = 2474),
				this.match(t.KW_AS),
				(this.state = 2475),
				this.tableFileFormatStoredAsFormat();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function pe(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableFileFormatStoredAsFormat),
			this
		);
	}
	pe.prototype = Object.create(s.ParserRuleContext.prototype);
	pe.prototype.constructor = pe;
	pe.prototype.KW_SEQUENCEFILE = function () {
		return this.getToken(t.KW_SEQUENCEFILE, 0);
	};
	pe.prototype.KW_TEXTFILE = function () {
		return this.getToken(t.KW_TEXTFILE, 0);
	};
	pe.prototype.KW_RCFILE = function () {
		return this.getToken(t.KW_RCFILE, 0);
	};
	pe.prototype.KW_ORC = function () {
		return this.getToken(t.KW_ORC, 0);
	};
	pe.prototype.KW_PARQUET = function () {
		return this.getToken(t.KW_PARQUET, 0);
	};
	pe.prototype.KW_AVRO = function () {
		return this.getToken(t.KW_AVRO, 0);
	};
	pe.prototype.KW_JSONFILE = function () {
		return this.getToken(t.KW_JSONFILE, 0);
	};
	pe.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableFileFormatStoredAsFormat(this) : u.visitChildren(this);
	};
	t.TableFileFormatStoredAsFormatContext = pe;
	t.prototype.tableFileFormatStoredAsFormat = function () {
		var u = new pe(this, this._ctx, this.state);
		this.enterRule(u, 354, t.RULE_tableFileFormatStoredAsFormat);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2477),
				(e = this._input.LA(1)),
				((e - 333) & -32) == 0 &&
				((1 << (e - 333)) &
					((1 << (t.KW_SEQUENCEFILE - 333)) |
						(1 << (t.KW_TEXTFILE - 333)) |
						(1 << (t.KW_RCFILE - 333)) |
						(1 << (t.KW_ORC - 333)) |
						(1 << (t.KW_PARQUET - 333)) |
						(1 << (t.KW_AVRO - 333)) |
						(1 << (t.KW_JSONFILE - 333)))) !==
					0
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ei(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableInputOutputFileFormat),
			this
		);
	}
	ei.prototype = Object.create(s.ParserRuleContext.prototype);
	ei.prototype.constructor = ei;
	ei.prototype.KW_STORED = function () {
		return this.getToken(t.KW_STORED, 0);
	};
	ei.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	ei.prototype.tableInputLiteral = function () {
		return this.getTypedRuleContext(Vc, 0);
	};
	ei.prototype.tableOutputLiteral = function () {
		return this.getTypedRuleContext(Bc, 0);
	};
	ei.prototype.KW_INPUTDRIVER = function () {
		return this.getToken(t.KW_INPUTDRIVER, 0);
	};
	ei.prototype.StringLiteral = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(t.StringLiteral) : this.getToken(t.StringLiteral, u)
		);
	};
	ei.prototype.KW_OUTPUTDRIVER = function () {
		return this.getToken(t.KW_OUTPUTDRIVER, 0);
	};
	ei.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableInputOutputFileFormat(this) : u.visitChildren(this);
	};
	t.TableInputOutputFileFormatContext = ei;
	t.prototype.tableInputOutputFileFormat = function () {
		var u = new ei(this, this._ctx, this.state);
		this.enterRule(u, 356, t.RULE_tableInputOutputFileFormat);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2479),
				this.match(t.KW_STORED),
				(this.state = 2480),
				this.match(t.KW_AS),
				(this.state = 2481),
				this.tableInputLiteral(),
				(this.state = 2482),
				this.tableOutputLiteral(),
				(this.state = 2487),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_INPUTDRIVER &&
					((this.state = 2483),
					this.match(t.KW_INPUTDRIVER),
					(this.state = 2484),
					this.match(t.StringLiteral),
					(this.state = 2485),
					this.match(t.KW_OUTPUTDRIVER),
					(this.state = 2486),
					this.match(t.StringLiteral));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Vc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableInputLiteral),
			this
		);
	}
	Vc.prototype = Object.create(s.ParserRuleContext.prototype);
	Vc.prototype.constructor = Vc;
	Vc.prototype.KW_INPUTFORMAT = function () {
		return this.getToken(t.KW_INPUTFORMAT, 0);
	};
	Vc.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Vc.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableInputLiteral(this) : u.visitChildren(this);
	};
	t.TableInputLiteralContext = Vc;
	t.prototype.tableInputLiteral = function () {
		var u = new Vc(this, this._ctx, this.state);
		this.enterRule(u, 358, t.RULE_tableInputLiteral);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2489),
				this.match(t.KW_INPUTFORMAT),
				(this.state = 2490),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Bc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableOutputLiteral),
			this
		);
	}
	Bc.prototype = Object.create(s.ParserRuleContext.prototype);
	Bc.prototype.constructor = Bc;
	Bc.prototype.KW_OUTPUTFORMAT = function () {
		return this.getToken(t.KW_OUTPUTFORMAT, 0);
	};
	Bc.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Bc.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableOutputLiteral(this) : u.visitChildren(this);
	};
	t.TableOutputLiteralContext = Bc;
	t.prototype.tableOutputLiteral = function () {
		var u = new Bc(this, this._ctx, this.state);
		this.enterRule(u, 360, t.RULE_tableOutputLiteral);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2492),
				this.match(t.KW_OUTPUTFORMAT),
				(this.state = 2493),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ln(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableLocation),
			this
		);
	}
	Ln.prototype = Object.create(s.ParserRuleContext.prototype);
	Ln.prototype.constructor = Ln;
	Ln.prototype.KW_LOCATION = function () {
		return this.getToken(t.KW_LOCATION, 0);
	};
	Ln.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Ln.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableLocation(this) : u.visitChildren(this);
	};
	t.TableLocationContext = Ln;
	t.prototype.tableLocation = function () {
		var u = new Ln(this, this._ctx, this.state);
		this.enterRule(u, 362, t.RULE_tableLocation);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2495),
				this.match(t.KW_LOCATION),
				(this.state = 2496),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Sn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameTypeList),
			this
		);
	}
	Sn.prototype = Object.create(s.ParserRuleContext.prototype);
	Sn.prototype.constructor = Sn;
	Sn.prototype.columnNameType = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(sr) : this.getTypedRuleContext(sr, u);
	};
	Sn.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Sn.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameTypeList(this) : u.visitChildren(this);
	};
	t.ColumnNameTypeListContext = Sn;
	t.prototype.columnNameTypeList = function () {
		var u = new Sn(this, this._ctx, this.state);
		this.enterRule(u, 364, t.RULE_columnNameTypeList);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2498),
				this.columnNameType(),
				(this.state = 2503),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 226, this._ctx);
				e != 2 && e != s.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 2499), this.match(t.COMMA), (this.state = 2500), this.columnNameType()),
					(this.state = 2505),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 226, this._ctx));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Yc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameTypeOrConstraintList),
			this
		);
	}
	Yc.prototype = Object.create(s.ParserRuleContext.prototype);
	Yc.prototype.constructor = Yc;
	Yc.prototype.columnNameTypeOrConstraint = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Bo) : this.getTypedRuleContext(Bo, u);
	};
	Yc.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Yc.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameTypeOrConstraintList(this) : u.visitChildren(this);
	};
	t.ColumnNameTypeOrConstraintListContext = Yc;
	t.prototype.columnNameTypeOrConstraintList = function () {
		var u = new Yc(this, this._ctx, this.state);
		this.enterRule(u, 366, t.RULE_columnNameTypeOrConstraintList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2506,
					this.columnNameTypeOrConstraint(),
					this.state = 2511,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2507),
					this.match(t.COMMA),
					(this.state = 2508),
					this.columnNameTypeOrConstraint(),
					(this.state = 2513),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Gc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameColonTypeList),
			this
		);
	}
	Gc.prototype = Object.create(s.ParserRuleContext.prototype);
	Gc.prototype.constructor = Gc;
	Gc.prototype.columnNameColonType = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ar) : this.getTypedRuleContext(ar, u);
	};
	Gc.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Gc.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameColonTypeList(this) : u.visitChildren(this);
	};
	t.ColumnNameColonTypeListContext = Gc;
	t.prototype.columnNameColonTypeList = function () {
		var u = new Gc(this, this._ctx, this.state);
		this.enterRule(u, 368, t.RULE_columnNameColonTypeList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2514,
					this.columnNameColonType(),
					this.state = 2519,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2515),
					this.match(t.COMMA),
					(this.state = 2516),
					this.columnNameColonType(),
					(this.state = 2521),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function pt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameList),
			this
		);
	}
	pt.prototype = Object.create(s.ParserRuleContext.prototype);
	pt.prototype.constructor = pt;
	pt.prototype.columnName = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(f2) : this.getTypedRuleContext(f2, u);
	};
	pt.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	pt.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameList(this) : u.visitChildren(this);
	};
	t.ColumnNameListContext = pt;
	t.prototype.columnNameList = function () {
		var u = new pt(this, this._ctx, this.state);
		this.enterRule(u, 370, t.RULE_columnNameList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2522,
					this.columnName(),
					this.state = 2527,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2523),
					this.match(t.COMMA),
					(this.state = 2524),
					this.columnName(),
					(this.state = 2529),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function f2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnName),
			this
		);
	}
	f2.prototype = Object.create(s.ParserRuleContext.prototype);
	f2.prototype.constructor = f2;
	f2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	f2.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnName(this) : u.visitChildren(this);
	};
	t.ColumnNameContext = f2;
	t.prototype.columnName = function () {
		var u = new f2(this, this._ctx, this.state);
		this.enterRule(u, 372, t.RULE_columnName);
		try {
			this.enterOuterAlt(u, 1), (this.state = 2530), this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function In(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_extColumnName),
			this
		);
	}
	In.prototype = Object.create(s.ParserRuleContext.prototype);
	In.prototype.constructor = In;
	In.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	In.prototype.DOT = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.DOT) : this.getToken(t.DOT, u);
	};
	In.prototype.KW_ELEM_TYPE = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(t.KW_ELEM_TYPE) : this.getToken(t.KW_ELEM_TYPE, u)
		);
	};
	In.prototype.KW_KEY_TYPE = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_KEY_TYPE) : this.getToken(t.KW_KEY_TYPE, u);
	};
	In.prototype.KW_VALUE_TYPE = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(t.KW_VALUE_TYPE) : this.getToken(t.KW_VALUE_TYPE, u)
		);
	};
	In.prototype.accept = function (u) {
		return u instanceof d ? u.visitExtColumnName(this) : u.visitChildren(this);
	};
	t.ExtColumnNameContext = In;
	t.prototype.extColumnName = function () {
		var u = new In(this, this._ctx, this.state);
		this.enterRule(u, 374, t.RULE_extColumnName);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2532,
					this.identifier(),
					this.state = 2542,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.DOT;

			) {
				(this.state = 2533), this.match(t.DOT), (this.state = 2538), this._errHandler.sync(this);
				var i = this._interp.adaptivePredict(this._input, 230, this._ctx);
				switch (i) {
					case 1:
						(this.state = 2534), this.match(t.KW_ELEM_TYPE);
						break;
					case 2:
						(this.state = 2535), this.match(t.KW_KEY_TYPE);
						break;
					case 3:
						(this.state = 2536), this.match(t.KW_VALUE_TYPE);
						break;
					case 4:
						(this.state = 2537), this.identifier();
						break;
				}
				(this.state = 2544), this._errHandler.sync(this), (e = this._input.LA(1));
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function jc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameOrderList),
			this
		);
	}
	jc.prototype = Object.create(s.ParserRuleContext.prototype);
	jc.prototype.constructor = jc;
	jc.prototype.columnNameOrder = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(m2) : this.getTypedRuleContext(m2, u);
	};
	jc.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	jc.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameOrderList(this) : u.visitChildren(this);
	};
	t.ColumnNameOrderListContext = jc;
	t.prototype.columnNameOrderList = function () {
		var u = new jc(this, this._ctx, this.state);
		this.enterRule(u, 376, t.RULE_columnNameOrderList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2545,
					this.columnNameOrder(),
					this.state = 2550,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2546),
					this.match(t.COMMA),
					(this.state = 2547),
					this.columnNameOrder(),
					(this.state = 2552),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function gu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnParenthesesList),
			this
		);
	}
	gu.prototype = Object.create(s.ParserRuleContext.prototype);
	gu.prototype.constructor = gu;
	gu.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	gu.prototype.columnNameList = function () {
		return this.getTypedRuleContext(pt, 0);
	};
	gu.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	gu.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnParenthesesList(this) : u.visitChildren(this);
	};
	t.ColumnParenthesesListContext = gu;
	t.prototype.columnParenthesesList = function () {
		var u = new gu(this, this._ctx, this.state);
		this.enterRule(u, 378, t.RULE_columnParenthesesList);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2553),
				this.match(t.LPAREN),
				(this.state = 2554),
				this.columnNameList(),
				(this.state = 2555),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_enableValidateSpecification),
			this
		);
	}
	_2.prototype = Object.create(s.ParserRuleContext.prototype);
	_2.prototype.constructor = _2;
	_2.prototype.enableSpecification = function () {
		return this.getTypedRuleContext(Xc, 0);
	};
	_2.prototype.validateSpecification = function () {
		return this.getTypedRuleContext(Qc, 0);
	};
	_2.prototype.enforcedSpecification = function () {
		return this.getTypedRuleContext(qc, 0);
	};
	_2.prototype.accept = function (u) {
		return u instanceof d ? u.visitEnableValidateSpecification(this) : u.visitChildren(this);
	};
	t.EnableValidateSpecificationContext = _2;
	t.prototype.enableValidateSpecification = function () {
		var u = new _2(this, this._ctx, this.state);
		this.enterRule(u, 380, t.RULE_enableValidateSpecification);
		var e = 0;
		try {
			switch (((this.state = 2562), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ENABLE:
				case t.KW_DISABLE:
					this.enterOuterAlt(u, 1),
						(this.state = 2557),
						this.enableSpecification(),
						(this.state = 2559),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_VALIDATE || e === t.KW_NOVALIDATE) &&
							((this.state = 2558), this.validateSpecification());
					break;
				case t.KW_NOT:
				case t.KW_ENFORCED:
					this.enterOuterAlt(u, 2), (this.state = 2561), this.enforcedSpecification();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Xc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_enableSpecification),
			this
		);
	}
	Xc.prototype = Object.create(s.ParserRuleContext.prototype);
	Xc.prototype.constructor = Xc;
	Xc.prototype.KW_ENABLE = function () {
		return this.getToken(t.KW_ENABLE, 0);
	};
	Xc.prototype.KW_DISABLE = function () {
		return this.getToken(t.KW_DISABLE, 0);
	};
	Xc.prototype.accept = function (u) {
		return u instanceof d ? u.visitEnableSpecification(this) : u.visitChildren(this);
	};
	t.EnableSpecificationContext = Xc;
	t.prototype.enableSpecification = function () {
		var u = new Xc(this, this._ctx, this.state);
		this.enterRule(u, 382, t.RULE_enableSpecification);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2564),
				(e = this._input.LA(1)),
				e === t.KW_ENABLE || e === t.KW_DISABLE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Qc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_validateSpecification),
			this
		);
	}
	Qc.prototype = Object.create(s.ParserRuleContext.prototype);
	Qc.prototype.constructor = Qc;
	Qc.prototype.KW_VALIDATE = function () {
		return this.getToken(t.KW_VALIDATE, 0);
	};
	Qc.prototype.KW_NOVALIDATE = function () {
		return this.getToken(t.KW_NOVALIDATE, 0);
	};
	Qc.prototype.accept = function (u) {
		return u instanceof d ? u.visitValidateSpecification(this) : u.visitChildren(this);
	};
	t.ValidateSpecificationContext = Qc;
	t.prototype.validateSpecification = function () {
		var u = new Qc(this, this._ctx, this.state);
		this.enterRule(u, 384, t.RULE_validateSpecification);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2566),
				(e = this._input.LA(1)),
				e === t.KW_VALIDATE || e === t.KW_NOVALIDATE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_enforcedSpecification),
			this
		);
	}
	qc.prototype = Object.create(s.ParserRuleContext.prototype);
	qc.prototype.constructor = qc;
	qc.prototype.KW_ENFORCED = function () {
		return this.getToken(t.KW_ENFORCED, 0);
	};
	qc.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	qc.prototype.accept = function (u) {
		return u instanceof d ? u.visitEnforcedSpecification(this) : u.visitChildren(this);
	};
	t.EnforcedSpecificationContext = qc;
	t.prototype.enforcedSpecification = function () {
		var u = new qc(this, this._ctx, this.state);
		this.enterRule(u, 386, t.RULE_enforcedSpecification);
		try {
			switch (((this.state = 2571), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ENFORCED:
					this.enterOuterAlt(u, 1), (this.state = 2568), this.match(t.KW_ENFORCED);
					break;
				case t.KW_NOT:
					this.enterOuterAlt(u, 2),
						(this.state = 2569),
						this.match(t.KW_NOT),
						(this.state = 2570),
						this.match(t.KW_ENFORCED);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function wo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_relySpecification),
			this
		);
	}
	wo.prototype = Object.create(s.ParserRuleContext.prototype);
	wo.prototype.constructor = wo;
	wo.prototype.KW_RELY = function () {
		return this.getToken(t.KW_RELY, 0);
	};
	wo.prototype.KW_NORELY = function () {
		return this.getToken(t.KW_NORELY, 0);
	};
	wo.prototype.accept = function (u) {
		return u instanceof d ? u.visitRelySpecification(this) : u.visitChildren(this);
	};
	t.RelySpecificationContext = wo;
	t.prototype.relySpecification = function () {
		var u = new wo(this, this._ctx, this.state);
		this.enterRule(u, 388, t.RULE_relySpecification);
		var e = 0;
		try {
			switch (((this.state = 2577), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_RELY:
					this.enterOuterAlt(u, 1), (this.state = 2573), this.match(t.KW_RELY);
					break;
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_COMMENT:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_NORELY:
				case t.COMMA:
				case t.SEMICOLON:
				case t.RPAREN:
					this.enterOuterAlt(u, 2),
						(this.state = 2575),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_NORELY && ((this.state = 2574), this.match(t.KW_NORELY));
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function E2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createConstraint),
			this
		);
	}
	E2.prototype = Object.create(s.ParserRuleContext.prototype);
	E2.prototype.constructor = E2;
	E2.prototype.tableLevelConstraint = function () {
		return this.getTypedRuleContext(Mo, 0);
	};
	E2.prototype.KW_CONSTRAINT = function () {
		return this.getToken(t.KW_CONSTRAINT, 0);
	};
	E2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	E2.prototype.constraintOptsCreate = function () {
		return this.getTypedRuleContext(gn, 0);
	};
	E2.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateConstraint(this) : u.visitChildren(this);
	};
	t.CreateConstraintContext = E2;
	t.prototype.createConstraint = function () {
		var u = new E2(this, this._ctx, this.state);
		this.enterRule(u, 390, t.RULE_createConstraint);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2581),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_CONSTRAINT &&
					((this.state = 2579), this.match(t.KW_CONSTRAINT), (this.state = 2580), this.identifier()),
				(this.state = 2583),
				this.tableLevelConstraint(),
				(this.state = 2585),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT || e === t.KW_ENABLE || e === t.KW_DISABLE || e === t.KW_ENFORCED) &&
					((this.state = 2584), this.constraintOptsCreate());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function T2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterConstraintWithName),
			this
		);
	}
	T2.prototype = Object.create(s.ParserRuleContext.prototype);
	T2.prototype.constructor = T2;
	T2.prototype.KW_CONSTRAINT = function () {
		return this.getToken(t.KW_CONSTRAINT, 0);
	};
	T2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	T2.prototype.tableLevelConstraint = function () {
		return this.getTypedRuleContext(Mo, 0);
	};
	T2.prototype.constraintOptsAlter = function () {
		return this.getTypedRuleContext(Dn, 0);
	};
	T2.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterConstraintWithName(this) : u.visitChildren(this);
	};
	t.AlterConstraintWithNameContext = T2;
	t.prototype.alterConstraintWithName = function () {
		var u = new T2(this, this._ctx, this.state);
		this.enterRule(u, 392, t.RULE_alterConstraintWithName);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2587),
				this.match(t.KW_CONSTRAINT),
				(this.state = 2588),
				this.identifier(),
				(this.state = 2589),
				this.tableLevelConstraint(),
				(this.state = 2591),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT || e === t.KW_ENABLE || e === t.KW_DISABLE || e === t.KW_ENFORCED) &&
					((this.state = 2590), this.constraintOptsAlter());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Mo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableLevelConstraint),
			this
		);
	}
	Mo.prototype = Object.create(s.ParserRuleContext.prototype);
	Mo.prototype.constructor = Mo;
	Mo.prototype.pkUkConstraint = function () {
		return this.getTypedRuleContext(Zc, 0);
	};
	Mo.prototype.checkConstraint = function () {
		return this.getTypedRuleContext(Ho, 0);
	};
	Mo.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableLevelConstraint(this) : u.visitChildren(this);
	};
	t.TableLevelConstraintContext = Mo;
	t.prototype.tableLevelConstraint = function () {
		var u = new Mo(this, this._ctx, this.state);
		this.enterRule(u, 394, t.RULE_tableLevelConstraint);
		try {
			switch (((this.state = 2595), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_PRIMARY:
				case t.KW_UNIQUE:
					this.enterOuterAlt(u, 1), (this.state = 2593), this.pkUkConstraint();
					break;
				case t.KW_CHECK:
					this.enterOuterAlt(u, 2), (this.state = 2594), this.checkConstraint();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Zc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_pkUkConstraint),
			(this.pkCols = null),
			this
		);
	}
	Zc.prototype = Object.create(s.ParserRuleContext.prototype);
	Zc.prototype.constructor = Zc;
	Zc.prototype.tableConstraintType = function () {
		return this.getTypedRuleContext(A2, 0);
	};
	Zc.prototype.columnParenthesesList = function () {
		return this.getTypedRuleContext(gu, 0);
	};
	Zc.prototype.accept = function (u) {
		return u instanceof d ? u.visitPkUkConstraint(this) : u.visitChildren(this);
	};
	t.PkUkConstraintContext = Zc;
	t.prototype.pkUkConstraint = function () {
		var u = new Zc(this, this._ctx, this.state);
		this.enterRule(u, 396, t.RULE_pkUkConstraint);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2597),
				this.tableConstraintType(),
				(this.state = 2598),
				(u.pkCols = this.columnParenthesesList());
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ho(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_checkConstraint),
			this
		);
	}
	Ho.prototype = Object.create(s.ParserRuleContext.prototype);
	Ho.prototype.constructor = Ho;
	Ho.prototype.KW_CHECK = function () {
		return this.getToken(t.KW_CHECK, 0);
	};
	Ho.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	Ho.prototype.accept = function (u) {
		return u instanceof d ? u.visitCheckConstraint(this) : u.visitChildren(this);
	};
	t.CheckConstraintContext = Ho;
	t.prototype.checkConstraint = function () {
		var u = new Ho(this, this._ctx, this.state);
		this.enterRule(u, 398, t.RULE_checkConstraint);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2600),
				this.match(t.KW_CHECK),
				(this.state = 2601),
				this.expression(0);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function he(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createForeignKey),
			this
		);
	}
	he.prototype = Object.create(s.ParserRuleContext.prototype);
	he.prototype.constructor = he;
	he.prototype.KW_FOREIGN = function () {
		return this.getToken(t.KW_FOREIGN, 0);
	};
	he.prototype.KW_KEY = function () {
		return this.getToken(t.KW_KEY, 0);
	};
	he.prototype.columnParenthesesList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(gu) : this.getTypedRuleContext(gu, u);
	};
	he.prototype.KW_REFERENCES = function () {
		return this.getToken(t.KW_REFERENCES, 0);
	};
	he.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	he.prototype.KW_CONSTRAINT = function () {
		return this.getToken(t.KW_CONSTRAINT, 0);
	};
	he.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	he.prototype.constraintOptsCreate = function () {
		return this.getTypedRuleContext(gn, 0);
	};
	he.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateForeignKey(this) : u.visitChildren(this);
	};
	t.CreateForeignKeyContext = he;
	t.prototype.createForeignKey = function () {
		var u = new he(this, this._ctx, this.state);
		this.enterRule(u, 400, t.RULE_createForeignKey);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2605),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_CONSTRAINT &&
					((this.state = 2603), this.match(t.KW_CONSTRAINT), (this.state = 2604), this.identifier()),
				(this.state = 2607),
				this.match(t.KW_FOREIGN),
				(this.state = 2608),
				this.match(t.KW_KEY),
				(this.state = 2609),
				this.columnParenthesesList(),
				(this.state = 2610),
				this.match(t.KW_REFERENCES),
				(this.state = 2611),
				this.tableName(),
				(this.state = 2612),
				this.columnParenthesesList(),
				(this.state = 2614),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT || e === t.KW_ENABLE || e === t.KW_DISABLE || e === t.KW_ENFORCED) &&
					((this.state = 2613), this.constraintOptsCreate());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function le(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterForeignKeyWithName),
			this
		);
	}
	le.prototype = Object.create(s.ParserRuleContext.prototype);
	le.prototype.constructor = le;
	le.prototype.KW_CONSTRAINT = function () {
		return this.getToken(t.KW_CONSTRAINT, 0);
	};
	le.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	le.prototype.KW_FOREIGN = function () {
		return this.getToken(t.KW_FOREIGN, 0);
	};
	le.prototype.KW_KEY = function () {
		return this.getToken(t.KW_KEY, 0);
	};
	le.prototype.columnParenthesesList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(gu) : this.getTypedRuleContext(gu, u);
	};
	le.prototype.KW_REFERENCES = function () {
		return this.getToken(t.KW_REFERENCES, 0);
	};
	le.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	le.prototype.constraintOptsAlter = function () {
		return this.getTypedRuleContext(Dn, 0);
	};
	le.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterForeignKeyWithName(this) : u.visitChildren(this);
	};
	t.AlterForeignKeyWithNameContext = le;
	t.prototype.alterForeignKeyWithName = function () {
		var u = new le(this, this._ctx, this.state);
		this.enterRule(u, 402, t.RULE_alterForeignKeyWithName);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2616),
				this.match(t.KW_CONSTRAINT),
				(this.state = 2617),
				this.identifier(),
				(this.state = 2618),
				this.match(t.KW_FOREIGN),
				(this.state = 2619),
				this.match(t.KW_KEY),
				(this.state = 2620),
				this.columnParenthesesList(),
				(this.state = 2621),
				this.match(t.KW_REFERENCES),
				(this.state = 2622),
				this.tableName(),
				(this.state = 2623),
				this.columnParenthesesList(),
				(this.state = 2625),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT || e === t.KW_ENABLE || e === t.KW_DISABLE || e === t.KW_ENFORCED) &&
					((this.state = 2624), this.constraintOptsAlter());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Jc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_skewedValueElement),
			this
		);
	}
	Jc.prototype = Object.create(s.ParserRuleContext.prototype);
	Jc.prototype.constructor = Jc;
	Jc.prototype.skewedColumnValues = function () {
		return this.getTypedRuleContext(Fo, 0);
	};
	Jc.prototype.skewedColumnValuePairList = function () {
		return this.getTypedRuleContext(zc, 0);
	};
	Jc.prototype.accept = function (u) {
		return u instanceof d ? u.visitSkewedValueElement(this) : u.visitChildren(this);
	};
	t.SkewedValueElementContext = Jc;
	t.prototype.skewedValueElement = function () {
		var u = new Jc(this, this._ctx, this.state);
		this.enterRule(u, 404, t.RULE_skewedValueElement);
		try {
			switch (((this.state = 2629), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_TRUE:
				case t.KW_FALSE:
				case t.KW_NULL:
				case t.KW_DATE:
				case t.KW_TIMESTAMP:
				case t.KW_TIMESTAMPLOCALTZ:
				case t.KW_CURRENT_DATE:
				case t.KW_CURRENT_TIMESTAMP:
				case t.StringLiteral:
				case t.IntegralLiteral:
				case t.NumberLiteral:
				case t.Number:
				case t.CharSetName:
					this.enterOuterAlt(u, 1), (this.state = 2627), this.skewedColumnValues();
					break;
				case t.LPAREN:
					this.enterOuterAlt(u, 2), (this.state = 2628), this.skewedColumnValuePairList();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function zc(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_skewedColumnValuePairList),
			this
		);
	}
	zc.prototype = Object.create(s.ParserRuleContext.prototype);
	zc.prototype.constructor = zc;
	zc.prototype.skewedColumnValuePair = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Nn) : this.getTypedRuleContext(Nn, u);
	};
	zc.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	zc.prototype.accept = function (u) {
		return u instanceof d ? u.visitSkewedColumnValuePairList(this) : u.visitChildren(this);
	};
	t.SkewedColumnValuePairListContext = zc;
	t.prototype.skewedColumnValuePairList = function () {
		var u = new zc(this, this._ctx, this.state);
		this.enterRule(u, 406, t.RULE_skewedColumnValuePairList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2631,
					this.skewedColumnValuePair(),
					this.state = 2636,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2632),
					this.match(t.COMMA),
					(this.state = 2633),
					this.skewedColumnValuePair(),
					(this.state = 2638),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Nn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_skewedColumnValuePair),
			this
		);
	}
	Nn.prototype = Object.create(s.ParserRuleContext.prototype);
	Nn.prototype.constructor = Nn;
	Nn.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Nn.prototype.skewedColumnValues = function () {
		return this.getTypedRuleContext(Fo, 0);
	};
	Nn.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Nn.prototype.accept = function (u) {
		return u instanceof d ? u.visitSkewedColumnValuePair(this) : u.visitChildren(this);
	};
	t.SkewedColumnValuePairContext = Nn;
	t.prototype.skewedColumnValuePair = function () {
		var u = new Nn(this, this._ctx, this.state);
		this.enterRule(u, 408, t.RULE_skewedColumnValuePair);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2639),
				this.match(t.LPAREN),
				(this.state = 2640),
				this.skewedColumnValues(),
				(this.state = 2641),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Fo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_skewedColumnValues),
			this
		);
	}
	Fo.prototype = Object.create(s.ParserRuleContext.prototype);
	Fo.prototype.constructor = Fo;
	Fo.prototype.skewedColumnValue = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ko) : this.getTypedRuleContext(ko, u);
	};
	Fo.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Fo.prototype.accept = function (u) {
		return u instanceof d ? u.visitSkewedColumnValues(this) : u.visitChildren(this);
	};
	t.SkewedColumnValuesContext = Fo;
	t.prototype.skewedColumnValues = function () {
		var u = new Fo(this, this._ctx, this.state);
		this.enterRule(u, 410, t.RULE_skewedColumnValues);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2643,
					this.skewedColumnValue(),
					this.state = 2648,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2644),
					this.match(t.COMMA),
					(this.state = 2645),
					this.skewedColumnValue(),
					(this.state = 2650),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ko(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_skewedColumnValue),
			this
		);
	}
	ko.prototype = Object.create(s.ParserRuleContext.prototype);
	ko.prototype.constructor = ko;
	ko.prototype.constant = function () {
		return this.getTypedRuleContext(S0, 0);
	};
	ko.prototype.accept = function (u) {
		return u instanceof d ? u.visitSkewedColumnValue(this) : u.visitChildren(this);
	};
	t.SkewedColumnValueContext = ko;
	t.prototype.skewedColumnValue = function () {
		var u = new ko(this, this._ctx, this.state);
		this.enterRule(u, 412, t.RULE_skewedColumnValue);
		try {
			this.enterOuterAlt(u, 1), (this.state = 2651), this.constant();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $c(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_skewedValueLocationElement),
			this
		);
	}
	$c.prototype = Object.create(s.ParserRuleContext.prototype);
	$c.prototype.constructor = $c;
	$c.prototype.skewedColumnValue = function () {
		return this.getTypedRuleContext(ko, 0);
	};
	$c.prototype.skewedColumnValuePair = function () {
		return this.getTypedRuleContext(Nn, 0);
	};
	$c.prototype.accept = function (u) {
		return u instanceof d ? u.visitSkewedValueLocationElement(this) : u.visitChildren(this);
	};
	t.SkewedValueLocationElementContext = $c;
	t.prototype.skewedValueLocationElement = function () {
		var u = new $c(this, this._ctx, this.state);
		this.enterRule(u, 414, t.RULE_skewedValueLocationElement);
		try {
			switch (((this.state = 2655), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_TRUE:
				case t.KW_FALSE:
				case t.KW_NULL:
				case t.KW_DATE:
				case t.KW_TIMESTAMP:
				case t.KW_TIMESTAMPLOCALTZ:
				case t.KW_CURRENT_DATE:
				case t.KW_CURRENT_TIMESTAMP:
				case t.StringLiteral:
				case t.IntegralLiteral:
				case t.NumberLiteral:
				case t.Number:
				case t.CharSetName:
					this.enterOuterAlt(u, 1), (this.state = 2653), this.skewedColumnValue();
					break;
				case t.LPAREN:
					this.enterOuterAlt(u, 2), (this.state = 2654), this.skewedColumnValuePair();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Vo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_orderSpecification),
			this
		);
	}
	Vo.prototype = Object.create(s.ParserRuleContext.prototype);
	Vo.prototype.constructor = Vo;
	Vo.prototype.KW_ASC = function () {
		return this.getToken(t.KW_ASC, 0);
	};
	Vo.prototype.KW_DESC = function () {
		return this.getToken(t.KW_DESC, 0);
	};
	Vo.prototype.accept = function (u) {
		return u instanceof d ? u.visitOrderSpecification(this) : u.visitChildren(this);
	};
	t.OrderSpecificationContext = Vo;
	t.prototype.orderSpecification = function () {
		var u = new Vo(this, this._ctx, this.state);
		this.enterRule(u, 416, t.RULE_orderSpecification);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2657),
				(e = this._input.LA(1)),
				e === t.KW_ASC || e === t.KW_DESC
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function R2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_nullOrdering),
			this
		);
	}
	R2.prototype = Object.create(s.ParserRuleContext.prototype);
	R2.prototype.constructor = R2;
	R2.prototype.KW_NULLS = function () {
		return this.getToken(t.KW_NULLS, 0);
	};
	R2.prototype.KW_FIRST = function () {
		return this.getToken(t.KW_FIRST, 0);
	};
	R2.prototype.KW_LAST = function () {
		return this.getToken(t.KW_LAST, 0);
	};
	R2.prototype.accept = function (u) {
		return u instanceof d ? u.visitNullOrdering(this) : u.visitChildren(this);
	};
	t.NullOrderingContext = R2;
	t.prototype.nullOrdering = function () {
		var u = new R2(this, this._ctx, this.state);
		this.enterRule(u, 418, t.RULE_nullOrdering);
		try {
			(this.state = 2663), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 249, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 2659),
						this.match(t.KW_NULLS),
						(this.state = 2660),
						this.match(t.KW_FIRST);
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 2661),
						this.match(t.KW_NULLS),
						(this.state = 2662),
						this.match(t.KW_LAST);
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function m2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameOrder),
			this
		);
	}
	m2.prototype = Object.create(s.ParserRuleContext.prototype);
	m2.prototype.constructor = m2;
	m2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	m2.prototype.orderSpecification = function () {
		return this.getTypedRuleContext(Vo, 0);
	};
	m2.prototype.nullOrdering = function () {
		return this.getTypedRuleContext(R2, 0);
	};
	m2.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameOrder(this) : u.visitChildren(this);
	};
	t.ColumnNameOrderContext = m2;
	t.prototype.columnNameOrder = function () {
		var u = new m2(this, this._ctx, this.state);
		this.enterRule(u, 420, t.RULE_columnNameOrder);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2665),
				this.identifier(),
				(this.state = 2667),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_ASC || e === t.KW_DESC) && ((this.state = 2666), this.orderSpecification()),
				(this.state = 2670),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_NULLS && ((this.state = 2669), this.nullOrdering());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function up(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameCommentList),
			this
		);
	}
	up.prototype = Object.create(s.ParserRuleContext.prototype);
	up.prototype.constructor = up;
	up.prototype.columnNameComment = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(y2) : this.getTypedRuleContext(y2, u);
	};
	up.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	up.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameCommentList(this) : u.visitChildren(this);
	};
	t.ColumnNameCommentListContext = up;
	t.prototype.columnNameCommentList = function () {
		var u = new up(this, this._ctx, this.state);
		this.enterRule(u, 422, t.RULE_columnNameCommentList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2672,
					this.columnNameComment(),
					this.state = 2677,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2673),
					this.match(t.COMMA),
					(this.state = 2674),
					this.columnNameComment(),
					(this.state = 2679),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function y2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameComment),
			this
		);
	}
	y2.prototype = Object.create(s.ParserRuleContext.prototype);
	y2.prototype.constructor = y2;
	y2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	y2.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	y2.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	y2.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameComment(this) : u.visitChildren(this);
	};
	t.ColumnNameCommentContext = y2;
	t.prototype.columnNameComment = function () {
		var u = new y2(this, this._ctx, this.state);
		this.enterRule(u, 424, t.RULE_columnNameComment);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2680),
				this.identifier(),
				(this.state = 2683),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT &&
					((this.state = 2681), this.match(t.KW_COMMENT), (this.state = 2682), this.match(t.StringLiteral));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function de(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnRefOrder),
			this
		);
	}
	de.prototype = Object.create(s.ParserRuleContext.prototype);
	de.prototype.constructor = de;
	de.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	de.prototype.orderSpecification = function () {
		return this.getTypedRuleContext(Vo, 0);
	};
	de.prototype.nullOrdering = function () {
		return this.getTypedRuleContext(R2, 0);
	};
	de.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnRefOrder(this) : u.visitChildren(this);
	};
	t.ColumnRefOrderContext = de;
	t.prototype.columnRefOrder = function () {
		var u = new de(this, this._ctx, this.state);
		this.enterRule(u, 426, t.RULE_columnRefOrder);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2685),
				this.expression(0),
				(this.state = 2687),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_ASC || e === t.KW_DESC) && ((this.state = 2686), this.orderSpecification()),
				(this.state = 2690),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_NULLS && ((this.state = 2689), this.nullOrdering());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function sr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameType),
			this
		);
	}
	sr.prototype = Object.create(s.ParserRuleContext.prototype);
	sr.prototype.constructor = sr;
	sr.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	sr.prototype.colType = function () {
		return this.getTypedRuleContext(ii, 0);
	};
	sr.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	sr.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	sr.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameType(this) : u.visitChildren(this);
	};
	t.ColumnNameTypeContext = sr;
	t.prototype.columnNameType = function () {
		var u = new sr(this, this._ctx, this.state);
		this.enterRule(u, 428, t.RULE_columnNameType);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2692),
				this.identifier(),
				(this.state = 2693),
				this.colType(),
				(this.state = 2696),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT &&
					((this.state = 2694), this.match(t.KW_COMMENT), (this.state = 2695), this.match(t.StringLiteral));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Bo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameTypeOrConstraint),
			this
		);
	}
	Bo.prototype = Object.create(s.ParserRuleContext.prototype);
	Bo.prototype.constructor = Bo;
	Bo.prototype.tableConstraint = function () {
		return this.getTypedRuleContext(tp, 0);
	};
	Bo.prototype.columnNameTypeConstraint = function () {
		return this.getTypedRuleContext(Pn, 0);
	};
	Bo.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameTypeOrConstraint(this) : u.visitChildren(this);
	};
	t.ColumnNameTypeOrConstraintContext = Bo;
	t.prototype.columnNameTypeOrConstraint = function () {
		var u = new Bo(this, this._ctx, this.state);
		this.enterRule(u, 430, t.RULE_columnNameTypeOrConstraint);
		try {
			(this.state = 2700), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 257, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2698), this.tableConstraint();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2699), this.columnNameTypeConstraint();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function tp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableConstraint),
			this
		);
	}
	tp.prototype = Object.create(s.ParserRuleContext.prototype);
	tp.prototype.constructor = tp;
	tp.prototype.createForeignKey = function () {
		return this.getTypedRuleContext(he, 0);
	};
	tp.prototype.createConstraint = function () {
		return this.getTypedRuleContext(E2, 0);
	};
	tp.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableConstraint(this) : u.visitChildren(this);
	};
	t.TableConstraintContext = tp;
	t.prototype.tableConstraint = function () {
		var u = new tp(this, this._ctx, this.state);
		this.enterRule(u, 432, t.RULE_tableConstraint);
		try {
			(this.state = 2704), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 258, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2702), this.createForeignKey();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2703), this.createConstraint();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Pn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameTypeConstraint),
			this
		);
	}
	Pn.prototype = Object.create(s.ParserRuleContext.prototype);
	Pn.prototype.constructor = Pn;
	Pn.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Pn.prototype.colType = function () {
		return this.getTypedRuleContext(ii, 0);
	};
	Pn.prototype.columnConstraint = function () {
		return this.getTypedRuleContext(ep, 0);
	};
	Pn.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	Pn.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Pn.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameTypeConstraint(this) : u.visitChildren(this);
	};
	t.ColumnNameTypeConstraintContext = Pn;
	t.prototype.columnNameTypeConstraint = function () {
		var u = new Pn(this, this._ctx, this.state);
		this.enterRule(u, 434, t.RULE_columnNameTypeConstraint);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2706),
				this.identifier(),
				(this.state = 2707),
				this.colType(),
				(this.state = 2709),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT ||
					(((e - 288) & -32) == 0 &&
						((1 << (e - 288)) &
							((1 << (t.KW_PRIMARY - 288)) |
								(1 << (t.KW_REFERENCES - 288)) |
								(1 << (t.KW_CONSTRAINT - 288)) |
								(1 << (t.KW_UNIQUE - 288)) |
								(1 << (t.KW_DEFAULT - 288)) |
								(1 << (t.KW_CHECK - 288)))) !==
							0)) &&
					((this.state = 2708), this.columnConstraint()),
				(this.state = 2713),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT &&
					((this.state = 2711), this.match(t.KW_COMMENT), (this.state = 2712), this.match(t.StringLiteral));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Yo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_partitionedColumnNameTypeConstraint),
			this
		);
	}
	Yo.prototype = Object.create(s.ParserRuleContext.prototype);
	Yo.prototype.constructor = Yo;
	Yo.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Yo.prototype.colType = function () {
		return this.getTypedRuleContext(ii, 0);
	};
	Yo.prototype.accept = function (u) {
		return u instanceof d ? u.visitPartitionedColumnNameTypeConstraint(this) : u.visitChildren(this);
	};
	t.PartitionedColumnNameTypeConstraintContext = Yo;
	t.prototype.partitionedColumnNameTypeConstraint = function () {
		var u = new Yo(this, this._ctx, this.state);
		this.enterRule(u, 436, t.RULE_partitionedColumnNameTypeConstraint);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2715),
				this.identifier(),
				(this.state = 2717),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				((((e - 77) & -32) == 0 &&
					((1 << (e - 77)) &
						((1 << (t.KW_BOOLEAN - 77)) |
							(1 << (t.KW_TINYINT - 77)) |
							(1 << (t.KW_SMALLINT - 77)) |
							(1 << (t.KW_INT - 77)) |
							(1 << (t.KW_BIGINT - 77)) |
							(1 << (t.KW_FLOAT - 77)) |
							(1 << (t.KW_DOUBLE - 77)) |
							(1 << (t.KW_DATE - 77)) |
							(1 << (t.KW_DATETIME - 77)) |
							(1 << (t.KW_TIMESTAMP - 77)) |
							(1 << (t.KW_TIMESTAMPLOCALTZ - 77)) |
							(1 << (t.KW_DECIMAL - 77)) |
							(1 << (t.KW_STRING - 77)) |
							(1 << (t.KW_CHAR - 77)) |
							(1 << (t.KW_VARCHAR - 77)) |
							(1 << (t.KW_ARRAY - 77)) |
							(1 << (t.KW_STRUCT - 77)) |
							(1 << (t.KW_MAP - 77)) |
							(1 << (t.KW_UNIONTYPE - 77)))) !==
						0) ||
					e === t.KW_BINARY) &&
					((this.state = 2716), this.colType());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ep(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnConstraint),
			this
		);
	}
	ep.prototype = Object.create(s.ParserRuleContext.prototype);
	ep.prototype.constructor = ep;
	ep.prototype.foreignKeyConstraint = function () {
		return this.getTypedRuleContext(fe, 0);
	};
	ep.prototype.colConstraint = function () {
		return this.getTypedRuleContext(C2, 0);
	};
	ep.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnConstraint(this) : u.visitChildren(this);
	};
	t.ColumnConstraintContext = ep;
	t.prototype.columnConstraint = function () {
		var u = new ep(this, this._ctx, this.state);
		this.enterRule(u, 438, t.RULE_columnConstraint);
		try {
			(this.state = 2721), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 262, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2719), this.foreignKeyConstraint();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2720), this.colConstraint();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function fe(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_foreignKeyConstraint),
			this
		);
	}
	fe.prototype = Object.create(s.ParserRuleContext.prototype);
	fe.prototype.constructor = fe;
	fe.prototype.KW_REFERENCES = function () {
		return this.getToken(t.KW_REFERENCES, 0);
	};
	fe.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	fe.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	fe.prototype.columnName = function () {
		return this.getTypedRuleContext(f2, 0);
	};
	fe.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	fe.prototype.KW_CONSTRAINT = function () {
		return this.getToken(t.KW_CONSTRAINT, 0);
	};
	fe.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	fe.prototype.constraintOptsCreate = function () {
		return this.getTypedRuleContext(gn, 0);
	};
	fe.prototype.accept = function (u) {
		return u instanceof d ? u.visitForeignKeyConstraint(this) : u.visitChildren(this);
	};
	t.ForeignKeyConstraintContext = fe;
	t.prototype.foreignKeyConstraint = function () {
		var u = new fe(this, this._ctx, this.state);
		this.enterRule(u, 440, t.RULE_foreignKeyConstraint);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2725),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_CONSTRAINT &&
					((this.state = 2723), this.match(t.KW_CONSTRAINT), (this.state = 2724), this.identifier()),
				(this.state = 2727),
				this.match(t.KW_REFERENCES),
				(this.state = 2728),
				this.tableName(),
				(this.state = 2729),
				this.match(t.LPAREN),
				(this.state = 2730),
				this.columnName(),
				(this.state = 2731),
				this.match(t.RPAREN),
				(this.state = 2733),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT || e === t.KW_ENABLE || e === t.KW_DISABLE || e === t.KW_ENFORCED) &&
					((this.state = 2732), this.constraintOptsCreate());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function C2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_colConstraint),
			this
		);
	}
	C2.prototype = Object.create(s.ParserRuleContext.prototype);
	C2.prototype.constructor = C2;
	C2.prototype.columnConstraintType = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ee) : this.getTypedRuleContext(Ee, u);
	};
	C2.prototype.KW_CONSTRAINT = function () {
		return this.getToken(t.KW_CONSTRAINT, 0);
	};
	C2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	C2.prototype.constraintOptsCreate = function () {
		return this.getTypedRuleContext(gn, 0);
	};
	C2.prototype.accept = function (u) {
		return u instanceof d ? u.visitColConstraint(this) : u.visitChildren(this);
	};
	t.ColConstraintContext = C2;
	t.prototype.colConstraint = function () {
		var u = new C2(this, this._ctx, this.state);
		this.enterRule(u, 442, t.RULE_colConstraint);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2737),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_CONSTRAINT &&
					((this.state = 2735), this.match(t.KW_CONSTRAINT), (this.state = 2736), this.identifier()),
				(this.state = 2739),
				this.columnConstraintType(),
				(this.state = 2743),
				this._errHandler.sync(this);
			for (
				var i = this._interp.adaptivePredict(this._input, 266, this._ctx);
				i != 2 && i != s.atn.ATN.INVALID_ALT_NUMBER;

			)
				i === 1 && ((this.state = 2740), this.columnConstraintType()),
					(this.state = 2745),
					this._errHandler.sync(this),
					(i = this._interp.adaptivePredict(this._input, 266, this._ctx));
			(this.state = 2747),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT || e === t.KW_ENABLE || e === t.KW_DISABLE || e === t.KW_ENFORCED) &&
					((this.state = 2746), this.constraintOptsCreate());
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ip(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterColumnConstraint),
			this
		);
	}
	ip.prototype = Object.create(s.ParserRuleContext.prototype);
	ip.prototype.constructor = ip;
	ip.prototype.alterForeignKeyConstraint = function () {
		return this.getTypedRuleContext(_e, 0);
	};
	ip.prototype.alterColConstraint = function () {
		return this.getTypedRuleContext(b2, 0);
	};
	ip.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterColumnConstraint(this) : u.visitChildren(this);
	};
	t.AlterColumnConstraintContext = ip;
	t.prototype.alterColumnConstraint = function () {
		var u = new ip(this, this._ctx, this.state);
		this.enterRule(u, 444, t.RULE_alterColumnConstraint);
		try {
			(this.state = 2751), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 268, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2749), this.alterForeignKeyConstraint();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2750), this.alterColConstraint();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _e(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterForeignKeyConstraint),
			this
		);
	}
	_e.prototype = Object.create(s.ParserRuleContext.prototype);
	_e.prototype.constructor = _e;
	_e.prototype.KW_REFERENCES = function () {
		return this.getToken(t.KW_REFERENCES, 0);
	};
	_e.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	_e.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	_e.prototype.columnName = function () {
		return this.getTypedRuleContext(f2, 0);
	};
	_e.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	_e.prototype.KW_CONSTRAINT = function () {
		return this.getToken(t.KW_CONSTRAINT, 0);
	};
	_e.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	_e.prototype.constraintOptsAlter = function () {
		return this.getTypedRuleContext(Dn, 0);
	};
	_e.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterForeignKeyConstraint(this) : u.visitChildren(this);
	};
	t.AlterForeignKeyConstraintContext = _e;
	t.prototype.alterForeignKeyConstraint = function () {
		var u = new _e(this, this._ctx, this.state);
		this.enterRule(u, 446, t.RULE_alterForeignKeyConstraint);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2755),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_CONSTRAINT &&
					((this.state = 2753), this.match(t.KW_CONSTRAINT), (this.state = 2754), this.identifier()),
				(this.state = 2757),
				this.match(t.KW_REFERENCES),
				(this.state = 2758),
				this.tableName(),
				(this.state = 2759),
				this.match(t.LPAREN),
				(this.state = 2760),
				this.columnName(),
				(this.state = 2761),
				this.match(t.RPAREN),
				(this.state = 2763),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT || e === t.KW_ENABLE || e === t.KW_DISABLE || e === t.KW_ENFORCED) &&
					((this.state = 2762), this.constraintOptsAlter());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function b2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterColConstraint),
			this
		);
	}
	b2.prototype = Object.create(s.ParserRuleContext.prototype);
	b2.prototype.constructor = b2;
	b2.prototype.columnConstraintType = function () {
		return this.getTypedRuleContext(Ee, 0);
	};
	b2.prototype.KW_CONSTRAINT = function () {
		return this.getToken(t.KW_CONSTRAINT, 0);
	};
	b2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	b2.prototype.constraintOptsAlter = function () {
		return this.getTypedRuleContext(Dn, 0);
	};
	b2.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterColConstraint(this) : u.visitChildren(this);
	};
	t.AlterColConstraintContext = b2;
	t.prototype.alterColConstraint = function () {
		var u = new b2(this, this._ctx, this.state);
		this.enterRule(u, 448, t.RULE_alterColConstraint);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2767),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_CONSTRAINT &&
					((this.state = 2765), this.match(t.KW_CONSTRAINT), (this.state = 2766), this.identifier()),
				(this.state = 2769),
				this.columnConstraintType(),
				(this.state = 2771),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_NOT || e === t.KW_ENABLE || e === t.KW_DISABLE || e === t.KW_ENFORCED) &&
					((this.state = 2770), this.constraintOptsAlter());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ee(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnConstraintType),
			this
		);
	}
	Ee.prototype = Object.create(s.ParserRuleContext.prototype);
	Ee.prototype.constructor = Ee;
	Ee.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	Ee.prototype.KW_NULL = function () {
		return this.getToken(t.KW_NULL, 0);
	};
	Ee.prototype.KW_DEFAULT = function () {
		return this.getToken(t.KW_DEFAULT, 0);
	};
	Ee.prototype.defaultVal = function () {
		return this.getTypedRuleContext(Go, 0);
	};
	Ee.prototype.checkConstraint = function () {
		return this.getTypedRuleContext(Ho, 0);
	};
	Ee.prototype.tableConstraintType = function () {
		return this.getTypedRuleContext(A2, 0);
	};
	Ee.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnConstraintType(this) : u.visitChildren(this);
	};
	t.ColumnConstraintTypeContext = Ee;
	t.prototype.columnConstraintType = function () {
		var u = new Ee(this, this._ctx, this.state);
		this.enterRule(u, 450, t.RULE_columnConstraintType);
		try {
			switch (((this.state = 2779), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_NOT:
					this.enterOuterAlt(u, 1),
						(this.state = 2773),
						this.match(t.KW_NOT),
						(this.state = 2774),
						this.match(t.KW_NULL);
					break;
				case t.KW_DEFAULT:
					this.enterOuterAlt(u, 2),
						(this.state = 2775),
						this.match(t.KW_DEFAULT),
						(this.state = 2776),
						this.defaultVal();
					break;
				case t.KW_CHECK:
					this.enterOuterAlt(u, 3), (this.state = 2777), this.checkConstraint();
					break;
				case t.KW_PRIMARY:
				case t.KW_UNIQUE:
					this.enterOuterAlt(u, 4), (this.state = 2778), this.tableConstraintType();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Go(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_defaultVal),
			this
		);
	}
	Go.prototype = Object.create(s.ParserRuleContext.prototype);
	Go.prototype.constructor = Go;
	Go.prototype.constant = function () {
		return this.getTypedRuleContext(S0, 0);
	};
	Go.prototype.functionStatement = function () {
		return this.getTypedRuleContext(yu, 0);
	};
	Go.prototype.castExpression = function () {
		return this.getTypedRuleContext(li, 0);
	};
	Go.prototype.accept = function (u) {
		return u instanceof d ? u.visitDefaultVal(this) : u.visitChildren(this);
	};
	t.DefaultValContext = Go;
	t.prototype.defaultVal = function () {
		var u = new Go(this, this._ctx, this.state);
		this.enterRule(u, 452, t.RULE_defaultVal);
		try {
			(this.state = 2784), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 274, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2781), this.constant();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2782), this.functionStatement();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 2783), this.castExpression();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function A2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableConstraintType),
			this
		);
	}
	A2.prototype = Object.create(s.ParserRuleContext.prototype);
	A2.prototype.constructor = A2;
	A2.prototype.KW_PRIMARY = function () {
		return this.getToken(t.KW_PRIMARY, 0);
	};
	A2.prototype.KW_KEY = function () {
		return this.getToken(t.KW_KEY, 0);
	};
	A2.prototype.KW_UNIQUE = function () {
		return this.getToken(t.KW_UNIQUE, 0);
	};
	A2.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableConstraintType(this) : u.visitChildren(this);
	};
	t.TableConstraintTypeContext = A2;
	t.prototype.tableConstraintType = function () {
		var u = new A2(this, this._ctx, this.state);
		this.enterRule(u, 454, t.RULE_tableConstraintType);
		try {
			switch (((this.state = 2789), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_PRIMARY:
					this.enterOuterAlt(u, 1),
						(this.state = 2786),
						this.match(t.KW_PRIMARY),
						(this.state = 2787),
						this.match(t.KW_KEY);
					break;
				case t.KW_UNIQUE:
					this.enterOuterAlt(u, 2), (this.state = 2788), this.match(t.KW_UNIQUE);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function gn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_constraintOptsCreate),
			this
		);
	}
	gn.prototype = Object.create(s.ParserRuleContext.prototype);
	gn.prototype.constructor = gn;
	gn.prototype.enableValidateSpecification = function () {
		return this.getTypedRuleContext(_2, 0);
	};
	gn.prototype.relySpecification = function () {
		return this.getTypedRuleContext(wo, 0);
	};
	gn.prototype.accept = function (u) {
		return u instanceof d ? u.visitConstraintOptsCreate(this) : u.visitChildren(this);
	};
	t.ConstraintOptsCreateContext = gn;
	t.prototype.constraintOptsCreate = function () {
		var u = new gn(this, this._ctx, this.state);
		this.enterRule(u, 456, t.RULE_constraintOptsCreate);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2791),
				this.enableValidateSpecification(),
				(this.state = 2792),
				this.relySpecification();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Dn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_constraintOptsAlter),
			this
		);
	}
	Dn.prototype = Object.create(s.ParserRuleContext.prototype);
	Dn.prototype.constructor = Dn;
	Dn.prototype.enableValidateSpecification = function () {
		return this.getTypedRuleContext(_2, 0);
	};
	Dn.prototype.relySpecification = function () {
		return this.getTypedRuleContext(wo, 0);
	};
	Dn.prototype.accept = function (u) {
		return u instanceof d ? u.visitConstraintOptsAlter(this) : u.visitChildren(this);
	};
	t.ConstraintOptsAlterContext = Dn;
	t.prototype.constraintOptsAlter = function () {
		var u = new Dn(this, this._ctx, this.state);
		this.enterRule(u, 458, t.RULE_constraintOptsAlter);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2794),
				this.enableValidateSpecification(),
				(this.state = 2795),
				this.relySpecification();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ar(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnNameColonType),
			this
		);
	}
	ar.prototype = Object.create(s.ParserRuleContext.prototype);
	ar.prototype.constructor = ar;
	ar.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	ar.prototype.COLON = function () {
		return this.getToken(t.COLON, 0);
	};
	ar.prototype.colType = function () {
		return this.getTypedRuleContext(ii, 0);
	};
	ar.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	ar.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	ar.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnNameColonType(this) : u.visitChildren(this);
	};
	t.ColumnNameColonTypeContext = ar;
	t.prototype.columnNameColonType = function () {
		var u = new ar(this, this._ctx, this.state);
		this.enterRule(u, 460, t.RULE_columnNameColonType);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2797),
				this.identifier(),
				(this.state = 2798),
				this.match(t.COLON),
				(this.state = 2799),
				this.colType(),
				(this.state = 2802),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_COMMENT &&
					((this.state = 2800), this.match(t.KW_COMMENT), (this.state = 2801), this.match(t.StringLiteral));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ii(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_colType),
			this
		);
	}
	ii.prototype = Object.create(s.ParserRuleContext.prototype);
	ii.prototype.constructor = ii;
	ii.prototype.type_db_col = function () {
		return this.getTypedRuleContext(ri, 0);
	};
	ii.prototype.accept = function (u) {
		return u instanceof d ? u.visitColType(this) : u.visitChildren(this);
	};
	t.ColTypeContext = ii;
	t.prototype.colType = function () {
		var u = new ii(this, this._ctx, this.state);
		this.enterRule(u, 462, t.RULE_colType);
		try {
			this.enterOuterAlt(u, 1), (this.state = 2804), this.type_db_col();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function rp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_colTypeList),
			this
		);
	}
	rp.prototype = Object.create(s.ParserRuleContext.prototype);
	rp.prototype.constructor = rp;
	rp.prototype.colType = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ii) : this.getTypedRuleContext(ii, u);
	};
	rp.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	rp.prototype.accept = function (u) {
		return u instanceof d ? u.visitColTypeList(this) : u.visitChildren(this);
	};
	t.ColTypeListContext = rp;
	t.prototype.colTypeList = function () {
		var u = new rp(this, this._ctx, this.state);
		this.enterRule(u, 464, t.RULE_colTypeList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2806,
					this.colType(),
					this.state = 2811,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2807),
					this.match(t.COMMA),
					(this.state = 2808),
					this.colType(),
					(this.state = 2813),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ri(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_type_db_col),
			this
		);
	}
	ri.prototype = Object.create(s.ParserRuleContext.prototype);
	ri.prototype.constructor = ri;
	ri.prototype.primitiveType = function () {
		return this.getTypedRuleContext(J, 0);
	};
	ri.prototype.listType = function () {
		return this.getTypedRuleContext(W2, 0);
	};
	ri.prototype.structType = function () {
		return this.getTypedRuleContext(K2, 0);
	};
	ri.prototype.mapType = function () {
		return this.getTypedRuleContext(or, 0);
	};
	ri.prototype.unionType = function () {
		return this.getTypedRuleContext(x2, 0);
	};
	ri.prototype.accept = function (u) {
		return u instanceof d ? u.visitType_db_col(this) : u.visitChildren(this);
	};
	t.Type_db_colContext = ri;
	t.prototype.type_db_col = function () {
		var u = new ri(this, this._ctx, this.state);
		this.enterRule(u, 466, t.RULE_type_db_col);
		try {
			switch (((this.state = 2819), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_BOOLEAN:
				case t.KW_TINYINT:
				case t.KW_SMALLINT:
				case t.KW_INT:
				case t.KW_BIGINT:
				case t.KW_FLOAT:
				case t.KW_DOUBLE:
				case t.KW_DATE:
				case t.KW_DATETIME:
				case t.KW_TIMESTAMP:
				case t.KW_TIMESTAMPLOCALTZ:
				case t.KW_DECIMAL:
				case t.KW_STRING:
				case t.KW_CHAR:
				case t.KW_VARCHAR:
				case t.KW_BINARY:
					this.enterOuterAlt(u, 1), (this.state = 2814), this.primitiveType();
					break;
				case t.KW_ARRAY:
					this.enterOuterAlt(u, 2), (this.state = 2815), this.listType();
					break;
				case t.KW_STRUCT:
					this.enterOuterAlt(u, 3), (this.state = 2816), this.structType();
					break;
				case t.KW_MAP:
					this.enterOuterAlt(u, 4), (this.state = 2817), this.mapType();
					break;
				case t.KW_UNIONTYPE:
					this.enterOuterAlt(u, 5), (this.state = 2818), this.unionType();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function J(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_primitiveType),
			this
		);
	}
	J.prototype = Object.create(s.ParserRuleContext.prototype);
	J.prototype.constructor = J;
	J.prototype.KW_TINYINT = function () {
		return this.getToken(t.KW_TINYINT, 0);
	};
	J.prototype.KW_SMALLINT = function () {
		return this.getToken(t.KW_SMALLINT, 0);
	};
	J.prototype.KW_INT = function () {
		return this.getToken(t.KW_INT, 0);
	};
	J.prototype.KW_BIGINT = function () {
		return this.getToken(t.KW_BIGINT, 0);
	};
	J.prototype.KW_BOOLEAN = function () {
		return this.getToken(t.KW_BOOLEAN, 0);
	};
	J.prototype.KW_FLOAT = function () {
		return this.getToken(t.KW_FLOAT, 0);
	};
	J.prototype.KW_DOUBLE = function () {
		return this.getToken(t.KW_DOUBLE, 0);
	};
	J.prototype.KW_PRECISION = function () {
		return this.getToken(t.KW_PRECISION, 0);
	};
	J.prototype.KW_DATE = function () {
		return this.getToken(t.KW_DATE, 0);
	};
	J.prototype.KW_DATETIME = function () {
		return this.getToken(t.KW_DATETIME, 0);
	};
	J.prototype.KW_TIMESTAMP = function () {
		return this.getToken(t.KW_TIMESTAMP, 0);
	};
	J.prototype.KW_TIMESTAMPLOCALTZ = function () {
		return this.getToken(t.KW_TIMESTAMPLOCALTZ, 0);
	};
	J.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	J.prototype.KW_LOCAL = function () {
		return this.getToken(t.KW_LOCAL, 0);
	};
	J.prototype.KW_TIME = function () {
		return this.getToken(t.KW_TIME, 0);
	};
	J.prototype.KW_ZONE = function () {
		return this.getToken(t.KW_ZONE, 0);
	};
	J.prototype.KW_STRING = function () {
		return this.getToken(t.KW_STRING, 0);
	};
	J.prototype.KW_BINARY = function () {
		return this.getToken(t.KW_BINARY, 0);
	};
	J.prototype.KW_DECIMAL = function () {
		return this.getToken(t.KW_DECIMAL, 0);
	};
	J.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	J.prototype.Number = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.Number) : this.getToken(t.Number, u);
	};
	J.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	J.prototype.COMMA = function () {
		return this.getToken(t.COMMA, 0);
	};
	J.prototype.KW_VARCHAR = function () {
		return this.getToken(t.KW_VARCHAR, 0);
	};
	J.prototype.KW_CHAR = function () {
		return this.getToken(t.KW_CHAR, 0);
	};
	J.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrimitiveType(this) : u.visitChildren(this);
	};
	t.PrimitiveTypeContext = J;
	t.prototype.primitiveType = function () {
		var u = new J(this, this._ctx, this.state);
		this.enterRule(u, 468, t.RULE_primitiveType);
		var e = 0;
		try {
			(this.state = 2860), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 282, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 2821), this.match(t.KW_TINYINT);
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 2822), this.match(t.KW_SMALLINT);
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 2823), this.match(t.KW_INT);
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 2824), this.match(t.KW_BIGINT);
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 2825), this.match(t.KW_BOOLEAN);
					break;
				case 6:
					this.enterOuterAlt(u, 6), (this.state = 2826), this.match(t.KW_FLOAT);
					break;
				case 7:
					this.enterOuterAlt(u, 7),
						(this.state = 2827),
						this.match(t.KW_DOUBLE),
						(this.state = 2829),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_PRECISION && ((this.state = 2828), this.match(t.KW_PRECISION));
					break;
				case 8:
					this.enterOuterAlt(u, 8), (this.state = 2831), this.match(t.KW_DATE);
					break;
				case 9:
					this.enterOuterAlt(u, 9), (this.state = 2832), this.match(t.KW_DATETIME);
					break;
				case 10:
					this.enterOuterAlt(u, 10), (this.state = 2833), this.match(t.KW_TIMESTAMP);
					break;
				case 11:
					this.enterOuterAlt(u, 11), (this.state = 2834), this.match(t.KW_TIMESTAMPLOCALTZ);
					break;
				case 12:
					this.enterOuterAlt(u, 12),
						(this.state = 2835),
						this.match(t.KW_TIMESTAMP),
						(this.state = 2836),
						this.match(t.KW_WITH),
						(this.state = 2837),
						this.match(t.KW_LOCAL),
						(this.state = 2838),
						this.match(t.KW_TIME),
						(this.state = 2839),
						this.match(t.KW_ZONE);
					break;
				case 13:
					this.enterOuterAlt(u, 13), (this.state = 2840), this.match(t.KW_STRING);
					break;
				case 14:
					this.enterOuterAlt(u, 14), (this.state = 2841), this.match(t.KW_BINARY);
					break;
				case 15:
					this.enterOuterAlt(u, 15),
						(this.state = 2842),
						this.match(t.KW_DECIMAL),
						(this.state = 2850),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.LPAREN &&
							((this.state = 2843),
							this.match(t.LPAREN),
							(this.state = 2844),
							this.match(t.Number),
							(this.state = 2847),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === t.COMMA &&
								((this.state = 2845), this.match(t.COMMA), (this.state = 2846), this.match(t.Number)),
							(this.state = 2849),
							this.match(t.RPAREN));
					break;
				case 16:
					this.enterOuterAlt(u, 16),
						(this.state = 2852),
						this.match(t.KW_VARCHAR),
						(this.state = 2853),
						this.match(t.LPAREN),
						(this.state = 2854),
						this.match(t.Number),
						(this.state = 2855),
						this.match(t.RPAREN);
					break;
				case 17:
					this.enterOuterAlt(u, 17),
						(this.state = 2856),
						this.match(t.KW_CHAR),
						(this.state = 2857),
						this.match(t.LPAREN),
						(this.state = 2858),
						this.match(t.Number),
						(this.state = 2859),
						this.match(t.RPAREN);
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function W2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_listType),
			this
		);
	}
	W2.prototype = Object.create(s.ParserRuleContext.prototype);
	W2.prototype.constructor = W2;
	W2.prototype.KW_ARRAY = function () {
		return this.getToken(t.KW_ARRAY, 0);
	};
	W2.prototype.LESSTHAN = function () {
		return this.getToken(t.LESSTHAN, 0);
	};
	W2.prototype.type_db_col = function () {
		return this.getTypedRuleContext(ri, 0);
	};
	W2.prototype.GREATERTHAN = function () {
		return this.getToken(t.GREATERTHAN, 0);
	};
	W2.prototype.accept = function (u) {
		return u instanceof d ? u.visitListType(this) : u.visitChildren(this);
	};
	t.ListTypeContext = W2;
	t.prototype.listType = function () {
		var u = new W2(this, this._ctx, this.state);
		this.enterRule(u, 470, t.RULE_listType);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2862),
				this.match(t.KW_ARRAY),
				(this.state = 2863),
				this.match(t.LESSTHAN),
				(this.state = 2864),
				this.type_db_col(),
				(this.state = 2865),
				this.match(t.GREATERTHAN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function K2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_structType),
			this
		);
	}
	K2.prototype = Object.create(s.ParserRuleContext.prototype);
	K2.prototype.constructor = K2;
	K2.prototype.KW_STRUCT = function () {
		return this.getToken(t.KW_STRUCT, 0);
	};
	K2.prototype.LESSTHAN = function () {
		return this.getToken(t.LESSTHAN, 0);
	};
	K2.prototype.columnNameColonTypeList = function () {
		return this.getTypedRuleContext(Gc, 0);
	};
	K2.prototype.GREATERTHAN = function () {
		return this.getToken(t.GREATERTHAN, 0);
	};
	K2.prototype.accept = function (u) {
		return u instanceof d ? u.visitStructType(this) : u.visitChildren(this);
	};
	t.StructTypeContext = K2;
	t.prototype.structType = function () {
		var u = new K2(this, this._ctx, this.state);
		this.enterRule(u, 472, t.RULE_structType);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2867),
				this.match(t.KW_STRUCT),
				(this.state = 2868),
				this.match(t.LESSTHAN),
				(this.state = 2869),
				this.columnNameColonTypeList(),
				(this.state = 2870),
				this.match(t.GREATERTHAN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function or(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_mapType),
			this
		);
	}
	or.prototype = Object.create(s.ParserRuleContext.prototype);
	or.prototype.constructor = or;
	or.prototype.KW_MAP = function () {
		return this.getToken(t.KW_MAP, 0);
	};
	or.prototype.LESSTHAN = function () {
		return this.getToken(t.LESSTHAN, 0);
	};
	or.prototype.primitiveType = function () {
		return this.getTypedRuleContext(J, 0);
	};
	or.prototype.COMMA = function () {
		return this.getToken(t.COMMA, 0);
	};
	or.prototype.type_db_col = function () {
		return this.getTypedRuleContext(ri, 0);
	};
	or.prototype.GREATERTHAN = function () {
		return this.getToken(t.GREATERTHAN, 0);
	};
	or.prototype.accept = function (u) {
		return u instanceof d ? u.visitMapType(this) : u.visitChildren(this);
	};
	t.MapTypeContext = or;
	t.prototype.mapType = function () {
		var u = new or(this, this._ctx, this.state);
		this.enterRule(u, 474, t.RULE_mapType);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2872),
				this.match(t.KW_MAP),
				(this.state = 2873),
				this.match(t.LESSTHAN),
				(this.state = 2874),
				this.primitiveType(),
				(this.state = 2875),
				this.match(t.COMMA),
				(this.state = 2876),
				this.type_db_col(),
				(this.state = 2877),
				this.match(t.GREATERTHAN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function x2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_unionType),
			this
		);
	}
	x2.prototype = Object.create(s.ParserRuleContext.prototype);
	x2.prototype.constructor = x2;
	x2.prototype.KW_UNIONTYPE = function () {
		return this.getToken(t.KW_UNIONTYPE, 0);
	};
	x2.prototype.LESSTHAN = function () {
		return this.getToken(t.LESSTHAN, 0);
	};
	x2.prototype.colTypeList = function () {
		return this.getTypedRuleContext(rp, 0);
	};
	x2.prototype.GREATERTHAN = function () {
		return this.getToken(t.GREATERTHAN, 0);
	};
	x2.prototype.accept = function (u) {
		return u instanceof d ? u.visitUnionType(this) : u.visitChildren(this);
	};
	t.UnionTypeContext = x2;
	t.prototype.unionType = function () {
		var u = new x2(this, this._ctx, this.state);
		this.enterRule(u, 476, t.RULE_unionType);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2879),
				this.match(t.KW_UNIONTYPE),
				(this.state = 2880),
				this.match(t.LESSTHAN),
				(this.state = 2881),
				this.colTypeList(),
				(this.state = 2882),
				this.match(t.GREATERTHAN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Pt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_setOperator),
			this
		);
	}
	Pt.prototype = Object.create(s.ParserRuleContext.prototype);
	Pt.prototype.constructor = Pt;
	Pt.prototype.KW_UNION = function () {
		return this.getToken(t.KW_UNION, 0);
	};
	Pt.prototype.KW_ALL = function () {
		return this.getToken(t.KW_ALL, 0);
	};
	Pt.prototype.KW_DISTINCT = function () {
		return this.getToken(t.KW_DISTINCT, 0);
	};
	Pt.prototype.KW_INTERSECT = function () {
		return this.getToken(t.KW_INTERSECT, 0);
	};
	Pt.prototype.KW_EXCEPT = function () {
		return this.getToken(t.KW_EXCEPT, 0);
	};
	Pt.prototype.KW_MINUS = function () {
		return this.getToken(t.KW_MINUS, 0);
	};
	Pt.prototype.accept = function (u) {
		return u instanceof d ? u.visitSetOperator(this) : u.visitChildren(this);
	};
	t.SetOperatorContext = Pt;
	t.prototype.setOperator = function () {
		var u = new Pt(this, this._ctx, this.state);
		this.enterRule(u, 478, t.RULE_setOperator);
		var e = 0;
		try {
			(this.state = 2908), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 287, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 2884),
						this.match(t.KW_UNION),
						(this.state = 2885),
						this.match(t.KW_ALL);
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 2886),
						this.match(t.KW_UNION),
						(this.state = 2888),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_DISTINCT && ((this.state = 2887), this.match(t.KW_DISTINCT));
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 2890),
						this.match(t.KW_INTERSECT),
						(this.state = 2891),
						this.match(t.KW_ALL);
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 2892),
						this.match(t.KW_INTERSECT),
						(this.state = 2894),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_DISTINCT && ((this.state = 2893), this.match(t.KW_DISTINCT));
					break;
				case 5:
					this.enterOuterAlt(u, 5),
						(this.state = 2896),
						this.match(t.KW_EXCEPT),
						(this.state = 2897),
						this.match(t.KW_ALL);
					break;
				case 6:
					this.enterOuterAlt(u, 6),
						(this.state = 2898),
						this.match(t.KW_EXCEPT),
						(this.state = 2900),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_DISTINCT && ((this.state = 2899), this.match(t.KW_DISTINCT));
					break;
				case 7:
					this.enterOuterAlt(u, 7),
						(this.state = 2902),
						this.match(t.KW_MINUS),
						(this.state = 2903),
						this.match(t.KW_ALL);
					break;
				case 8:
					this.enterOuterAlt(u, 8),
						(this.state = 2904),
						this.match(t.KW_MINUS),
						(this.state = 2906),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_DISTINCT && ((this.state = 2905), this.match(t.KW_DISTINCT));
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Un(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_queryStatementExpression),
			this
		);
	}
	Un.prototype = Object.create(s.ParserRuleContext.prototype);
	Un.prototype.constructor = Un;
	Un.prototype.queryStatementExpressionBody = function () {
		return this.getTypedRuleContext(np, 0);
	};
	Un.prototype.withClause = function () {
		return this.getTypedRuleContext(O2, 0);
	};
	Un.prototype.accept = function (u) {
		return u instanceof d ? u.visitQueryStatementExpression(this) : u.visitChildren(this);
	};
	t.QueryStatementExpressionContext = Un;
	t.prototype.queryStatementExpression = function () {
		var u = new Un(this, this._ctx, this.state);
		this.enterRule(u, 480, t.RULE_queryStatementExpression);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2911),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH && ((this.state = 2910), this.withClause()),
				(this.state = 2913),
				this.queryStatementExpressionBody();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function np(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_queryStatementExpressionBody),
			this
		);
	}
	np.prototype = Object.create(s.ParserRuleContext.prototype);
	np.prototype.constructor = np;
	np.prototype.fromStatement = function () {
		return this.getTypedRuleContext(sp, 0);
	};
	np.prototype.regularBody = function () {
		return this.getTypedRuleContext(Xo, 0);
	};
	np.prototype.accept = function (u) {
		return u instanceof d ? u.visitQueryStatementExpressionBody(this) : u.visitChildren(this);
	};
	t.QueryStatementExpressionBodyContext = np;
	t.prototype.queryStatementExpressionBody = function () {
		var u = new np(this, this._ctx, this.state);
		this.enterRule(u, 482, t.RULE_queryStatementExpressionBody);
		try {
			switch (((this.state = 2917), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_FROM:
					this.enterOuterAlt(u, 1), (this.state = 2915), this.fromStatement();
					break;
				case t.KW_SELECT:
				case t.KW_INSERT:
				case t.KW_MAP:
				case t.KW_REDUCE:
				case t.LPAREN:
					this.enterOuterAlt(u, 2), (this.state = 2916), this.regularBody();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function O2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_withClause),
			this
		);
	}
	O2.prototype = Object.create(s.ParserRuleContext.prototype);
	O2.prototype.constructor = O2;
	O2.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	O2.prototype.cteStatement = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(cr) : this.getTypedRuleContext(cr, u);
	};
	O2.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	O2.prototype.accept = function (u) {
		return u instanceof d ? u.visitWithClause(this) : u.visitChildren(this);
	};
	t.WithClauseContext = O2;
	t.prototype.withClause = function () {
		var u = new O2(this, this._ctx, this.state);
		this.enterRule(u, 484, t.RULE_withClause);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2919,
					this.match(t.KW_WITH),
					this.state = 2920,
					this.cteStatement(),
					this.state = 2925,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 2921),
					this.match(t.COMMA),
					(this.state = 2922),
					this.cteStatement(),
					(this.state = 2927),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function cr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_cteStatement),
			this
		);
	}
	cr.prototype = Object.create(s.ParserRuleContext.prototype);
	cr.prototype.constructor = cr;
	cr.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	cr.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	cr.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	cr.prototype.queryStatementExpression = function () {
		return this.getTypedRuleContext(Un, 0);
	};
	cr.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	cr.prototype.accept = function (u) {
		return u instanceof d ? u.visitCteStatement(this) : u.visitChildren(this);
	};
	t.CteStatementContext = cr;
	t.prototype.cteStatement = function () {
		var u = new cr(this, this._ctx, this.state);
		this.enterRule(u, 486, t.RULE_cteStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2928),
				this.identifier(),
				(this.state = 2929),
				this.match(t.KW_AS),
				(this.state = 2930),
				this.match(t.LPAREN),
				(this.state = 2931),
				this.queryStatementExpression(),
				(this.state = 2932),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function sp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_fromStatement),
			this
		);
	}
	sp.prototype = Object.create(s.ParserRuleContext.prototype);
	sp.prototype.constructor = sp;
	sp.prototype.singleFromStatement = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(jo) : this.getTypedRuleContext(jo, u);
	};
	sp.prototype.setOperator = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Pt) : this.getTypedRuleContext(Pt, u);
	};
	sp.prototype.accept = function (u) {
		return u instanceof d ? u.visitFromStatement(this) : u.visitChildren(this);
	};
	t.FromStatementContext = sp;
	t.prototype.fromStatement = function () {
		var u = new sp(this, this._ctx, this.state);
		this.enterRule(u, 488, t.RULE_fromStatement);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 2934,
					this.singleFromStatement(),
					this.state = 2940,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.KW_UNION || e === t.KW_EXCEPT || e === t.KW_MINUS || e === t.KW_INTERSECT;

			)
				(this.state = 2935),
					this.setOperator(),
					(this.state = 2936),
					this.singleFromStatement(),
					(this.state = 2942),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function jo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_singleFromStatement),
			this
		);
	}
	jo.prototype = Object.create(s.ParserRuleContext.prototype);
	jo.prototype.constructor = jo;
	jo.prototype.fromClause = function () {
		return this.getTypedRuleContext(i1, 0);
	};
	jo.prototype.body = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(iu) : this.getTypedRuleContext(iu, u);
	};
	jo.prototype.accept = function (u) {
		return u instanceof d ? u.visitSingleFromStatement(this) : u.visitChildren(this);
	};
	t.SingleFromStatementContext = jo;
	t.prototype.singleFromStatement = function () {
		var u = new jo(this, this._ctx, this.state);
		this.enterRule(u, 490, t.RULE_singleFromStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2943),
				this.fromClause(),
				(this.state = 2945),
				this._errHandler.sync(this),
				(e = this._input.LA(1));
			do
				(this.state = 2944),
					this.body(),
					(this.state = 2947),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			while (e === t.KW_SELECT || e === t.KW_INSERT || e === t.KW_MAP || e === t.KW_REDUCE);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Xo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_regularBody),
			this
		);
	}
	Xo.prototype = Object.create(s.ParserRuleContext.prototype);
	Xo.prototype.constructor = Xo;
	Xo.prototype.insertClause = function () {
		return this.getTypedRuleContext(Uu, 0);
	};
	Xo.prototype.selectStatement = function () {
		return this.getTypedRuleContext(ht, 0);
	};
	Xo.prototype.valuesClause = function () {
		return this.getTypedRuleContext(k2, 0);
	};
	Xo.prototype.accept = function (u) {
		return u instanceof d ? u.visitRegularBody(this) : u.visitChildren(this);
	};
	t.RegularBodyContext = Xo;
	t.prototype.regularBody = function () {
		var u = new Xo(this, this._ctx, this.state);
		this.enterRule(u, 492, t.RULE_regularBody);
		try {
			switch (((this.state = 2955), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_INSERT:
					switch (
						(this.enterOuterAlt(u, 1),
						(this.state = 2949),
						this.insertClause(),
						(this.state = 2952),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_SELECT:
						case t.KW_MAP:
						case t.KW_REDUCE:
						case t.LPAREN:
							(this.state = 2950), this.selectStatement();
							break;
						case t.KW_VALUES:
							(this.state = 2951), this.valuesClause();
							break;
						default:
							throw new s.error.NoViableAltException(this);
					}
					break;
				case t.KW_SELECT:
				case t.KW_MAP:
				case t.KW_REDUCE:
				case t.LPAREN:
					this.enterOuterAlt(u, 2), (this.state = 2954), this.selectStatement();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Du(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_atomSelectStatement),
			this
		);
	}
	Du.prototype = Object.create(s.ParserRuleContext.prototype);
	Du.prototype.constructor = Du;
	Du.prototype.selectClause = function () {
		return this.getTypedRuleContext(Dt, 0);
	};
	Du.prototype.fromClause = function () {
		return this.getTypedRuleContext(i1, 0);
	};
	Du.prototype.whereClause = function () {
		return this.getTypedRuleContext(Vn, 0);
	};
	Du.prototype.groupByClause = function () {
		return this.getTypedRuleContext(V2, 0);
	};
	Du.prototype.havingClause = function () {
		return this.getTypedRuleContext(h1, 0);
	};
	Du.prototype.window_clause = function () {
		return this.getTypedRuleContext(U2, 0);
	};
	Du.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Du.prototype.selectStatement = function () {
		return this.getTypedRuleContext(ht, 0);
	};
	Du.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Du.prototype.accept = function (u) {
		return u instanceof d ? u.visitAtomSelectStatement(this) : u.visitChildren(this);
	};
	t.AtomSelectStatementContext = Du;
	t.prototype.atomSelectStatement = function () {
		var u = new Du(this, this._ctx, this.state);
		this.enterRule(u, 494, t.RULE_atomSelectStatement);
		var e = 0;
		try {
			switch (((this.state = 2977), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_SELECT:
				case t.KW_MAP:
				case t.KW_REDUCE:
					this.enterOuterAlt(u, 1),
						(this.state = 2957),
						this.selectClause(),
						(this.state = 2959),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_FROM && ((this.state = 2958), this.fromClause()),
						(this.state = 2962),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_WHERE && ((this.state = 2961), this.whereClause()),
						(this.state = 2965),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_GROUP && ((this.state = 2964), this.groupByClause()),
						(this.state = 2968),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_HAVING && ((this.state = 2967), this.havingClause()),
						(this.state = 2971),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_WINDOW && ((this.state = 2970), this.window_clause());
					break;
				case t.LPAREN:
					this.enterOuterAlt(u, 2),
						(this.state = 2973),
						this.match(t.LPAREN),
						(this.state = 2974),
						this.selectStatement(),
						(this.state = 2975),
						this.match(t.RPAREN);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ht(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_selectStatement),
			this
		);
	}
	ht.prototype = Object.create(s.ParserRuleContext.prototype);
	ht.prototype.constructor = ht;
	ht.prototype.atomSelectStatement = function () {
		return this.getTypedRuleContext(Du, 0);
	};
	ht.prototype.setOpSelectStatement = function () {
		return this.getTypedRuleContext(ap, 0);
	};
	ht.prototype.orderByClause = function () {
		return this.getTypedRuleContext(fr, 0);
	};
	ht.prototype.clusterByClause = function () {
		return this.getTypedRuleContext(Bn, 0);
	};
	ht.prototype.distributeByClause = function () {
		return this.getTypedRuleContext(Yn, 0);
	};
	ht.prototype.sortByClause = function () {
		return this.getTypedRuleContext(_r, 0);
	};
	ht.prototype.limitClause = function () {
		return this.getTypedRuleContext(wn, 0);
	};
	ht.prototype.accept = function (u) {
		return u instanceof d ? u.visitSelectStatement(this) : u.visitChildren(this);
	};
	t.SelectStatementContext = ht;
	t.prototype.selectStatement = function () {
		var u = new ht(this, this._ctx, this.state);
		this.enterRule(u, 496, t.RULE_selectStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 2979),
				this.atomSelectStatement(),
				(this.state = 2981),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_UNION || e === t.KW_EXCEPT || e === t.KW_MINUS || e === t.KW_INTERSECT) &&
					((this.state = 2980), this.setOpSelectStatement()),
				(this.state = 2984),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ORDER && ((this.state = 2983), this.orderByClause()),
				(this.state = 2987),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_CLUSTER && ((this.state = 2986), this.clusterByClause()),
				(this.state = 2990),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_DISTRIBUTE && ((this.state = 2989), this.distributeByClause()),
				(this.state = 2993),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_SORT && ((this.state = 2992), this.sortByClause()),
				(this.state = 2996),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_LIMIT && ((this.state = 2995), this.limitClause());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ap(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_setOpSelectStatement),
			this
		);
	}
	ap.prototype = Object.create(s.ParserRuleContext.prototype);
	ap.prototype.constructor = ap;
	ap.prototype.setOperator = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Pt) : this.getTypedRuleContext(Pt, u);
	};
	ap.prototype.atomSelectStatement = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Du) : this.getTypedRuleContext(Du, u);
	};
	ap.prototype.accept = function (u) {
		return u instanceof d ? u.visitSetOpSelectStatement(this) : u.visitChildren(this);
	};
	t.SetOpSelectStatementContext = ap;
	t.prototype.setOpSelectStatement = function () {
		var u = new ap(this, this._ctx, this.state);
		this.enterRule(u, 498, t.RULE_setOpSelectStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1), (this.state = 3001), this._errHandler.sync(this), (e = this._input.LA(1));
			do
				(this.state = 2998),
					this.setOperator(),
					(this.state = 2999),
					this.atomSelectStatement(),
					(this.state = 3003),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			while (e === t.KW_UNION || e === t.KW_EXCEPT || e === t.KW_MINUS || e === t.KW_INTERSECT);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function vn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_selectStatementWithCTE),
			this
		);
	}
	vn.prototype = Object.create(s.ParserRuleContext.prototype);
	vn.prototype.constructor = vn;
	vn.prototype.selectStatement = function () {
		return this.getTypedRuleContext(ht, 0);
	};
	vn.prototype.withClause = function () {
		return this.getTypedRuleContext(O2, 0);
	};
	vn.prototype.accept = function (u) {
		return u instanceof d ? u.visitSelectStatementWithCTE(this) : u.visitChildren(this);
	};
	t.SelectStatementWithCTEContext = vn;
	t.prototype.selectStatementWithCTE = function () {
		var u = new vn(this, this._ctx, this.state);
		this.enterRule(u, 500, t.RULE_selectStatementWithCTE);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3006),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH && ((this.state = 3005), this.withClause()),
				(this.state = 3008),
				this.selectStatement();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function iu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_body),
			this
		);
	}
	iu.prototype = Object.create(s.ParserRuleContext.prototype);
	iu.prototype.constructor = iu;
	iu.prototype.insertClause = function () {
		return this.getTypedRuleContext(Uu, 0);
	};
	iu.prototype.selectClause = function () {
		return this.getTypedRuleContext(Dt, 0);
	};
	iu.prototype.lateralView = function () {
		return this.getTypedRuleContext(L0, 0);
	};
	iu.prototype.whereClause = function () {
		return this.getTypedRuleContext(Vn, 0);
	};
	iu.prototype.groupByClause = function () {
		return this.getTypedRuleContext(V2, 0);
	};
	iu.prototype.havingClause = function () {
		return this.getTypedRuleContext(h1, 0);
	};
	iu.prototype.window_clause = function () {
		return this.getTypedRuleContext(U2, 0);
	};
	iu.prototype.orderByClause = function () {
		return this.getTypedRuleContext(fr, 0);
	};
	iu.prototype.clusterByClause = function () {
		return this.getTypedRuleContext(Bn, 0);
	};
	iu.prototype.distributeByClause = function () {
		return this.getTypedRuleContext(Yn, 0);
	};
	iu.prototype.sortByClause = function () {
		return this.getTypedRuleContext(_r, 0);
	};
	iu.prototype.limitClause = function () {
		return this.getTypedRuleContext(wn, 0);
	};
	iu.prototype.accept = function (u) {
		return u instanceof d ? u.visitBody(this) : u.visitChildren(this);
	};
	t.BodyContext = iu;
	t.prototype.body = function () {
		var u = new iu(this, this._ctx, this.state);
		this.enterRule(u, 502, t.RULE_body);
		var e = 0;
		try {
			switch (((this.state = 3073), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_INSERT:
					this.enterOuterAlt(u, 1),
						(this.state = 3010),
						this.insertClause(),
						(this.state = 3011),
						this.selectClause(),
						(this.state = 3013),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_LATERAL || e === t.COMMA) && ((this.state = 3012), this.lateralView()),
						(this.state = 3016),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_WHERE && ((this.state = 3015), this.whereClause()),
						(this.state = 3019),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_GROUP && ((this.state = 3018), this.groupByClause()),
						(this.state = 3022),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_HAVING && ((this.state = 3021), this.havingClause()),
						(this.state = 3025),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_WINDOW && ((this.state = 3024), this.window_clause()),
						(this.state = 3028),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_ORDER && ((this.state = 3027), this.orderByClause()),
						(this.state = 3031),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_CLUSTER && ((this.state = 3030), this.clusterByClause()),
						(this.state = 3034),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_DISTRIBUTE && ((this.state = 3033), this.distributeByClause()),
						(this.state = 3037),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_SORT && ((this.state = 3036), this.sortByClause()),
						(this.state = 3040),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_LIMIT && ((this.state = 3039), this.limitClause());
					break;
				case t.KW_SELECT:
				case t.KW_MAP:
				case t.KW_REDUCE:
					this.enterOuterAlt(u, 2),
						(this.state = 3042),
						this.selectClause(),
						(this.state = 3044),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_LATERAL || e === t.COMMA) && ((this.state = 3043), this.lateralView()),
						(this.state = 3047),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_WHERE && ((this.state = 3046), this.whereClause()),
						(this.state = 3050),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_GROUP && ((this.state = 3049), this.groupByClause()),
						(this.state = 3053),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_HAVING && ((this.state = 3052), this.havingClause()),
						(this.state = 3056),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_WINDOW && ((this.state = 3055), this.window_clause()),
						(this.state = 3059),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_ORDER && ((this.state = 3058), this.orderByClause()),
						(this.state = 3062),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_CLUSTER && ((this.state = 3061), this.clusterByClause()),
						(this.state = 3065),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_DISTRIBUTE && ((this.state = 3064), this.distributeByClause()),
						(this.state = 3068),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_SORT && ((this.state = 3067), this.sortByClause()),
						(this.state = 3071),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_LIMIT && ((this.state = 3070), this.limitClause());
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Uu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_insertClause),
			this
		);
	}
	Uu.prototype = Object.create(s.ParserRuleContext.prototype);
	Uu.prototype.constructor = Uu;
	Uu.prototype.KW_INSERT = function () {
		return this.getToken(t.KW_INSERT, 0);
	};
	Uu.prototype.KW_OVERWRITE = function () {
		return this.getToken(t.KW_OVERWRITE, 0);
	};
	Uu.prototype.destination = function () {
		return this.getTypedRuleContext(ni, 0);
	};
	Uu.prototype.ifNotExists = function () {
		return this.getTypedRuleContext(re, 0);
	};
	Uu.prototype.KW_INTO = function () {
		return this.getToken(t.KW_INTO, 0);
	};
	Uu.prototype.tableOrPartition = function () {
		return this.getTypedRuleContext(fi, 0);
	};
	Uu.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	Uu.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Uu.prototype.columnNameList = function () {
		return this.getTypedRuleContext(pt, 0);
	};
	Uu.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Uu.prototype.accept = function (u) {
		return u instanceof d ? u.visitInsertClause(this) : u.visitChildren(this);
	};
	t.InsertClauseContext = Uu;
	t.prototype.insertClause = function () {
		var u = new Uu(this, this._ctx, this.state);
		this.enterRule(u, 504, t.RULE_insertClause);
		var e = 0;
		try {
			(this.state = 3093), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 333, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 3075),
						this.match(t.KW_INSERT),
						(this.state = 3076),
						this.match(t.KW_OVERWRITE),
						(this.state = 3077),
						this.destination(),
						(this.state = 3079),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_IF && ((this.state = 3078), this.ifNotExists());
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 3081),
						this.match(t.KW_INSERT),
						(this.state = 3082),
						this.match(t.KW_INTO),
						(this.state = 3084),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_TABLE && ((this.state = 3083), this.match(t.KW_TABLE)),
						(this.state = 3086),
						this.tableOrPartition(),
						(this.state = 3091),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 332, this._ctx);
					i === 1 &&
						((this.state = 3087),
						this.match(t.LPAREN),
						(this.state = 3088),
						this.columnNameList(),
						(this.state = 3089),
						this.match(t.RPAREN));
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ni(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_destination),
			this
		);
	}
	ni.prototype = Object.create(s.ParserRuleContext.prototype);
	ni.prototype.constructor = ni;
	ni.prototype.KW_DIRECTORY = function () {
		return this.getToken(t.KW_DIRECTORY, 0);
	};
	ni.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	ni.prototype.KW_LOCAL = function () {
		return this.getToken(t.KW_LOCAL, 0);
	};
	ni.prototype.tableRowFormat = function () {
		return this.getTypedRuleContext(ir, 0);
	};
	ni.prototype.tableFileFormat = function () {
		return this.getTypedRuleContext(ti, 0);
	};
	ni.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	ni.prototype.tableOrPartition = function () {
		return this.getTypedRuleContext(fi, 0);
	};
	ni.prototype.accept = function (u) {
		return u instanceof d ? u.visitDestination(this) : u.visitChildren(this);
	};
	t.DestinationContext = ni;
	t.prototype.destination = function () {
		var u = new ni(this, this._ctx, this.state);
		this.enterRule(u, 506, t.RULE_destination);
		var e = 0;
		try {
			switch (((this.state = 3108), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_DIRECTORY:
				case t.KW_LOCAL:
					this.enterOuterAlt(u, 1),
						(this.state = 3096),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_LOCAL && ((this.state = 3095), this.match(t.KW_LOCAL)),
						(this.state = 3098),
						this.match(t.KW_DIRECTORY),
						(this.state = 3099),
						this.match(t.StringLiteral),
						(this.state = 3101),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_ROW && ((this.state = 3100), this.tableRowFormat()),
						(this.state = 3104),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_STORED && ((this.state = 3103), this.tableFileFormat());
					break;
				case t.KW_TABLE:
					this.enterOuterAlt(u, 2),
						(this.state = 3106),
						this.match(t.KW_TABLE),
						(this.state = 3107),
						this.tableOrPartition();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function wn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_limitClause),
			this
		);
	}
	wn.prototype = Object.create(s.ParserRuleContext.prototype);
	wn.prototype.constructor = wn;
	wn.prototype.KW_LIMIT = function () {
		return this.getToken(t.KW_LIMIT, 0);
	};
	wn.prototype.Number = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.Number) : this.getToken(t.Number, u);
	};
	wn.prototype.COMMA = function () {
		return this.getToken(t.COMMA, 0);
	};
	wn.prototype.KW_OFFSET = function () {
		return this.getToken(t.KW_OFFSET, 0);
	};
	wn.prototype.accept = function (u) {
		return u instanceof d ? u.visitLimitClause(this) : u.visitChildren(this);
	};
	t.LimitClauseContext = wn;
	t.prototype.limitClause = function () {
		var u = new wn(this, this._ctx, this.state);
		this.enterRule(u, 508, t.RULE_limitClause);
		try {
			(this.state = 3120), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 339, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 3110),
						this.match(t.KW_LIMIT),
						(this.state = 3113),
						this._errHandler.sync(this);
					var e = this._interp.adaptivePredict(this._input, 338, this._ctx);
					e === 1 && ((this.state = 3111), this.match(t.Number), (this.state = 3112), this.match(t.COMMA)),
						(this.state = 3115),
						this.match(t.Number);
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 3116),
						this.match(t.KW_LIMIT),
						(this.state = 3117),
						this.match(t.Number),
						(this.state = 3118),
						this.match(t.KW_OFFSET),
						(this.state = 3119),
						this.match(t.Number);
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function L2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_deleteStatement),
			this
		);
	}
	L2.prototype = Object.create(s.ParserRuleContext.prototype);
	L2.prototype.constructor = L2;
	L2.prototype.KW_DELETE = function () {
		return this.getToken(t.KW_DELETE, 0);
	};
	L2.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	L2.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	L2.prototype.whereClause = function () {
		return this.getTypedRuleContext(Vn, 0);
	};
	L2.prototype.accept = function (u) {
		return u instanceof d ? u.visitDeleteStatement(this) : u.visitChildren(this);
	};
	t.DeleteStatementContext = L2;
	t.prototype.deleteStatement = function () {
		var u = new L2(this, this._ctx, this.state);
		this.enterRule(u, 510, t.RULE_deleteStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3122),
				this.match(t.KW_DELETE),
				(this.state = 3123),
				this.match(t.KW_FROM),
				(this.state = 3124),
				this.tableName(),
				(this.state = 3126),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WHERE && ((this.state = 3125), this.whereClause());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function S2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnAssignmentClause),
			this
		);
	}
	S2.prototype = Object.create(s.ParserRuleContext.prototype);
	S2.prototype.constructor = S2;
	S2.prototype.tableOrColumn = function () {
		return this.getTypedRuleContext(lp, 0);
	};
	S2.prototype.EQUAL = function () {
		return this.getToken(t.EQUAL, 0);
	};
	S2.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	S2.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnAssignmentClause(this) : u.visitChildren(this);
	};
	t.ColumnAssignmentClauseContext = S2;
	t.prototype.columnAssignmentClause = function () {
		var u = new S2(this, this._ctx, this.state);
		this.enterRule(u, 512, t.RULE_columnAssignmentClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3128),
				this.tableOrColumn(),
				(this.state = 3129),
				this.match(t.EQUAL),
				(this.state = 3130),
				this.expression(0);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function I2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_setColumnsClause),
			this
		);
	}
	I2.prototype = Object.create(s.ParserRuleContext.prototype);
	I2.prototype.constructor = I2;
	I2.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	I2.prototype.columnAssignmentClause = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(S2) : this.getTypedRuleContext(S2, u);
	};
	I2.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	I2.prototype.accept = function (u) {
		return u instanceof d ? u.visitSetColumnsClause(this) : u.visitChildren(this);
	};
	t.SetColumnsClauseContext = I2;
	t.prototype.setColumnsClause = function () {
		var u = new I2(this, this._ctx, this.state);
		this.enterRule(u, 514, t.RULE_setColumnsClause);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3132,
					this.match(t.KW_SET),
					this.state = 3133,
					this.columnAssignmentClause(),
					this.state = 3138,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3134),
					this.match(t.COMMA),
					(this.state = 3135),
					this.columnAssignmentClause(),
					(this.state = 3140),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function N2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_updateStatement),
			this
		);
	}
	N2.prototype = Object.create(s.ParserRuleContext.prototype);
	N2.prototype.constructor = N2;
	N2.prototype.KW_UPDATE = function () {
		return this.getToken(t.KW_UPDATE, 0);
	};
	N2.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	N2.prototype.setColumnsClause = function () {
		return this.getTypedRuleContext(I2, 0);
	};
	N2.prototype.whereClause = function () {
		return this.getTypedRuleContext(Vn, 0);
	};
	N2.prototype.accept = function (u) {
		return u instanceof d ? u.visitUpdateStatement(this) : u.visitChildren(this);
	};
	t.UpdateStatementContext = N2;
	t.prototype.updateStatement = function () {
		var u = new N2(this, this._ctx, this.state);
		this.enterRule(u, 516, t.RULE_updateStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3141),
				this.match(t.KW_UPDATE),
				(this.state = 3142),
				this.tableName(),
				(this.state = 3143),
				this.setColumnsClause(),
				(this.state = 3145),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WHERE && ((this.state = 3144), this.whereClause());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function P2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_sqlTransactionStatement),
			this
		);
	}
	P2.prototype = Object.create(s.ParserRuleContext.prototype);
	P2.prototype.constructor = P2;
	P2.prototype.startTransactionStatement = function () {
		return this.getTypedRuleContext(g2, 0);
	};
	P2.prototype.commitStatement = function () {
		return this.getTypedRuleContext(op, 0);
	};
	P2.prototype.rollbackStatement = function () {
		return this.getTypedRuleContext(cp, 0);
	};
	P2.prototype.setAutoCommitStatement = function () {
		return this.getTypedRuleContext(Jo, 0);
	};
	P2.prototype.accept = function (u) {
		return u instanceof d ? u.visitSqlTransactionStatement(this) : u.visitChildren(this);
	};
	t.SqlTransactionStatementContext = P2;
	t.prototype.sqlTransactionStatement = function () {
		var u = new P2(this, this._ctx, this.state);
		this.enterRule(u, 518, t.RULE_sqlTransactionStatement);
		try {
			switch (((this.state = 3151), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_START:
					this.enterOuterAlt(u, 1), (this.state = 3147), this.startTransactionStatement();
					break;
				case t.KW_COMMIT:
					this.enterOuterAlt(u, 2), (this.state = 3148), this.commitStatement();
					break;
				case t.KW_ROLLBACK:
					this.enterOuterAlt(u, 3), (this.state = 3149), this.rollbackStatement();
					break;
				case t.KW_SET:
					this.enterOuterAlt(u, 4), (this.state = 3150), this.setAutoCommitStatement();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function g2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_startTransactionStatement),
			this
		);
	}
	g2.prototype = Object.create(s.ParserRuleContext.prototype);
	g2.prototype.constructor = g2;
	g2.prototype.KW_START = function () {
		return this.getToken(t.KW_START, 0);
	};
	g2.prototype.KW_TRANSACTION = function () {
		return this.getToken(t.KW_TRANSACTION, 0);
	};
	g2.prototype.transactionMode = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Qo) : this.getTypedRuleContext(Qo, u);
	};
	g2.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	g2.prototype.accept = function (u) {
		return u instanceof d ? u.visitStartTransactionStatement(this) : u.visitChildren(this);
	};
	t.StartTransactionStatementContext = g2;
	t.prototype.startTransactionStatement = function () {
		var u = new g2(this, this._ctx, this.state);
		this.enterRule(u, 520, t.RULE_startTransactionStatement);
		var e = 0;
		try {
			if (
				(this.enterOuterAlt(u, 1),
				(this.state = 3153),
				this.match(t.KW_START),
				(this.state = 3154),
				this.match(t.KW_TRANSACTION),
				(this.state = 3163),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_READ || e === t.KW_ISOLATION)
			)
				for (
					this.state = 3155,
						this.transactionMode(),
						this.state = 3160,
						this._errHandler.sync(this),
						e = this._input.LA(1);
					e === t.COMMA;

				)
					(this.state = 3156),
						this.match(t.COMMA),
						(this.state = 3157),
						this.transactionMode(),
						(this.state = 3162),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Qo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_transactionMode),
			this
		);
	}
	Qo.prototype = Object.create(s.ParserRuleContext.prototype);
	Qo.prototype.constructor = Qo;
	Qo.prototype.isolationLevel = function () {
		return this.getTypedRuleContext(Zo, 0);
	};
	Qo.prototype.transactionAccessMode = function () {
		return this.getTypedRuleContext(qo, 0);
	};
	Qo.prototype.accept = function (u) {
		return u instanceof d ? u.visitTransactionMode(this) : u.visitChildren(this);
	};
	t.TransactionModeContext = Qo;
	t.prototype.transactionMode = function () {
		var u = new Qo(this, this._ctx, this.state);
		this.enterRule(u, 522, t.RULE_transactionMode);
		try {
			switch (((this.state = 3167), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ISOLATION:
					this.enterOuterAlt(u, 1), (this.state = 3165), this.isolationLevel();
					break;
				case t.KW_READ:
					this.enterOuterAlt(u, 2), (this.state = 3166), this.transactionAccessMode();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_transactionAccessMode),
			this
		);
	}
	qo.prototype = Object.create(s.ParserRuleContext.prototype);
	qo.prototype.constructor = qo;
	qo.prototype.KW_READ = function () {
		return this.getToken(t.KW_READ, 0);
	};
	qo.prototype.KW_ONLY = function () {
		return this.getToken(t.KW_ONLY, 0);
	};
	qo.prototype.KW_WRITE = function () {
		return this.getToken(t.KW_WRITE, 0);
	};
	qo.prototype.accept = function (u) {
		return u instanceof d ? u.visitTransactionAccessMode(this) : u.visitChildren(this);
	};
	t.TransactionAccessModeContext = qo;
	t.prototype.transactionAccessMode = function () {
		var u = new qo(this, this._ctx, this.state);
		this.enterRule(u, 524, t.RULE_transactionAccessMode);
		try {
			(this.state = 3173), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 347, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 3169),
						this.match(t.KW_READ),
						(this.state = 3170),
						this.match(t.KW_ONLY);
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 3171),
						this.match(t.KW_READ),
						(this.state = 3172),
						this.match(t.KW_WRITE);
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Zo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_isolationLevel),
			this
		);
	}
	Zo.prototype = Object.create(s.ParserRuleContext.prototype);
	Zo.prototype.constructor = Zo;
	Zo.prototype.KW_ISOLATION = function () {
		return this.getToken(t.KW_ISOLATION, 0);
	};
	Zo.prototype.KW_LEVEL = function () {
		return this.getToken(t.KW_LEVEL, 0);
	};
	Zo.prototype.levelOfIsolation = function () {
		return this.getTypedRuleContext(H3, 0);
	};
	Zo.prototype.accept = function (u) {
		return u instanceof d ? u.visitIsolationLevel(this) : u.visitChildren(this);
	};
	t.IsolationLevelContext = Zo;
	t.prototype.isolationLevel = function () {
		var u = new Zo(this, this._ctx, this.state);
		this.enterRule(u, 526, t.RULE_isolationLevel);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3175),
				this.match(t.KW_ISOLATION),
				(this.state = 3176),
				this.match(t.KW_LEVEL),
				(this.state = 3177),
				this.levelOfIsolation();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function H3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_levelOfIsolation),
			this
		);
	}
	H3.prototype = Object.create(s.ParserRuleContext.prototype);
	H3.prototype.constructor = H3;
	H3.prototype.KW_SNAPSHOT = function () {
		return this.getToken(t.KW_SNAPSHOT, 0);
	};
	H3.prototype.accept = function (u) {
		return u instanceof d ? u.visitLevelOfIsolation(this) : u.visitChildren(this);
	};
	t.LevelOfIsolationContext = H3;
	t.prototype.levelOfIsolation = function () {
		var u = new H3(this, this._ctx, this.state);
		this.enterRule(u, 528, t.RULE_levelOfIsolation);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3179), this.match(t.KW_SNAPSHOT);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function op(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_commitStatement),
			this
		);
	}
	op.prototype = Object.create(s.ParserRuleContext.prototype);
	op.prototype.constructor = op;
	op.prototype.KW_COMMIT = function () {
		return this.getToken(t.KW_COMMIT, 0);
	};
	op.prototype.KW_WORK = function () {
		return this.getToken(t.KW_WORK, 0);
	};
	op.prototype.accept = function (u) {
		return u instanceof d ? u.visitCommitStatement(this) : u.visitChildren(this);
	};
	t.CommitStatementContext = op;
	t.prototype.commitStatement = function () {
		var u = new op(this, this._ctx, this.state);
		this.enterRule(u, 530, t.RULE_commitStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3181),
				this.match(t.KW_COMMIT),
				(this.state = 3183),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WORK && ((this.state = 3182), this.match(t.KW_WORK));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function cp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rollbackStatement),
			this
		);
	}
	cp.prototype = Object.create(s.ParserRuleContext.prototype);
	cp.prototype.constructor = cp;
	cp.prototype.KW_ROLLBACK = function () {
		return this.getToken(t.KW_ROLLBACK, 0);
	};
	cp.prototype.KW_WORK = function () {
		return this.getToken(t.KW_WORK, 0);
	};
	cp.prototype.accept = function (u) {
		return u instanceof d ? u.visitRollbackStatement(this) : u.visitChildren(this);
	};
	t.RollbackStatementContext = cp;
	t.prototype.rollbackStatement = function () {
		var u = new cp(this, this._ctx, this.state);
		this.enterRule(u, 532, t.RULE_rollbackStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3185),
				this.match(t.KW_ROLLBACK),
				(this.state = 3187),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WORK && ((this.state = 3186), this.match(t.KW_WORK));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Jo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_setAutoCommitStatement),
			this
		);
	}
	Jo.prototype = Object.create(s.ParserRuleContext.prototype);
	Jo.prototype.constructor = Jo;
	Jo.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	Jo.prototype.KW_AUTOCOMMIT = function () {
		return this.getToken(t.KW_AUTOCOMMIT, 0);
	};
	Jo.prototype.booleanValueTok = function () {
		return this.getTypedRuleContext(Kp, 0);
	};
	Jo.prototype.accept = function (u) {
		return u instanceof d ? u.visitSetAutoCommitStatement(this) : u.visitChildren(this);
	};
	t.SetAutoCommitStatementContext = Jo;
	t.prototype.setAutoCommitStatement = function () {
		var u = new Jo(this, this._ctx, this.state);
		this.enterRule(u, 534, t.RULE_setAutoCommitStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3189),
				this.match(t.KW_SET),
				(this.state = 3190),
				this.match(t.KW_AUTOCOMMIT),
				(this.state = 3191),
				this.booleanValueTok();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function zo(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_abortTransactionStatement),
			this
		);
	}
	zo.prototype = Object.create(s.ParserRuleContext.prototype);
	zo.prototype.constructor = zo;
	zo.prototype.KW_ABORT = function () {
		return this.getToken(t.KW_ABORT, 0);
	};
	zo.prototype.KW_TRANSACTIONS = function () {
		return this.getToken(t.KW_TRANSACTIONS, 0);
	};
	zo.prototype.Number = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.Number) : this.getToken(t.Number, u);
	};
	zo.prototype.accept = function (u) {
		return u instanceof d ? u.visitAbortTransactionStatement(this) : u.visitChildren(this);
	};
	t.AbortTransactionStatementContext = zo;
	t.prototype.abortTransactionStatement = function () {
		var u = new zo(this, this._ctx, this.state);
		this.enterRule(u, 536, t.RULE_abortTransactionStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3193),
				this.match(t.KW_ABORT),
				(this.state = 3194),
				this.match(t.KW_TRANSACTIONS),
				(this.state = 3196),
				this._errHandler.sync(this),
				(e = this._input.LA(1));
			do
				(this.state = 3195),
					this.match(t.Number),
					(this.state = 3198),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			while (e === t.Number);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function lt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_mergeStatement),
			this
		);
	}
	lt.prototype = Object.create(s.ParserRuleContext.prototype);
	lt.prototype.constructor = lt;
	lt.prototype.KW_MERGE = function () {
		return this.getToken(t.KW_MERGE, 0);
	};
	lt.prototype.KW_INTO = function () {
		return this.getToken(t.KW_INTO, 0);
	};
	lt.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	lt.prototype.KW_USING = function () {
		return this.getToken(t.KW_USING, 0);
	};
	lt.prototype.joinSourcePart = function () {
		return this.getTypedRuleContext(ai, 0);
	};
	lt.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	lt.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	lt.prototype.whenClauses = function () {
		return this.getTypedRuleContext($o, 0);
	};
	lt.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	lt.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	lt.prototype.accept = function (u) {
		return u instanceof d ? u.visitMergeStatement(this) : u.visitChildren(this);
	};
	t.MergeStatementContext = lt;
	t.prototype.mergeStatement = function () {
		var u = new lt(this, this._ctx, this.state);
		this.enterRule(u, 538, t.RULE_mergeStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3200),
				this.match(t.KW_MERGE),
				(this.state = 3201),
				this.match(t.KW_INTO),
				(this.state = 3202),
				this.tableName(),
				(this.state = 3207),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(((e & -32) == 0 &&
					((1 << e) &
						((1 << t.KW_ASC) |
							(1 << t.KW_DESC) |
							(1 << t.KW_NULLS) |
							(1 << t.KW_LAST) |
							(1 << t.KW_AS) |
							(1 << t.KW_OVERWRITE))) !==
						0) ||
					(((e - 36) & -32) == 0 &&
						((1 << (e - 36)) &
							((1 << (t.KW_PARTITIONS - 36)) |
								(1 << (t.KW_TABLES - 36)) |
								(1 << (t.KW_COLUMNS - 36)) |
								(1 << (t.KW_INDEX - 36)) |
								(1 << (t.KW_INDEXES - 36)) |
								(1 << (t.KW_REBUILD - 36)) |
								(1 << (t.KW_FUNCTIONS - 36)) |
								(1 << (t.KW_SHOW - 36)) |
								(1 << (t.KW_MSCK - 36)) |
								(1 << (t.KW_REPAIR - 36)) |
								(1 << (t.KW_DIRECTORY - 36)) |
								(1 << (t.KW_CLUSTER - 36)) |
								(1 << (t.KW_DISTRIBUTE - 36)) |
								(1 << (t.KW_SORT - 36)) |
								(1 << (t.KW_LOAD - 36)) |
								(1 << (t.KW_EXPORT - 36)) |
								(1 << (t.KW_REPLICATION - 36)) |
								(1 << (t.KW_METADATA - 36)) |
								(1 << (t.KW_DATA - 36)) |
								(1 << (t.KW_INPATH - 36)))) !==
							0) ||
					(((e - 68) & -32) == 0 &&
						((1 << (e - 68)) &
							((1 << (t.KW_CHANGE - 68)) |
								(1 << (t.KW_FIRST - 68)) |
								(1 << (t.KW_AFTER - 68)) |
								(1 << (t.KW_RENAME - 68)) |
								(1 << (t.KW_COMMENT - 68)) |
								(1 << (t.KW_TINYINT - 68)) |
								(1 << (t.KW_DATETIME - 68)) |
								(1 << (t.KW_ZONE - 68)) |
								(1 << (t.KW_STRING - 68)) |
								(1 << (t.KW_STRUCT - 68)) |
								(1 << (t.KW_UNIONTYPE - 68)))) !==
							0) ||
					(((e - 101) & -32) == 0 &&
						((1 << (e - 101)) &
							((1 << (t.KW_PARTITIONED - 101)) |
								(1 << (t.KW_CLUSTERED - 101)) |
								(1 << (t.KW_SORTED - 101)) |
								(1 << (t.KW_BUCKETS - 101)) |
								(1 << (t.KW_FORMAT - 101)) |
								(1 << (t.KW_DELIMITED - 101)) |
								(1 << (t.KW_FIELDS - 101)) |
								(1 << (t.KW_TERMINATED - 101)) |
								(1 << (t.KW_ESCAPED - 101)) |
								(1 << (t.KW_COLLECTION - 101)) |
								(1 << (t.KW_ITEMS - 101)) |
								(1 << (t.KW_KEYS - 101)) |
								(1 << (t.KW_KEY_TYPE - 101)) |
								(1 << (t.KW_KILL - 101)) |
								(1 << (t.KW_LINES - 101)) |
								(1 << (t.KW_STORED - 101)) |
								(1 << (t.KW_FILEFORMAT - 101)) |
								(1 << (t.KW_INPUTFORMAT - 101)) |
								(1 << (t.KW_OUTPUTFORMAT - 101)) |
								(1 << (t.KW_INPUTDRIVER - 101)) |
								(1 << (t.KW_OUTPUTDRIVER - 101)) |
								(1 << (t.KW_ENABLE - 101)) |
								(1 << (t.KW_DISABLE - 101)) |
								(1 << (t.KW_LOCATION - 101)) |
								(1 << (t.KW_BUCKET - 101)))) !==
							0) ||
					(((e - 134) & -32) == 0 &&
						((1 << (e - 134)) &
							((1 << (t.KW_ADD - 134)) |
								(1 << (t.KW_REPLACE - 134)) |
								(1 << (t.KW_TEMPORARY - 134)) |
								(1 << (t.KW_FILE - 134)) |
								(1 << (t.KW_JAR - 134)) |
								(1 << (t.KW_EXPLAIN - 134)) |
								(1 << (t.KW_FORMATTED - 134)) |
								(1 << (t.KW_DEPENDENCY - 134)) |
								(1 << (t.KW_LOGICAL - 134)) |
								(1 << (t.KW_SERDE - 134)) |
								(1 << (t.KW_DEFERRED - 134)) |
								(1 << (t.KW_SERDEPROPERTIES - 134)) |
								(1 << (t.KW_DBPROPERTIES - 134)) |
								(1 << (t.KW_LIMIT - 134)) |
								(1 << (t.KW_OFFSET - 134)) |
								(1 << (t.KW_UNSET - 134)) |
								(1 << (t.KW_TBLPROPERTIES - 134)) |
								(1 << (t.KW_IDXPROPERTIES - 134)) |
								(1 << (t.KW_VALUE_TYPE - 134)) |
								(1 << (t.KW_ELEM_TYPE - 134)) |
								(1 << (t.KW_DEFINED - 134)))) !==
							0) ||
					(((e - 167) & -32) == 0 &&
						((1 << (e - 167)) &
							((1 << (t.KW_MAPJOIN - 167)) |
								(1 << (t.KW_STREAMTABLE - 167)) |
								(1 << (t.KW_CLUSTERSTATUS - 167)) |
								(1 << (t.KW_UTC - 167)) |
								(1 << (t.KW_UTCTIMESTAMP - 167)) |
								(1 << (t.KW_LONG - 167)) |
								(1 << (t.KW_PLUS - 167)) |
								(1 << (t.KW_VIEW - 167)) |
								(1 << (t.KW_VIEWS - 167)) |
								(1 << (t.KW_DATABASES - 167)) |
								(1 << (t.KW_MATERIALIZED - 167)) |
								(1 << (t.KW_SCHEMA - 167)) |
								(1 << (t.KW_SCHEMAS - 167)) |
								(1 << (t.KW_SSL - 167)) |
								(1 << (t.KW_UNDO - 167)) |
								(1 << (t.KW_LOCK - 167)) |
								(1 << (t.KW_LOCKS - 167)) |
								(1 << (t.KW_UNLOCK - 167)) |
								(1 << (t.KW_SHARED - 167)) |
								(1 << (t.KW_EXCLUSIVE - 167)) |
								(1 << (t.KW_UNSIGNED - 167)) |
								(1 << (t.KW_WHILE - 167)) |
								(1 << (t.KW_READ - 167)))) !==
							0) ||
					(((e - 200) & -32) == 0 &&
						((1 << (e - 200)) &
							((1 << (t.KW_PURGE - 200)) |
								(1 << (t.KW_ANALYZE - 200)) |
								(1 << (t.KW_BEFORE - 200)) |
								(1 << (t.KW_CONTINUE - 200)) |
								(1 << (t.KW_RECORDREADER - 200)) |
								(1 << (t.KW_RECORDWRITER - 200)) |
								(1 << (t.KW_SEMI - 200)) |
								(1 << (t.KW_TOUCH - 200)) |
								(1 << (t.KW_ARCHIVE - 200)) |
								(1 << (t.KW_UNARCHIVE - 200)) |
								(1 << (t.KW_COMPUTE - 200)) |
								(1 << (t.KW_STATISTICS - 200)) |
								(1 << (t.KW_USE - 200)) |
								(1 << (t.KW_OPTION - 200)) |
								(1 << (t.KW_CONCATENATE - 200)) |
								(1 << (t.KW_SHOW_DATABASE - 200)) |
								(1 << (t.KW_RESTRICT - 200)) |
								(1 << (t.KW_CASCADE - 200)) |
								(1 << (t.KW_SKEWED - 200)) |
								(1 << (t.KW_DIRECTORIES - 200)))) !==
							0) ||
					(((e - 244) & -32) == 0 &&
						((1 << (e - 244)) &
							((1 << (t.KW_SETS - 244)) |
								(1 << (t.KW_NOSCAN - 244)) |
								(1 << (t.KW_ROLE - 244)) |
								(1 << (t.KW_ROLES - 244)) |
								(1 << (t.KW_URI - 244)) |
								(1 << (t.KW_SERVER - 244)) |
								(1 << (t.KW_ADMIN - 244)) |
								(1 << (t.KW_OWNER - 244)) |
								(1 << (t.KW_PRINCIPALS - 244)) |
								(1 << (t.KW_COMPACT - 244)) |
								(1 << (t.KW_COMPACTIONS - 244)) |
								(1 << (t.KW_TRANSACTIONS - 244)) |
								(1 << (t.KW_REWRITE - 244)) |
								(1 << (t.KW_REOPTIMIZATION - 244)) |
								(1 << (t.KW_RELOAD - 244)) |
								(1 << (t.KW_YEAR - 244)) |
								(1 << (t.KW_QUERY - 244)) |
								(1 << (t.KW_QUARTER - 244)) |
								(1 << (t.KW_MONTH - 244)) |
								(1 << (t.KW_WEEK - 244)) |
								(1 << (t.KW_DAY - 244)) |
								(1 << (t.KW_DOW - 244)) |
								(1 << (t.KW_HOUR - 244)) |
								(1 << (t.KW_MINUTE - 244)) |
								(1 << (t.KW_SECOND - 244)))) !==
							0) ||
					(((e - 277) & -32) == 0 &&
						((1 << (e - 277)) &
							((1 << (t.KW_TRANSACTION - 277)) |
								(1 << (t.KW_WORK - 277)) |
								(1 << (t.KW_WRITE - 277)) |
								(1 << (t.KW_ISOLATION - 277)) |
								(1 << (t.KW_LEVEL - 277)) |
								(1 << (t.KW_SNAPSHOT - 277)) |
								(1 << (t.KW_AUTOCOMMIT - 277)) |
								(1 << (t.KW_CACHE - 277)) |
								(1 << (t.KW_ENFORCED - 277)) |
								(1 << (t.KW_VALIDATE - 277)) |
								(1 << (t.KW_NOVALIDATE - 277)) |
								(1 << (t.KW_RELY - 277)) |
								(1 << (t.KW_NORELY - 277)) |
								(1 << (t.KW_KEY - 277)) |
								(1 << (t.KW_ABORT - 277)) |
								(1 << (t.KW_MATCHED - 277)) |
								(1 << (t.KW_REPL - 277)) |
								(1 << (t.KW_DUMP - 277)) |
								(1 << (t.KW_STATUS - 277)) |
								(1 << (t.KW_VECTORIZATION - 277)) |
								(1 << (t.KW_SUMMARY - 277)))) !==
							0) ||
					(((e - 309) & -32) == 0 &&
						((1 << (e - 309)) &
							((1 << (t.KW_OPERATOR - 309)) |
								(1 << (t.KW_EXPRESSION - 309)) |
								(1 << (t.KW_DETAIL - 309)) |
								(1 << (t.KW_WAIT - 309)) |
								(1 << (t.KW_RESOURCE - 309)) |
								(1 << (t.KW_PLAN - 309)) |
								(1 << (t.KW_QUERY_PARALLELISM - 309)) |
								(1 << (t.KW_PLANS - 309)) |
								(1 << (t.KW_ACTIVATE - 309)) |
								(1 << (t.KW_DEFAULT - 309)) |
								(1 << (t.KW_CHECK - 309)) |
								(1 << (t.KW_POOL - 309)) |
								(1 << (t.KW_MOVE - 309)) |
								(1 << (t.KW_DO - 309)) |
								(1 << (t.KW_ALLOC_FRACTION - 309)) |
								(1 << (t.KW_SCHEDULING_POLICY - 309)) |
								(1 << (t.KW_PATH - 309)) |
								(1 << (t.KW_MAPPING - 309)) |
								(1 << (t.KW_WORKLOAD - 309)) |
								(1 << (t.KW_MANAGEMENT - 309)) |
								(1 << (t.KW_ACTIVE - 309)) |
								(1 << (t.KW_UNMANAGED - 309)) |
								(1 << (t.KW_DELTA - 309)) |
								(1 << (t.KW_CSV - 309)))) !==
							0) ||
					e === t.KW_JSON ||
					e === t.KW_BLOOMFILTER ||
					e === t.Identifier) &&
					((this.state = 3204),
					this._errHandler.sync(this),
					(e = this._input.LA(1)),
					e === t.KW_AS && ((this.state = 3203), this.match(t.KW_AS)),
					(this.state = 3206),
					this.identifier()),
				(this.state = 3209),
				this.match(t.KW_USING),
				(this.state = 3210),
				this.joinSourcePart(),
				(this.state = 3211),
				this.match(t.KW_ON),
				(this.state = 3212),
				this.expression(0),
				(this.state = 3213),
				this.whenClauses();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $o(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_whenClauses),
			this
		);
	}
	$o.prototype = Object.create(s.ParserRuleContext.prototype);
	$o.prototype.constructor = $o;
	$o.prototype.whenMatchedAndClause = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(si) : this.getTypedRuleContext(si, u);
	};
	$o.prototype.whenMatchedThenClause = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Mn) : this.getTypedRuleContext(Mn, u);
	};
	$o.prototype.whenNotMatchedClause = function () {
		return this.getTypedRuleContext(gt, 0);
	};
	$o.prototype.accept = function (u) {
		return u instanceof d ? u.visitWhenClauses(this) : u.visitChildren(this);
	};
	t.WhenClausesContext = $o;
	t.prototype.whenClauses = function () {
		var u = new $o(this, this._ctx, this.state);
		this.enterRule(u, 540, t.RULE_whenClauses);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1), (this.state = 3219), this._errHandler.sync(this);
			for (
				var i = this._interp.adaptivePredict(this._input, 354, this._ctx);
				i != 2 && i != s.atn.ATN.INVALID_ALT_NUMBER;

			) {
				if (i === 1) {
					(this.state = 3217), this._errHandler.sync(this);
					var n = this._interp.adaptivePredict(this._input, 353, this._ctx);
					switch (n) {
						case 1:
							(this.state = 3215), this.whenMatchedAndClause();
							break;
						case 2:
							(this.state = 3216), this.whenMatchedThenClause();
							break;
					}
				}
				(this.state = 3221),
					this._errHandler.sync(this),
					(i = this._interp.adaptivePredict(this._input, 354, this._ctx));
			}
			(this.state = 3223),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WHEN && ((this.state = 3222), this.whenNotMatchedClause());
		} catch (a) {
			if (a instanceof s.error.RecognitionException)
				(u.exception = a), this._errHandler.reportError(this, a), this._errHandler.recover(this, a);
			else throw a;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function gt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_whenNotMatchedClause),
			this
		);
	}
	gt.prototype = Object.create(s.ParserRuleContext.prototype);
	gt.prototype.constructor = gt;
	gt.prototype.KW_WHEN = function () {
		return this.getToken(t.KW_WHEN, 0);
	};
	gt.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	gt.prototype.KW_MATCHED = function () {
		return this.getToken(t.KW_MATCHED, 0);
	};
	gt.prototype.KW_THEN = function () {
		return this.getToken(t.KW_THEN, 0);
	};
	gt.prototype.KW_INSERT = function () {
		return this.getToken(t.KW_INSERT, 0);
	};
	gt.prototype.KW_VALUES = function () {
		return this.getToken(t.KW_VALUES, 0);
	};
	gt.prototype.valueRowConstructor = function () {
		return this.getTypedRuleContext(o1, 0);
	};
	gt.prototype.KW_AND = function () {
		return this.getToken(t.KW_AND, 0);
	};
	gt.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	gt.prototype.accept = function (u) {
		return u instanceof d ? u.visitWhenNotMatchedClause(this) : u.visitChildren(this);
	};
	t.WhenNotMatchedClauseContext = gt;
	t.prototype.whenNotMatchedClause = function () {
		var u = new gt(this, this._ctx, this.state);
		this.enterRule(u, 542, t.RULE_whenNotMatchedClause);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3225),
				this.match(t.KW_WHEN),
				(this.state = 3226),
				this.match(t.KW_NOT),
				(this.state = 3227),
				this.match(t.KW_MATCHED),
				(this.state = 3230),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_AND && ((this.state = 3228), this.match(t.KW_AND), (this.state = 3229), this.expression(0)),
				(this.state = 3232),
				this.match(t.KW_THEN),
				(this.state = 3233),
				this.match(t.KW_INSERT),
				(this.state = 3234),
				this.match(t.KW_VALUES),
				(this.state = 3235),
				this.valueRowConstructor();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function si(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_whenMatchedAndClause),
			this
		);
	}
	si.prototype = Object.create(s.ParserRuleContext.prototype);
	si.prototype.constructor = si;
	si.prototype.KW_WHEN = function () {
		return this.getToken(t.KW_WHEN, 0);
	};
	si.prototype.KW_MATCHED = function () {
		return this.getToken(t.KW_MATCHED, 0);
	};
	si.prototype.KW_AND = function () {
		return this.getToken(t.KW_AND, 0);
	};
	si.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	si.prototype.KW_THEN = function () {
		return this.getToken(t.KW_THEN, 0);
	};
	si.prototype.updateOrDelete = function () {
		return this.getTypedRuleContext(D2, 0);
	};
	si.prototype.accept = function (u) {
		return u instanceof d ? u.visitWhenMatchedAndClause(this) : u.visitChildren(this);
	};
	t.WhenMatchedAndClauseContext = si;
	t.prototype.whenMatchedAndClause = function () {
		var u = new si(this, this._ctx, this.state);
		this.enterRule(u, 544, t.RULE_whenMatchedAndClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3237),
				this.match(t.KW_WHEN),
				(this.state = 3238),
				this.match(t.KW_MATCHED),
				(this.state = 3239),
				this.match(t.KW_AND),
				(this.state = 3240),
				this.expression(0),
				(this.state = 3241),
				this.match(t.KW_THEN),
				(this.state = 3242),
				this.updateOrDelete();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Mn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_whenMatchedThenClause),
			this
		);
	}
	Mn.prototype = Object.create(s.ParserRuleContext.prototype);
	Mn.prototype.constructor = Mn;
	Mn.prototype.KW_WHEN = function () {
		return this.getToken(t.KW_WHEN, 0);
	};
	Mn.prototype.KW_MATCHED = function () {
		return this.getToken(t.KW_MATCHED, 0);
	};
	Mn.prototype.KW_THEN = function () {
		return this.getToken(t.KW_THEN, 0);
	};
	Mn.prototype.updateOrDelete = function () {
		return this.getTypedRuleContext(D2, 0);
	};
	Mn.prototype.accept = function (u) {
		return u instanceof d ? u.visitWhenMatchedThenClause(this) : u.visitChildren(this);
	};
	t.WhenMatchedThenClauseContext = Mn;
	t.prototype.whenMatchedThenClause = function () {
		var u = new Mn(this, this._ctx, this.state);
		this.enterRule(u, 546, t.RULE_whenMatchedThenClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3244),
				this.match(t.KW_WHEN),
				(this.state = 3245),
				this.match(t.KW_MATCHED),
				(this.state = 3246),
				this.match(t.KW_THEN),
				(this.state = 3247),
				this.updateOrDelete();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function D2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_updateOrDelete),
			this
		);
	}
	D2.prototype = Object.create(s.ParserRuleContext.prototype);
	D2.prototype.constructor = D2;
	D2.prototype.KW_UPDATE = function () {
		return this.getToken(t.KW_UPDATE, 0);
	};
	D2.prototype.setColumnsClause = function () {
		return this.getTypedRuleContext(I2, 0);
	};
	D2.prototype.KW_DELETE = function () {
		return this.getToken(t.KW_DELETE, 0);
	};
	D2.prototype.accept = function (u) {
		return u instanceof d ? u.visitUpdateOrDelete(this) : u.visitChildren(this);
	};
	t.UpdateOrDeleteContext = D2;
	t.prototype.updateOrDelete = function () {
		var u = new D2(this, this._ctx, this.state);
		this.enterRule(u, 548, t.RULE_updateOrDelete);
		try {
			switch (((this.state = 3252), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_UPDATE:
					this.enterOuterAlt(u, 1),
						(this.state = 3249),
						this.match(t.KW_UPDATE),
						(this.state = 3250),
						this.setColumnsClause();
					break;
				case t.KW_DELETE:
					this.enterOuterAlt(u, 2), (this.state = 3251), this.match(t.KW_DELETE);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function u1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_killQueryStatement),
			this
		);
	}
	u1.prototype = Object.create(s.ParserRuleContext.prototype);
	u1.prototype.constructor = u1;
	u1.prototype.KW_KILL = function () {
		return this.getToken(t.KW_KILL, 0);
	};
	u1.prototype.KW_QUERY = function () {
		return this.getToken(t.KW_QUERY, 0);
	};
	u1.prototype.StringLiteral = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(t.StringLiteral) : this.getToken(t.StringLiteral, u)
		);
	};
	u1.prototype.accept = function (u) {
		return u instanceof d ? u.visitKillQueryStatement(this) : u.visitChildren(this);
	};
	t.KillQueryStatementContext = u1;
	t.prototype.killQueryStatement = function () {
		var u = new u1(this, this._ctx, this.state);
		this.enterRule(u, 550, t.RULE_killQueryStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3254),
				this.match(t.KW_KILL),
				(this.state = 3255),
				this.match(t.KW_QUERY),
				(this.state = 3257),
				this._errHandler.sync(this),
				(e = this._input.LA(1));
			do
				(this.state = 3256),
					this.match(t.StringLiteral),
					(this.state = 3259),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			while (e === t.StringLiteral);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Dt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_selectClause),
			this
		);
	}
	Dt.prototype = Object.create(s.ParserRuleContext.prototype);
	Dt.prototype.constructor = Dt;
	Dt.prototype.KW_SELECT = function () {
		return this.getToken(t.KW_SELECT, 0);
	};
	Dt.prototype.QUERY_HINT = function () {
		return this.getToken(t.QUERY_HINT, 0);
	};
	Dt.prototype.selectList = function () {
		return this.getTypedRuleContext(pp, 0);
	};
	Dt.prototype.KW_TRANSFORM = function () {
		return this.getToken(t.KW_TRANSFORM, 0);
	};
	Dt.prototype.selectTrfmClause = function () {
		return this.getTypedRuleContext(vu, 0);
	};
	Dt.prototype.KW_ALL = function () {
		return this.getToken(t.KW_ALL, 0);
	};
	Dt.prototype.KW_DISTINCT = function () {
		return this.getToken(t.KW_DISTINCT, 0);
	};
	Dt.prototype.trfmClause = function () {
		return this.getTypedRuleContext(ru, 0);
	};
	Dt.prototype.accept = function (u) {
		return u instanceof d ? u.visitSelectClause(this) : u.visitChildren(this);
	};
	t.SelectClauseContext = Dt;
	t.prototype.selectClause = function () {
		var u = new Dt(this, this._ctx, this.state);
		this.enterRule(u, 552, t.RULE_selectClause);
		var e = 0;
		try {
			switch (((this.state = 3274), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_SELECT:
					switch (
						(this.enterOuterAlt(u, 1),
						(this.state = 3261),
						this.match(t.KW_SELECT),
						(this.state = 3263),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.QUERY_HINT && ((this.state = 3262), this.match(t.QUERY_HINT)),
						(this.state = 3271),
						this._errHandler.sync(this),
						this._input.LA(1))
					) {
						case t.KW_TRUE:
						case t.KW_FALSE:
						case t.KW_ALL:
						case t.KW_NOT:
						case t.KW_IF:
						case t.KW_EXISTS:
						case t.KW_ASC:
						case t.KW_DESC:
						case t.KW_NULLS:
						case t.KW_LAST:
						case t.KW_DISTINCT:
						case t.KW_OVERWRITE:
						case t.KW_PARTITIONS:
						case t.KW_TABLES:
						case t.KW_COLUMNS:
						case t.KW_INDEX:
						case t.KW_INDEXES:
						case t.KW_REBUILD:
						case t.KW_FUNCTIONS:
						case t.KW_SHOW:
						case t.KW_MSCK:
						case t.KW_REPAIR:
						case t.KW_DIRECTORY:
						case t.KW_CLUSTER:
						case t.KW_DISTRIBUTE:
						case t.KW_SORT:
						case t.KW_LOAD:
						case t.KW_EXPORT:
						case t.KW_REPLICATION:
						case t.KW_METADATA:
						case t.KW_DATA:
						case t.KW_INPATH:
						case t.KW_NULL:
						case t.KW_CHANGE:
						case t.KW_FIRST:
						case t.KW_AFTER:
						case t.KW_RENAME:
						case t.KW_COMMENT:
						case t.KW_BOOLEAN:
						case t.KW_TINYINT:
						case t.KW_SMALLINT:
						case t.KW_INT:
						case t.KW_BIGINT:
						case t.KW_FLOAT:
						case t.KW_DOUBLE:
						case t.KW_DATE:
						case t.KW_DATETIME:
						case t.KW_TIMESTAMP:
						case t.KW_TIMESTAMPLOCALTZ:
						case t.KW_ZONE:
						case t.KW_INTERVAL:
						case t.KW_STRING:
						case t.KW_ARRAY:
						case t.KW_STRUCT:
						case t.KW_MAP:
						case t.KW_UNIONTYPE:
						case t.KW_PARTITIONED:
						case t.KW_CLUSTERED:
						case t.KW_SORTED:
						case t.KW_BUCKETS:
						case t.KW_FORMAT:
						case t.KW_DELIMITED:
						case t.KW_FIELDS:
						case t.KW_TERMINATED:
						case t.KW_ESCAPED:
						case t.KW_COLLECTION:
						case t.KW_ITEMS:
						case t.KW_KEYS:
						case t.KW_KEY_TYPE:
						case t.KW_KILL:
						case t.KW_LINES:
						case t.KW_STORED:
						case t.KW_FILEFORMAT:
						case t.KW_INPUTFORMAT:
						case t.KW_OUTPUTFORMAT:
						case t.KW_INPUTDRIVER:
						case t.KW_OUTPUTDRIVER:
						case t.KW_ENABLE:
						case t.KW_DISABLE:
						case t.KW_LOCATION:
						case t.KW_BUCKET:
						case t.KW_CAST:
						case t.KW_ADD:
						case t.KW_REPLACE:
						case t.KW_TEMPORARY:
						case t.KW_FILE:
						case t.KW_JAR:
						case t.KW_EXPLAIN:
						case t.KW_FORMATTED:
						case t.KW_DEPENDENCY:
						case t.KW_LOGICAL:
						case t.KW_SERDE:
						case t.KW_DEFERRED:
						case t.KW_SERDEPROPERTIES:
						case t.KW_DBPROPERTIES:
						case t.KW_LIMIT:
						case t.KW_OFFSET:
						case t.KW_UNSET:
						case t.KW_TBLPROPERTIES:
						case t.KW_IDXPROPERTIES:
						case t.KW_VALUE_TYPE:
						case t.KW_ELEM_TYPE:
						case t.KW_DEFINED:
						case t.KW_CASE:
						case t.KW_MAPJOIN:
						case t.KW_STREAMTABLE:
						case t.KW_CLUSTERSTATUS:
						case t.KW_UTC:
						case t.KW_UTCTIMESTAMP:
						case t.KW_LONG:
						case t.KW_PLUS:
						case t.KW_VIEW:
						case t.KW_VIEWS:
						case t.KW_DATABASES:
						case t.KW_MATERIALIZED:
						case t.KW_SCHEMA:
						case t.KW_SCHEMAS:
						case t.KW_SSL:
						case t.KW_UNDO:
						case t.KW_LOCK:
						case t.KW_LOCKS:
						case t.KW_UNLOCK:
						case t.KW_SHARED:
						case t.KW_EXCLUSIVE:
						case t.KW_UNSIGNED:
						case t.KW_WHILE:
						case t.KW_READ:
						case t.KW_PURGE:
						case t.KW_ANALYZE:
						case t.KW_BEFORE:
						case t.KW_BINARY:
						case t.KW_CONTINUE:
						case t.KW_RECORDREADER:
						case t.KW_RECORDWRITER:
						case t.KW_SEMI:
						case t.KW_TOUCH:
						case t.KW_ARCHIVE:
						case t.KW_UNARCHIVE:
						case t.KW_COMPUTE:
						case t.KW_STATISTICS:
						case t.KW_USE:
						case t.KW_OPTION:
						case t.KW_CONCATENATE:
						case t.KW_SHOW_DATABASE:
						case t.KW_RESTRICT:
						case t.KW_CASCADE:
						case t.KW_SKEWED:
						case t.KW_DIRECTORIES:
						case t.KW_CURRENT_DATE:
						case t.KW_CURRENT_TIMESTAMP:
						case t.KW_GROUPING:
						case t.KW_SETS:
						case t.KW_NOSCAN:
						case t.KW_ROLE:
						case t.KW_ROLES:
						case t.KW_URI:
						case t.KW_SERVER:
						case t.KW_ADMIN:
						case t.KW_OWNER:
						case t.KW_PRINCIPALS:
						case t.KW_COMPACT:
						case t.KW_COMPACTIONS:
						case t.KW_TRANSACTIONS:
						case t.KW_REWRITE:
						case t.KW_REOPTIMIZATION:
						case t.KW_RELOAD:
						case t.KW_YEAR:
						case t.KW_QUERY:
						case t.KW_QUARTER:
						case t.KW_MONTH:
						case t.KW_WEEK:
						case t.KW_DAY:
						case t.KW_DOW:
						case t.KW_HOUR:
						case t.KW_MINUTE:
						case t.KW_SECOND:
						case t.KW_TRANSACTION:
						case t.KW_WORK:
						case t.KW_WRITE:
						case t.KW_ISOLATION:
						case t.KW_LEVEL:
						case t.KW_SNAPSHOT:
						case t.KW_AUTOCOMMIT:
						case t.KW_CACHE:
						case t.KW_ENFORCED:
						case t.KW_VALIDATE:
						case t.KW_NOVALIDATE:
						case t.KW_RELY:
						case t.KW_NORELY:
						case t.KW_KEY:
						case t.KW_ABORT:
						case t.KW_EXTRACT:
						case t.KW_FLOOR:
						case t.KW_MATCHED:
						case t.KW_REPL:
						case t.KW_DUMP:
						case t.KW_STATUS:
						case t.KW_VECTORIZATION:
						case t.KW_SUMMARY:
						case t.KW_OPERATOR:
						case t.KW_EXPRESSION:
						case t.KW_DETAIL:
						case t.KW_WAIT:
						case t.KW_RESOURCE:
						case t.KW_PLAN:
						case t.KW_QUERY_PARALLELISM:
						case t.KW_PLANS:
						case t.KW_ACTIVATE:
						case t.KW_DEFAULT:
						case t.KW_CHECK:
						case t.KW_POOL:
						case t.KW_MOVE:
						case t.KW_DO:
						case t.KW_ALLOC_FRACTION:
						case t.KW_SCHEDULING_POLICY:
						case t.KW_PATH:
						case t.KW_MAPPING:
						case t.KW_WORKLOAD:
						case t.KW_MANAGEMENT:
						case t.KW_ACTIVE:
						case t.KW_UNMANAGED:
						case t.KW_DELTA:
						case t.KW_CSV:
						case t.KW_JSON:
						case t.KW_BLOOMFILTER:
						case t.LPAREN:
						case t.PLUS:
						case t.MINUS:
						case t.STAR:
						case t.TILDE:
						case t.StringLiteral:
						case t.IntegralLiteral:
						case t.NumberLiteral:
						case t.Number:
						case t.Identifier:
						case t.CharSetName:
							(this.state = 3266),
								this._errHandler.sync(this),
								(e = this._input.LA(1)),
								(e === t.KW_ALL || e === t.KW_DISTINCT) &&
									((this.state = 3265),
									(e = this._input.LA(1)),
									e === t.KW_ALL || e === t.KW_DISTINCT
										? (this._errHandler.reportMatch(this), this.consume())
										: this._errHandler.recoverInline(this)),
								(this.state = 3268),
								this.selectList();
							break;
						case t.KW_TRANSFORM:
							(this.state = 3269),
								this.match(t.KW_TRANSFORM),
								(this.state = 3270),
								this.selectTrfmClause();
							break;
						default:
							throw new s.error.NoViableAltException(this);
					}
					break;
				case t.KW_MAP:
				case t.KW_REDUCE:
					this.enterOuterAlt(u, 2), (this.state = 3273), this.trfmClause();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function pp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_selectList),
			this
		);
	}
	pp.prototype = Object.create(s.ParserRuleContext.prototype);
	pp.prototype.constructor = pp;
	pp.prototype.selectItem = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Te) : this.getTypedRuleContext(Te, u);
	};
	pp.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	pp.prototype.accept = function (u) {
		return u instanceof d ? u.visitSelectList(this) : u.visitChildren(this);
	};
	t.SelectListContext = pp;
	t.prototype.selectList = function () {
		var u = new pp(this, this._ctx, this.state);
		this.enterRule(u, 554, t.RULE_selectList);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3276),
				this.selectItem(),
				(this.state = 3281),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 363, this._ctx);
				e != 2 && e != s.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 3277), this.match(t.COMMA), (this.state = 3278), this.selectItem()),
					(this.state = 3283),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 363, this._ctx));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function vu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_selectTrfmClause),
			this
		);
	}
	vu.prototype = Object.create(s.ParserRuleContext.prototype);
	vu.prototype.constructor = vu;
	vu.prototype.LPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.LPAREN) : this.getToken(t.LPAREN, u);
	};
	vu.prototype.selectExpressionList = function () {
		return this.getTypedRuleContext(t1, 0);
	};
	vu.prototype.RPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.RPAREN) : this.getToken(t.RPAREN, u);
	};
	vu.prototype.KW_USING = function () {
		return this.getToken(t.KW_USING, 0);
	};
	vu.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	vu.prototype.rowFormat = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(An) : this.getTypedRuleContext(An, u);
	};
	vu.prototype.recordWriter = function () {
		return this.getTypedRuleContext(Po, 0);
	};
	vu.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	vu.prototype.recordReader = function () {
		return this.getTypedRuleContext(No, 0);
	};
	vu.prototype.aliasList = function () {
		return this.getTypedRuleContext(e1, 0);
	};
	vu.prototype.columnNameTypeList = function () {
		return this.getTypedRuleContext(Sn, 0);
	};
	vu.prototype.accept = function (u) {
		return u instanceof d ? u.visitSelectTrfmClause(this) : u.visitChildren(this);
	};
	t.SelectTrfmClauseContext = vu;
	t.prototype.selectTrfmClause = function () {
		var u = new vu(this, this._ctx, this.state);
		this.enterRule(u, 556, t.RULE_selectTrfmClause);
		var e = 0;
		try {
			if (
				(this.enterOuterAlt(u, 1),
				(this.state = 3284),
				this.match(t.LPAREN),
				(this.state = 3285),
				this.selectExpressionList(),
				(this.state = 3286),
				this.match(t.RPAREN),
				(this.state = 3288),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ROW && ((this.state = 3287), this.rowFormat()),
				(this.state = 3291),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_RECORDWRITER && ((this.state = 3290), this.recordWriter()),
				(this.state = 3293),
				this.match(t.KW_USING),
				(this.state = 3294),
				this.match(t.StringLiteral),
				(this.state = 3309),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_AS)
			)
				switch (
					((this.state = 3295),
					this.match(t.KW_AS),
					(this.state = 3307),
					this._errHandler.sync(this),
					this._input.LA(1))
				) {
					case t.LPAREN:
						(this.state = 3296), this.match(t.LPAREN), (this.state = 3299), this._errHandler.sync(this);
						var i = this._interp.adaptivePredict(this._input, 366, this._ctx);
						switch (i) {
							case 1:
								(this.state = 3297), this.aliasList();
								break;
							case 2:
								(this.state = 3298), this.columnNameTypeList();
								break;
						}
						(this.state = 3301), this.match(t.RPAREN);
						break;
					case t.KW_ASC:
					case t.KW_DESC:
					case t.KW_NULLS:
					case t.KW_LAST:
					case t.KW_OVERWRITE:
					case t.KW_PARTITIONS:
					case t.KW_TABLES:
					case t.KW_COLUMNS:
					case t.KW_INDEX:
					case t.KW_INDEXES:
					case t.KW_REBUILD:
					case t.KW_FUNCTIONS:
					case t.KW_SHOW:
					case t.KW_MSCK:
					case t.KW_REPAIR:
					case t.KW_DIRECTORY:
					case t.KW_CLUSTER:
					case t.KW_DISTRIBUTE:
					case t.KW_SORT:
					case t.KW_LOAD:
					case t.KW_EXPORT:
					case t.KW_REPLICATION:
					case t.KW_METADATA:
					case t.KW_DATA:
					case t.KW_INPATH:
					case t.KW_CHANGE:
					case t.KW_FIRST:
					case t.KW_AFTER:
					case t.KW_RENAME:
					case t.KW_COMMENT:
					case t.KW_TINYINT:
					case t.KW_DATETIME:
					case t.KW_ZONE:
					case t.KW_STRING:
					case t.KW_STRUCT:
					case t.KW_UNIONTYPE:
					case t.KW_PARTITIONED:
					case t.KW_CLUSTERED:
					case t.KW_SORTED:
					case t.KW_BUCKETS:
					case t.KW_FORMAT:
					case t.KW_DELIMITED:
					case t.KW_FIELDS:
					case t.KW_TERMINATED:
					case t.KW_ESCAPED:
					case t.KW_COLLECTION:
					case t.KW_ITEMS:
					case t.KW_KEYS:
					case t.KW_KEY_TYPE:
					case t.KW_KILL:
					case t.KW_LINES:
					case t.KW_STORED:
					case t.KW_FILEFORMAT:
					case t.KW_INPUTFORMAT:
					case t.KW_OUTPUTFORMAT:
					case t.KW_INPUTDRIVER:
					case t.KW_OUTPUTDRIVER:
					case t.KW_ENABLE:
					case t.KW_DISABLE:
					case t.KW_LOCATION:
					case t.KW_BUCKET:
					case t.KW_ADD:
					case t.KW_REPLACE:
					case t.KW_TEMPORARY:
					case t.KW_FILE:
					case t.KW_JAR:
					case t.KW_EXPLAIN:
					case t.KW_FORMATTED:
					case t.KW_DEPENDENCY:
					case t.KW_LOGICAL:
					case t.KW_SERDE:
					case t.KW_DEFERRED:
					case t.KW_SERDEPROPERTIES:
					case t.KW_DBPROPERTIES:
					case t.KW_LIMIT:
					case t.KW_OFFSET:
					case t.KW_UNSET:
					case t.KW_TBLPROPERTIES:
					case t.KW_IDXPROPERTIES:
					case t.KW_VALUE_TYPE:
					case t.KW_ELEM_TYPE:
					case t.KW_DEFINED:
					case t.KW_MAPJOIN:
					case t.KW_STREAMTABLE:
					case t.KW_CLUSTERSTATUS:
					case t.KW_UTC:
					case t.KW_UTCTIMESTAMP:
					case t.KW_LONG:
					case t.KW_PLUS:
					case t.KW_VIEW:
					case t.KW_VIEWS:
					case t.KW_DATABASES:
					case t.KW_MATERIALIZED:
					case t.KW_SCHEMA:
					case t.KW_SCHEMAS:
					case t.KW_SSL:
					case t.KW_UNDO:
					case t.KW_LOCK:
					case t.KW_LOCKS:
					case t.KW_UNLOCK:
					case t.KW_SHARED:
					case t.KW_EXCLUSIVE:
					case t.KW_UNSIGNED:
					case t.KW_WHILE:
					case t.KW_READ:
					case t.KW_PURGE:
					case t.KW_ANALYZE:
					case t.KW_BEFORE:
					case t.KW_CONTINUE:
					case t.KW_RECORDREADER:
					case t.KW_RECORDWRITER:
					case t.KW_SEMI:
					case t.KW_TOUCH:
					case t.KW_ARCHIVE:
					case t.KW_UNARCHIVE:
					case t.KW_COMPUTE:
					case t.KW_STATISTICS:
					case t.KW_USE:
					case t.KW_OPTION:
					case t.KW_CONCATENATE:
					case t.KW_SHOW_DATABASE:
					case t.KW_RESTRICT:
					case t.KW_CASCADE:
					case t.KW_SKEWED:
					case t.KW_DIRECTORIES:
					case t.KW_SETS:
					case t.KW_NOSCAN:
					case t.KW_ROLE:
					case t.KW_ROLES:
					case t.KW_URI:
					case t.KW_SERVER:
					case t.KW_ADMIN:
					case t.KW_OWNER:
					case t.KW_PRINCIPALS:
					case t.KW_COMPACT:
					case t.KW_COMPACTIONS:
					case t.KW_TRANSACTIONS:
					case t.KW_REWRITE:
					case t.KW_REOPTIMIZATION:
					case t.KW_RELOAD:
					case t.KW_YEAR:
					case t.KW_QUERY:
					case t.KW_QUARTER:
					case t.KW_MONTH:
					case t.KW_WEEK:
					case t.KW_DAY:
					case t.KW_DOW:
					case t.KW_HOUR:
					case t.KW_MINUTE:
					case t.KW_SECOND:
					case t.KW_TRANSACTION:
					case t.KW_WORK:
					case t.KW_WRITE:
					case t.KW_ISOLATION:
					case t.KW_LEVEL:
					case t.KW_SNAPSHOT:
					case t.KW_AUTOCOMMIT:
					case t.KW_CACHE:
					case t.KW_ENFORCED:
					case t.KW_VALIDATE:
					case t.KW_NOVALIDATE:
					case t.KW_RELY:
					case t.KW_NORELY:
					case t.KW_KEY:
					case t.KW_ABORT:
					case t.KW_MATCHED:
					case t.KW_REPL:
					case t.KW_DUMP:
					case t.KW_STATUS:
					case t.KW_VECTORIZATION:
					case t.KW_SUMMARY:
					case t.KW_OPERATOR:
					case t.KW_EXPRESSION:
					case t.KW_DETAIL:
					case t.KW_WAIT:
					case t.KW_RESOURCE:
					case t.KW_PLAN:
					case t.KW_QUERY_PARALLELISM:
					case t.KW_PLANS:
					case t.KW_ACTIVATE:
					case t.KW_DEFAULT:
					case t.KW_CHECK:
					case t.KW_POOL:
					case t.KW_MOVE:
					case t.KW_DO:
					case t.KW_ALLOC_FRACTION:
					case t.KW_SCHEDULING_POLICY:
					case t.KW_PATH:
					case t.KW_MAPPING:
					case t.KW_WORKLOAD:
					case t.KW_MANAGEMENT:
					case t.KW_ACTIVE:
					case t.KW_UNMANAGED:
					case t.KW_DELTA:
					case t.KW_CSV:
					case t.KW_JSON:
					case t.KW_BLOOMFILTER:
					case t.Identifier:
						(this.state = 3305), this._errHandler.sync(this);
						var i = this._interp.adaptivePredict(this._input, 367, this._ctx);
						switch (i) {
							case 1:
								(this.state = 3303), this.aliasList();
								break;
							case 2:
								(this.state = 3304), this.columnNameTypeList();
								break;
						}
						break;
					default:
						throw new s.error.NoViableAltException(this);
				}
			(this.state = 3312),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ROW && ((this.state = 3311), this.rowFormat()),
				(this.state = 3315),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_RECORDREADER && ((this.state = 3314), this.recordReader());
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Te(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_selectItem),
			this
		);
	}
	Te.prototype = Object.create(s.ParserRuleContext.prototype);
	Te.prototype.constructor = Te;
	Te.prototype.tableAllColumns = function () {
		return this.getTypedRuleContext(w2, 0);
	};
	Te.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	Te.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	Te.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	Te.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Te.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Te.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Te.prototype.accept = function (u) {
		return u instanceof d ? u.visitSelectItem(this) : u.visitChildren(this);
	};
	t.SelectItemContext = Te;
	t.prototype.selectItem = function () {
		var u = new Te(this, this._ctx, this.state);
		this.enterRule(u, 558, t.RULE_selectItem);
		var e = 0;
		try {
			(this.state = 3337), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 375, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 3317), this.tableAllColumns();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 3318),
						this.expression(0),
						(this.state = 3335),
						this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 374, this._ctx);
					if (i === 1)
						(this.state = 3320),
							this._errHandler.sync(this),
							(e = this._input.LA(1)),
							e === t.KW_AS && ((this.state = 3319), this.match(t.KW_AS)),
							(this.state = 3322),
							this.identifier();
					else if (i === 2) {
						for (
							this.state = 3323,
								this.match(t.KW_AS),
								this.state = 3324,
								this.match(t.LPAREN),
								this.state = 3325,
								this.identifier(),
								this.state = 3330,
								this._errHandler.sync(this),
								e = this._input.LA(1);
							e === t.COMMA;

						)
							(this.state = 3326),
								this.match(t.COMMA),
								(this.state = 3327),
								this.identifier(),
								(this.state = 3332),
								this._errHandler.sync(this),
								(e = this._input.LA(1));
						(this.state = 3333), this.match(t.RPAREN);
					}
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ru(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_trfmClause),
			this
		);
	}
	ru.prototype = Object.create(s.ParserRuleContext.prototype);
	ru.prototype.constructor = ru;
	ru.prototype.KW_USING = function () {
		return this.getToken(t.KW_USING, 0);
	};
	ru.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	ru.prototype.KW_MAP = function () {
		return this.getToken(t.KW_MAP, 0);
	};
	ru.prototype.selectExpressionList = function () {
		return this.getTypedRuleContext(t1, 0);
	};
	ru.prototype.KW_REDUCE = function () {
		return this.getToken(t.KW_REDUCE, 0);
	};
	ru.prototype.rowFormat = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(An) : this.getTypedRuleContext(An, u);
	};
	ru.prototype.recordWriter = function () {
		return this.getTypedRuleContext(Po, 0);
	};
	ru.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	ru.prototype.recordReader = function () {
		return this.getTypedRuleContext(No, 0);
	};
	ru.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	ru.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	ru.prototype.aliasList = function () {
		return this.getTypedRuleContext(e1, 0);
	};
	ru.prototype.columnNameTypeList = function () {
		return this.getTypedRuleContext(Sn, 0);
	};
	ru.prototype.accept = function (u) {
		return u instanceof d ? u.visitTrfmClause(this) : u.visitChildren(this);
	};
	t.TrfmClauseContext = ru;
	t.prototype.trfmClause = function () {
		var u = new ru(this, this._ctx, this.state);
		this.enterRule(u, 560, t.RULE_trfmClause);
		var e = 0;
		try {
			switch ((this.enterOuterAlt(u, 1), (this.state = 3343), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_MAP:
					(this.state = 3339), this.match(t.KW_MAP), (this.state = 3340), this.selectExpressionList();
					break;
				case t.KW_REDUCE:
					(this.state = 3341), this.match(t.KW_REDUCE), (this.state = 3342), this.selectExpressionList();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
			if (
				((this.state = 3346),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ROW && ((this.state = 3345), this.rowFormat()),
				(this.state = 3349),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_RECORDWRITER && ((this.state = 3348), this.recordWriter()),
				(this.state = 3351),
				this.match(t.KW_USING),
				(this.state = 3352),
				this.match(t.StringLiteral),
				(this.state = 3367),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_AS)
			)
				switch (
					((this.state = 3353),
					this.match(t.KW_AS),
					(this.state = 3365),
					this._errHandler.sync(this),
					this._input.LA(1))
				) {
					case t.LPAREN:
						(this.state = 3354), this.match(t.LPAREN), (this.state = 3357), this._errHandler.sync(this);
						var i = this._interp.adaptivePredict(this._input, 379, this._ctx);
						switch (i) {
							case 1:
								(this.state = 3355), this.aliasList();
								break;
							case 2:
								(this.state = 3356), this.columnNameTypeList();
								break;
						}
						(this.state = 3359), this.match(t.RPAREN);
						break;
					case t.KW_ASC:
					case t.KW_DESC:
					case t.KW_NULLS:
					case t.KW_LAST:
					case t.KW_OVERWRITE:
					case t.KW_PARTITIONS:
					case t.KW_TABLES:
					case t.KW_COLUMNS:
					case t.KW_INDEX:
					case t.KW_INDEXES:
					case t.KW_REBUILD:
					case t.KW_FUNCTIONS:
					case t.KW_SHOW:
					case t.KW_MSCK:
					case t.KW_REPAIR:
					case t.KW_DIRECTORY:
					case t.KW_CLUSTER:
					case t.KW_DISTRIBUTE:
					case t.KW_SORT:
					case t.KW_LOAD:
					case t.KW_EXPORT:
					case t.KW_REPLICATION:
					case t.KW_METADATA:
					case t.KW_DATA:
					case t.KW_INPATH:
					case t.KW_CHANGE:
					case t.KW_FIRST:
					case t.KW_AFTER:
					case t.KW_RENAME:
					case t.KW_COMMENT:
					case t.KW_TINYINT:
					case t.KW_DATETIME:
					case t.KW_ZONE:
					case t.KW_STRING:
					case t.KW_STRUCT:
					case t.KW_UNIONTYPE:
					case t.KW_PARTITIONED:
					case t.KW_CLUSTERED:
					case t.KW_SORTED:
					case t.KW_BUCKETS:
					case t.KW_FORMAT:
					case t.KW_DELIMITED:
					case t.KW_FIELDS:
					case t.KW_TERMINATED:
					case t.KW_ESCAPED:
					case t.KW_COLLECTION:
					case t.KW_ITEMS:
					case t.KW_KEYS:
					case t.KW_KEY_TYPE:
					case t.KW_KILL:
					case t.KW_LINES:
					case t.KW_STORED:
					case t.KW_FILEFORMAT:
					case t.KW_INPUTFORMAT:
					case t.KW_OUTPUTFORMAT:
					case t.KW_INPUTDRIVER:
					case t.KW_OUTPUTDRIVER:
					case t.KW_ENABLE:
					case t.KW_DISABLE:
					case t.KW_LOCATION:
					case t.KW_BUCKET:
					case t.KW_ADD:
					case t.KW_REPLACE:
					case t.KW_TEMPORARY:
					case t.KW_FILE:
					case t.KW_JAR:
					case t.KW_EXPLAIN:
					case t.KW_FORMATTED:
					case t.KW_DEPENDENCY:
					case t.KW_LOGICAL:
					case t.KW_SERDE:
					case t.KW_DEFERRED:
					case t.KW_SERDEPROPERTIES:
					case t.KW_DBPROPERTIES:
					case t.KW_LIMIT:
					case t.KW_OFFSET:
					case t.KW_UNSET:
					case t.KW_TBLPROPERTIES:
					case t.KW_IDXPROPERTIES:
					case t.KW_VALUE_TYPE:
					case t.KW_ELEM_TYPE:
					case t.KW_DEFINED:
					case t.KW_MAPJOIN:
					case t.KW_STREAMTABLE:
					case t.KW_CLUSTERSTATUS:
					case t.KW_UTC:
					case t.KW_UTCTIMESTAMP:
					case t.KW_LONG:
					case t.KW_PLUS:
					case t.KW_VIEW:
					case t.KW_VIEWS:
					case t.KW_DATABASES:
					case t.KW_MATERIALIZED:
					case t.KW_SCHEMA:
					case t.KW_SCHEMAS:
					case t.KW_SSL:
					case t.KW_UNDO:
					case t.KW_LOCK:
					case t.KW_LOCKS:
					case t.KW_UNLOCK:
					case t.KW_SHARED:
					case t.KW_EXCLUSIVE:
					case t.KW_UNSIGNED:
					case t.KW_WHILE:
					case t.KW_READ:
					case t.KW_PURGE:
					case t.KW_ANALYZE:
					case t.KW_BEFORE:
					case t.KW_CONTINUE:
					case t.KW_RECORDREADER:
					case t.KW_RECORDWRITER:
					case t.KW_SEMI:
					case t.KW_TOUCH:
					case t.KW_ARCHIVE:
					case t.KW_UNARCHIVE:
					case t.KW_COMPUTE:
					case t.KW_STATISTICS:
					case t.KW_USE:
					case t.KW_OPTION:
					case t.KW_CONCATENATE:
					case t.KW_SHOW_DATABASE:
					case t.KW_RESTRICT:
					case t.KW_CASCADE:
					case t.KW_SKEWED:
					case t.KW_DIRECTORIES:
					case t.KW_SETS:
					case t.KW_NOSCAN:
					case t.KW_ROLE:
					case t.KW_ROLES:
					case t.KW_URI:
					case t.KW_SERVER:
					case t.KW_ADMIN:
					case t.KW_OWNER:
					case t.KW_PRINCIPALS:
					case t.KW_COMPACT:
					case t.KW_COMPACTIONS:
					case t.KW_TRANSACTIONS:
					case t.KW_REWRITE:
					case t.KW_REOPTIMIZATION:
					case t.KW_RELOAD:
					case t.KW_YEAR:
					case t.KW_QUERY:
					case t.KW_QUARTER:
					case t.KW_MONTH:
					case t.KW_WEEK:
					case t.KW_DAY:
					case t.KW_DOW:
					case t.KW_HOUR:
					case t.KW_MINUTE:
					case t.KW_SECOND:
					case t.KW_TRANSACTION:
					case t.KW_WORK:
					case t.KW_WRITE:
					case t.KW_ISOLATION:
					case t.KW_LEVEL:
					case t.KW_SNAPSHOT:
					case t.KW_AUTOCOMMIT:
					case t.KW_CACHE:
					case t.KW_ENFORCED:
					case t.KW_VALIDATE:
					case t.KW_NOVALIDATE:
					case t.KW_RELY:
					case t.KW_NORELY:
					case t.KW_KEY:
					case t.KW_ABORT:
					case t.KW_MATCHED:
					case t.KW_REPL:
					case t.KW_DUMP:
					case t.KW_STATUS:
					case t.KW_VECTORIZATION:
					case t.KW_SUMMARY:
					case t.KW_OPERATOR:
					case t.KW_EXPRESSION:
					case t.KW_DETAIL:
					case t.KW_WAIT:
					case t.KW_RESOURCE:
					case t.KW_PLAN:
					case t.KW_QUERY_PARALLELISM:
					case t.KW_PLANS:
					case t.KW_ACTIVATE:
					case t.KW_DEFAULT:
					case t.KW_CHECK:
					case t.KW_POOL:
					case t.KW_MOVE:
					case t.KW_DO:
					case t.KW_ALLOC_FRACTION:
					case t.KW_SCHEDULING_POLICY:
					case t.KW_PATH:
					case t.KW_MAPPING:
					case t.KW_WORKLOAD:
					case t.KW_MANAGEMENT:
					case t.KW_ACTIVE:
					case t.KW_UNMANAGED:
					case t.KW_DELTA:
					case t.KW_CSV:
					case t.KW_JSON:
					case t.KW_BLOOMFILTER:
					case t.Identifier:
						(this.state = 3363), this._errHandler.sync(this);
						var i = this._interp.adaptivePredict(this._input, 380, this._ctx);
						switch (i) {
							case 1:
								(this.state = 3361), this.aliasList();
								break;
							case 2:
								(this.state = 3362), this.columnNameTypeList();
								break;
						}
						break;
					default:
						throw new s.error.NoViableAltException(this);
				}
			(this.state = 3370),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ROW && ((this.state = 3369), this.rowFormat()),
				(this.state = 3373),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_RECORDREADER && ((this.state = 3372), this.recordReader());
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Hn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_selectExpression),
			this
		);
	}
	Hn.prototype = Object.create(s.ParserRuleContext.prototype);
	Hn.prototype.constructor = Hn;
	Hn.prototype.tableAllColumns = function () {
		return this.getTypedRuleContext(w2, 0);
	};
	Hn.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	Hn.prototype.accept = function (u) {
		return u instanceof d ? u.visitSelectExpression(this) : u.visitChildren(this);
	};
	t.SelectExpressionContext = Hn;
	t.prototype.selectExpression = function () {
		var u = new Hn(this, this._ctx, this.state);
		this.enterRule(u, 562, t.RULE_selectExpression);
		try {
			(this.state = 3377), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 385, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 3375), this.tableAllColumns();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 3376), this.expression(0);
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function t1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_selectExpressionList),
			this
		);
	}
	t1.prototype = Object.create(s.ParserRuleContext.prototype);
	t1.prototype.constructor = t1;
	t1.prototype.selectExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Hn) : this.getTypedRuleContext(Hn, u);
	};
	t1.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	t1.prototype.accept = function (u) {
		return u instanceof d ? u.visitSelectExpressionList(this) : u.visitChildren(this);
	};
	t.SelectExpressionListContext = t1;
	t.prototype.selectExpressionList = function () {
		var u = new t1(this, this._ctx, this.state);
		this.enterRule(u, 564, t.RULE_selectExpressionList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3379,
					this.selectExpression(),
					this.state = 3384,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3380),
					this.match(t.COMMA),
					(this.state = 3381),
					this.selectExpression(),
					(this.state = 3386),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function U2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_window_clause),
			this
		);
	}
	U2.prototype = Object.create(s.ParserRuleContext.prototype);
	U2.prototype.constructor = U2;
	U2.prototype.KW_WINDOW = function () {
		return this.getToken(t.KW_WINDOW, 0);
	};
	U2.prototype.window_defn = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(v2) : this.getTypedRuleContext(v2, u);
	};
	U2.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	U2.prototype.accept = function (u) {
		return u instanceof d ? u.visitWindow_clause(this) : u.visitChildren(this);
	};
	t.Window_clauseContext = U2;
	t.prototype.window_clause = function () {
		var u = new U2(this, this._ctx, this.state);
		this.enterRule(u, 566, t.RULE_window_clause);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3387,
					this.match(t.KW_WINDOW),
					this.state = 3388,
					this.window_defn(),
					this.state = 3393,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3389),
					this.match(t.COMMA),
					(this.state = 3390),
					this.window_defn(),
					(this.state = 3395),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function v2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_window_defn),
			this
		);
	}
	v2.prototype = Object.create(s.ParserRuleContext.prototype);
	v2.prototype.constructor = v2;
	v2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	v2.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	v2.prototype.window_specification = function () {
		return this.getTypedRuleContext(pr, 0);
	};
	v2.prototype.accept = function (u) {
		return u instanceof d ? u.visitWindow_defn(this) : u.visitChildren(this);
	};
	t.Window_defnContext = v2;
	t.prototype.window_defn = function () {
		var u = new v2(this, this._ctx, this.state);
		this.enterRule(u, 568, t.RULE_window_defn);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3396),
				this.identifier(),
				(this.state = 3397),
				this.match(t.KW_AS),
				(this.state = 3398),
				this.window_specification();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function pr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_window_specification),
			this
		);
	}
	pr.prototype = Object.create(s.ParserRuleContext.prototype);
	pr.prototype.constructor = pr;
	pr.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	pr.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	pr.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	pr.prototype.partitioningSpec = function () {
		return this.getTypedRuleContext(lr, 0);
	};
	pr.prototype.window_frame = function () {
		return this.getTypedRuleContext(hp, 0);
	};
	pr.prototype.accept = function (u) {
		return u instanceof d ? u.visitWindow_specification(this) : u.visitChildren(this);
	};
	t.Window_specificationContext = pr;
	t.prototype.window_specification = function () {
		var u = new pr(this, this._ctx, this.state);
		this.enterRule(u, 570, t.RULE_window_specification);
		var e = 0;
		try {
			switch ((this.enterOuterAlt(u, 1), (this.state = 3412), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.Identifier:
					(this.state = 3400), this.identifier();
					break;
				case t.LPAREN:
					(this.state = 3401), this.match(t.LPAREN), (this.state = 3403), this._errHandler.sync(this);
					var i = this._interp.adaptivePredict(this._input, 388, this._ctx);
					i === 1 && ((this.state = 3402), this.identifier()),
						(this.state = 3406),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_ORDER ||
							(((e - 35) & -32) == 0 &&
								((1 << (e - 35)) &
									((1 << (t.KW_PARTITION - 35)) |
										(1 << (t.KW_CLUSTER - 35)) |
										(1 << (t.KW_DISTRIBUTE - 35)) |
										(1 << (t.KW_SORT - 35)))) !==
									0)) &&
							((this.state = 3405), this.partitioningSpec()),
						(this.state = 3409),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_ROWS || e === t.KW_RANGE) && ((this.state = 3408), this.window_frame()),
						(this.state = 3411),
						this.match(t.RPAREN);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function hp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_window_frame),
			this
		);
	}
	hp.prototype = Object.create(s.ParserRuleContext.prototype);
	hp.prototype.constructor = hp;
	hp.prototype.window_range_expression = function () {
		return this.getTypedRuleContext(Fn, 0);
	};
	hp.prototype.window_value_expression = function () {
		return this.getTypedRuleContext(kn, 0);
	};
	hp.prototype.accept = function (u) {
		return u instanceof d ? u.visitWindow_frame(this) : u.visitChildren(this);
	};
	t.Window_frameContext = hp;
	t.prototype.window_frame = function () {
		var u = new hp(this, this._ctx, this.state);
		this.enterRule(u, 572, t.RULE_window_frame);
		try {
			switch (((this.state = 3416), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ROWS:
					this.enterOuterAlt(u, 1), (this.state = 3414), this.window_range_expression();
					break;
				case t.KW_RANGE:
					this.enterOuterAlt(u, 2), (this.state = 3415), this.window_value_expression();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Fn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_window_range_expression),
			this
		);
	}
	Fn.prototype = Object.create(s.ParserRuleContext.prototype);
	Fn.prototype.constructor = Fn;
	Fn.prototype.KW_ROWS = function () {
		return this.getToken(t.KW_ROWS, 0);
	};
	Fn.prototype.window_frame_start_boundary = function () {
		return this.getTypedRuleContext(hr, 0);
	};
	Fn.prototype.KW_BETWEEN = function () {
		return this.getToken(t.KW_BETWEEN, 0);
	};
	Fn.prototype.window_frame_boundary = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ut) : this.getTypedRuleContext(Ut, u);
	};
	Fn.prototype.KW_AND = function () {
		return this.getToken(t.KW_AND, 0);
	};
	Fn.prototype.accept = function (u) {
		return u instanceof d ? u.visitWindow_range_expression(this) : u.visitChildren(this);
	};
	t.Window_range_expressionContext = Fn;
	t.prototype.window_range_expression = function () {
		var u = new Fn(this, this._ctx, this.state);
		this.enterRule(u, 574, t.RULE_window_range_expression);
		try {
			(this.state = 3426), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 393, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 3418),
						this.match(t.KW_ROWS),
						(this.state = 3419),
						this.window_frame_start_boundary();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 3420),
						this.match(t.KW_ROWS),
						(this.state = 3421),
						this.match(t.KW_BETWEEN),
						(this.state = 3422),
						this.window_frame_boundary(),
						(this.state = 3423),
						this.match(t.KW_AND),
						(this.state = 3424),
						this.window_frame_boundary();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function kn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_window_value_expression),
			this
		);
	}
	kn.prototype = Object.create(s.ParserRuleContext.prototype);
	kn.prototype.constructor = kn;
	kn.prototype.KW_RANGE = function () {
		return this.getToken(t.KW_RANGE, 0);
	};
	kn.prototype.window_frame_start_boundary = function () {
		return this.getTypedRuleContext(hr, 0);
	};
	kn.prototype.KW_BETWEEN = function () {
		return this.getToken(t.KW_BETWEEN, 0);
	};
	kn.prototype.window_frame_boundary = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Ut) : this.getTypedRuleContext(Ut, u);
	};
	kn.prototype.KW_AND = function () {
		return this.getToken(t.KW_AND, 0);
	};
	kn.prototype.accept = function (u) {
		return u instanceof d ? u.visitWindow_value_expression(this) : u.visitChildren(this);
	};
	t.Window_value_expressionContext = kn;
	t.prototype.window_value_expression = function () {
		var u = new kn(this, this._ctx, this.state);
		this.enterRule(u, 576, t.RULE_window_value_expression);
		try {
			(this.state = 3436), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 394, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 3428),
						this.match(t.KW_RANGE),
						(this.state = 3429),
						this.window_frame_start_boundary();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 3430),
						this.match(t.KW_RANGE),
						(this.state = 3431),
						this.match(t.KW_BETWEEN),
						(this.state = 3432),
						this.window_frame_boundary(),
						(this.state = 3433),
						this.match(t.KW_AND),
						(this.state = 3434),
						this.window_frame_boundary();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function hr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_window_frame_start_boundary),
			this
		);
	}
	hr.prototype = Object.create(s.ParserRuleContext.prototype);
	hr.prototype.constructor = hr;
	hr.prototype.KW_UNBOUNDED = function () {
		return this.getToken(t.KW_UNBOUNDED, 0);
	};
	hr.prototype.KW_PRECEDING = function () {
		return this.getToken(t.KW_PRECEDING, 0);
	};
	hr.prototype.KW_CURRENT = function () {
		return this.getToken(t.KW_CURRENT, 0);
	};
	hr.prototype.KW_ROW = function () {
		return this.getToken(t.KW_ROW, 0);
	};
	hr.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	hr.prototype.accept = function (u) {
		return u instanceof d ? u.visitWindow_frame_start_boundary(this) : u.visitChildren(this);
	};
	t.Window_frame_start_boundaryContext = hr;
	t.prototype.window_frame_start_boundary = function () {
		var u = new hr(this, this._ctx, this.state);
		this.enterRule(u, 578, t.RULE_window_frame_start_boundary);
		try {
			switch (((this.state = 3444), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_UNBOUNDED:
					this.enterOuterAlt(u, 1),
						(this.state = 3438),
						this.match(t.KW_UNBOUNDED),
						(this.state = 3439),
						this.match(t.KW_PRECEDING);
					break;
				case t.KW_CURRENT:
					this.enterOuterAlt(u, 2),
						(this.state = 3440),
						this.match(t.KW_CURRENT),
						(this.state = 3441),
						this.match(t.KW_ROW);
					break;
				case t.Number:
					this.enterOuterAlt(u, 3),
						(this.state = 3442),
						this.match(t.Number),
						(this.state = 3443),
						this.match(t.KW_PRECEDING);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ut(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_window_frame_boundary),
			this
		);
	}
	Ut.prototype = Object.create(s.ParserRuleContext.prototype);
	Ut.prototype.constructor = Ut;
	Ut.prototype.KW_UNBOUNDED = function () {
		return this.getToken(t.KW_UNBOUNDED, 0);
	};
	Ut.prototype.KW_PRECEDING = function () {
		return this.getToken(t.KW_PRECEDING, 0);
	};
	Ut.prototype.KW_FOLLOWING = function () {
		return this.getToken(t.KW_FOLLOWING, 0);
	};
	Ut.prototype.KW_CURRENT = function () {
		return this.getToken(t.KW_CURRENT, 0);
	};
	Ut.prototype.KW_ROW = function () {
		return this.getToken(t.KW_ROW, 0);
	};
	Ut.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	Ut.prototype.accept = function (u) {
		return u instanceof d ? u.visitWindow_frame_boundary(this) : u.visitChildren(this);
	};
	t.Window_frame_boundaryContext = Ut;
	t.prototype.window_frame_boundary = function () {
		var u = new Ut(this, this._ctx, this.state);
		this.enterRule(u, 580, t.RULE_window_frame_boundary);
		var e = 0;
		try {
			switch (((this.state = 3452), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_UNBOUNDED:
					this.enterOuterAlt(u, 1),
						(this.state = 3446),
						this.match(t.KW_UNBOUNDED),
						(this.state = 3447),
						(e = this._input.LA(1)),
						e === t.KW_PRECEDING || e === t.KW_FOLLOWING
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this);
					break;
				case t.KW_CURRENT:
					this.enterOuterAlt(u, 2),
						(this.state = 3448),
						this.match(t.KW_CURRENT),
						(this.state = 3449),
						this.match(t.KW_ROW);
					break;
				case t.Number:
					this.enterOuterAlt(u, 3),
						(this.state = 3450),
						this.match(t.Number),
						(this.state = 3451),
						(e = this._input.LA(1)),
						e === t.KW_PRECEDING || e === t.KW_FOLLOWING
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function w2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableAllColumns),
			this
		);
	}
	w2.prototype = Object.create(s.ParserRuleContext.prototype);
	w2.prototype.constructor = w2;
	w2.prototype.STAR = function () {
		return this.getToken(t.STAR, 0);
	};
	w2.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	w2.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	w2.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableAllColumns(this) : u.visitChildren(this);
	};
	t.TableAllColumnsContext = w2;
	t.prototype.tableAllColumns = function () {
		var u = new w2(this, this._ctx, this.state);
		this.enterRule(u, 582, t.RULE_tableAllColumns);
		try {
			switch (((this.state = 3459), this._errHandler.sync(this), this._input.LA(1))) {
				case t.STAR:
					this.enterOuterAlt(u, 1), (this.state = 3454), this.match(t.STAR);
					break;
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.Identifier:
					this.enterOuterAlt(u, 2),
						(this.state = 3455),
						this.tableName(),
						(this.state = 3456),
						this.match(t.DOT),
						(this.state = 3457),
						this.match(t.STAR);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function lp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableOrColumn),
			this
		);
	}
	lp.prototype = Object.create(s.ParserRuleContext.prototype);
	lp.prototype.constructor = lp;
	lp.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	lp.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableOrColumn(this) : u.visitChildren(this);
	};
	t.TableOrColumnContext = lp;
	t.prototype.tableOrColumn = function () {
		var u = new lp(this, this._ctx, this.state);
		this.enterRule(u, 584, t.RULE_tableOrColumn);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3461), this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function dp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_expressionList),
			this
		);
	}
	dp.prototype = Object.create(s.ParserRuleContext.prototype);
	dp.prototype.constructor = dp;
	dp.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	dp.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	dp.prototype.accept = function (u) {
		return u instanceof d ? u.visitExpressionList(this) : u.visitChildren(this);
	};
	t.ExpressionListContext = dp;
	t.prototype.expressionList = function () {
		var u = new dp(this, this._ctx, this.state);
		this.enterRule(u, 586, t.RULE_expressionList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3463,
					this.expression(0),
					this.state = 3468,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3464),
					this.match(t.COMMA),
					(this.state = 3465),
					this.expression(0),
					(this.state = 3470),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function e1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_aliasList),
			this
		);
	}
	e1.prototype = Object.create(s.ParserRuleContext.prototype);
	e1.prototype.constructor = e1;
	e1.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	e1.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	e1.prototype.accept = function (u) {
		return u instanceof d ? u.visitAliasList(this) : u.visitChildren(this);
	};
	t.AliasListContext = e1;
	t.prototype.aliasList = function () {
		var u = new e1(this, this._ctx, this.state);
		this.enterRule(u, 588, t.RULE_aliasList);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3471),
				this.identifier(),
				(this.state = 3476),
				this._errHandler.sync(this);
			for (
				var e = this._interp.adaptivePredict(this._input, 399, this._ctx);
				e != 2 && e != s.atn.ATN.INVALID_ALT_NUMBER;

			)
				e === 1 && ((this.state = 3472), this.match(t.COMMA), (this.state = 3473), this.identifier()),
					(this.state = 3478),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 399, this._ctx));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function i1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_fromClause),
			this
		);
	}
	i1.prototype = Object.create(s.ParserRuleContext.prototype);
	i1.prototype.constructor = i1;
	i1.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	i1.prototype.fromSource = function () {
		return this.getTypedRuleContext(M2, 0);
	};
	i1.prototype.accept = function (u) {
		return u instanceof d ? u.visitFromClause(this) : u.visitChildren(this);
	};
	t.FromClauseContext = i1;
	t.prototype.fromClause = function () {
		var u = new i1(this, this._ctx, this.state);
		this.enterRule(u, 590, t.RULE_fromClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3479),
				this.match(t.KW_FROM),
				(this.state = 3480),
				this.fromSource();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function M2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_fromSource),
			this
		);
	}
	M2.prototype = Object.create(s.ParserRuleContext.prototype);
	M2.prototype.constructor = M2;
	M2.prototype.uniqueJoinToken = function () {
		return this.getTypedRuleContext(F3, 0);
	};
	M2.prototype.uniqueJoinSource = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(H2) : this.getTypedRuleContext(H2, u);
	};
	M2.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	M2.prototype.joinSource = function () {
		return this.getTypedRuleContext(me, 0);
	};
	M2.prototype.accept = function (u) {
		return u instanceof d ? u.visitFromSource(this) : u.visitChildren(this);
	};
	t.FromSourceContext = M2;
	t.prototype.fromSource = function () {
		var u = new M2(this, this._ctx, this.state);
		this.enterRule(u, 592, t.RULE_fromSource);
		var e = 0;
		try {
			switch (((this.state = 3491), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_UNIQUEJOIN:
					this.enterOuterAlt(u, 1),
						(this.state = 3482),
						this.uniqueJoinToken(),
						(this.state = 3483),
						this.uniqueJoinSource(),
						(this.state = 3486),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
					do
						(this.state = 3484),
							this.match(t.COMMA),
							(this.state = 3485),
							this.uniqueJoinSource(),
							(this.state = 3488),
							this._errHandler.sync(this),
							(e = this._input.LA(1));
					while (e === t.COMMA);
					break;
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLE:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.LPAREN:
				case t.Identifier:
					this.enterOuterAlt(u, 2), (this.state = 3490), this.joinSource();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Re(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_atomjoinSource),
			this
		);
	}
	Re.prototype = Object.create(s.ParserRuleContext.prototype);
	Re.prototype.constructor = Re;
	Re.prototype.tableSource = function () {
		return this.getTypedRuleContext(ci, 0);
	};
	Re.prototype.lateralView = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(L0) : this.getTypedRuleContext(L0, u);
	};
	Re.prototype.virtualTableSource = function () {
		return this.getTypedRuleContext(vt, 0);
	};
	Re.prototype.subQuerySource = function () {
		return this.getTypedRuleContext(pi, 0);
	};
	Re.prototype.partitionedTableFunction = function () {
		return this.getTypedRuleContext(wu, 0);
	};
	Re.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Re.prototype.joinSource = function () {
		return this.getTypedRuleContext(me, 0);
	};
	Re.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Re.prototype.accept = function (u) {
		return u instanceof d ? u.visitAtomjoinSource(this) : u.visitChildren(this);
	};
	t.AtomjoinSourceContext = Re;
	t.prototype.atomjoinSource = function () {
		var u = new Re(this, this._ctx, this.state);
		this.enterRule(u, 594, t.RULE_atomjoinSource);
		try {
			(this.state = 3525), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 406, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 3493),
						this.tableSource(),
						(this.state = 3497),
						this._errHandler.sync(this);
					for (
						var i = this._interp.adaptivePredict(this._input, 402, this._ctx);
						i != 2 && i != s.atn.ATN.INVALID_ALT_NUMBER;

					)
						i === 1 && ((this.state = 3494), this.lateralView()),
							(this.state = 3499),
							this._errHandler.sync(this),
							(i = this._interp.adaptivePredict(this._input, 402, this._ctx));
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 3500),
						this.virtualTableSource(),
						(this.state = 3504),
						this._errHandler.sync(this);
					for (
						var i = this._interp.adaptivePredict(this._input, 403, this._ctx);
						i != 2 && i != s.atn.ATN.INVALID_ALT_NUMBER;

					)
						i === 1 && ((this.state = 3501), this.lateralView()),
							(this.state = 3506),
							this._errHandler.sync(this),
							(i = this._interp.adaptivePredict(this._input, 403, this._ctx));
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 3507),
						this.subQuerySource(),
						(this.state = 3511),
						this._errHandler.sync(this);
					for (
						var i = this._interp.adaptivePredict(this._input, 404, this._ctx);
						i != 2 && i != s.atn.ATN.INVALID_ALT_NUMBER;

					)
						i === 1 && ((this.state = 3508), this.lateralView()),
							(this.state = 3513),
							this._errHandler.sync(this),
							(i = this._interp.adaptivePredict(this._input, 404, this._ctx));
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 3514),
						this.partitionedTableFunction(),
						(this.state = 3518),
						this._errHandler.sync(this);
					for (
						var i = this._interp.adaptivePredict(this._input, 405, this._ctx);
						i != 2 && i != s.atn.ATN.INVALID_ALT_NUMBER;

					)
						i === 1 && ((this.state = 3515), this.lateralView()),
							(this.state = 3520),
							this._errHandler.sync(this),
							(i = this._interp.adaptivePredict(this._input, 405, this._ctx));
					break;
				case 5:
					this.enterOuterAlt(u, 5),
						(this.state = 3521),
						this.match(t.LPAREN),
						(this.state = 3522),
						this.joinSource(),
						(this.state = 3523),
						this.match(t.RPAREN);
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function me(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_joinSource),
			this
		);
	}
	me.prototype = Object.create(s.ParserRuleContext.prototype);
	me.prototype.constructor = me;
	me.prototype.atomjoinSource = function () {
		return this.getTypedRuleContext(Re, 0);
	};
	me.prototype.joinToken = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(dt) : this.getTypedRuleContext(dt, u);
	};
	me.prototype.joinSourcePart = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(ai) : this.getTypedRuleContext(ai, u);
	};
	me.prototype.KW_ON = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_ON) : this.getToken(t.KW_ON, u);
	};
	me.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	me.prototype.KW_USING = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_USING) : this.getToken(t.KW_USING, u);
	};
	me.prototype.columnParenthesesList = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(gu) : this.getTypedRuleContext(gu, u);
	};
	me.prototype.accept = function (u) {
		return u instanceof d ? u.visitJoinSource(this) : u.visitChildren(this);
	};
	t.JoinSourceContext = me;
	t.prototype.joinSource = function () {
		var u = new me(this, this._ctx, this.state);
		this.enterRule(u, 596, t.RULE_joinSource);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3527,
					this.atomjoinSource(),
					this.state = 3538,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				(((e - 30) & -32) == 0 &&
					((1 << (e - 30)) &
						((1 << (t.KW_JOIN - 30)) |
							(1 << (t.KW_LEFT - 30)) |
							(1 << (t.KW_RIGHT - 30)) |
							(1 << (t.KW_FULL - 30)))) !==
						0) ||
				e === t.KW_CROSS ||
				e === t.KW_INNER ||
				e === t.COMMA;

			) {
				switch (
					((this.state = 3528),
					this.joinToken(),
					(this.state = 3529),
					this.joinSourcePart(),
					(this.state = 3534),
					this._errHandler.sync(this),
					this._input.LA(1))
				) {
					case t.KW_ON:
						(this.state = 3530), this.match(t.KW_ON), (this.state = 3531), this.expression(0);
						break;
					case t.KW_USING:
						(this.state = 3532), this.match(t.KW_USING), (this.state = 3533), this.columnParenthesesList();
						break;
					case t.KW_ORDER:
					case t.KW_GROUP:
					case t.KW_HAVING:
					case t.KW_WHERE:
					case t.KW_SELECT:
					case t.KW_INSERT:
					case t.KW_JOIN:
					case t.KW_LEFT:
					case t.KW_RIGHT:
					case t.KW_FULL:
					case t.KW_CLUSTER:
					case t.KW_DISTRIBUTE:
					case t.KW_SORT:
					case t.KW_UNION:
					case t.KW_EXCEPT:
					case t.KW_MAP:
					case t.KW_REDUCE:
					case t.KW_LIMIT:
					case t.KW_MINUS:
					case t.KW_INTERSECT:
					case t.KW_CROSS:
					case t.KW_WINDOW:
					case t.KW_INNER:
					case t.COMMA:
					case t.SEMICOLON:
					case t.RPAREN:
						break;
					default:
						break;
				}
				(this.state = 3540), this._errHandler.sync(this), (e = this._input.LA(1));
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ai(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_joinSourcePart),
			this
		);
	}
	ai.prototype = Object.create(s.ParserRuleContext.prototype);
	ai.prototype.constructor = ai;
	ai.prototype.tableSource = function () {
		return this.getTypedRuleContext(ci, 0);
	};
	ai.prototype.virtualTableSource = function () {
		return this.getTypedRuleContext(vt, 0);
	};
	ai.prototype.subQuerySource = function () {
		return this.getTypedRuleContext(pi, 0);
	};
	ai.prototype.partitionedTableFunction = function () {
		return this.getTypedRuleContext(wu, 0);
	};
	ai.prototype.lateralView = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(L0) : this.getTypedRuleContext(L0, u);
	};
	ai.prototype.accept = function (u) {
		return u instanceof d ? u.visitJoinSourcePart(this) : u.visitChildren(this);
	};
	t.JoinSourcePartContext = ai;
	t.prototype.joinSourcePart = function () {
		var u = new ai(this, this._ctx, this.state);
		this.enterRule(u, 598, t.RULE_joinSourcePart);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3545), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 409, this._ctx);
			switch (e) {
				case 1:
					(this.state = 3541), this.tableSource();
					break;
				case 2:
					(this.state = 3542), this.virtualTableSource();
					break;
				case 3:
					(this.state = 3543), this.subQuerySource();
					break;
				case 4:
					(this.state = 3544), this.partitionedTableFunction();
					break;
			}
			(this.state = 3550), this._errHandler.sync(this);
			for (
				var i = this._interp.adaptivePredict(this._input, 410, this._ctx);
				i != 2 && i != s.atn.ATN.INVALID_ALT_NUMBER;

			)
				i === 1 && ((this.state = 3547), this.lateralView()),
					(this.state = 3552),
					this._errHandler.sync(this),
					(i = this._interp.adaptivePredict(this._input, 410, this._ctx));
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function H2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_uniqueJoinSource),
			this
		);
	}
	H2.prototype = Object.create(s.ParserRuleContext.prototype);
	H2.prototype.constructor = H2;
	H2.prototype.uniqueJoinTableSource = function () {
		return this.getTypedRuleContext(F2, 0);
	};
	H2.prototype.uniqueJoinExpr = function () {
		return this.getTypedRuleContext(r1, 0);
	};
	H2.prototype.KW_PRESERVE = function () {
		return this.getToken(t.KW_PRESERVE, 0);
	};
	H2.prototype.accept = function (u) {
		return u instanceof d ? u.visitUniqueJoinSource(this) : u.visitChildren(this);
	};
	t.UniqueJoinSourceContext = H2;
	t.prototype.uniqueJoinSource = function () {
		var u = new H2(this, this._ctx, this.state);
		this.enterRule(u, 600, t.RULE_uniqueJoinSource);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3554),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PRESERVE && ((this.state = 3553), this.match(t.KW_PRESERVE)),
				(this.state = 3556),
				this.uniqueJoinTableSource(),
				(this.state = 3557),
				this.uniqueJoinExpr();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function r1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_uniqueJoinExpr),
			this
		);
	}
	r1.prototype = Object.create(s.ParserRuleContext.prototype);
	r1.prototype.constructor = r1;
	r1.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	r1.prototype.expressionList = function () {
		return this.getTypedRuleContext(dp, 0);
	};
	r1.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	r1.prototype.accept = function (u) {
		return u instanceof d ? u.visitUniqueJoinExpr(this) : u.visitChildren(this);
	};
	t.UniqueJoinExprContext = r1;
	t.prototype.uniqueJoinExpr = function () {
		var u = new r1(this, this._ctx, this.state);
		this.enterRule(u, 602, t.RULE_uniqueJoinExpr);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3559),
				this.match(t.LPAREN),
				(this.state = 3560),
				this.expressionList(),
				(this.state = 3561),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function F3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_uniqueJoinToken),
			this
		);
	}
	F3.prototype = Object.create(s.ParserRuleContext.prototype);
	F3.prototype.constructor = F3;
	F3.prototype.KW_UNIQUEJOIN = function () {
		return this.getToken(t.KW_UNIQUEJOIN, 0);
	};
	F3.prototype.accept = function (u) {
		return u instanceof d ? u.visitUniqueJoinToken(this) : u.visitChildren(this);
	};
	t.UniqueJoinTokenContext = F3;
	t.prototype.uniqueJoinToken = function () {
		var u = new F3(this, this._ctx, this.state);
		this.enterRule(u, 604, t.RULE_uniqueJoinToken);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3563), this.match(t.KW_UNIQUEJOIN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function dt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_joinToken),
			this
		);
	}
	dt.prototype = Object.create(s.ParserRuleContext.prototype);
	dt.prototype.constructor = dt;
	dt.prototype.KW_JOIN = function () {
		return this.getToken(t.KW_JOIN, 0);
	};
	dt.prototype.KW_INNER = function () {
		return this.getToken(t.KW_INNER, 0);
	};
	dt.prototype.COMMA = function () {
		return this.getToken(t.COMMA, 0);
	};
	dt.prototype.KW_CROSS = function () {
		return this.getToken(t.KW_CROSS, 0);
	};
	dt.prototype.KW_LEFT = function () {
		return this.getToken(t.KW_LEFT, 0);
	};
	dt.prototype.KW_OUTER = function () {
		return this.getToken(t.KW_OUTER, 0);
	};
	dt.prototype.KW_RIGHT = function () {
		return this.getToken(t.KW_RIGHT, 0);
	};
	dt.prototype.KW_FULL = function () {
		return this.getToken(t.KW_FULL, 0);
	};
	dt.prototype.KW_SEMI = function () {
		return this.getToken(t.KW_SEMI, 0);
	};
	dt.prototype.accept = function (u) {
		return u instanceof d ? u.visitJoinToken(this) : u.visitChildren(this);
	};
	t.JoinTokenContext = dt;
	t.prototype.joinToken = function () {
		var u = new dt(this, this._ctx, this.state);
		this.enterRule(u, 606, t.RULE_joinToken);
		var e = 0;
		try {
			(this.state = 3589), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 415, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 3565), this.match(t.KW_JOIN);
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 3566),
						this.match(t.KW_INNER),
						(this.state = 3567),
						this.match(t.KW_JOIN);
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 3568), this.match(t.COMMA);
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 3569),
						this.match(t.KW_CROSS),
						(this.state = 3570),
						this.match(t.KW_JOIN);
					break;
				case 5:
					this.enterOuterAlt(u, 5),
						(this.state = 3571),
						this.match(t.KW_LEFT),
						(this.state = 3573),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_OUTER && ((this.state = 3572), this.match(t.KW_OUTER)),
						(this.state = 3575),
						this.match(t.KW_JOIN);
					break;
				case 6:
					this.enterOuterAlt(u, 6),
						(this.state = 3576),
						this.match(t.KW_RIGHT),
						(this.state = 3578),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_OUTER && ((this.state = 3577), this.match(t.KW_OUTER)),
						(this.state = 3580),
						this.match(t.KW_JOIN);
					break;
				case 7:
					this.enterOuterAlt(u, 7),
						(this.state = 3581),
						this.match(t.KW_FULL),
						(this.state = 3583),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_OUTER && ((this.state = 3582), this.match(t.KW_OUTER)),
						(this.state = 3585),
						this.match(t.KW_JOIN);
					break;
				case 8:
					this.enterOuterAlt(u, 8),
						(this.state = 3586),
						this.match(t.KW_LEFT),
						(this.state = 3587),
						this.match(t.KW_SEMI),
						(this.state = 3588),
						this.match(t.KW_JOIN);
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function L0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_lateralView),
			this
		);
	}
	L0.prototype = Object.create(s.ParserRuleContext.prototype);
	L0.prototype.constructor = L0;
	L0.prototype.KW_LATERAL = function () {
		return this.getToken(t.KW_LATERAL, 0);
	};
	L0.prototype.KW_VIEW = function () {
		return this.getToken(t.KW_VIEW, 0);
	};
	L0.prototype.KW_OUTER = function () {
		return this.getToken(t.KW_OUTER, 0);
	};
	L0.prototype.functionStatement = function () {
		return this.getTypedRuleContext(yu, 0);
	};
	L0.prototype.tableAlias = function () {
		return this.getTypedRuleContext(fp, 0);
	};
	L0.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	L0.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	L0.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	L0.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	L0.prototype.LPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.LPAREN) : this.getToken(t.LPAREN, u);
	};
	L0.prototype.valuesClause = function () {
		return this.getTypedRuleContext(k2, 0);
	};
	L0.prototype.RPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.RPAREN) : this.getToken(t.RPAREN, u);
	};
	L0.prototype.accept = function (u) {
		return u instanceof d ? u.visitLateralView(this) : u.visitChildren(this);
	};
	t.LateralViewContext = L0;
	t.prototype.lateralView = function () {
		var u = new L0(this, this._ctx, this.state);
		this.enterRule(u, 608, t.RULE_lateralView);
		var e = 0;
		try {
			(this.state = 3650), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 425, this._ctx);
			switch (i) {
				case 1:
					if (
						(this.enterOuterAlt(u, 1),
						(this.state = 3591),
						this.match(t.KW_LATERAL),
						(this.state = 3592),
						this.match(t.KW_VIEW),
						(this.state = 3593),
						this.match(t.KW_OUTER),
						(this.state = 3594),
						this.functionStatement(),
						(this.state = 3595),
						this.tableAlias(),
						(this.state = 3605),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_AS)
					) {
						(this.state = 3596),
							this.match(t.KW_AS),
							(this.state = 3597),
							this.identifier(),
							(this.state = 3602),
							this._errHandler.sync(this);
						for (
							var n = this._interp.adaptivePredict(this._input, 416, this._ctx);
							n != 2 && n != s.atn.ATN.INVALID_ALT_NUMBER;

						)
							n === 1 &&
								((this.state = 3598), this.match(t.COMMA), (this.state = 3599), this.identifier()),
								(this.state = 3604),
								this._errHandler.sync(this),
								(n = this._interp.adaptivePredict(this._input, 416, this._ctx));
					}
					break;
				case 2:
					if (
						(this.enterOuterAlt(u, 2),
						(this.state = 3608),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.COMMA && ((this.state = 3607), this.match(t.COMMA)),
						(this.state = 3610),
						this.match(t.KW_LATERAL),
						(this.state = 3611),
						this.match(t.KW_VIEW),
						(this.state = 3612),
						this.functionStatement(),
						(this.state = 3613),
						this.tableAlias(),
						(this.state = 3623),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_AS)
					) {
						(this.state = 3614),
							this.match(t.KW_AS),
							(this.state = 3615),
							this.identifier(),
							(this.state = 3620),
							this._errHandler.sync(this);
						for (
							var n = this._interp.adaptivePredict(this._input, 419, this._ctx);
							n != 2 && n != s.atn.ATN.INVALID_ALT_NUMBER;

						)
							n === 1 &&
								((this.state = 3616), this.match(t.COMMA), (this.state = 3617), this.identifier()),
								(this.state = 3622),
								this._errHandler.sync(this),
								(n = this._interp.adaptivePredict(this._input, 419, this._ctx));
					}
					break;
				case 3:
					if (
						(this.enterOuterAlt(u, 3),
						(this.state = 3626),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.COMMA && ((this.state = 3625), this.match(t.COMMA)),
						(this.state = 3628),
						this.match(t.KW_LATERAL),
						(this.state = 3629),
						this.match(t.KW_TABLE),
						(this.state = 3630),
						this.match(t.LPAREN),
						(this.state = 3631),
						this.valuesClause(),
						(this.state = 3632),
						this.match(t.RPAREN),
						(this.state = 3634),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_AS && ((this.state = 3633), this.match(t.KW_AS)),
						(this.state = 3636),
						this.tableAlias(),
						(this.state = 3648),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.LPAREN)
					) {
						for (
							this.state = 3637,
								this.match(t.LPAREN),
								this.state = 3638,
								this.identifier(),
								this.state = 3643,
								this._errHandler.sync(this),
								e = this._input.LA(1);
							e === t.COMMA;

						)
							(this.state = 3639),
								this.match(t.COMMA),
								(this.state = 3640),
								this.identifier(),
								(this.state = 3645),
								this._errHandler.sync(this),
								(e = this._input.LA(1));
						(this.state = 3646), this.match(t.RPAREN);
					}
					break;
			}
		} catch (a) {
			if (a instanceof s.error.RecognitionException)
				(u.exception = a), this._errHandler.reportError(this, a), this._errHandler.recover(this, a);
			else throw a;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function fp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableAlias),
			this
		);
	}
	fp.prototype = Object.create(s.ParserRuleContext.prototype);
	fp.prototype.constructor = fp;
	fp.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	fp.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableAlias(this) : u.visitChildren(this);
	};
	t.TableAliasContext = fp;
	t.prototype.tableAlias = function () {
		var u = new fp(this, this._ctx, this.state);
		this.enterRule(u, 610, t.RULE_tableAlias);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3652), this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ft(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableBucketSample),
			this
		);
	}
	ft.prototype = Object.create(s.ParserRuleContext.prototype);
	ft.prototype.constructor = ft;
	ft.prototype.KW_TABLESAMPLE = function () {
		return this.getToken(t.KW_TABLESAMPLE, 0);
	};
	ft.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	ft.prototype.KW_BUCKET = function () {
		return this.getToken(t.KW_BUCKET, 0);
	};
	ft.prototype.Number = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.Number) : this.getToken(t.Number, u);
	};
	ft.prototype.KW_OUT = function () {
		return this.getToken(t.KW_OUT, 0);
	};
	ft.prototype.KW_OF = function () {
		return this.getToken(t.KW_OF, 0);
	};
	ft.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	ft.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	ft.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	ft.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	ft.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableBucketSample(this) : u.visitChildren(this);
	};
	t.TableBucketSampleContext = ft;
	t.prototype.tableBucketSample = function () {
		var u = new ft(this, this._ctx, this.state);
		this.enterRule(u, 612, t.RULE_tableBucketSample);
		var e = 0;
		try {
			if (
				(this.enterOuterAlt(u, 1),
				(this.state = 3654),
				this.match(t.KW_TABLESAMPLE),
				(this.state = 3655),
				this.match(t.LPAREN),
				(this.state = 3656),
				this.match(t.KW_BUCKET),
				(this.state = 3657),
				this.match(t.Number),
				(this.state = 3658),
				this.match(t.KW_OUT),
				(this.state = 3659),
				this.match(t.KW_OF),
				(this.state = 3660),
				this.match(t.Number),
				(this.state = 3670),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ON)
			)
				for (
					this.state = 3661,
						this.match(t.KW_ON),
						this.state = 3662,
						this.expression(0),
						this.state = 3667,
						this._errHandler.sync(this),
						e = this._input.LA(1);
					e === t.COMMA;

				)
					(this.state = 3663),
						this.match(t.COMMA),
						(this.state = 3664),
						this.expression(0),
						(this.state = 3669),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
			(this.state = 3672), this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function oi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_splitSample),
			this
		);
	}
	oi.prototype = Object.create(s.ParserRuleContext.prototype);
	oi.prototype.constructor = oi;
	oi.prototype.KW_TABLESAMPLE = function () {
		return this.getToken(t.KW_TABLESAMPLE, 0);
	};
	oi.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	oi.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	oi.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	oi.prototype.KW_PERCENT = function () {
		return this.getToken(t.KW_PERCENT, 0);
	};
	oi.prototype.KW_ROWS = function () {
		return this.getToken(t.KW_ROWS, 0);
	};
	oi.prototype.ByteLengthLiteral = function () {
		return this.getToken(t.ByteLengthLiteral, 0);
	};
	oi.prototype.accept = function (u) {
		return u instanceof d ? u.visitSplitSample(this) : u.visitChildren(this);
	};
	t.SplitSampleContext = oi;
	t.prototype.splitSample = function () {
		var u = new oi(this, this._ctx, this.state);
		this.enterRule(u, 614, t.RULE_splitSample);
		var e = 0;
		try {
			(this.state = 3683), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 428, this._ctx);
			switch (i) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 3674),
						this.match(t.KW_TABLESAMPLE),
						(this.state = 3675),
						this.match(t.LPAREN),
						(this.state = 3676),
						this.match(t.Number),
						(this.state = 3677),
						(e = this._input.LA(1)),
						e === t.KW_ROWS || e === t.KW_PERCENT
							? (this._errHandler.reportMatch(this), this.consume())
							: this._errHandler.recoverInline(this),
						(this.state = 3678),
						this.match(t.RPAREN);
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 3679),
						this.match(t.KW_TABLESAMPLE),
						(this.state = 3680),
						this.match(t.LPAREN),
						(this.state = 3681),
						this.match(t.ByteLengthLiteral),
						(this.state = 3682),
						this.match(t.RPAREN);
					break;
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function n1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableSample),
			this
		);
	}
	n1.prototype = Object.create(s.ParserRuleContext.prototype);
	n1.prototype.constructor = n1;
	n1.prototype.tableBucketSample = function () {
		return this.getTypedRuleContext(ft, 0);
	};
	n1.prototype.splitSample = function () {
		return this.getTypedRuleContext(oi, 0);
	};
	n1.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableSample(this) : u.visitChildren(this);
	};
	t.TableSampleContext = n1;
	t.prototype.tableSample = function () {
		var u = new n1(this, this._ctx, this.state);
		this.enterRule(u, 616, t.RULE_tableSample);
		try {
			(this.state = 3687), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 429, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 3685), this.tableBucketSample();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 3686), this.splitSample();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ci(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableSource),
			this
		);
	}
	ci.prototype = Object.create(s.ParserRuleContext.prototype);
	ci.prototype.constructor = ci;
	ci.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	ci.prototype.tableProperties = function () {
		return this.getTypedRuleContext(H0, 0);
	};
	ci.prototype.tableSample = function () {
		return this.getTypedRuleContext(n1, 0);
	};
	ci.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	ci.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	ci.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableSource(this) : u.visitChildren(this);
	};
	t.TableSourceContext = ci;
	t.prototype.tableSource = function () {
		var u = new ci(this, this._ctx, this.state);
		this.enterRule(u, 618, t.RULE_tableSource);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3689),
				this.tableName(),
				(this.state = 3691),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.LPAREN && ((this.state = 3690), this.tableProperties()),
				(this.state = 3694),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TABLESAMPLE && ((this.state = 3693), this.tableSample()),
				(this.state = 3700),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 433, this._ctx);
			i === 1 &&
				((this.state = 3697),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_AS && ((this.state = 3696), this.match(t.KW_AS)),
				(this.state = 3699),
				this.identifier());
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function F2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_uniqueJoinTableSource),
			this
		);
	}
	F2.prototype = Object.create(s.ParserRuleContext.prototype);
	F2.prototype.constructor = F2;
	F2.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	F2.prototype.tableSample = function () {
		return this.getTypedRuleContext(n1, 0);
	};
	F2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	F2.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	F2.prototype.accept = function (u) {
		return u instanceof d ? u.visitUniqueJoinTableSource(this) : u.visitChildren(this);
	};
	t.UniqueJoinTableSourceContext = F2;
	t.prototype.uniqueJoinTableSource = function () {
		var u = new F2(this, this._ctx, this.state);
		this.enterRule(u, 620, t.RULE_uniqueJoinTableSource);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3702),
				this.tableName(),
				(this.state = 3704),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TABLESAMPLE && ((this.state = 3703), this.tableSample()),
				(this.state = 3710),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(((e & -32) == 0 &&
					((1 << e) &
						((1 << t.KW_ASC) |
							(1 << t.KW_DESC) |
							(1 << t.KW_NULLS) |
							(1 << t.KW_LAST) |
							(1 << t.KW_AS) |
							(1 << t.KW_OVERWRITE))) !==
						0) ||
					(((e - 36) & -32) == 0 &&
						((1 << (e - 36)) &
							((1 << (t.KW_PARTITIONS - 36)) |
								(1 << (t.KW_TABLES - 36)) |
								(1 << (t.KW_COLUMNS - 36)) |
								(1 << (t.KW_INDEX - 36)) |
								(1 << (t.KW_INDEXES - 36)) |
								(1 << (t.KW_REBUILD - 36)) |
								(1 << (t.KW_FUNCTIONS - 36)) |
								(1 << (t.KW_SHOW - 36)) |
								(1 << (t.KW_MSCK - 36)) |
								(1 << (t.KW_REPAIR - 36)) |
								(1 << (t.KW_DIRECTORY - 36)) |
								(1 << (t.KW_CLUSTER - 36)) |
								(1 << (t.KW_DISTRIBUTE - 36)) |
								(1 << (t.KW_SORT - 36)) |
								(1 << (t.KW_LOAD - 36)) |
								(1 << (t.KW_EXPORT - 36)) |
								(1 << (t.KW_REPLICATION - 36)) |
								(1 << (t.KW_METADATA - 36)) |
								(1 << (t.KW_DATA - 36)) |
								(1 << (t.KW_INPATH - 36)))) !==
							0) ||
					(((e - 68) & -32) == 0 &&
						((1 << (e - 68)) &
							((1 << (t.KW_CHANGE - 68)) |
								(1 << (t.KW_FIRST - 68)) |
								(1 << (t.KW_AFTER - 68)) |
								(1 << (t.KW_RENAME - 68)) |
								(1 << (t.KW_COMMENT - 68)) |
								(1 << (t.KW_TINYINT - 68)) |
								(1 << (t.KW_DATETIME - 68)) |
								(1 << (t.KW_ZONE - 68)) |
								(1 << (t.KW_STRING - 68)) |
								(1 << (t.KW_STRUCT - 68)) |
								(1 << (t.KW_UNIONTYPE - 68)))) !==
							0) ||
					(((e - 101) & -32) == 0 &&
						((1 << (e - 101)) &
							((1 << (t.KW_PARTITIONED - 101)) |
								(1 << (t.KW_CLUSTERED - 101)) |
								(1 << (t.KW_SORTED - 101)) |
								(1 << (t.KW_BUCKETS - 101)) |
								(1 << (t.KW_FORMAT - 101)) |
								(1 << (t.KW_DELIMITED - 101)) |
								(1 << (t.KW_FIELDS - 101)) |
								(1 << (t.KW_TERMINATED - 101)) |
								(1 << (t.KW_ESCAPED - 101)) |
								(1 << (t.KW_COLLECTION - 101)) |
								(1 << (t.KW_ITEMS - 101)) |
								(1 << (t.KW_KEYS - 101)) |
								(1 << (t.KW_KEY_TYPE - 101)) |
								(1 << (t.KW_KILL - 101)) |
								(1 << (t.KW_LINES - 101)) |
								(1 << (t.KW_STORED - 101)) |
								(1 << (t.KW_FILEFORMAT - 101)) |
								(1 << (t.KW_INPUTFORMAT - 101)) |
								(1 << (t.KW_OUTPUTFORMAT - 101)) |
								(1 << (t.KW_INPUTDRIVER - 101)) |
								(1 << (t.KW_OUTPUTDRIVER - 101)) |
								(1 << (t.KW_ENABLE - 101)) |
								(1 << (t.KW_DISABLE - 101)) |
								(1 << (t.KW_LOCATION - 101)) |
								(1 << (t.KW_BUCKET - 101)))) !==
							0) ||
					(((e - 134) & -32) == 0 &&
						((1 << (e - 134)) &
							((1 << (t.KW_ADD - 134)) |
								(1 << (t.KW_REPLACE - 134)) |
								(1 << (t.KW_TEMPORARY - 134)) |
								(1 << (t.KW_FILE - 134)) |
								(1 << (t.KW_JAR - 134)) |
								(1 << (t.KW_EXPLAIN - 134)) |
								(1 << (t.KW_FORMATTED - 134)) |
								(1 << (t.KW_DEPENDENCY - 134)) |
								(1 << (t.KW_LOGICAL - 134)) |
								(1 << (t.KW_SERDE - 134)) |
								(1 << (t.KW_DEFERRED - 134)) |
								(1 << (t.KW_SERDEPROPERTIES - 134)) |
								(1 << (t.KW_DBPROPERTIES - 134)) |
								(1 << (t.KW_LIMIT - 134)) |
								(1 << (t.KW_OFFSET - 134)) |
								(1 << (t.KW_UNSET - 134)) |
								(1 << (t.KW_TBLPROPERTIES - 134)) |
								(1 << (t.KW_IDXPROPERTIES - 134)) |
								(1 << (t.KW_VALUE_TYPE - 134)) |
								(1 << (t.KW_ELEM_TYPE - 134)) |
								(1 << (t.KW_DEFINED - 134)))) !==
							0) ||
					(((e - 167) & -32) == 0 &&
						((1 << (e - 167)) &
							((1 << (t.KW_MAPJOIN - 167)) |
								(1 << (t.KW_STREAMTABLE - 167)) |
								(1 << (t.KW_CLUSTERSTATUS - 167)) |
								(1 << (t.KW_UTC - 167)) |
								(1 << (t.KW_UTCTIMESTAMP - 167)) |
								(1 << (t.KW_LONG - 167)) |
								(1 << (t.KW_PLUS - 167)) |
								(1 << (t.KW_VIEW - 167)) |
								(1 << (t.KW_VIEWS - 167)) |
								(1 << (t.KW_DATABASES - 167)) |
								(1 << (t.KW_MATERIALIZED - 167)) |
								(1 << (t.KW_SCHEMA - 167)) |
								(1 << (t.KW_SCHEMAS - 167)) |
								(1 << (t.KW_SSL - 167)) |
								(1 << (t.KW_UNDO - 167)) |
								(1 << (t.KW_LOCK - 167)) |
								(1 << (t.KW_LOCKS - 167)) |
								(1 << (t.KW_UNLOCK - 167)) |
								(1 << (t.KW_SHARED - 167)) |
								(1 << (t.KW_EXCLUSIVE - 167)) |
								(1 << (t.KW_UNSIGNED - 167)) |
								(1 << (t.KW_WHILE - 167)) |
								(1 << (t.KW_READ - 167)))) !==
							0) ||
					(((e - 200) & -32) == 0 &&
						((1 << (e - 200)) &
							((1 << (t.KW_PURGE - 200)) |
								(1 << (t.KW_ANALYZE - 200)) |
								(1 << (t.KW_BEFORE - 200)) |
								(1 << (t.KW_CONTINUE - 200)) |
								(1 << (t.KW_RECORDREADER - 200)) |
								(1 << (t.KW_RECORDWRITER - 200)) |
								(1 << (t.KW_SEMI - 200)) |
								(1 << (t.KW_TOUCH - 200)) |
								(1 << (t.KW_ARCHIVE - 200)) |
								(1 << (t.KW_UNARCHIVE - 200)) |
								(1 << (t.KW_COMPUTE - 200)) |
								(1 << (t.KW_STATISTICS - 200)) |
								(1 << (t.KW_USE - 200)) |
								(1 << (t.KW_OPTION - 200)) |
								(1 << (t.KW_CONCATENATE - 200)) |
								(1 << (t.KW_SHOW_DATABASE - 200)) |
								(1 << (t.KW_RESTRICT - 200)) |
								(1 << (t.KW_CASCADE - 200)) |
								(1 << (t.KW_SKEWED - 200)) |
								(1 << (t.KW_DIRECTORIES - 200)))) !==
							0) ||
					(((e - 244) & -32) == 0 &&
						((1 << (e - 244)) &
							((1 << (t.KW_SETS - 244)) |
								(1 << (t.KW_NOSCAN - 244)) |
								(1 << (t.KW_ROLE - 244)) |
								(1 << (t.KW_ROLES - 244)) |
								(1 << (t.KW_URI - 244)) |
								(1 << (t.KW_SERVER - 244)) |
								(1 << (t.KW_ADMIN - 244)) |
								(1 << (t.KW_OWNER - 244)) |
								(1 << (t.KW_PRINCIPALS - 244)) |
								(1 << (t.KW_COMPACT - 244)) |
								(1 << (t.KW_COMPACTIONS - 244)) |
								(1 << (t.KW_TRANSACTIONS - 244)) |
								(1 << (t.KW_REWRITE - 244)) |
								(1 << (t.KW_REOPTIMIZATION - 244)) |
								(1 << (t.KW_RELOAD - 244)) |
								(1 << (t.KW_YEAR - 244)) |
								(1 << (t.KW_QUERY - 244)) |
								(1 << (t.KW_QUARTER - 244)) |
								(1 << (t.KW_MONTH - 244)) |
								(1 << (t.KW_WEEK - 244)) |
								(1 << (t.KW_DAY - 244)) |
								(1 << (t.KW_DOW - 244)) |
								(1 << (t.KW_HOUR - 244)) |
								(1 << (t.KW_MINUTE - 244)) |
								(1 << (t.KW_SECOND - 244)))) !==
							0) ||
					(((e - 277) & -32) == 0 &&
						((1 << (e - 277)) &
							((1 << (t.KW_TRANSACTION - 277)) |
								(1 << (t.KW_WORK - 277)) |
								(1 << (t.KW_WRITE - 277)) |
								(1 << (t.KW_ISOLATION - 277)) |
								(1 << (t.KW_LEVEL - 277)) |
								(1 << (t.KW_SNAPSHOT - 277)) |
								(1 << (t.KW_AUTOCOMMIT - 277)) |
								(1 << (t.KW_CACHE - 277)) |
								(1 << (t.KW_ENFORCED - 277)) |
								(1 << (t.KW_VALIDATE - 277)) |
								(1 << (t.KW_NOVALIDATE - 277)) |
								(1 << (t.KW_RELY - 277)) |
								(1 << (t.KW_NORELY - 277)) |
								(1 << (t.KW_KEY - 277)) |
								(1 << (t.KW_ABORT - 277)) |
								(1 << (t.KW_MATCHED - 277)) |
								(1 << (t.KW_REPL - 277)) |
								(1 << (t.KW_DUMP - 277)) |
								(1 << (t.KW_STATUS - 277)) |
								(1 << (t.KW_VECTORIZATION - 277)) |
								(1 << (t.KW_SUMMARY - 277)))) !==
							0) ||
					(((e - 309) & -32) == 0 &&
						((1 << (e - 309)) &
							((1 << (t.KW_OPERATOR - 309)) |
								(1 << (t.KW_EXPRESSION - 309)) |
								(1 << (t.KW_DETAIL - 309)) |
								(1 << (t.KW_WAIT - 309)) |
								(1 << (t.KW_RESOURCE - 309)) |
								(1 << (t.KW_PLAN - 309)) |
								(1 << (t.KW_QUERY_PARALLELISM - 309)) |
								(1 << (t.KW_PLANS - 309)) |
								(1 << (t.KW_ACTIVATE - 309)) |
								(1 << (t.KW_DEFAULT - 309)) |
								(1 << (t.KW_CHECK - 309)) |
								(1 << (t.KW_POOL - 309)) |
								(1 << (t.KW_MOVE - 309)) |
								(1 << (t.KW_DO - 309)) |
								(1 << (t.KW_ALLOC_FRACTION - 309)) |
								(1 << (t.KW_SCHEDULING_POLICY - 309)) |
								(1 << (t.KW_PATH - 309)) |
								(1 << (t.KW_MAPPING - 309)) |
								(1 << (t.KW_WORKLOAD - 309)) |
								(1 << (t.KW_MANAGEMENT - 309)) |
								(1 << (t.KW_ACTIVE - 309)) |
								(1 << (t.KW_UNMANAGED - 309)) |
								(1 << (t.KW_DELTA - 309)) |
								(1 << (t.KW_CSV - 309)))) !==
							0) ||
					e === t.KW_JSON ||
					e === t.KW_BLOOMFILTER ||
					e === t.Identifier) &&
					((this.state = 3707),
					this._errHandler.sync(this),
					(e = this._input.LA(1)),
					e === t.KW_AS && ((this.state = 3706), this.match(t.KW_AS)),
					(this.state = 3709),
					this.identifier());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function X(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableName),
			this
		);
	}
	X.prototype = Object.create(s.ParserRuleContext.prototype);
	X.prototype.constructor = X;
	X.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	X.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	X.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableName(this) : u.visitChildren(this);
	};
	t.TableNameContext = X;
	t.prototype.tableName = function () {
		var u = new X(this, this._ctx, this.state);
		this.enterRule(u, 622, t.RULE_tableName);
		try {
			(this.state = 3717), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 437, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 3712),
						this.identifier(),
						(this.state = 3713),
						this.match(t.DOT),
						(this.state = 3714),
						this.identifier();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 3716), this.identifier();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function s1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_viewName),
			this
		);
	}
	s1.prototype = Object.create(s.ParserRuleContext.prototype);
	s1.prototype.constructor = s1;
	s1.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	s1.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	s1.prototype.accept = function (u) {
		return u instanceof d ? u.visitViewName(this) : u.visitChildren(this);
	};
	t.ViewNameContext = s1;
	t.prototype.viewName = function () {
		var u = new s1(this, this._ctx, this.state);
		this.enterRule(u, 624, t.RULE_viewName);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3722), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 438, this._ctx);
			e === 1 && ((this.state = 3719), this.identifier(), (this.state = 3720), this.match(t.DOT)),
				(this.state = 3724),
				this.identifier();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function pi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_subQuerySource),
			this
		);
	}
	pi.prototype = Object.create(s.ParserRuleContext.prototype);
	pi.prototype.constructor = pi;
	pi.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	pi.prototype.queryStatementExpression = function () {
		return this.getTypedRuleContext(Un, 0);
	};
	pi.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	pi.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	pi.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	pi.prototype.accept = function (u) {
		return u instanceof d ? u.visitSubQuerySource(this) : u.visitChildren(this);
	};
	t.SubQuerySourceContext = pi;
	t.prototype.subQuerySource = function () {
		var u = new pi(this, this._ctx, this.state);
		this.enterRule(u, 626, t.RULE_subQuerySource);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3726),
				this.match(t.LPAREN),
				(this.state = 3727),
				this.queryStatementExpression(),
				(this.state = 3728),
				this.match(t.RPAREN),
				(this.state = 3730),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_AS && ((this.state = 3729), this.match(t.KW_AS)),
				(this.state = 3732),
				this.identifier();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function lr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_partitioningSpec),
			this
		);
	}
	lr.prototype = Object.create(s.ParserRuleContext.prototype);
	lr.prototype.constructor = lr;
	lr.prototype.partitionByClause = function () {
		return this.getTypedRuleContext(l1, 0);
	};
	lr.prototype.orderByClause = function () {
		return this.getTypedRuleContext(fr, 0);
	};
	lr.prototype.distributeByClause = function () {
		return this.getTypedRuleContext(Yn, 0);
	};
	lr.prototype.sortByClause = function () {
		return this.getTypedRuleContext(_r, 0);
	};
	lr.prototype.clusterByClause = function () {
		return this.getTypedRuleContext(Bn, 0);
	};
	lr.prototype.accept = function (u) {
		return u instanceof d ? u.visitPartitioningSpec(this) : u.visitChildren(this);
	};
	t.PartitioningSpecContext = lr;
	t.prototype.partitioningSpec = function () {
		var u = new lr(this, this._ctx, this.state);
		this.enterRule(u, 628, t.RULE_partitioningSpec);
		var e = 0;
		try {
			switch (((this.state = 3745), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_PARTITION:
					this.enterOuterAlt(u, 1),
						(this.state = 3734),
						this.partitionByClause(),
						(this.state = 3736),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_ORDER && ((this.state = 3735), this.orderByClause());
					break;
				case t.KW_ORDER:
					this.enterOuterAlt(u, 2), (this.state = 3738), this.orderByClause();
					break;
				case t.KW_DISTRIBUTE:
					this.enterOuterAlt(u, 3),
						(this.state = 3739),
						this.distributeByClause(),
						(this.state = 3741),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						e === t.KW_SORT && ((this.state = 3740), this.sortByClause());
					break;
				case t.KW_SORT:
					this.enterOuterAlt(u, 4), (this.state = 3743), this.sortByClause();
					break;
				case t.KW_CLUSTER:
					this.enterOuterAlt(u, 5), (this.state = 3744), this.clusterByClause();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function a1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_partitionTableFunctionSource),
			this
		);
	}
	a1.prototype = Object.create(s.ParserRuleContext.prototype);
	a1.prototype.constructor = a1;
	a1.prototype.subQuerySource = function () {
		return this.getTypedRuleContext(pi, 0);
	};
	a1.prototype.tableSource = function () {
		return this.getTypedRuleContext(ci, 0);
	};
	a1.prototype.partitionedTableFunction = function () {
		return this.getTypedRuleContext(wu, 0);
	};
	a1.prototype.accept = function (u) {
		return u instanceof d ? u.visitPartitionTableFunctionSource(this) : u.visitChildren(this);
	};
	t.PartitionTableFunctionSourceContext = a1;
	t.prototype.partitionTableFunctionSource = function () {
		var u = new a1(this, this._ctx, this.state);
		this.enterRule(u, 630, t.RULE_partitionTableFunctionSource);
		try {
			(this.state = 3750), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 443, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 3747), this.subQuerySource();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 3748), this.tableSource();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 3749), this.partitionedTableFunction();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function wu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_partitionedTableFunction),
			this
		);
	}
	wu.prototype = Object.create(s.ParserRuleContext.prototype);
	wu.prototype.constructor = wu;
	wu.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	wu.prototype.LPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.LPAREN) : this.getToken(t.LPAREN, u);
	};
	wu.prototype.KW_ON = function () {
		return this.getToken(t.KW_ON, 0);
	};
	wu.prototype.partitionTableFunctionSource = function () {
		return this.getTypedRuleContext(a1, 0);
	};
	wu.prototype.RPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.RPAREN) : this.getToken(t.RPAREN, u);
	};
	wu.prototype.partitioningSpec = function () {
		return this.getTypedRuleContext(lr, 0);
	};
	wu.prototype.Identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.Identifier) : this.getToken(t.Identifier, u);
	};
	wu.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	wu.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	wu.prototype.accept = function (u) {
		return u instanceof d ? u.visitPartitionedTableFunction(this) : u.visitChildren(this);
	};
	t.PartitionedTableFunctionContext = wu;
	t.prototype.partitionedTableFunction = function () {
		var u = new wu(this, this._ctx, this.state);
		this.enterRule(u, 632, t.RULE_partitionedTableFunction);
		var e = 0;
		try {
			if (
				(this.enterOuterAlt(u, 1),
				(this.state = 3752),
				this.identifier(),
				(this.state = 3753),
				this.match(t.LPAREN),
				(this.state = 3754),
				this.match(t.KW_ON),
				(this.state = 3755),
				this.partitionTableFunctionSource(),
				(this.state = 3757),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				(e === t.KW_ORDER ||
					(((e - 35) & -32) == 0 &&
						((1 << (e - 35)) &
							((1 << (t.KW_PARTITION - 35)) |
								(1 << (t.KW_CLUSTER - 35)) |
								(1 << (t.KW_DISTRIBUTE - 35)) |
								(1 << (t.KW_SORT - 35)))) !==
							0)) &&
					((this.state = 3756), this.partitioningSpec()),
				(this.state = 3774),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.Identifier)
			)
				for (
					this.state = 3759,
						this.match(t.Identifier),
						this.state = 3760,
						this.match(t.LPAREN),
						this.state = 3761,
						this.expression(0),
						this.state = 3762,
						this.match(t.RPAREN),
						this.state = 3771,
						this._errHandler.sync(this),
						e = this._input.LA(1);
					e === t.COMMA;

				)
					(this.state = 3763),
						this.match(t.COMMA),
						(this.state = 3764),
						this.match(t.Identifier),
						(this.state = 3765),
						this.match(t.LPAREN),
						(this.state = 3766),
						this.expression(0),
						(this.state = 3767),
						this.match(t.RPAREN),
						(this.state = 3773),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
			(this.state = 3776), this.match(t.RPAREN), (this.state = 3778), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 447, this._ctx);
			i === 1 && ((this.state = 3777), this.identifier());
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Vn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_whereClause),
			this
		);
	}
	Vn.prototype = Object.create(s.ParserRuleContext.prototype);
	Vn.prototype.constructor = Vn;
	Vn.prototype.KW_WHERE = function () {
		return this.getToken(t.KW_WHERE, 0);
	};
	Vn.prototype.searchCondition = function () {
		return this.getTypedRuleContext(k3, 0);
	};
	Vn.prototype.accept = function (u) {
		return u instanceof d ? u.visitWhereClause(this) : u.visitChildren(this);
	};
	t.WhereClauseContext = Vn;
	t.prototype.whereClause = function () {
		var u = new Vn(this, this._ctx, this.state);
		this.enterRule(u, 634, t.RULE_whereClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3780),
				this.match(t.KW_WHERE),
				(this.state = 3781),
				this.searchCondition();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function k3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_searchCondition),
			this
		);
	}
	k3.prototype = Object.create(s.ParserRuleContext.prototype);
	k3.prototype.constructor = k3;
	k3.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	k3.prototype.accept = function (u) {
		return u instanceof d ? u.visitSearchCondition(this) : u.visitChildren(this);
	};
	t.SearchConditionContext = k3;
	t.prototype.searchCondition = function () {
		var u = new k3(this, this._ctx, this.state);
		this.enterRule(u, 636, t.RULE_searchCondition);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3783), this.expression(0);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function k2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_valuesClause),
			this
		);
	}
	k2.prototype = Object.create(s.ParserRuleContext.prototype);
	k2.prototype.constructor = k2;
	k2.prototype.KW_VALUES = function () {
		return this.getToken(t.KW_VALUES, 0);
	};
	k2.prototype.valuesTableConstructor = function () {
		return this.getTypedRuleContext(_p, 0);
	};
	k2.prototype.accept = function (u) {
		return u instanceof d ? u.visitValuesClause(this) : u.visitChildren(this);
	};
	t.ValuesClauseContext = k2;
	t.prototype.valuesClause = function () {
		var u = new k2(this, this._ctx, this.state);
		this.enterRule(u, 638, t.RULE_valuesClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3785),
				this.match(t.KW_VALUES),
				(this.state = 3786),
				this.valuesTableConstructor();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _p(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_valuesTableConstructor),
			this
		);
	}
	_p.prototype = Object.create(s.ParserRuleContext.prototype);
	_p.prototype.constructor = _p;
	_p.prototype.valueRowConstructor = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(o1) : this.getTypedRuleContext(o1, u);
	};
	_p.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	_p.prototype.accept = function (u) {
		return u instanceof d ? u.visitValuesTableConstructor(this) : u.visitChildren(this);
	};
	t.ValuesTableConstructorContext = _p;
	t.prototype.valuesTableConstructor = function () {
		var u = new _p(this, this._ctx, this.state);
		this.enterRule(u, 640, t.RULE_valuesTableConstructor);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3788,
					this.valueRowConstructor(),
					this.state = 3793,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3789),
					this.match(t.COMMA),
					(this.state = 3790),
					this.valueRowConstructor(),
					(this.state = 3795),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function o1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_valueRowConstructor),
			this
		);
	}
	o1.prototype = Object.create(s.ParserRuleContext.prototype);
	o1.prototype.constructor = o1;
	o1.prototype.expressionsInParenthesis = function () {
		return this.getTypedRuleContext(hi, 0);
	};
	o1.prototype.accept = function (u) {
		return u instanceof d ? u.visitValueRowConstructor(this) : u.visitChildren(this);
	};
	t.ValueRowConstructorContext = o1;
	t.prototype.valueRowConstructor = function () {
		var u = new o1(this, this._ctx, this.state);
		this.enterRule(u, 642, t.RULE_valueRowConstructor);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3796), this.expressionsInParenthesis();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function vt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_virtualTableSource),
			this
		);
	}
	vt.prototype = Object.create(s.ParserRuleContext.prototype);
	vt.prototype.constructor = vt;
	vt.prototype.KW_TABLE = function () {
		return this.getToken(t.KW_TABLE, 0);
	};
	vt.prototype.LPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.LPAREN) : this.getToken(t.LPAREN, u);
	};
	vt.prototype.valuesClause = function () {
		return this.getTypedRuleContext(k2, 0);
	};
	vt.prototype.RPAREN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.RPAREN) : this.getToken(t.RPAREN, u);
	};
	vt.prototype.tableAlias = function () {
		return this.getTypedRuleContext(fp, 0);
	};
	vt.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	vt.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	vt.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	vt.prototype.accept = function (u) {
		return u instanceof d ? u.visitVirtualTableSource(this) : u.visitChildren(this);
	};
	t.VirtualTableSourceContext = vt;
	t.prototype.virtualTableSource = function () {
		var u = new vt(this, this._ctx, this.state);
		this.enterRule(u, 644, t.RULE_virtualTableSource);
		var e = 0;
		try {
			if (
				(this.enterOuterAlt(u, 1),
				(this.state = 3798),
				this.match(t.KW_TABLE),
				(this.state = 3799),
				this.match(t.LPAREN),
				(this.state = 3800),
				this.valuesClause(),
				(this.state = 3801),
				this.match(t.RPAREN),
				(this.state = 3803),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_AS && ((this.state = 3802), this.match(t.KW_AS)),
				(this.state = 3805),
				this.tableAlias(),
				(this.state = 3815),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.LPAREN)
			)
				for (
					this.state = 3806,
						this.match(t.LPAREN),
						this.state = 3807,
						this.identifier(),
						this.state = 3812,
						this._errHandler.sync(this),
						e = this._input.LA(1);
					e === t.COMMA;

				)
					(this.state = 3808),
						this.match(t.COMMA),
						(this.state = 3809),
						this.identifier(),
						(this.state = 3814),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
			(this.state = 3817), this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function V2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_groupByClause),
			this
		);
	}
	V2.prototype = Object.create(s.ParserRuleContext.prototype);
	V2.prototype.constructor = V2;
	V2.prototype.KW_GROUP = function () {
		return this.getToken(t.KW_GROUP, 0);
	};
	V2.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	V2.prototype.groupby_expression = function () {
		return this.getTypedRuleContext(c1, 0);
	};
	V2.prototype.accept = function (u) {
		return u instanceof d ? u.visitGroupByClause(this) : u.visitChildren(this);
	};
	t.GroupByClauseContext = V2;
	t.prototype.groupByClause = function () {
		var u = new V2(this, this._ctx, this.state);
		this.enterRule(u, 646, t.RULE_groupByClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3819),
				this.match(t.KW_GROUP),
				(this.state = 3820),
				this.match(t.KW_BY),
				(this.state = 3821),
				this.groupby_expression();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function c1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_groupby_expression),
			this
		);
	}
	c1.prototype = Object.create(s.ParserRuleContext.prototype);
	c1.prototype.constructor = c1;
	c1.prototype.rollupStandard = function () {
		return this.getTypedRuleContext(dr, 0);
	};
	c1.prototype.rollupOldSyntax = function () {
		return this.getTypedRuleContext(_t, 0);
	};
	c1.prototype.groupByEmpty = function () {
		return this.getTypedRuleContext(Ep, 0);
	};
	c1.prototype.accept = function (u) {
		return u instanceof d ? u.visitGroupby_expression(this) : u.visitChildren(this);
	};
	t.Groupby_expressionContext = c1;
	t.prototype.groupby_expression = function () {
		var u = new c1(this, this._ctx, this.state);
		this.enterRule(u, 648, t.RULE_groupby_expression);
		try {
			(this.state = 3826), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 452, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 3823), this.rollupStandard();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 3824), this.rollupOldSyntax();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 3825), this.groupByEmpty();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ep(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_groupByEmpty),
			this
		);
	}
	Ep.prototype = Object.create(s.ParserRuleContext.prototype);
	Ep.prototype.constructor = Ep;
	Ep.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Ep.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Ep.prototype.accept = function (u) {
		return u instanceof d ? u.visitGroupByEmpty(this) : u.visitChildren(this);
	};
	t.GroupByEmptyContext = Ep;
	t.prototype.groupByEmpty = function () {
		var u = new Ep(this, this._ctx, this.state);
		this.enterRule(u, 650, t.RULE_groupByEmpty);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3828),
				this.match(t.LPAREN),
				(this.state = 3829),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function dr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rollupStandard),
			this
		);
	}
	dr.prototype = Object.create(s.ParserRuleContext.prototype);
	dr.prototype.constructor = dr;
	dr.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	dr.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	dr.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	dr.prototype.KW_ROLLUP = function () {
		return this.getToken(t.KW_ROLLUP, 0);
	};
	dr.prototype.KW_CUBE = function () {
		return this.getToken(t.KW_CUBE, 0);
	};
	dr.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	dr.prototype.accept = function (u) {
		return u instanceof d ? u.visitRollupStandard(this) : u.visitChildren(this);
	};
	t.RollupStandardContext = dr;
	t.prototype.rollupStandard = function () {
		var u = new dr(this, this._ctx, this.state);
		this.enterRule(u, 652, t.RULE_rollupStandard);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3831,
					e = this._input.LA(1),
					e === t.KW_ROLLUP || e === t.KW_CUBE
						? (this._errHandler.reportMatch(this), this.consume())
						: this._errHandler.recoverInline(this),
					this.state = 3832,
					this.match(t.LPAREN),
					this.state = 3833,
					this.expression(0),
					this.state = 3838,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3834),
					this.match(t.COMMA),
					(this.state = 3835),
					this.expression(0),
					(this.state = 3840),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 3841), this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _t(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rollupOldSyntax),
			this
		);
	}
	_t.prototype = Object.create(s.ParserRuleContext.prototype);
	_t.prototype.constructor = _t;
	_t.prototype.expressionsNotInParenthesis = function () {
		return this.getTypedRuleContext(Y2, 0);
	};
	_t.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	_t.prototype.KW_ROLLUP = function () {
		return this.getToken(t.KW_ROLLUP, 0);
	};
	_t.prototype.KW_CUBE = function () {
		return this.getToken(t.KW_CUBE, 0);
	};
	_t.prototype.KW_GROUPING = function () {
		return this.getToken(t.KW_GROUPING, 0);
	};
	_t.prototype.KW_SETS = function () {
		return this.getToken(t.KW_SETS, 0);
	};
	_t.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	_t.prototype.groupingSetExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(p1) : this.getTypedRuleContext(p1, u);
	};
	_t.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	_t.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	_t.prototype.accept = function (u) {
		return u instanceof d ? u.visitRollupOldSyntax(this) : u.visitChildren(this);
	};
	t.RollupOldSyntaxContext = _t;
	t.prototype.rollupOldSyntax = function () {
		var u = new _t(this, this._ctx, this.state);
		this.enterRule(u, 654, t.RULE_rollupOldSyntax);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3843),
				this.expressionsNotInParenthesis(),
				(this.state = 3848),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 454, this._ctx);
			if (
				(i === 1
					? ((this.state = 3844), this.match(t.KW_WITH), (this.state = 3845), this.match(t.KW_ROLLUP))
					: i === 2 &&
					  ((this.state = 3846), this.match(t.KW_WITH), (this.state = 3847), this.match(t.KW_CUBE)),
				(this.state = 3863),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_GROUPING)
			) {
				for (
					this.state = 3850,
						this.match(t.KW_GROUPING),
						this.state = 3851,
						this.match(t.KW_SETS),
						this.state = 3852,
						this.match(t.LPAREN),
						this.state = 3853,
						this.groupingSetExpression(),
						this.state = 3858,
						this._errHandler.sync(this),
						e = this._input.LA(1);
					e === t.COMMA;

				)
					(this.state = 3854),
						this.match(t.COMMA),
						(this.state = 3855),
						this.groupingSetExpression(),
						(this.state = 3860),
						this._errHandler.sync(this),
						(e = this._input.LA(1));
				(this.state = 3861), this.match(t.RPAREN);
			}
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function p1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_groupingSetExpression),
			this
		);
	}
	p1.prototype = Object.create(s.ParserRuleContext.prototype);
	p1.prototype.constructor = p1;
	p1.prototype.groupingSetExpressionMultiple = function () {
		return this.getTypedRuleContext(B2, 0);
	};
	p1.prototype.groupingExpressionSingle = function () {
		return this.getTypedRuleContext(V3, 0);
	};
	p1.prototype.accept = function (u) {
		return u instanceof d ? u.visitGroupingSetExpression(this) : u.visitChildren(this);
	};
	t.GroupingSetExpressionContext = p1;
	t.prototype.groupingSetExpression = function () {
		var u = new p1(this, this._ctx, this.state);
		this.enterRule(u, 656, t.RULE_groupingSetExpression);
		try {
			(this.state = 3867), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 457, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 3865), this.groupingSetExpressionMultiple();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 3866), this.groupingExpressionSingle();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function B2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_groupingSetExpressionMultiple),
			this
		);
	}
	B2.prototype = Object.create(s.ParserRuleContext.prototype);
	B2.prototype.constructor = B2;
	B2.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	B2.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	B2.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	B2.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	B2.prototype.accept = function (u) {
		return u instanceof d ? u.visitGroupingSetExpressionMultiple(this) : u.visitChildren(this);
	};
	t.GroupingSetExpressionMultipleContext = B2;
	t.prototype.groupingSetExpressionMultiple = function () {
		var u = new B2(this, this._ctx, this.state);
		this.enterRule(u, 658, t.RULE_groupingSetExpressionMultiple);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3869,
					this.match(t.LPAREN),
					this.state = 3871,
					this._errHandler.sync(this),
					e = this._input.LA(1),
					(((e & -32) == 0 &&
						((1 << e) &
							((1 << t.KW_TRUE) |
								(1 << t.KW_FALSE) |
								(1 << t.KW_NOT) |
								(1 << t.KW_IF) |
								(1 << t.KW_EXISTS) |
								(1 << t.KW_ASC) |
								(1 << t.KW_DESC) |
								(1 << t.KW_NULLS) |
								(1 << t.KW_LAST) |
								(1 << t.KW_OVERWRITE))) !==
							0) ||
						(((e - 36) & -32) == 0 &&
							((1 << (e - 36)) &
								((1 << (t.KW_PARTITIONS - 36)) |
									(1 << (t.KW_TABLES - 36)) |
									(1 << (t.KW_COLUMNS - 36)) |
									(1 << (t.KW_INDEX - 36)) |
									(1 << (t.KW_INDEXES - 36)) |
									(1 << (t.KW_REBUILD - 36)) |
									(1 << (t.KW_FUNCTIONS - 36)) |
									(1 << (t.KW_SHOW - 36)) |
									(1 << (t.KW_MSCK - 36)) |
									(1 << (t.KW_REPAIR - 36)) |
									(1 << (t.KW_DIRECTORY - 36)) |
									(1 << (t.KW_CLUSTER - 36)) |
									(1 << (t.KW_DISTRIBUTE - 36)) |
									(1 << (t.KW_SORT - 36)) |
									(1 << (t.KW_LOAD - 36)) |
									(1 << (t.KW_EXPORT - 36)) |
									(1 << (t.KW_REPLICATION - 36)) |
									(1 << (t.KW_METADATA - 36)) |
									(1 << (t.KW_DATA - 36)) |
									(1 << (t.KW_INPATH - 36)) |
									(1 << (t.KW_NULL - 36)))) !==
								0) ||
						(((e - 68) & -32) == 0 &&
							((1 << (e - 68)) &
								((1 << (t.KW_CHANGE - 68)) |
									(1 << (t.KW_FIRST - 68)) |
									(1 << (t.KW_AFTER - 68)) |
									(1 << (t.KW_RENAME - 68)) |
									(1 << (t.KW_COMMENT - 68)) |
									(1 << (t.KW_BOOLEAN - 68)) |
									(1 << (t.KW_TINYINT - 68)) |
									(1 << (t.KW_SMALLINT - 68)) |
									(1 << (t.KW_INT - 68)) |
									(1 << (t.KW_BIGINT - 68)) |
									(1 << (t.KW_FLOAT - 68)) |
									(1 << (t.KW_DOUBLE - 68)) |
									(1 << (t.KW_DATE - 68)) |
									(1 << (t.KW_DATETIME - 68)) |
									(1 << (t.KW_TIMESTAMP - 68)) |
									(1 << (t.KW_TIMESTAMPLOCALTZ - 68)) |
									(1 << (t.KW_ZONE - 68)) |
									(1 << (t.KW_INTERVAL - 68)) |
									(1 << (t.KW_STRING - 68)) |
									(1 << (t.KW_ARRAY - 68)) |
									(1 << (t.KW_STRUCT - 68)) |
									(1 << (t.KW_MAP - 68)) |
									(1 << (t.KW_UNIONTYPE - 68)))) !==
								0) ||
						(((e - 101) & -32) == 0 &&
							((1 << (e - 101)) &
								((1 << (t.KW_PARTITIONED - 101)) |
									(1 << (t.KW_CLUSTERED - 101)) |
									(1 << (t.KW_SORTED - 101)) |
									(1 << (t.KW_BUCKETS - 101)) |
									(1 << (t.KW_FORMAT - 101)) |
									(1 << (t.KW_DELIMITED - 101)) |
									(1 << (t.KW_FIELDS - 101)) |
									(1 << (t.KW_TERMINATED - 101)) |
									(1 << (t.KW_ESCAPED - 101)) |
									(1 << (t.KW_COLLECTION - 101)) |
									(1 << (t.KW_ITEMS - 101)) |
									(1 << (t.KW_KEYS - 101)) |
									(1 << (t.KW_KEY_TYPE - 101)) |
									(1 << (t.KW_KILL - 101)) |
									(1 << (t.KW_LINES - 101)) |
									(1 << (t.KW_STORED - 101)) |
									(1 << (t.KW_FILEFORMAT - 101)) |
									(1 << (t.KW_INPUTFORMAT - 101)) |
									(1 << (t.KW_OUTPUTFORMAT - 101)) |
									(1 << (t.KW_INPUTDRIVER - 101)) |
									(1 << (t.KW_OUTPUTDRIVER - 101)) |
									(1 << (t.KW_ENABLE - 101)) |
									(1 << (t.KW_DISABLE - 101)) |
									(1 << (t.KW_LOCATION - 101)) |
									(1 << (t.KW_BUCKET - 101)))) !==
								0) ||
						(((e - 133) & -32) == 0 &&
							((1 << (e - 133)) &
								((1 << (t.KW_CAST - 133)) |
									(1 << (t.KW_ADD - 133)) |
									(1 << (t.KW_REPLACE - 133)) |
									(1 << (t.KW_TEMPORARY - 133)) |
									(1 << (t.KW_FILE - 133)) |
									(1 << (t.KW_JAR - 133)) |
									(1 << (t.KW_EXPLAIN - 133)) |
									(1 << (t.KW_FORMATTED - 133)) |
									(1 << (t.KW_DEPENDENCY - 133)) |
									(1 << (t.KW_LOGICAL - 133)) |
									(1 << (t.KW_SERDE - 133)) |
									(1 << (t.KW_DEFERRED - 133)) |
									(1 << (t.KW_SERDEPROPERTIES - 133)) |
									(1 << (t.KW_DBPROPERTIES - 133)) |
									(1 << (t.KW_LIMIT - 133)) |
									(1 << (t.KW_OFFSET - 133)) |
									(1 << (t.KW_UNSET - 133)) |
									(1 << (t.KW_TBLPROPERTIES - 133)) |
									(1 << (t.KW_IDXPROPERTIES - 133)) |
									(1 << (t.KW_VALUE_TYPE - 133)) |
									(1 << (t.KW_ELEM_TYPE - 133)) |
									(1 << (t.KW_DEFINED - 133)) |
									(1 << (t.KW_CASE - 133)))) !==
								0) ||
						(((e - 167) & -32) == 0 &&
							((1 << (e - 167)) &
								((1 << (t.KW_MAPJOIN - 167)) |
									(1 << (t.KW_STREAMTABLE - 167)) |
									(1 << (t.KW_CLUSTERSTATUS - 167)) |
									(1 << (t.KW_UTC - 167)) |
									(1 << (t.KW_UTCTIMESTAMP - 167)) |
									(1 << (t.KW_LONG - 167)) |
									(1 << (t.KW_PLUS - 167)) |
									(1 << (t.KW_VIEW - 167)) |
									(1 << (t.KW_VIEWS - 167)) |
									(1 << (t.KW_DATABASES - 167)) |
									(1 << (t.KW_MATERIALIZED - 167)) |
									(1 << (t.KW_SCHEMA - 167)) |
									(1 << (t.KW_SCHEMAS - 167)) |
									(1 << (t.KW_SSL - 167)) |
									(1 << (t.KW_UNDO - 167)) |
									(1 << (t.KW_LOCK - 167)) |
									(1 << (t.KW_LOCKS - 167)) |
									(1 << (t.KW_UNLOCK - 167)) |
									(1 << (t.KW_SHARED - 167)) |
									(1 << (t.KW_EXCLUSIVE - 167)) |
									(1 << (t.KW_UNSIGNED - 167)) |
									(1 << (t.KW_WHILE - 167)) |
									(1 << (t.KW_READ - 167)))) !==
								0) ||
						(((e - 200) & -32) == 0 &&
							((1 << (e - 200)) &
								((1 << (t.KW_PURGE - 200)) |
									(1 << (t.KW_ANALYZE - 200)) |
									(1 << (t.KW_BEFORE - 200)) |
									(1 << (t.KW_BINARY - 200)) |
									(1 << (t.KW_CONTINUE - 200)) |
									(1 << (t.KW_RECORDREADER - 200)) |
									(1 << (t.KW_RECORDWRITER - 200)) |
									(1 << (t.KW_SEMI - 200)) |
									(1 << (t.KW_TOUCH - 200)) |
									(1 << (t.KW_ARCHIVE - 200)) |
									(1 << (t.KW_UNARCHIVE - 200)) |
									(1 << (t.KW_COMPUTE - 200)) |
									(1 << (t.KW_STATISTICS - 200)) |
									(1 << (t.KW_USE - 200)) |
									(1 << (t.KW_OPTION - 200)) |
									(1 << (t.KW_CONCATENATE - 200)) |
									(1 << (t.KW_SHOW_DATABASE - 200)) |
									(1 << (t.KW_RESTRICT - 200)) |
									(1 << (t.KW_CASCADE - 200)) |
									(1 << (t.KW_SKEWED - 200)) |
									(1 << (t.KW_DIRECTORIES - 200)))) !==
								0) ||
						(((e - 238) & -32) == 0 &&
							((1 << (e - 238)) &
								((1 << (t.KW_CURRENT_DATE - 238)) |
									(1 << (t.KW_CURRENT_TIMESTAMP - 238)) |
									(1 << (t.KW_GROUPING - 238)) |
									(1 << (t.KW_SETS - 238)) |
									(1 << (t.KW_NOSCAN - 238)) |
									(1 << (t.KW_ROLE - 238)) |
									(1 << (t.KW_ROLES - 238)) |
									(1 << (t.KW_URI - 238)) |
									(1 << (t.KW_SERVER - 238)) |
									(1 << (t.KW_ADMIN - 238)) |
									(1 << (t.KW_OWNER - 238)) |
									(1 << (t.KW_PRINCIPALS - 238)) |
									(1 << (t.KW_COMPACT - 238)) |
									(1 << (t.KW_COMPACTIONS - 238)) |
									(1 << (t.KW_TRANSACTIONS - 238)) |
									(1 << (t.KW_REWRITE - 238)) |
									(1 << (t.KW_REOPTIMIZATION - 238)) |
									(1 << (t.KW_RELOAD - 238)) |
									(1 << (t.KW_YEAR - 238)) |
									(1 << (t.KW_QUERY - 238)) |
									(1 << (t.KW_QUARTER - 238)) |
									(1 << (t.KW_MONTH - 238)))) !==
								0) ||
						(((e - 270) & -32) == 0 &&
							((1 << (e - 270)) &
								((1 << (t.KW_WEEK - 270)) |
									(1 << (t.KW_DAY - 270)) |
									(1 << (t.KW_DOW - 270)) |
									(1 << (t.KW_HOUR - 270)) |
									(1 << (t.KW_MINUTE - 270)) |
									(1 << (t.KW_SECOND - 270)) |
									(1 << (t.KW_TRANSACTION - 270)) |
									(1 << (t.KW_WORK - 270)) |
									(1 << (t.KW_WRITE - 270)) |
									(1 << (t.KW_ISOLATION - 270)) |
									(1 << (t.KW_LEVEL - 270)) |
									(1 << (t.KW_SNAPSHOT - 270)) |
									(1 << (t.KW_AUTOCOMMIT - 270)) |
									(1 << (t.KW_CACHE - 270)) |
									(1 << (t.KW_ENFORCED - 270)) |
									(1 << (t.KW_VALIDATE - 270)) |
									(1 << (t.KW_NOVALIDATE - 270)) |
									(1 << (t.KW_RELY - 270)) |
									(1 << (t.KW_NORELY - 270)) |
									(1 << (t.KW_KEY - 270)) |
									(1 << (t.KW_ABORT - 270)) |
									(1 << (t.KW_EXTRACT - 270)) |
									(1 << (t.KW_FLOOR - 270)))) !==
								0) ||
						(((e - 303) & -32) == 0 &&
							((1 << (e - 303)) &
								((1 << (t.KW_MATCHED - 303)) |
									(1 << (t.KW_REPL - 303)) |
									(1 << (t.KW_DUMP - 303)) |
									(1 << (t.KW_STATUS - 303)) |
									(1 << (t.KW_VECTORIZATION - 303)) |
									(1 << (t.KW_SUMMARY - 303)) |
									(1 << (t.KW_OPERATOR - 303)) |
									(1 << (t.KW_EXPRESSION - 303)) |
									(1 << (t.KW_DETAIL - 303)) |
									(1 << (t.KW_WAIT - 303)) |
									(1 << (t.KW_RESOURCE - 303)) |
									(1 << (t.KW_PLAN - 303)) |
									(1 << (t.KW_QUERY_PARALLELISM - 303)) |
									(1 << (t.KW_PLANS - 303)) |
									(1 << (t.KW_ACTIVATE - 303)) |
									(1 << (t.KW_DEFAULT - 303)) |
									(1 << (t.KW_CHECK - 303)) |
									(1 << (t.KW_POOL - 303)) |
									(1 << (t.KW_MOVE - 303)) |
									(1 << (t.KW_DO - 303)) |
									(1 << (t.KW_ALLOC_FRACTION - 303)) |
									(1 << (t.KW_SCHEDULING_POLICY - 303)) |
									(1 << (t.KW_PATH - 303)) |
									(1 << (t.KW_MAPPING - 303)) |
									(1 << (t.KW_WORKLOAD - 303)) |
									(1 << (t.KW_MANAGEMENT - 303)) |
									(1 << (t.KW_ACTIVE - 303)) |
									(1 << (t.KW_UNMANAGED - 303)))) !==
								0) ||
						(((e - 338) & -32) == 0 &&
							((1 << (e - 338)) &
								((1 << (t.KW_DELTA - 338)) |
									(1 << (t.KW_CSV - 338)) |
									(1 << (t.KW_JSON - 338)) |
									(1 << (t.KW_BLOOMFILTER - 338)) |
									(1 << (t.LPAREN - 338)) |
									(1 << (t.PLUS - 338)) |
									(1 << (t.MINUS - 338)) |
									(1 << (t.TILDE - 338)))) !==
								0) ||
						(((e - 374) & -32) == 0 &&
							((1 << (e - 374)) &
								((1 << (t.StringLiteral - 374)) |
									(1 << (t.IntegralLiteral - 374)) |
									(1 << (t.NumberLiteral - 374)) |
									(1 << (t.Number - 374)) |
									(1 << (t.Identifier - 374)) |
									(1 << (t.CharSetName - 374)))) !==
								0)) &&
						((this.state = 3870), this.expression(0)),
					this.state = 3877,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3873),
					this.match(t.COMMA),
					(this.state = 3874),
					this.expression(0),
					(this.state = 3879),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 3880), this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function V3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_groupingExpressionSingle),
			this
		);
	}
	V3.prototype = Object.create(s.ParserRuleContext.prototype);
	V3.prototype.constructor = V3;
	V3.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	V3.prototype.accept = function (u) {
		return u instanceof d ? u.visitGroupingExpressionSingle(this) : u.visitChildren(this);
	};
	t.GroupingExpressionSingleContext = V3;
	t.prototype.groupingExpressionSingle = function () {
		var u = new V3(this, this._ctx, this.state);
		this.enterRule(u, 660, t.RULE_groupingExpressionSingle);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3882), this.expression(0);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function h1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_havingClause),
			this
		);
	}
	h1.prototype = Object.create(s.ParserRuleContext.prototype);
	h1.prototype.constructor = h1;
	h1.prototype.KW_HAVING = function () {
		return this.getToken(t.KW_HAVING, 0);
	};
	h1.prototype.havingCondition = function () {
		return this.getTypedRuleContext(B3, 0);
	};
	h1.prototype.accept = function (u) {
		return u instanceof d ? u.visitHavingClause(this) : u.visitChildren(this);
	};
	t.HavingClauseContext = h1;
	t.prototype.havingClause = function () {
		var u = new h1(this, this._ctx, this.state);
		this.enterRule(u, 662, t.RULE_havingClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3884),
				this.match(t.KW_HAVING),
				(this.state = 3885),
				this.havingCondition();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function B3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_havingCondition),
			this
		);
	}
	B3.prototype = Object.create(s.ParserRuleContext.prototype);
	B3.prototype.constructor = B3;
	B3.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	B3.prototype.accept = function (u) {
		return u instanceof d ? u.visitHavingCondition(this) : u.visitChildren(this);
	};
	t.HavingConditionContext = B3;
	t.prototype.havingCondition = function () {
		var u = new B3(this, this._ctx, this.state);
		this.enterRule(u, 664, t.RULE_havingCondition);
		try {
			this.enterOuterAlt(u, 1), (this.state = 3887), this.expression(0);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function hi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_expressionsInParenthesis),
			this
		);
	}
	hi.prototype = Object.create(s.ParserRuleContext.prototype);
	hi.prototype.constructor = hi;
	hi.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	hi.prototype.expressionsNotInParenthesis = function () {
		return this.getTypedRuleContext(Y2, 0);
	};
	hi.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	hi.prototype.accept = function (u) {
		return u instanceof d ? u.visitExpressionsInParenthesis(this) : u.visitChildren(this);
	};
	t.ExpressionsInParenthesisContext = hi;
	t.prototype.expressionsInParenthesis = function () {
		var u = new hi(this, this._ctx, this.state);
		this.enterRule(u, 666, t.RULE_expressionsInParenthesis);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3889),
				this.match(t.LPAREN),
				(this.state = 3890),
				this.expressionsNotInParenthesis(),
				(this.state = 3891),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Y2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_expressionsNotInParenthesis),
			this
		);
	}
	Y2.prototype = Object.create(s.ParserRuleContext.prototype);
	Y2.prototype.constructor = Y2;
	Y2.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	Y2.prototype.expressionPart = function () {
		return this.getTypedRuleContext(Tp, 0);
	};
	Y2.prototype.accept = function (u) {
		return u instanceof d ? u.visitExpressionsNotInParenthesis(this) : u.visitChildren(this);
	};
	t.ExpressionsNotInParenthesisContext = Y2;
	t.prototype.expressionsNotInParenthesis = function () {
		var u = new Y2(this, this._ctx, this.state);
		this.enterRule(u, 668, t.RULE_expressionsNotInParenthesis);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3893),
				this.expression(0),
				(this.state = 3895),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.COMMA && ((this.state = 3894), this.expressionPart());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Tp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_expressionPart),
			this
		);
	}
	Tp.prototype = Object.create(s.ParserRuleContext.prototype);
	Tp.prototype.constructor = Tp;
	Tp.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Tp.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	Tp.prototype.accept = function (u) {
		return u instanceof d ? u.visitExpressionPart(this) : u.visitChildren(this);
	};
	t.ExpressionPartContext = Tp;
	t.prototype.expressionPart = function () {
		var u = new Tp(this, this._ctx, this.state);
		this.enterRule(u, 670, t.RULE_expressionPart);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1), (this.state = 3899), this._errHandler.sync(this), (e = this._input.LA(1));
			do
				(this.state = 3897),
					this.match(t.COMMA),
					(this.state = 3898),
					this.expression(0),
					(this.state = 3901),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			while (e === t.COMMA);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function G2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_expressions),
			this
		);
	}
	G2.prototype = Object.create(s.ParserRuleContext.prototype);
	G2.prototype.constructor = G2;
	G2.prototype.expressionsInParenthesis = function () {
		return this.getTypedRuleContext(hi, 0);
	};
	G2.prototype.expressionsNotInParenthesis = function () {
		return this.getTypedRuleContext(Y2, 0);
	};
	G2.prototype.accept = function (u) {
		return u instanceof d ? u.visitExpressions(this) : u.visitChildren(this);
	};
	t.ExpressionsContext = G2;
	t.prototype.expressions = function () {
		var u = new G2(this, this._ctx, this.state);
		this.enterRule(u, 672, t.RULE_expressions);
		try {
			(this.state = 3905), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 462, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 3903), this.expressionsInParenthesis();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 3904), this.expressionsNotInParenthesis();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function j2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnRefOrderInParenthesis),
			this
		);
	}
	j2.prototype = Object.create(s.ParserRuleContext.prototype);
	j2.prototype.constructor = j2;
	j2.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	j2.prototype.columnRefOrder = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(de) : this.getTypedRuleContext(de, u);
	};
	j2.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	j2.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	j2.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnRefOrderInParenthesis(this) : u.visitChildren(this);
	};
	t.ColumnRefOrderInParenthesisContext = j2;
	t.prototype.columnRefOrderInParenthesis = function () {
		var u = new j2(this, this._ctx, this.state);
		this.enterRule(u, 674, t.RULE_columnRefOrderInParenthesis);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3907,
					this.match(t.LPAREN),
					this.state = 3908,
					this.columnRefOrder(),
					this.state = 3913,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3909),
					this.match(t.COMMA),
					(this.state = 3910),
					this.columnRefOrder(),
					(this.state = 3915),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 3916), this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Rp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_columnRefOrderNotInParenthesis),
			this
		);
	}
	Rp.prototype = Object.create(s.ParserRuleContext.prototype);
	Rp.prototype.constructor = Rp;
	Rp.prototype.columnRefOrder = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(de) : this.getTypedRuleContext(de, u);
	};
	Rp.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Rp.prototype.accept = function (u) {
		return u instanceof d ? u.visitColumnRefOrderNotInParenthesis(this) : u.visitChildren(this);
	};
	t.ColumnRefOrderNotInParenthesisContext = Rp;
	t.prototype.columnRefOrderNotInParenthesis = function () {
		var u = new Rp(this, this._ctx, this.state);
		this.enterRule(u, 676, t.RULE_columnRefOrderNotInParenthesis);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3918,
					this.columnRefOrder(),
					this.state = 3923,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3919),
					this.match(t.COMMA),
					(this.state = 3920),
					this.columnRefOrder(),
					(this.state = 3925),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function fr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_orderByClause),
			this
		);
	}
	fr.prototype = Object.create(s.ParserRuleContext.prototype);
	fr.prototype.constructor = fr;
	fr.prototype.KW_ORDER = function () {
		return this.getToken(t.KW_ORDER, 0);
	};
	fr.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	fr.prototype.columnRefOrder = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(de) : this.getTypedRuleContext(de, u);
	};
	fr.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	fr.prototype.accept = function (u) {
		return u instanceof d ? u.visitOrderByClause(this) : u.visitChildren(this);
	};
	t.OrderByClauseContext = fr;
	t.prototype.orderByClause = function () {
		var u = new fr(this, this._ctx, this.state);
		this.enterRule(u, 678, t.RULE_orderByClause);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 3926,
					this.match(t.KW_ORDER),
					this.state = 3927,
					this.match(t.KW_BY),
					this.state = 3928,
					this.columnRefOrder(),
					this.state = 3933,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 3929),
					this.match(t.COMMA),
					(this.state = 3930),
					this.columnRefOrder(),
					(this.state = 3935),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Bn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_clusterByClause),
			this
		);
	}
	Bn.prototype = Object.create(s.ParserRuleContext.prototype);
	Bn.prototype.constructor = Bn;
	Bn.prototype.KW_CLUSTER = function () {
		return this.getToken(t.KW_CLUSTER, 0);
	};
	Bn.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	Bn.prototype.expressions = function () {
		return this.getTypedRuleContext(G2, 0);
	};
	Bn.prototype.accept = function (u) {
		return u instanceof d ? u.visitClusterByClause(this) : u.visitChildren(this);
	};
	t.ClusterByClauseContext = Bn;
	t.prototype.clusterByClause = function () {
		var u = new Bn(this, this._ctx, this.state);
		this.enterRule(u, 680, t.RULE_clusterByClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3936),
				this.match(t.KW_CLUSTER),
				(this.state = 3937),
				this.match(t.KW_BY),
				(this.state = 3938),
				this.expressions();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function l1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_partitionByClause),
			this
		);
	}
	l1.prototype = Object.create(s.ParserRuleContext.prototype);
	l1.prototype.constructor = l1;
	l1.prototype.KW_PARTITION = function () {
		return this.getToken(t.KW_PARTITION, 0);
	};
	l1.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	l1.prototype.expressions = function () {
		return this.getTypedRuleContext(G2, 0);
	};
	l1.prototype.accept = function (u) {
		return u instanceof d ? u.visitPartitionByClause(this) : u.visitChildren(this);
	};
	t.PartitionByClauseContext = l1;
	t.prototype.partitionByClause = function () {
		var u = new l1(this, this._ctx, this.state);
		this.enterRule(u, 682, t.RULE_partitionByClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3940),
				this.match(t.KW_PARTITION),
				(this.state = 3941),
				this.match(t.KW_BY),
				(this.state = 3942),
				this.expressions();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Yn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_distributeByClause),
			this
		);
	}
	Yn.prototype = Object.create(s.ParserRuleContext.prototype);
	Yn.prototype.constructor = Yn;
	Yn.prototype.KW_DISTRIBUTE = function () {
		return this.getToken(t.KW_DISTRIBUTE, 0);
	};
	Yn.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	Yn.prototype.expressions = function () {
		return this.getTypedRuleContext(G2, 0);
	};
	Yn.prototype.accept = function (u) {
		return u instanceof d ? u.visitDistributeByClause(this) : u.visitChildren(this);
	};
	t.DistributeByClauseContext = Yn;
	t.prototype.distributeByClause = function () {
		var u = new Yn(this, this._ctx, this.state);
		this.enterRule(u, 684, t.RULE_distributeByClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3944),
				this.match(t.KW_DISTRIBUTE),
				(this.state = 3945),
				this.match(t.KW_BY),
				(this.state = 3946),
				this.expressions();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _r(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_sortByClause),
			this
		);
	}
	_r.prototype = Object.create(s.ParserRuleContext.prototype);
	_r.prototype.constructor = _r;
	_r.prototype.KW_SORT = function () {
		return this.getToken(t.KW_SORT, 0);
	};
	_r.prototype.KW_BY = function () {
		return this.getToken(t.KW_BY, 0);
	};
	_r.prototype.columnRefOrderInParenthesis = function () {
		return this.getTypedRuleContext(j2, 0);
	};
	_r.prototype.columnRefOrderNotInParenthesis = function () {
		return this.getTypedRuleContext(Rp, 0);
	};
	_r.prototype.accept = function (u) {
		return u instanceof d ? u.visitSortByClause(this) : u.visitChildren(this);
	};
	t.SortByClauseContext = _r;
	t.prototype.sortByClause = function () {
		var u = new _r(this, this._ctx, this.state);
		this.enterRule(u, 686, t.RULE_sortByClause);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3948),
				this.match(t.KW_SORT),
				(this.state = 3949),
				this.match(t.KW_BY),
				(this.state = 3952),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 466, this._ctx);
			switch (e) {
				case 1:
					(this.state = 3950), this.columnRefOrderInParenthesis();
					break;
				case 2:
					(this.state = 3951), this.columnRefOrderNotInParenthesis();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function yu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_functionStatement),
			this
		);
	}
	yu.prototype = Object.create(s.ParserRuleContext.prototype);
	yu.prototype.constructor = yu;
	yu.prototype.functionName = function () {
		return this.getTypedRuleContext(mp, 0);
	};
	yu.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	yu.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	yu.prototype.STAR = function () {
		return this.getToken(t.STAR, 0);
	};
	yu.prototype.KW_OVER = function () {
		return this.getToken(t.KW_OVER, 0);
	};
	yu.prototype.window_specification = function () {
		return this.getTypedRuleContext(pr, 0);
	};
	yu.prototype.selectExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Hn) : this.getTypedRuleContext(Hn, u);
	};
	yu.prototype.KW_DISTINCT = function () {
		return this.getToken(t.KW_DISTINCT, 0);
	};
	yu.prototype.KW_ALL = function () {
		return this.getToken(t.KW_ALL, 0);
	};
	yu.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	yu.prototype.accept = function (u) {
		return u instanceof d ? u.visitFunctionStatement(this) : u.visitChildren(this);
	};
	t.FunctionStatementContext = yu;
	t.prototype.functionStatement = function () {
		var u = new yu(this, this._ctx, this.state);
		this.enterRule(u, 688, t.RULE_functionStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3954),
				this.functionName(),
				(this.state = 3955),
				this.match(t.LPAREN),
				(this.state = 3970),
				this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 470, this._ctx);
			switch (i) {
				case 1:
					(this.state = 3956), this.match(t.STAR);
					break;
				case 2:
					if (
						((this.state = 3958),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						(e === t.KW_ALL || e === t.KW_DISTINCT) &&
							((this.state = 3957),
							(e = this._input.LA(1)),
							e === t.KW_ALL || e === t.KW_DISTINCT
								? (this._errHandler.reportMatch(this), this.consume())
								: this._errHandler.recoverInline(this)),
						(this.state = 3968),
						this._errHandler.sync(this),
						(e = this._input.LA(1)),
						((e & -32) == 0 &&
							((1 << e) &
								((1 << t.KW_TRUE) |
									(1 << t.KW_FALSE) |
									(1 << t.KW_NOT) |
									(1 << t.KW_IF) |
									(1 << t.KW_EXISTS) |
									(1 << t.KW_ASC) |
									(1 << t.KW_DESC) |
									(1 << t.KW_NULLS) |
									(1 << t.KW_LAST) |
									(1 << t.KW_OVERWRITE))) !==
								0) ||
							(((e - 36) & -32) == 0 &&
								((1 << (e - 36)) &
									((1 << (t.KW_PARTITIONS - 36)) |
										(1 << (t.KW_TABLES - 36)) |
										(1 << (t.KW_COLUMNS - 36)) |
										(1 << (t.KW_INDEX - 36)) |
										(1 << (t.KW_INDEXES - 36)) |
										(1 << (t.KW_REBUILD - 36)) |
										(1 << (t.KW_FUNCTIONS - 36)) |
										(1 << (t.KW_SHOW - 36)) |
										(1 << (t.KW_MSCK - 36)) |
										(1 << (t.KW_REPAIR - 36)) |
										(1 << (t.KW_DIRECTORY - 36)) |
										(1 << (t.KW_CLUSTER - 36)) |
										(1 << (t.KW_DISTRIBUTE - 36)) |
										(1 << (t.KW_SORT - 36)) |
										(1 << (t.KW_LOAD - 36)) |
										(1 << (t.KW_EXPORT - 36)) |
										(1 << (t.KW_REPLICATION - 36)) |
										(1 << (t.KW_METADATA - 36)) |
										(1 << (t.KW_DATA - 36)) |
										(1 << (t.KW_INPATH - 36)) |
										(1 << (t.KW_NULL - 36)))) !==
									0) ||
							(((e - 68) & -32) == 0 &&
								((1 << (e - 68)) &
									((1 << (t.KW_CHANGE - 68)) |
										(1 << (t.KW_FIRST - 68)) |
										(1 << (t.KW_AFTER - 68)) |
										(1 << (t.KW_RENAME - 68)) |
										(1 << (t.KW_COMMENT - 68)) |
										(1 << (t.KW_BOOLEAN - 68)) |
										(1 << (t.KW_TINYINT - 68)) |
										(1 << (t.KW_SMALLINT - 68)) |
										(1 << (t.KW_INT - 68)) |
										(1 << (t.KW_BIGINT - 68)) |
										(1 << (t.KW_FLOAT - 68)) |
										(1 << (t.KW_DOUBLE - 68)) |
										(1 << (t.KW_DATE - 68)) |
										(1 << (t.KW_DATETIME - 68)) |
										(1 << (t.KW_TIMESTAMP - 68)) |
										(1 << (t.KW_TIMESTAMPLOCALTZ - 68)) |
										(1 << (t.KW_ZONE - 68)) |
										(1 << (t.KW_INTERVAL - 68)) |
										(1 << (t.KW_STRING - 68)) |
										(1 << (t.KW_ARRAY - 68)) |
										(1 << (t.KW_STRUCT - 68)) |
										(1 << (t.KW_MAP - 68)) |
										(1 << (t.KW_UNIONTYPE - 68)))) !==
									0) ||
							(((e - 101) & -32) == 0 &&
								((1 << (e - 101)) &
									((1 << (t.KW_PARTITIONED - 101)) |
										(1 << (t.KW_CLUSTERED - 101)) |
										(1 << (t.KW_SORTED - 101)) |
										(1 << (t.KW_BUCKETS - 101)) |
										(1 << (t.KW_FORMAT - 101)) |
										(1 << (t.KW_DELIMITED - 101)) |
										(1 << (t.KW_FIELDS - 101)) |
										(1 << (t.KW_TERMINATED - 101)) |
										(1 << (t.KW_ESCAPED - 101)) |
										(1 << (t.KW_COLLECTION - 101)) |
										(1 << (t.KW_ITEMS - 101)) |
										(1 << (t.KW_KEYS - 101)) |
										(1 << (t.KW_KEY_TYPE - 101)) |
										(1 << (t.KW_KILL - 101)) |
										(1 << (t.KW_LINES - 101)) |
										(1 << (t.KW_STORED - 101)) |
										(1 << (t.KW_FILEFORMAT - 101)) |
										(1 << (t.KW_INPUTFORMAT - 101)) |
										(1 << (t.KW_OUTPUTFORMAT - 101)) |
										(1 << (t.KW_INPUTDRIVER - 101)) |
										(1 << (t.KW_OUTPUTDRIVER - 101)) |
										(1 << (t.KW_ENABLE - 101)) |
										(1 << (t.KW_DISABLE - 101)) |
										(1 << (t.KW_LOCATION - 101)) |
										(1 << (t.KW_BUCKET - 101)))) !==
									0) ||
							(((e - 133) & -32) == 0 &&
								((1 << (e - 133)) &
									((1 << (t.KW_CAST - 133)) |
										(1 << (t.KW_ADD - 133)) |
										(1 << (t.KW_REPLACE - 133)) |
										(1 << (t.KW_TEMPORARY - 133)) |
										(1 << (t.KW_FILE - 133)) |
										(1 << (t.KW_JAR - 133)) |
										(1 << (t.KW_EXPLAIN - 133)) |
										(1 << (t.KW_FORMATTED - 133)) |
										(1 << (t.KW_DEPENDENCY - 133)) |
										(1 << (t.KW_LOGICAL - 133)) |
										(1 << (t.KW_SERDE - 133)) |
										(1 << (t.KW_DEFERRED - 133)) |
										(1 << (t.KW_SERDEPROPERTIES - 133)) |
										(1 << (t.KW_DBPROPERTIES - 133)) |
										(1 << (t.KW_LIMIT - 133)) |
										(1 << (t.KW_OFFSET - 133)) |
										(1 << (t.KW_UNSET - 133)) |
										(1 << (t.KW_TBLPROPERTIES - 133)) |
										(1 << (t.KW_IDXPROPERTIES - 133)) |
										(1 << (t.KW_VALUE_TYPE - 133)) |
										(1 << (t.KW_ELEM_TYPE - 133)) |
										(1 << (t.KW_DEFINED - 133)) |
										(1 << (t.KW_CASE - 133)))) !==
									0) ||
							(((e - 167) & -32) == 0 &&
								((1 << (e - 167)) &
									((1 << (t.KW_MAPJOIN - 167)) |
										(1 << (t.KW_STREAMTABLE - 167)) |
										(1 << (t.KW_CLUSTERSTATUS - 167)) |
										(1 << (t.KW_UTC - 167)) |
										(1 << (t.KW_UTCTIMESTAMP - 167)) |
										(1 << (t.KW_LONG - 167)) |
										(1 << (t.KW_PLUS - 167)) |
										(1 << (t.KW_VIEW - 167)) |
										(1 << (t.KW_VIEWS - 167)) |
										(1 << (t.KW_DATABASES - 167)) |
										(1 << (t.KW_MATERIALIZED - 167)) |
										(1 << (t.KW_SCHEMA - 167)) |
										(1 << (t.KW_SCHEMAS - 167)) |
										(1 << (t.KW_SSL - 167)) |
										(1 << (t.KW_UNDO - 167)) |
										(1 << (t.KW_LOCK - 167)) |
										(1 << (t.KW_LOCKS - 167)) |
										(1 << (t.KW_UNLOCK - 167)) |
										(1 << (t.KW_SHARED - 167)) |
										(1 << (t.KW_EXCLUSIVE - 167)) |
										(1 << (t.KW_UNSIGNED - 167)) |
										(1 << (t.KW_WHILE - 167)) |
										(1 << (t.KW_READ - 167)))) !==
									0) ||
							(((e - 200) & -32) == 0 &&
								((1 << (e - 200)) &
									((1 << (t.KW_PURGE - 200)) |
										(1 << (t.KW_ANALYZE - 200)) |
										(1 << (t.KW_BEFORE - 200)) |
										(1 << (t.KW_BINARY - 200)) |
										(1 << (t.KW_CONTINUE - 200)) |
										(1 << (t.KW_RECORDREADER - 200)) |
										(1 << (t.KW_RECORDWRITER - 200)) |
										(1 << (t.KW_SEMI - 200)) |
										(1 << (t.KW_TOUCH - 200)) |
										(1 << (t.KW_ARCHIVE - 200)) |
										(1 << (t.KW_UNARCHIVE - 200)) |
										(1 << (t.KW_COMPUTE - 200)) |
										(1 << (t.KW_STATISTICS - 200)) |
										(1 << (t.KW_USE - 200)) |
										(1 << (t.KW_OPTION - 200)) |
										(1 << (t.KW_CONCATENATE - 200)) |
										(1 << (t.KW_SHOW_DATABASE - 200)) |
										(1 << (t.KW_RESTRICT - 200)) |
										(1 << (t.KW_CASCADE - 200)) |
										(1 << (t.KW_SKEWED - 200)) |
										(1 << (t.KW_DIRECTORIES - 200)))) !==
									0) ||
							(((e - 238) & -32) == 0 &&
								((1 << (e - 238)) &
									((1 << (t.KW_CURRENT_DATE - 238)) |
										(1 << (t.KW_CURRENT_TIMESTAMP - 238)) |
										(1 << (t.KW_GROUPING - 238)) |
										(1 << (t.KW_SETS - 238)) |
										(1 << (t.KW_NOSCAN - 238)) |
										(1 << (t.KW_ROLE - 238)) |
										(1 << (t.KW_ROLES - 238)) |
										(1 << (t.KW_URI - 238)) |
										(1 << (t.KW_SERVER - 238)) |
										(1 << (t.KW_ADMIN - 238)) |
										(1 << (t.KW_OWNER - 238)) |
										(1 << (t.KW_PRINCIPALS - 238)) |
										(1 << (t.KW_COMPACT - 238)) |
										(1 << (t.KW_COMPACTIONS - 238)) |
										(1 << (t.KW_TRANSACTIONS - 238)) |
										(1 << (t.KW_REWRITE - 238)) |
										(1 << (t.KW_REOPTIMIZATION - 238)) |
										(1 << (t.KW_RELOAD - 238)) |
										(1 << (t.KW_YEAR - 238)) |
										(1 << (t.KW_QUERY - 238)) |
										(1 << (t.KW_QUARTER - 238)) |
										(1 << (t.KW_MONTH - 238)))) !==
									0) ||
							(((e - 270) & -32) == 0 &&
								((1 << (e - 270)) &
									((1 << (t.KW_WEEK - 270)) |
										(1 << (t.KW_DAY - 270)) |
										(1 << (t.KW_DOW - 270)) |
										(1 << (t.KW_HOUR - 270)) |
										(1 << (t.KW_MINUTE - 270)) |
										(1 << (t.KW_SECOND - 270)) |
										(1 << (t.KW_TRANSACTION - 270)) |
										(1 << (t.KW_WORK - 270)) |
										(1 << (t.KW_WRITE - 270)) |
										(1 << (t.KW_ISOLATION - 270)) |
										(1 << (t.KW_LEVEL - 270)) |
										(1 << (t.KW_SNAPSHOT - 270)) |
										(1 << (t.KW_AUTOCOMMIT - 270)) |
										(1 << (t.KW_CACHE - 270)) |
										(1 << (t.KW_ENFORCED - 270)) |
										(1 << (t.KW_VALIDATE - 270)) |
										(1 << (t.KW_NOVALIDATE - 270)) |
										(1 << (t.KW_RELY - 270)) |
										(1 << (t.KW_NORELY - 270)) |
										(1 << (t.KW_KEY - 270)) |
										(1 << (t.KW_ABORT - 270)) |
										(1 << (t.KW_EXTRACT - 270)) |
										(1 << (t.KW_FLOOR - 270)))) !==
									0) ||
							(((e - 303) & -32) == 0 &&
								((1 << (e - 303)) &
									((1 << (t.KW_MATCHED - 303)) |
										(1 << (t.KW_REPL - 303)) |
										(1 << (t.KW_DUMP - 303)) |
										(1 << (t.KW_STATUS - 303)) |
										(1 << (t.KW_VECTORIZATION - 303)) |
										(1 << (t.KW_SUMMARY - 303)) |
										(1 << (t.KW_OPERATOR - 303)) |
										(1 << (t.KW_EXPRESSION - 303)) |
										(1 << (t.KW_DETAIL - 303)) |
										(1 << (t.KW_WAIT - 303)) |
										(1 << (t.KW_RESOURCE - 303)) |
										(1 << (t.KW_PLAN - 303)) |
										(1 << (t.KW_QUERY_PARALLELISM - 303)) |
										(1 << (t.KW_PLANS - 303)) |
										(1 << (t.KW_ACTIVATE - 303)) |
										(1 << (t.KW_DEFAULT - 303)) |
										(1 << (t.KW_CHECK - 303)) |
										(1 << (t.KW_POOL - 303)) |
										(1 << (t.KW_MOVE - 303)) |
										(1 << (t.KW_DO - 303)) |
										(1 << (t.KW_ALLOC_FRACTION - 303)) |
										(1 << (t.KW_SCHEDULING_POLICY - 303)) |
										(1 << (t.KW_PATH - 303)) |
										(1 << (t.KW_MAPPING - 303)) |
										(1 << (t.KW_WORKLOAD - 303)) |
										(1 << (t.KW_MANAGEMENT - 303)) |
										(1 << (t.KW_ACTIVE - 303)) |
										(1 << (t.KW_UNMANAGED - 303)))) !==
									0) ||
							(((e - 338) & -32) == 0 &&
								((1 << (e - 338)) &
									((1 << (t.KW_DELTA - 338)) |
										(1 << (t.KW_CSV - 338)) |
										(1 << (t.KW_JSON - 338)) |
										(1 << (t.KW_BLOOMFILTER - 338)) |
										(1 << (t.LPAREN - 338)) |
										(1 << (t.PLUS - 338)) |
										(1 << (t.MINUS - 338)) |
										(1 << (t.STAR - 338)) |
										(1 << (t.TILDE - 338)))) !==
									0) ||
							(((e - 374) & -32) == 0 &&
								((1 << (e - 374)) &
									((1 << (t.StringLiteral - 374)) |
										(1 << (t.IntegralLiteral - 374)) |
										(1 << (t.NumberLiteral - 374)) |
										(1 << (t.Number - 374)) |
										(1 << (t.Identifier - 374)) |
										(1 << (t.CharSetName - 374)))) !==
									0))
					)
						for (
							this.state = 3960,
								this.selectExpression(),
								this.state = 3965,
								this._errHandler.sync(this),
								e = this._input.LA(1);
							e === t.COMMA;

						)
							(this.state = 3961),
								this.match(t.COMMA),
								(this.state = 3962),
								this.selectExpression(),
								(this.state = 3967),
								this._errHandler.sync(this),
								(e = this._input.LA(1));
					break;
			}
			(this.state = 3972), this.match(t.RPAREN), (this.state = 3975), this._errHandler.sync(this);
			var i = this._interp.adaptivePredict(this._input, 471, this._ctx);
			i === 1 && ((this.state = 3973), this.match(t.KW_OVER), (this.state = 3974), this.window_specification());
		} catch (n) {
			if (n instanceof s.error.RecognitionException)
				(u.exception = n), this._errHandler.reportError(this, n), this._errHandler.recover(this, n);
			else throw n;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function mp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_functionName),
			this
		);
	}
	mp.prototype = Object.create(s.ParserRuleContext.prototype);
	mp.prototype.constructor = mp;
	mp.prototype.functionIdentifier = function () {
		return this.getTypedRuleContext(Ar, 0);
	};
	mp.prototype.sql11ReservedKeywordsUsedAsFunctionName = function () {
		return this.getTypedRuleContext(F0, 0);
	};
	mp.prototype.accept = function (u) {
		return u instanceof d ? u.visitFunctionName(this) : u.visitChildren(this);
	};
	t.FunctionNameContext = mp;
	t.prototype.functionName = function () {
		var u = new mp(this, this._ctx, this.state);
		this.enterRule(u, 690, t.RULE_functionName);
		try {
			switch (((this.state = 3979), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.Identifier:
					this.enterOuterAlt(u, 1), (this.state = 3977), this.functionIdentifier();
					break;
				case t.KW_IF:
				case t.KW_BOOLEAN:
				case t.KW_SMALLINT:
				case t.KW_INT:
				case t.KW_BIGINT:
				case t.KW_FLOAT:
				case t.KW_DOUBLE:
				case t.KW_DATE:
				case t.KW_TIMESTAMP:
				case t.KW_ARRAY:
				case t.KW_MAP:
				case t.KW_BINARY:
				case t.KW_CURRENT_DATE:
				case t.KW_CURRENT_TIMESTAMP:
				case t.KW_GROUPING:
					this.enterOuterAlt(u, 2), (this.state = 3978), this.sql11ReservedKeywordsUsedAsFunctionName();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function li(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_castExpression),
			this
		);
	}
	li.prototype = Object.create(s.ParserRuleContext.prototype);
	li.prototype.constructor = li;
	li.prototype.KW_CAST = function () {
		return this.getToken(t.KW_CAST, 0);
	};
	li.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	li.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	li.prototype.KW_AS = function () {
		return this.getToken(t.KW_AS, 0);
	};
	li.prototype.primitiveType = function () {
		return this.getTypedRuleContext(J, 0);
	};
	li.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	li.prototype.accept = function (u) {
		return u instanceof d ? u.visitCastExpression(this) : u.visitChildren(this);
	};
	t.CastExpressionContext = li;
	t.prototype.castExpression = function () {
		var u = new li(this, this._ctx, this.state);
		this.enterRule(u, 692, t.RULE_castExpression);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3981),
				this.match(t.KW_CAST),
				(this.state = 3982),
				this.match(t.LPAREN),
				(this.state = 3983),
				this.expression(0),
				(this.state = 3984),
				this.match(t.KW_AS),
				(this.state = 3985),
				this.primitiveType(),
				(this.state = 3986),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Er(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_caseExpression),
			this
		);
	}
	Er.prototype = Object.create(s.ParserRuleContext.prototype);
	Er.prototype.constructor = Er;
	Er.prototype.KW_CASE = function () {
		return this.getToken(t.KW_CASE, 0);
	};
	Er.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	Er.prototype.KW_END = function () {
		return this.getToken(t.KW_END, 0);
	};
	Er.prototype.KW_WHEN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_WHEN) : this.getToken(t.KW_WHEN, u);
	};
	Er.prototype.KW_THEN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_THEN) : this.getToken(t.KW_THEN, u);
	};
	Er.prototype.KW_ELSE = function () {
		return this.getToken(t.KW_ELSE, 0);
	};
	Er.prototype.accept = function (u) {
		return u instanceof d ? u.visitCaseExpression(this) : u.visitChildren(this);
	};
	t.CaseExpressionContext = Er;
	t.prototype.caseExpression = function () {
		var u = new Er(this, this._ctx, this.state);
		this.enterRule(u, 694, t.RULE_caseExpression);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 3988),
				this.match(t.KW_CASE),
				(this.state = 3989),
				this.expression(0),
				(this.state = 3995),
				this._errHandler.sync(this),
				(e = this._input.LA(1));
			do
				(this.state = 3990),
					this.match(t.KW_WHEN),
					(this.state = 3991),
					this.expression(0),
					(this.state = 3992),
					this.match(t.KW_THEN),
					(this.state = 3993),
					this.expression(0),
					(this.state = 3997),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			while (e === t.KW_WHEN);
			(this.state = 4001),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ELSE && ((this.state = 3999), this.match(t.KW_ELSE), (this.state = 4e3), this.expression(0)),
				(this.state = 4003),
				this.match(t.KW_END);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Tr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_whenExpression),
			this
		);
	}
	Tr.prototype = Object.create(s.ParserRuleContext.prototype);
	Tr.prototype.constructor = Tr;
	Tr.prototype.KW_CASE = function () {
		return this.getToken(t.KW_CASE, 0);
	};
	Tr.prototype.KW_END = function () {
		return this.getToken(t.KW_END, 0);
	};
	Tr.prototype.KW_WHEN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_WHEN) : this.getToken(t.KW_WHEN, u);
	};
	Tr.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	Tr.prototype.KW_THEN = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_THEN) : this.getToken(t.KW_THEN, u);
	};
	Tr.prototype.KW_ELSE = function () {
		return this.getToken(t.KW_ELSE, 0);
	};
	Tr.prototype.accept = function (u) {
		return u instanceof d ? u.visitWhenExpression(this) : u.visitChildren(this);
	};
	t.WhenExpressionContext = Tr;
	t.prototype.whenExpression = function () {
		var u = new Tr(this, this._ctx, this.state);
		this.enterRule(u, 696, t.RULE_whenExpression);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4005),
				this.match(t.KW_CASE),
				(this.state = 4011),
				this._errHandler.sync(this),
				(e = this._input.LA(1));
			do
				(this.state = 4006),
					this.match(t.KW_WHEN),
					(this.state = 4007),
					this.expression(0),
					(this.state = 4008),
					this.match(t.KW_THEN),
					(this.state = 4009),
					this.expression(0),
					(this.state = 4013),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			while (e === t.KW_WHEN);
			(this.state = 4017),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_ELSE &&
					((this.state = 4015), this.match(t.KW_ELSE), (this.state = 4016), this.expression(0)),
				(this.state = 4019),
				this.match(t.KW_END);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Rr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_floorExpression),
			this
		);
	}
	Rr.prototype = Object.create(s.ParserRuleContext.prototype);
	Rr.prototype.constructor = Rr;
	Rr.prototype.KW_FLOOR = function () {
		return this.getToken(t.KW_FLOOR, 0);
	};
	Rr.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Rr.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	Rr.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Rr.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	Rr.prototype.floorDateQualifiers = function () {
		return this.getTypedRuleContext(ye, 0);
	};
	Rr.prototype.accept = function (u) {
		return u instanceof d ? u.visitFloorExpression(this) : u.visitChildren(this);
	};
	t.FloorExpressionContext = Rr;
	t.prototype.floorExpression = function () {
		var u = new Rr(this, this._ctx, this.state);
		this.enterRule(u, 698, t.RULE_floorExpression);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4021),
				this.match(t.KW_FLOOR),
				(this.state = 4022),
				this.match(t.LPAREN),
				(this.state = 4023),
				this.expression(0),
				(this.state = 4026),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_TO &&
					((this.state = 4024), this.match(t.KW_TO), (this.state = 4025), this.floorDateQualifiers()),
				(this.state = 4028),
				this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ye(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_floorDateQualifiers),
			this
		);
	}
	ye.prototype = Object.create(s.ParserRuleContext.prototype);
	ye.prototype.constructor = ye;
	ye.prototype.KW_YEAR = function () {
		return this.getToken(t.KW_YEAR, 0);
	};
	ye.prototype.KW_QUARTER = function () {
		return this.getToken(t.KW_QUARTER, 0);
	};
	ye.prototype.KW_MONTH = function () {
		return this.getToken(t.KW_MONTH, 0);
	};
	ye.prototype.KW_WEEK = function () {
		return this.getToken(t.KW_WEEK, 0);
	};
	ye.prototype.KW_DAY = function () {
		return this.getToken(t.KW_DAY, 0);
	};
	ye.prototype.KW_HOUR = function () {
		return this.getToken(t.KW_HOUR, 0);
	};
	ye.prototype.KW_MINUTE = function () {
		return this.getToken(t.KW_MINUTE, 0);
	};
	ye.prototype.KW_SECOND = function () {
		return this.getToken(t.KW_SECOND, 0);
	};
	ye.prototype.accept = function (u) {
		return u instanceof d ? u.visitFloorDateQualifiers(this) : u.visitChildren(this);
	};
	t.FloorDateQualifiersContext = ye;
	t.prototype.floorDateQualifiers = function () {
		var u = new ye(this, this._ctx, this.state);
		this.enterRule(u, 700, t.RULE_floorDateQualifiers);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4030),
				(e = this._input.LA(1)),
				((e - 266) & -32) == 0 &&
				((1 << (e - 266)) &
					((1 << (t.KW_YEAR - 266)) |
						(1 << (t.KW_QUARTER - 266)) |
						(1 << (t.KW_MONTH - 266)) |
						(1 << (t.KW_WEEK - 266)) |
						(1 << (t.KW_DAY - 266)) |
						(1 << (t.KW_HOUR - 266)) |
						(1 << (t.KW_MINUTE - 266)) |
						(1 << (t.KW_SECOND - 266)))) !==
					0
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function mr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_extractExpression),
			this
		);
	}
	mr.prototype = Object.create(s.ParserRuleContext.prototype);
	mr.prototype.constructor = mr;
	mr.prototype.KW_EXTRACT = function () {
		return this.getToken(t.KW_EXTRACT, 0);
	};
	mr.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	mr.prototype.timeQualifiers = function () {
		return this.getTypedRuleContext(wt, 0);
	};
	mr.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	mr.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	mr.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	mr.prototype.accept = function (u) {
		return u instanceof d ? u.visitExtractExpression(this) : u.visitChildren(this);
	};
	t.ExtractExpressionContext = mr;
	t.prototype.extractExpression = function () {
		var u = new mr(this, this._ctx, this.state);
		this.enterRule(u, 702, t.RULE_extractExpression);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4032),
				this.match(t.KW_EXTRACT),
				(this.state = 4033),
				this.match(t.LPAREN),
				(this.state = 4034),
				this.timeQualifiers(),
				(this.state = 4035),
				this.match(t.KW_FROM),
				(this.state = 4036),
				this.expression(0),
				(this.state = 4037),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function wt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_timeQualifiers),
			this
		);
	}
	wt.prototype = Object.create(s.ParserRuleContext.prototype);
	wt.prototype.constructor = wt;
	wt.prototype.KW_YEAR = function () {
		return this.getToken(t.KW_YEAR, 0);
	};
	wt.prototype.KW_QUARTER = function () {
		return this.getToken(t.KW_QUARTER, 0);
	};
	wt.prototype.KW_MONTH = function () {
		return this.getToken(t.KW_MONTH, 0);
	};
	wt.prototype.KW_WEEK = function () {
		return this.getToken(t.KW_WEEK, 0);
	};
	wt.prototype.KW_DAY = function () {
		return this.getToken(t.KW_DAY, 0);
	};
	wt.prototype.KW_DOW = function () {
		return this.getToken(t.KW_DOW, 0);
	};
	wt.prototype.KW_HOUR = function () {
		return this.getToken(t.KW_HOUR, 0);
	};
	wt.prototype.KW_MINUTE = function () {
		return this.getToken(t.KW_MINUTE, 0);
	};
	wt.prototype.KW_SECOND = function () {
		return this.getToken(t.KW_SECOND, 0);
	};
	wt.prototype.accept = function (u) {
		return u instanceof d ? u.visitTimeQualifiers(this) : u.visitChildren(this);
	};
	t.TimeQualifiersContext = wt;
	t.prototype.timeQualifiers = function () {
		var u = new wt(this, this._ctx, this.state);
		this.enterRule(u, 704, t.RULE_timeQualifiers);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4039),
				(e = this._input.LA(1)),
				((e - 266) & -32) == 0 &&
				((1 << (e - 266)) &
					((1 << (t.KW_YEAR - 266)) |
						(1 << (t.KW_QUARTER - 266)) |
						(1 << (t.KW_MONTH - 266)) |
						(1 << (t.KW_WEEK - 266)) |
						(1 << (t.KW_DAY - 266)) |
						(1 << (t.KW_DOW - 266)) |
						(1 << (t.KW_HOUR - 266)) |
						(1 << (t.KW_MINUTE - 266)) |
						(1 << (t.KW_SECOND - 266)))) !==
					0
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function S0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_constant),
			this
		);
	}
	S0.prototype = Object.create(s.ParserRuleContext.prototype);
	S0.prototype.constructor = S0;
	S0.prototype.intervalLiteral = function () {
		return this.getTypedRuleContext(bp, 0);
	};
	S0.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	S0.prototype.dateLiteral = function () {
		return this.getTypedRuleContext(d1, 0);
	};
	S0.prototype.timestampLiteral = function () {
		return this.getTypedRuleContext(f1, 0);
	};
	S0.prototype.timestampLocalTZLiteral = function () {
		return this.getTypedRuleContext(Cp, 0);
	};
	S0.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	S0.prototype.stringLiteralSequence = function () {
		return this.getTypedRuleContext(Y3, 0);
	};
	S0.prototype.IntegralLiteral = function () {
		return this.getToken(t.IntegralLiteral, 0);
	};
	S0.prototype.NumberLiteral = function () {
		return this.getToken(t.NumberLiteral, 0);
	};
	S0.prototype.charSetStringLiteral = function () {
		return this.getTypedRuleContext(yp, 0);
	};
	S0.prototype.booleanValue = function () {
		return this.getTypedRuleContext(m1, 0);
	};
	S0.prototype.KW_NULL = function () {
		return this.getToken(t.KW_NULL, 0);
	};
	S0.prototype.accept = function (u) {
		return u instanceof d ? u.visitConstant(this) : u.visitChildren(this);
	};
	t.ConstantContext = S0;
	t.prototype.constant = function () {
		var u = new S0(this, this._ctx, this.state);
		this.enterRule(u, 706, t.RULE_constant);
		try {
			(this.state = 4053), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 478, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 4041), this.intervalLiteral();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 4042), this.match(t.Number);
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 4043), this.dateLiteral();
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 4044), this.timestampLiteral();
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 4045), this.timestampLocalTZLiteral();
					break;
				case 6:
					this.enterOuterAlt(u, 6), (this.state = 4046), this.match(t.StringLiteral);
					break;
				case 7:
					this.enterOuterAlt(u, 7), (this.state = 4047), this.stringLiteralSequence();
					break;
				case 8:
					this.enterOuterAlt(u, 8), (this.state = 4048), this.match(t.IntegralLiteral);
					break;
				case 9:
					this.enterOuterAlt(u, 9), (this.state = 4049), this.match(t.NumberLiteral);
					break;
				case 10:
					this.enterOuterAlt(u, 10), (this.state = 4050), this.charSetStringLiteral();
					break;
				case 11:
					this.enterOuterAlt(u, 11), (this.state = 4051), this.booleanValue();
					break;
				case 12:
					this.enterOuterAlt(u, 12), (this.state = 4052), this.match(t.KW_NULL);
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Y3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_stringLiteralSequence),
			this
		);
	}
	Y3.prototype = Object.create(s.ParserRuleContext.prototype);
	Y3.prototype.constructor = Y3;
	Y3.prototype.StringLiteral = function (u) {
		return (
			u === void 0 && (u = null), u === null ? this.getTokens(t.StringLiteral) : this.getToken(t.StringLiteral, u)
		);
	};
	Y3.prototype.accept = function (u) {
		return u instanceof d ? u.visitStringLiteralSequence(this) : u.visitChildren(this);
	};
	t.StringLiteralSequenceContext = Y3;
	t.prototype.stringLiteralSequence = function () {
		var u = new Y3(this, this._ctx, this.state);
		this.enterRule(u, 708, t.RULE_stringLiteralSequence);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4055),
				this.match(t.StringLiteral),
				(this.state = 4057),
				this._errHandler.sync(this);
			var e = 1;
			do {
				switch (e) {
					case 1:
						(this.state = 4056), this.match(t.StringLiteral);
						break;
					default:
						throw new s.error.NoViableAltException(this);
				}
				(this.state = 4059),
					this._errHandler.sync(this),
					(e = this._interp.adaptivePredict(this._input, 479, this._ctx));
			} while (e != 2 && e != s.atn.ATN.INVALID_ALT_NUMBER);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function yp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_charSetStringLiteral),
			this
		);
	}
	yp.prototype = Object.create(s.ParserRuleContext.prototype);
	yp.prototype.constructor = yp;
	yp.prototype.CharSetName = function () {
		return this.getToken(t.CharSetName, 0);
	};
	yp.prototype.CharSetLiteral = function () {
		return this.getToken(t.CharSetLiteral, 0);
	};
	yp.prototype.accept = function (u) {
		return u instanceof d ? u.visitCharSetStringLiteral(this) : u.visitChildren(this);
	};
	t.CharSetStringLiteralContext = yp;
	t.prototype.charSetStringLiteral = function () {
		var u = new yp(this, this._ctx, this.state);
		this.enterRule(u, 710, t.RULE_charSetStringLiteral);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4061),
				this.match(t.CharSetName),
				(this.state = 4062),
				this.match(t.CharSetLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function d1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dateLiteral),
			this
		);
	}
	d1.prototype = Object.create(s.ParserRuleContext.prototype);
	d1.prototype.constructor = d1;
	d1.prototype.KW_DATE = function () {
		return this.getToken(t.KW_DATE, 0);
	};
	d1.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	d1.prototype.KW_CURRENT_DATE = function () {
		return this.getToken(t.KW_CURRENT_DATE, 0);
	};
	d1.prototype.accept = function (u) {
		return u instanceof d ? u.visitDateLiteral(this) : u.visitChildren(this);
	};
	t.DateLiteralContext = d1;
	t.prototype.dateLiteral = function () {
		var u = new d1(this, this._ctx, this.state);
		this.enterRule(u, 712, t.RULE_dateLiteral);
		try {
			switch (((this.state = 4067), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_DATE:
					this.enterOuterAlt(u, 1),
						(this.state = 4064),
						this.match(t.KW_DATE),
						(this.state = 4065),
						this.match(t.StringLiteral);
					break;
				case t.KW_CURRENT_DATE:
					this.enterOuterAlt(u, 2), (this.state = 4066), this.match(t.KW_CURRENT_DATE);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function f1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_timestampLiteral),
			this
		);
	}
	f1.prototype = Object.create(s.ParserRuleContext.prototype);
	f1.prototype.constructor = f1;
	f1.prototype.KW_TIMESTAMP = function () {
		return this.getToken(t.KW_TIMESTAMP, 0);
	};
	f1.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	f1.prototype.KW_CURRENT_TIMESTAMP = function () {
		return this.getToken(t.KW_CURRENT_TIMESTAMP, 0);
	};
	f1.prototype.accept = function (u) {
		return u instanceof d ? u.visitTimestampLiteral(this) : u.visitChildren(this);
	};
	t.TimestampLiteralContext = f1;
	t.prototype.timestampLiteral = function () {
		var u = new f1(this, this._ctx, this.state);
		this.enterRule(u, 714, t.RULE_timestampLiteral);
		try {
			switch (((this.state = 4072), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_TIMESTAMP:
					this.enterOuterAlt(u, 1),
						(this.state = 4069),
						this.match(t.KW_TIMESTAMP),
						(this.state = 4070),
						this.match(t.StringLiteral);
					break;
				case t.KW_CURRENT_TIMESTAMP:
					this.enterOuterAlt(u, 2), (this.state = 4071), this.match(t.KW_CURRENT_TIMESTAMP);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Cp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_timestampLocalTZLiteral),
			this
		);
	}
	Cp.prototype = Object.create(s.ParserRuleContext.prototype);
	Cp.prototype.constructor = Cp;
	Cp.prototype.KW_TIMESTAMPLOCALTZ = function () {
		return this.getToken(t.KW_TIMESTAMPLOCALTZ, 0);
	};
	Cp.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Cp.prototype.accept = function (u) {
		return u instanceof d ? u.visitTimestampLocalTZLiteral(this) : u.visitChildren(this);
	};
	t.TimestampLocalTZLiteralContext = Cp;
	t.prototype.timestampLocalTZLiteral = function () {
		var u = new Cp(this, this._ctx, this.state);
		this.enterRule(u, 716, t.RULE_timestampLocalTZLiteral);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4074),
				this.match(t.KW_TIMESTAMPLOCALTZ),
				(this.state = 4075),
				this.match(t.StringLiteral);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_intervalValue),
			this
		);
	}
	_1.prototype = Object.create(s.ParserRuleContext.prototype);
	_1.prototype.constructor = _1;
	_1.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	_1.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	_1.prototype.accept = function (u) {
		return u instanceof d ? u.visitIntervalValue(this) : u.visitChildren(this);
	};
	t.IntervalValueContext = _1;
	t.prototype.intervalValue = function () {
		var u = new _1(this, this._ctx, this.state);
		this.enterRule(u, 718, t.RULE_intervalValue);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4077),
				(e = this._input.LA(1)),
				e === t.StringLiteral || e === t.Number
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function bp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_intervalLiteral),
			this
		);
	}
	bp.prototype = Object.create(s.ParserRuleContext.prototype);
	bp.prototype.constructor = bp;
	bp.prototype.intervalValue = function () {
		return this.getTypedRuleContext(_1, 0);
	};
	bp.prototype.intervalQualifiers = function () {
		return this.getTypedRuleContext(Ce, 0);
	};
	bp.prototype.accept = function (u) {
		return u instanceof d ? u.visitIntervalLiteral(this) : u.visitChildren(this);
	};
	t.IntervalLiteralContext = bp;
	t.prototype.intervalLiteral = function () {
		var u = new bp(this, this._ctx, this.state);
		this.enterRule(u, 720, t.RULE_intervalLiteral);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4079),
				this.intervalValue(),
				(this.state = 4080),
				this.intervalQualifiers();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function yr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_intervalExpression),
			this
		);
	}
	yr.prototype = Object.create(s.ParserRuleContext.prototype);
	yr.prototype.constructor = yr;
	yr.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	yr.prototype.intervalValue = function () {
		return this.getTypedRuleContext(_1, 0);
	};
	yr.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	yr.prototype.intervalQualifiers = function () {
		return this.getTypedRuleContext(Ce, 0);
	};
	yr.prototype.KW_INTERVAL = function () {
		return this.getToken(t.KW_INTERVAL, 0);
	};
	yr.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	yr.prototype.accept = function (u) {
		return u instanceof d ? u.visitIntervalExpression(this) : u.visitChildren(this);
	};
	t.IntervalExpressionContext = yr;
	t.prototype.intervalExpression = function () {
		var u = new yr(this, this._ctx, this.state);
		this.enterRule(u, 722, t.RULE_intervalExpression);
		try {
			(this.state = 4097), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 482, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 4082),
						this.match(t.LPAREN),
						(this.state = 4083),
						this.intervalValue(),
						(this.state = 4084),
						this.match(t.RPAREN),
						(this.state = 4085),
						this.intervalQualifiers();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 4087),
						this.match(t.KW_INTERVAL),
						(this.state = 4088),
						this.intervalValue(),
						(this.state = 4089),
						this.intervalQualifiers();
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 4091),
						this.match(t.KW_INTERVAL),
						(this.state = 4092),
						this.match(t.LPAREN),
						(this.state = 4093),
						this.expression(0),
						(this.state = 4094),
						this.match(t.RPAREN),
						(this.state = 4095),
						this.intervalQualifiers();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ce(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_intervalQualifiers),
			this
		);
	}
	Ce.prototype = Object.create(s.ParserRuleContext.prototype);
	Ce.prototype.constructor = Ce;
	Ce.prototype.KW_YEAR = function () {
		return this.getToken(t.KW_YEAR, 0);
	};
	Ce.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	Ce.prototype.KW_MONTH = function () {
		return this.getToken(t.KW_MONTH, 0);
	};
	Ce.prototype.KW_DAY = function () {
		return this.getToken(t.KW_DAY, 0);
	};
	Ce.prototype.KW_SECOND = function () {
		return this.getToken(t.KW_SECOND, 0);
	};
	Ce.prototype.KW_HOUR = function () {
		return this.getToken(t.KW_HOUR, 0);
	};
	Ce.prototype.KW_MINUTE = function () {
		return this.getToken(t.KW_MINUTE, 0);
	};
	Ce.prototype.accept = function (u) {
		return u instanceof d ? u.visitIntervalQualifiers(this) : u.visitChildren(this);
	};
	t.IntervalQualifiersContext = Ce;
	t.prototype.intervalQualifiers = function () {
		var u = new Ce(this, this._ctx, this.state);
		this.enterRule(u, 724, t.RULE_intervalQualifiers);
		try {
			(this.state = 4111), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 483, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 4099),
						this.match(t.KW_YEAR),
						(this.state = 4100),
						this.match(t.KW_TO),
						(this.state = 4101),
						this.match(t.KW_MONTH);
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 4102),
						this.match(t.KW_DAY),
						(this.state = 4103),
						this.match(t.KW_TO),
						(this.state = 4104),
						this.match(t.KW_SECOND);
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 4105), this.match(t.KW_YEAR);
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 4106), this.match(t.KW_MONTH);
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 4107), this.match(t.KW_DAY);
					break;
				case 6:
					this.enterOuterAlt(u, 6), (this.state = 4108), this.match(t.KW_HOUR);
					break;
				case 7:
					this.enterOuterAlt(u, 7), (this.state = 4109), this.match(t.KW_MINUTE);
					break;
				case 8:
					this.enterOuterAlt(u, 8), (this.state = 4110), this.match(t.KW_SECOND);
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Mu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_atomExpression),
			this
		);
	}
	Mu.prototype = Object.create(s.ParserRuleContext.prototype);
	Mu.prototype.constructor = Mu;
	Mu.prototype.constant = function () {
		return this.getTypedRuleContext(S0, 0);
	};
	Mu.prototype.intervalExpression = function () {
		return this.getTypedRuleContext(yr, 0);
	};
	Mu.prototype.castExpression = function () {
		return this.getTypedRuleContext(li, 0);
	};
	Mu.prototype.extractExpression = function () {
		return this.getTypedRuleContext(mr, 0);
	};
	Mu.prototype.floorExpression = function () {
		return this.getTypedRuleContext(Rr, 0);
	};
	Mu.prototype.caseExpression = function () {
		return this.getTypedRuleContext(Er, 0);
	};
	Mu.prototype.whenExpression = function () {
		return this.getTypedRuleContext(Tr, 0);
	};
	Mu.prototype.subQueryExpression = function () {
		return this.getTypedRuleContext(jn, 0);
	};
	Mu.prototype.functionStatement = function () {
		return this.getTypedRuleContext(yu, 0);
	};
	Mu.prototype.tableOrColumn = function () {
		return this.getTypedRuleContext(lp, 0);
	};
	Mu.prototype.expressionsInParenthesis = function () {
		return this.getTypedRuleContext(hi, 0);
	};
	Mu.prototype.accept = function (u) {
		return u instanceof d ? u.visitAtomExpression(this) : u.visitChildren(this);
	};
	t.AtomExpressionContext = Mu;
	t.prototype.atomExpression = function () {
		var u = new Mu(this, this._ctx, this.state);
		this.enterRule(u, 726, t.RULE_atomExpression);
		try {
			(this.state = 4124), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 484, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 4113), this.constant();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 4114), this.intervalExpression();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 4115), this.castExpression();
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 4116), this.extractExpression();
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 4117), this.floorExpression();
					break;
				case 6:
					this.enterOuterAlt(u, 6), (this.state = 4118), this.caseExpression();
					break;
				case 7:
					this.enterOuterAlt(u, 7), (this.state = 4119), this.whenExpression();
					break;
				case 8:
					this.enterOuterAlt(u, 8), (this.state = 4120), this.subQueryExpression();
					break;
				case 9:
					this.enterOuterAlt(u, 9), (this.state = 4121), this.functionStatement();
					break;
				case 10:
					this.enterOuterAlt(u, 10), (this.state = 4122), this.tableOrColumn();
					break;
				case 11:
					this.enterOuterAlt(u, 11), (this.state = 4123), this.expressionsInParenthesis();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function E1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceUnaryOperator),
			this
		);
	}
	E1.prototype = Object.create(s.ParserRuleContext.prototype);
	E1.prototype.constructor = E1;
	E1.prototype.PLUS = function () {
		return this.getToken(t.PLUS, 0);
	};
	E1.prototype.MINUS = function () {
		return this.getToken(t.MINUS, 0);
	};
	E1.prototype.TILDE = function () {
		return this.getToken(t.TILDE, 0);
	};
	E1.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceUnaryOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceUnaryOperatorContext = E1;
	t.prototype.precedenceUnaryOperator = function () {
		var u = new E1(this, this._ctx, this.state);
		this.enterRule(u, 728, t.RULE_precedenceUnaryOperator);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4126),
				(e = this._input.LA(1)),
				((e - 362) & -32) == 0 &&
				((1 << (e - 362)) & ((1 << (t.PLUS - 362)) | (1 << (t.MINUS - 362)) | (1 << (t.TILDE - 362)))) !== 0
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function X2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_isCondition),
			this
		);
	}
	X2.prototype = Object.create(s.ParserRuleContext.prototype);
	X2.prototype.constructor = X2;
	X2.prototype.KW_NULL = function () {
		return this.getToken(t.KW_NULL, 0);
	};
	X2.prototype.KW_TRUE = function () {
		return this.getToken(t.KW_TRUE, 0);
	};
	X2.prototype.KW_FALSE = function () {
		return this.getToken(t.KW_FALSE, 0);
	};
	X2.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	X2.prototype.accept = function (u) {
		return u instanceof d ? u.visitIsCondition(this) : u.visitChildren(this);
	};
	t.IsConditionContext = X2;
	t.prototype.isCondition = function () {
		var u = new X2(this, this._ctx, this.state);
		this.enterRule(u, 730, t.RULE_isCondition);
		try {
			(this.state = 4137), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 485, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 4128), this.match(t.KW_NULL);
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 4129), this.match(t.KW_TRUE);
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 4130), this.match(t.KW_FALSE);
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 4131),
						this.match(t.KW_NOT),
						(this.state = 4132),
						this.match(t.KW_NULL);
					break;
				case 5:
					this.enterOuterAlt(u, 5),
						(this.state = 4133),
						this.match(t.KW_NOT),
						(this.state = 4134),
						this.match(t.KW_TRUE);
					break;
				case 6:
					this.enterOuterAlt(u, 6),
						(this.state = 4135),
						this.match(t.KW_NOT),
						(this.state = 4136),
						this.match(t.KW_FALSE);
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function G3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceBitwiseXorOperator),
			this
		);
	}
	G3.prototype = Object.create(s.ParserRuleContext.prototype);
	G3.prototype.constructor = G3;
	G3.prototype.BITWISEXOR = function () {
		return this.getToken(t.BITWISEXOR, 0);
	};
	G3.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceBitwiseXorOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceBitwiseXorOperatorContext = G3;
	t.prototype.precedenceBitwiseXorOperator = function () {
		var u = new G3(this, this._ctx, this.state);
		this.enterRule(u, 732, t.RULE_precedenceBitwiseXorOperator);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4139), this.match(t.BITWISEXOR);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Q2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceStarOperator),
			this
		);
	}
	Q2.prototype = Object.create(s.ParserRuleContext.prototype);
	Q2.prototype.constructor = Q2;
	Q2.prototype.STAR = function () {
		return this.getToken(t.STAR, 0);
	};
	Q2.prototype.DIVIDE = function () {
		return this.getToken(t.DIVIDE, 0);
	};
	Q2.prototype.MOD = function () {
		return this.getToken(t.MOD, 0);
	};
	Q2.prototype.DIV = function () {
		return this.getToken(t.DIV, 0);
	};
	Q2.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceStarOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceStarOperatorContext = Q2;
	t.prototype.precedenceStarOperator = function () {
		var u = new Q2(this, this._ctx, this.state);
		this.enterRule(u, 734, t.RULE_precedenceStarOperator);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4141),
				(e = this._input.LA(1)),
				((e - 361) & -32) == 0 &&
				((1 << (e - 361)) &
					((1 << (t.DIVIDE - 361)) | (1 << (t.STAR - 361)) | (1 << (t.MOD - 361)) | (1 << (t.DIV - 361)))) !==
					0
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ap(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedencePlusOperator),
			this
		);
	}
	Ap.prototype = Object.create(s.ParserRuleContext.prototype);
	Ap.prototype.constructor = Ap;
	Ap.prototype.PLUS = function () {
		return this.getToken(t.PLUS, 0);
	};
	Ap.prototype.MINUS = function () {
		return this.getToken(t.MINUS, 0);
	};
	Ap.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedencePlusOperator(this) : u.visitChildren(this);
	};
	t.PrecedencePlusOperatorContext = Ap;
	t.prototype.precedencePlusOperator = function () {
		var u = new Ap(this, this._ctx, this.state);
		this.enterRule(u, 736, t.RULE_precedencePlusOperator);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4143),
				(e = this._input.LA(1)),
				e === t.PLUS || e === t.MINUS
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function j3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceConcatenateOperator),
			this
		);
	}
	j3.prototype = Object.create(s.ParserRuleContext.prototype);
	j3.prototype.constructor = j3;
	j3.prototype.CONCATENATE = function () {
		return this.getToken(t.CONCATENATE, 0);
	};
	j3.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceConcatenateOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceConcatenateOperatorContext = j3;
	t.prototype.precedenceConcatenateOperator = function () {
		var u = new j3(this, this._ctx, this.state);
		this.enterRule(u, 738, t.RULE_precedenceConcatenateOperator);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4145), this.match(t.CONCATENATE);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function X3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceAmpersandOperator),
			this
		);
	}
	X3.prototype = Object.create(s.ParserRuleContext.prototype);
	X3.prototype.constructor = X3;
	X3.prototype.AMPERSAND = function () {
		return this.getToken(t.AMPERSAND, 0);
	};
	X3.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceAmpersandOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceAmpersandOperatorContext = X3;
	t.prototype.precedenceAmpersandOperator = function () {
		var u = new X3(this, this._ctx, this.state);
		this.enterRule(u, 740, t.RULE_precedenceAmpersandOperator);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4147), this.match(t.AMPERSAND);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Q3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceBitwiseOrOperator),
			this
		);
	}
	Q3.prototype = Object.create(s.ParserRuleContext.prototype);
	Q3.prototype.constructor = Q3;
	Q3.prototype.BITWISEOR = function () {
		return this.getToken(t.BITWISEOR, 0);
	};
	Q3.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceBitwiseOrOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceBitwiseOrOperatorContext = Q3;
	t.prototype.precedenceBitwiseOrOperator = function () {
		var u = new Q3(this, this._ctx, this.state);
		this.enterRule(u, 742, t.RULE_precedenceBitwiseOrOperator);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4149), this.match(t.BITWISEOR);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function q2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceRegexpOperator),
			this
		);
	}
	q2.prototype = Object.create(s.ParserRuleContext.prototype);
	q2.prototype.constructor = q2;
	q2.prototype.KW_LIKE = function () {
		return this.getToken(t.KW_LIKE, 0);
	};
	q2.prototype.KW_RLIKE = function () {
		return this.getToken(t.KW_RLIKE, 0);
	};
	q2.prototype.KW_REGEXP = function () {
		return this.getToken(t.KW_REGEXP, 0);
	};
	q2.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceRegexpOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceRegexpOperatorContext = q2;
	t.prototype.precedenceRegexpOperator = function () {
		var u = new q2(this, this._ctx, this.state);
		this.enterRule(u, 744, t.RULE_precedenceRegexpOperator);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4151),
				(e = this._input.LA(1)),
				e === t.KW_LIKE || e === t.KW_RLIKE || e === t.KW_REGEXP
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Gn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceSimilarOperator),
			this
		);
	}
	Gn.prototype = Object.create(s.ParserRuleContext.prototype);
	Gn.prototype.constructor = Gn;
	Gn.prototype.precedenceRegexpOperator = function () {
		return this.getTypedRuleContext(q2, 0);
	};
	Gn.prototype.LESSTHANOREQUALTO = function () {
		return this.getToken(t.LESSTHANOREQUALTO, 0);
	};
	Gn.prototype.LESSTHAN = function () {
		return this.getToken(t.LESSTHAN, 0);
	};
	Gn.prototype.GREATERTHANOREQUALTO = function () {
		return this.getToken(t.GREATERTHANOREQUALTO, 0);
	};
	Gn.prototype.GREATERTHAN = function () {
		return this.getToken(t.GREATERTHAN, 0);
	};
	Gn.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceSimilarOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceSimilarOperatorContext = Gn;
	t.prototype.precedenceSimilarOperator = function () {
		var u = new Gn(this, this._ctx, this.state);
		this.enterRule(u, 746, t.RULE_precedenceSimilarOperator);
		try {
			switch (((this.state = 4158), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_LIKE:
				case t.KW_RLIKE:
				case t.KW_REGEXP:
					this.enterOuterAlt(u, 1), (this.state = 4153), this.precedenceRegexpOperator();
					break;
				case t.LESSTHANOREQUALTO:
					this.enterOuterAlt(u, 2), (this.state = 4154), this.match(t.LESSTHANOREQUALTO);
					break;
				case t.LESSTHAN:
					this.enterOuterAlt(u, 3), (this.state = 4155), this.match(t.LESSTHAN);
					break;
				case t.GREATERTHANOREQUALTO:
					this.enterOuterAlt(u, 4), (this.state = 4156), this.match(t.GREATERTHANOREQUALTO);
					break;
				case t.GREATERTHAN:
					this.enterOuterAlt(u, 5), (this.state = 4157), this.match(t.GREATERTHAN);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function T1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceDistinctOperator),
			this
		);
	}
	T1.prototype = Object.create(s.ParserRuleContext.prototype);
	T1.prototype.constructor = T1;
	T1.prototype.KW_IS = function () {
		return this.getToken(t.KW_IS, 0);
	};
	T1.prototype.KW_DISTINCT = function () {
		return this.getToken(t.KW_DISTINCT, 0);
	};
	T1.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	T1.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceDistinctOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceDistinctOperatorContext = T1;
	t.prototype.precedenceDistinctOperator = function () {
		var u = new T1(this, this._ctx, this.state);
		this.enterRule(u, 748, t.RULE_precedenceDistinctOperator);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4160),
				this.match(t.KW_IS),
				(this.state = 4161),
				this.match(t.KW_DISTINCT),
				(this.state = 4162),
				this.match(t.KW_FROM);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function di(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceEqualOperator),
			this
		);
	}
	di.prototype = Object.create(s.ParserRuleContext.prototype);
	di.prototype.constructor = di;
	di.prototype.EQUAL = function () {
		return this.getToken(t.EQUAL, 0);
	};
	di.prototype.EQUAL_NS = function () {
		return this.getToken(t.EQUAL_NS, 0);
	};
	di.prototype.NOTEQUAL = function () {
		return this.getToken(t.NOTEQUAL, 0);
	};
	di.prototype.KW_IS = function () {
		return this.getToken(t.KW_IS, 0);
	};
	di.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	di.prototype.KW_DISTINCT = function () {
		return this.getToken(t.KW_DISTINCT, 0);
	};
	di.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	di.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceEqualOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceEqualOperatorContext = di;
	t.prototype.precedenceEqualOperator = function () {
		var u = new di(this, this._ctx, this.state);
		this.enterRule(u, 750, t.RULE_precedenceEqualOperator);
		try {
			switch (((this.state = 4171), this._errHandler.sync(this), this._input.LA(1))) {
				case t.EQUAL:
					this.enterOuterAlt(u, 1), (this.state = 4164), this.match(t.EQUAL);
					break;
				case t.EQUAL_NS:
					this.enterOuterAlt(u, 2), (this.state = 4165), this.match(t.EQUAL_NS);
					break;
				case t.NOTEQUAL:
					this.enterOuterAlt(u, 3), (this.state = 4166), this.match(t.NOTEQUAL);
					break;
				case t.KW_IS:
					this.enterOuterAlt(u, 4),
						(this.state = 4167),
						this.match(t.KW_IS),
						(this.state = 4168),
						this.match(t.KW_NOT),
						(this.state = 4169),
						this.match(t.KW_DISTINCT),
						(this.state = 4170),
						this.match(t.KW_FROM);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function q3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceNotOperator),
			this
		);
	}
	q3.prototype = Object.create(s.ParserRuleContext.prototype);
	q3.prototype.constructor = q3;
	q3.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	q3.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceNotOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceNotOperatorContext = q3;
	t.prototype.precedenceNotOperator = function () {
		var u = new q3(this, this._ctx, this.state);
		this.enterRule(u, 752, t.RULE_precedenceNotOperator);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4173), this.match(t.KW_NOT);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Z3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceAndOperator),
			this
		);
	}
	Z3.prototype = Object.create(s.ParserRuleContext.prototype);
	Z3.prototype.constructor = Z3;
	Z3.prototype.KW_AND = function () {
		return this.getToken(t.KW_AND, 0);
	};
	Z3.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceAndOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceAndOperatorContext = Z3;
	t.prototype.precedenceAndOperator = function () {
		var u = new Z3(this, this._ctx, this.state);
		this.enterRule(u, 754, t.RULE_precedenceAndOperator);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4175), this.match(t.KW_AND);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function J3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceOrOperator),
			this
		);
	}
	J3.prototype = Object.create(s.ParserRuleContext.prototype);
	J3.prototype.constructor = J3;
	J3.prototype.KW_OR = function () {
		return this.getToken(t.KW_OR, 0);
	};
	J3.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceOrOperator(this) : u.visitChildren(this);
	};
	t.PrecedenceOrOperatorContext = J3;
	t.prototype.precedenceOrOperator = function () {
		var u = new J3(this, this._ctx, this.state);
		this.enterRule(u, 756, t.RULE_precedenceOrOperator);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4177), this.match(t.KW_OR);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function P(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_expression),
			this
		);
	}
	P.prototype = Object.create(s.ParserRuleContext.prototype);
	P.prototype.constructor = P;
	P.prototype.atomExpression = function () {
		return this.getTypedRuleContext(Mu, 0);
	};
	P.prototype.LSQUARE = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.LSQUARE) : this.getToken(t.LSQUARE, u);
	};
	P.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	P.prototype.RSQUARE = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.RSQUARE) : this.getToken(t.RSQUARE, u);
	};
	P.prototype.DOT = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.DOT) : this.getToken(t.DOT, u);
	};
	P.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	P.prototype.precedenceUnaryOperator = function () {
		return this.getTypedRuleContext(E1, 0);
	};
	P.prototype.KW_EXISTS = function () {
		return this.getToken(t.KW_EXISTS, 0);
	};
	P.prototype.subQueryExpression = function () {
		return this.getTypedRuleContext(jn, 0);
	};
	P.prototype.precedenceNotOperator = function () {
		return this.getTypedRuleContext(q3, 0);
	};
	P.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	P.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	P.prototype.precedenceBitwiseXorOperator = function () {
		return this.getTypedRuleContext(G3, 0);
	};
	P.prototype.precedenceStarOperator = function () {
		return this.getTypedRuleContext(Q2, 0);
	};
	P.prototype.precedencePlusOperator = function () {
		return this.getTypedRuleContext(Ap, 0);
	};
	P.prototype.precedenceConcatenateOperator = function () {
		return this.getTypedRuleContext(j3, 0);
	};
	P.prototype.precedenceAmpersandOperator = function () {
		return this.getTypedRuleContext(X3, 0);
	};
	P.prototype.precedenceBitwiseOrOperator = function () {
		return this.getTypedRuleContext(Q3, 0);
	};
	P.prototype.precedenceEqualOperator = function () {
		return this.getTypedRuleContext(di, 0);
	};
	P.prototype.precedenceDistinctOperator = function () {
		return this.getTypedRuleContext(T1, 0);
	};
	P.prototype.precedenceAndOperator = function () {
		return this.getTypedRuleContext(Z3, 0);
	};
	P.prototype.precedenceOrOperator = function () {
		return this.getTypedRuleContext(J3, 0);
	};
	P.prototype.KW_IS = function () {
		return this.getToken(t.KW_IS, 0);
	};
	P.prototype.isCondition = function () {
		return this.getTypedRuleContext(X2, 0);
	};
	P.prototype.precedenceSimilarExpressionPart = function () {
		return this.getTypedRuleContext(Xn, 0);
	};
	P.prototype.accept = function (u) {
		return u instanceof d ? u.visitExpression(this) : u.visitChildren(this);
	};
	t.prototype.expression = function (u) {
		u === void 0 && (u = 0);
		var e = this._ctx,
			i = this.state,
			n = new P(this, this._ctx, i),
			a = n,
			o = 758;
		this.enterRecursionRule(n, 758, t.RULE_expression, u);
		try {
			this.enterOuterAlt(n, 1), (this.state = 4204), this._errHandler.sync(this);
			var c = this._interp.adaptivePredict(this._input, 490, this._ctx);
			switch (c) {
				case 1:
					(this.state = 4180), this.atomExpression(), (this.state = 4189), this._errHandler.sync(this);
					for (
						var h = this._interp.adaptivePredict(this._input, 489, this._ctx);
						h != 2 && h != s.atn.ATN.INVALID_ALT_NUMBER;

					) {
						if (h === 1)
							switch (((this.state = 4187), this._errHandler.sync(this), this._input.LA(1))) {
								case t.LSQUARE:
									(this.state = 4181),
										this.match(t.LSQUARE),
										(this.state = 4182),
										this.expression(0),
										(this.state = 4183),
										this.match(t.RSQUARE);
									break;
								case t.DOT:
									(this.state = 4185), this.match(t.DOT), (this.state = 4186), this.identifier();
									break;
								default:
									throw new s.error.NoViableAltException(this);
							}
						(this.state = 4191),
							this._errHandler.sync(this),
							(h = this._interp.adaptivePredict(this._input, 489, this._ctx));
					}
					break;
				case 2:
					(this.state = 4192), this.precedenceUnaryOperator(), (this.state = 4193), this.expression(15);
					break;
				case 3:
					(this.state = 4195), this.match(t.KW_EXISTS), (this.state = 4196), this.subQueryExpression();
					break;
				case 4:
					(this.state = 4197), this.precedenceNotOperator(), (this.state = 4198), this.expression(4);
					break;
				case 5:
					(this.state = 4200),
						this.match(t.LPAREN),
						(this.state = 4201),
						this.expression(0),
						(this.state = 4202),
						this.match(t.RPAREN);
					break;
			}
			(this._ctx.stop = this._input.LT(-1)), (this.state = 4252), this._errHandler.sync(this);
			for (
				var h = this._interp.adaptivePredict(this._input, 493, this._ctx);
				h != 2 && h != s.atn.ATN.INVALID_ALT_NUMBER;

			) {
				if (h === 1) {
					this._parseListeners !== null && this.triggerExitRuleEvent(),
						(a = n),
						(this.state = 4250),
						this._errHandler.sync(this);
					var c = this._interp.adaptivePredict(this._input, 492, this._ctx);
					switch (c) {
						case 1:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4206),
								!this.precpred(this._ctx, 13))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 13)');
							(this.state = 4207),
								this.precedenceBitwiseXorOperator(),
								(this.state = 4208),
								this.expression(14);
							break;
						case 2:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4210),
								!this.precpred(this._ctx, 12))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 12)');
							(this.state = 4211),
								this.precedenceStarOperator(),
								(this.state = 4212),
								this.expression(13);
							break;
						case 3:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4214),
								!this.precpred(this._ctx, 11))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 11)');
							(this.state = 4215),
								this.precedencePlusOperator(),
								(this.state = 4216),
								this.expression(12);
							break;
						case 4:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4218),
								!this.precpred(this._ctx, 10))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 10)');
							(this.state = 4219),
								this.precedenceConcatenateOperator(),
								(this.state = 4220),
								this.expression(11);
							break;
						case 5:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4222),
								!this.precpred(this._ctx, 9))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 9)');
							(this.state = 4223),
								this.precedenceAmpersandOperator(),
								(this.state = 4224),
								this.expression(10);
							break;
						case 6:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4226),
								!this.precpred(this._ctx, 8))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 8)');
							(this.state = 4227),
								this.precedenceBitwiseOrOperator(),
								(this.state = 4228),
								this.expression(9);
							break;
						case 7:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4230),
								!this.precpred(this._ctx, 5))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 5)');
							(this.state = 4233), this._errHandler.sync(this);
							var c = this._interp.adaptivePredict(this._input, 491, this._ctx);
							switch (c) {
								case 1:
									(this.state = 4231), this.precedenceEqualOperator();
									break;
								case 2:
									(this.state = 4232), this.precedenceDistinctOperator();
									break;
							}
							(this.state = 4235), this.expression(6);
							break;
						case 8:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4237),
								!this.precpred(this._ctx, 3))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 3)');
							(this.state = 4238), this.precedenceAndOperator(), (this.state = 4239), this.expression(4);
							break;
						case 9:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4241),
								!this.precpred(this._ctx, 2))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 2)');
							(this.state = 4242), this.precedenceOrOperator(), (this.state = 4243), this.expression(3);
							break;
						case 10:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4245),
								!this.precpred(this._ctx, 14))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 14)');
							(this.state = 4246), this.match(t.KW_IS), (this.state = 4247), this.isCondition();
							break;
						case 11:
							if (
								((n = new P(this, e, i)),
								this.pushNewRecursionContext(n, o, t.RULE_expression),
								(this.state = 4248),
								!this.precpred(this._ctx, 7))
							)
								throw new s.error.FailedPredicateException(this, 'this.precpred(this._ctx, 7)');
							(this.state = 4249), this.precedenceSimilarExpressionPart();
							break;
					}
				}
				(this.state = 4254),
					this._errHandler.sync(this),
					(h = this._interp.adaptivePredict(this._input, 493, this._ctx));
			}
		} catch (_) {
			if (_ instanceof s.error.RecognitionException)
				(n.exception = _), this._errHandler.reportError(this, _), this._errHandler.recover(this, _);
			else throw _;
		} finally {
			this.unrollRecursionContexts(e);
		}
		return n;
	};
	function jn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_subQueryExpression),
			this
		);
	}
	jn.prototype = Object.create(s.ParserRuleContext.prototype);
	jn.prototype.constructor = jn;
	jn.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	jn.prototype.selectStatement = function () {
		return this.getTypedRuleContext(ht, 0);
	};
	jn.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	jn.prototype.accept = function (u) {
		return u instanceof d ? u.visitSubQueryExpression(this) : u.visitChildren(this);
	};
	t.SubQueryExpressionContext = jn;
	t.prototype.subQueryExpression = function () {
		var u = new jn(this, this._ctx, this.state);
		this.enterRule(u, 760, t.RULE_subQueryExpression);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4255),
				this.match(t.LPAREN),
				(this.state = 4256),
				this.selectStatement(),
				(this.state = 4257),
				this.match(t.RPAREN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Xn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceSimilarExpressionPart),
			this
		);
	}
	Xn.prototype = Object.create(s.ParserRuleContext.prototype);
	Xn.prototype.constructor = Xn;
	Xn.prototype.precedenceSimilarOperator = function () {
		return this.getTypedRuleContext(Gn, 0);
	};
	Xn.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	Xn.prototype.precedenceSimilarExpressionAtom = function () {
		return this.getTypedRuleContext(Et, 0);
	};
	Xn.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	Xn.prototype.precedenceSimilarExpressionPartNot = function () {
		return this.getTypedRuleContext(R1, 0);
	};
	Xn.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceSimilarExpressionPart(this) : u.visitChildren(this);
	};
	t.PrecedenceSimilarExpressionPartContext = Xn;
	t.prototype.precedenceSimilarExpressionPart = function () {
		var u = new Xn(this, this._ctx, this.state);
		this.enterRule(u, 762, t.RULE_precedenceSimilarExpressionPart);
		try {
			(this.state = 4265), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 494, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 4259),
						this.precedenceSimilarOperator(),
						(this.state = 4260),
						this.expression(0);
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 4262), this.precedenceSimilarExpressionAtom();
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 4263),
						this.match(t.KW_NOT),
						(this.state = 4264),
						this.precedenceSimilarExpressionPartNot();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Et(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceSimilarExpressionAtom),
			this
		);
	}
	Et.prototype = Object.create(s.ParserRuleContext.prototype);
	Et.prototype.constructor = Et;
	Et.prototype.KW_IN = function () {
		return this.getToken(t.KW_IN, 0);
	};
	Et.prototype.precedenceSimilarExpressionIn = function () {
		return this.getTypedRuleContext(Wp, 0);
	};
	Et.prototype.KW_BETWEEN = function () {
		return this.getToken(t.KW_BETWEEN, 0);
	};
	Et.prototype.expression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(P) : this.getTypedRuleContext(P, u);
	};
	Et.prototype.KW_AND = function () {
		return this.getToken(t.KW_AND, 0);
	};
	Et.prototype.KW_LIKE = function () {
		return this.getToken(t.KW_LIKE, 0);
	};
	Et.prototype.KW_ANY = function () {
		return this.getToken(t.KW_ANY, 0);
	};
	Et.prototype.expressionsInParenthesis = function () {
		return this.getTypedRuleContext(hi, 0);
	};
	Et.prototype.KW_ALL = function () {
		return this.getToken(t.KW_ALL, 0);
	};
	Et.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceSimilarExpressionAtom(this) : u.visitChildren(this);
	};
	t.PrecedenceSimilarExpressionAtomContext = Et;
	t.prototype.precedenceSimilarExpressionAtom = function () {
		var u = new Et(this, this._ctx, this.state);
		this.enterRule(u, 764, t.RULE_precedenceSimilarExpressionAtom);
		try {
			(this.state = 4280), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 495, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 4267),
						this.match(t.KW_IN),
						(this.state = 4268),
						this.precedenceSimilarExpressionIn();
					break;
				case 2:
					this.enterOuterAlt(u, 2),
						(this.state = 4269),
						this.match(t.KW_BETWEEN),
						(this.state = 4270),
						this.expression(0),
						(this.state = 4271),
						this.match(t.KW_AND),
						(this.state = 4272),
						this.expression(0);
					break;
				case 3:
					this.enterOuterAlt(u, 3),
						(this.state = 4274),
						this.match(t.KW_LIKE),
						(this.state = 4275),
						this.match(t.KW_ANY),
						(this.state = 4276),
						this.expressionsInParenthesis();
					break;
				case 4:
					this.enterOuterAlt(u, 4),
						(this.state = 4277),
						this.match(t.KW_LIKE),
						(this.state = 4278),
						this.match(t.KW_ALL),
						(this.state = 4279),
						this.expressionsInParenthesis();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Wp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceSimilarExpressionIn),
			this
		);
	}
	Wp.prototype = Object.create(s.ParserRuleContext.prototype);
	Wp.prototype.constructor = Wp;
	Wp.prototype.subQueryExpression = function () {
		return this.getTypedRuleContext(jn, 0);
	};
	Wp.prototype.expressionsInParenthesis = function () {
		return this.getTypedRuleContext(hi, 0);
	};
	Wp.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceSimilarExpressionIn(this) : u.visitChildren(this);
	};
	t.PrecedenceSimilarExpressionInContext = Wp;
	t.prototype.precedenceSimilarExpressionIn = function () {
		var u = new Wp(this, this._ctx, this.state);
		this.enterRule(u, 766, t.RULE_precedenceSimilarExpressionIn);
		try {
			(this.state = 4284), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 496, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 4282), this.subQueryExpression();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 4283), this.expressionsInParenthesis();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function R1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_precedenceSimilarExpressionPartNot),
			this
		);
	}
	R1.prototype = Object.create(s.ParserRuleContext.prototype);
	R1.prototype.constructor = R1;
	R1.prototype.precedenceRegexpOperator = function () {
		return this.getTypedRuleContext(q2, 0);
	};
	R1.prototype.expression = function () {
		return this.getTypedRuleContext(P, 0);
	};
	R1.prototype.precedenceSimilarExpressionAtom = function () {
		return this.getTypedRuleContext(Et, 0);
	};
	R1.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrecedenceSimilarExpressionPartNot(this) : u.visitChildren(this);
	};
	t.PrecedenceSimilarExpressionPartNotContext = R1;
	t.prototype.precedenceSimilarExpressionPartNot = function () {
		var u = new R1(this, this._ctx, this.state);
		this.enterRule(u, 768, t.RULE_precedenceSimilarExpressionPartNot);
		try {
			(this.state = 4290), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 497, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 4286),
						this.precedenceRegexpOperator(),
						(this.state = 4287),
						this.expression(0);
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 4289), this.precedenceSimilarExpressionAtom();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function m1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_booleanValue),
			this
		);
	}
	m1.prototype = Object.create(s.ParserRuleContext.prototype);
	m1.prototype.constructor = m1;
	m1.prototype.KW_TRUE = function () {
		return this.getToken(t.KW_TRUE, 0);
	};
	m1.prototype.KW_FALSE = function () {
		return this.getToken(t.KW_FALSE, 0);
	};
	m1.prototype.accept = function (u) {
		return u instanceof d ? u.visitBooleanValue(this) : u.visitChildren(this);
	};
	t.BooleanValueContext = m1;
	t.prototype.booleanValue = function () {
		var u = new m1(this, this._ctx, this.state);
		this.enterRule(u, 770, t.RULE_booleanValue);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4292),
				(e = this._input.LA(1)),
				e === t.KW_TRUE || e === t.KW_FALSE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Kp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_booleanValueTok),
			this
		);
	}
	Kp.prototype = Object.create(s.ParserRuleContext.prototype);
	Kp.prototype.constructor = Kp;
	Kp.prototype.KW_TRUE = function () {
		return this.getToken(t.KW_TRUE, 0);
	};
	Kp.prototype.KW_FALSE = function () {
		return this.getToken(t.KW_FALSE, 0);
	};
	Kp.prototype.accept = function (u) {
		return u instanceof d ? u.visitBooleanValueTok(this) : u.visitChildren(this);
	};
	t.BooleanValueTokContext = Kp;
	t.prototype.booleanValueTok = function () {
		var u = new Kp(this, this._ctx, this.state);
		this.enterRule(u, 772, t.RULE_booleanValueTok);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4294),
				(e = this._input.LA(1)),
				e === t.KW_TRUE || e === t.KW_FALSE
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function fi(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_tableOrPartition),
			this
		);
	}
	fi.prototype = Object.create(s.ParserRuleContext.prototype);
	fi.prototype.constructor = fi;
	fi.prototype.tableName = function () {
		return this.getTypedRuleContext(X, 0);
	};
	fi.prototype.partitionSpec = function () {
		return this.getTypedRuleContext($, 0);
	};
	fi.prototype.accept = function (u) {
		return u instanceof d ? u.visitTableOrPartition(this) : u.visitChildren(this);
	};
	t.TableOrPartitionContext = fi;
	t.prototype.tableOrPartition = function () {
		var u = new fi(this, this._ctx, this.state);
		this.enterRule(u, 774, t.RULE_tableOrPartition);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4296),
				this.tableName(),
				(this.state = 4298),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_PARTITION && ((this.state = 4297), this.partitionSpec());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_partitionSpec),
			this
		);
	}
	$.prototype = Object.create(s.ParserRuleContext.prototype);
	$.prototype.constructor = $;
	$.prototype.KW_PARTITION = function () {
		return this.getToken(t.KW_PARTITION, 0);
	};
	$.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	$.prototype.partitionVal = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Z2) : this.getTypedRuleContext(Z2, u);
	};
	$.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	$.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	$.prototype.accept = function (u) {
		return u instanceof d ? u.visitPartitionSpec(this) : u.visitChildren(this);
	};
	t.PartitionSpecContext = $;
	t.prototype.partitionSpec = function () {
		var u = new $(this, this._ctx, this.state);
		this.enterRule(u, 776, t.RULE_partitionSpec);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 4300,
					this.match(t.KW_PARTITION),
					this.state = 4301,
					this.match(t.LPAREN),
					this.state = 4302,
					this.partitionVal(),
					this.state = 4307,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 4303),
					this.match(t.COMMA),
					(this.state = 4304),
					this.partitionVal(),
					(this.state = 4309),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 4310), this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Z2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_partitionVal),
			this
		);
	}
	Z2.prototype = Object.create(s.ParserRuleContext.prototype);
	Z2.prototype.constructor = Z2;
	Z2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Z2.prototype.EQUAL = function () {
		return this.getToken(t.EQUAL, 0);
	};
	Z2.prototype.constant = function () {
		return this.getTypedRuleContext(S0, 0);
	};
	Z2.prototype.accept = function (u) {
		return u instanceof d ? u.visitPartitionVal(this) : u.visitChildren(this);
	};
	t.PartitionValContext = Z2;
	t.prototype.partitionVal = function () {
		var u = new Z2(this, this._ctx, this.state);
		this.enterRule(u, 778, t.RULE_partitionVal);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4312),
				this.identifier(),
				(this.state = 4315),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.EQUAL && ((this.state = 4313), this.match(t.EQUAL), (this.state = 4314), this.constant());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Cr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropPartitionSpec),
			this
		);
	}
	Cr.prototype = Object.create(s.ParserRuleContext.prototype);
	Cr.prototype.constructor = Cr;
	Cr.prototype.KW_PARTITION = function () {
		return this.getToken(t.KW_PARTITION, 0);
	};
	Cr.prototype.LPAREN = function () {
		return this.getToken(t.LPAREN, 0);
	};
	Cr.prototype.dropPartitionVal = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(J2) : this.getTypedRuleContext(J2, u);
	};
	Cr.prototype.RPAREN = function () {
		return this.getToken(t.RPAREN, 0);
	};
	Cr.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Cr.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropPartitionSpec(this) : u.visitChildren(this);
	};
	t.DropPartitionSpecContext = Cr;
	t.prototype.dropPartitionSpec = function () {
		var u = new Cr(this, this._ctx, this.state);
		this.enterRule(u, 780, t.RULE_dropPartitionSpec);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 4317,
					this.match(t.KW_PARTITION),
					this.state = 4318,
					this.match(t.LPAREN),
					this.state = 4319,
					this.dropPartitionVal(),
					this.state = 4324,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 4320),
					this.match(t.COMMA),
					(this.state = 4321),
					this.dropPartitionVal(),
					(this.state = 4326),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
			(this.state = 4327), this.match(t.RPAREN);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function J2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropPartitionVal),
			this
		);
	}
	J2.prototype = Object.create(s.ParserRuleContext.prototype);
	J2.prototype.constructor = J2;
	J2.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	J2.prototype.dropPartitionOperator = function () {
		return this.getTypedRuleContext(br, 0);
	};
	J2.prototype.constant = function () {
		return this.getTypedRuleContext(S0, 0);
	};
	J2.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropPartitionVal(this) : u.visitChildren(this);
	};
	t.DropPartitionValContext = J2;
	t.prototype.dropPartitionVal = function () {
		var u = new J2(this, this._ctx, this.state);
		this.enterRule(u, 782, t.RULE_dropPartitionVal);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4329),
				this.identifier(),
				(this.state = 4330),
				this.dropPartitionOperator(),
				(this.state = 4331),
				this.constant();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function br(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropPartitionOperator),
			this
		);
	}
	br.prototype = Object.create(s.ParserRuleContext.prototype);
	br.prototype.constructor = br;
	br.prototype.EQUAL = function () {
		return this.getToken(t.EQUAL, 0);
	};
	br.prototype.NOTEQUAL = function () {
		return this.getToken(t.NOTEQUAL, 0);
	};
	br.prototype.LESSTHANOREQUALTO = function () {
		return this.getToken(t.LESSTHANOREQUALTO, 0);
	};
	br.prototype.LESSTHAN = function () {
		return this.getToken(t.LESSTHAN, 0);
	};
	br.prototype.GREATERTHANOREQUALTO = function () {
		return this.getToken(t.GREATERTHANOREQUALTO, 0);
	};
	br.prototype.GREATERTHAN = function () {
		return this.getToken(t.GREATERTHAN, 0);
	};
	br.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropPartitionOperator(this) : u.visitChildren(this);
	};
	t.DropPartitionOperatorContext = br;
	t.prototype.dropPartitionOperator = function () {
		var u = new br(this, this._ctx, this.state);
		this.enterRule(u, 784, t.RULE_dropPartitionOperator);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4333),
				(e = this._input.LA(1)),
				((e - 354) & -32) == 0 &&
				((1 << (e - 354)) &
					((1 << (t.EQUAL - 354)) |
						(1 << (t.NOTEQUAL - 354)) |
						(1 << (t.LESSTHANOREQUALTO - 354)) |
						(1 << (t.LESSTHAN - 354)) |
						(1 << (t.GREATERTHANOREQUALTO - 354)) |
						(1 << (t.GREATERTHAN - 354)))) !==
					0
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function F(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_sysFuncNames),
			this
		);
	}
	F.prototype = Object.create(s.ParserRuleContext.prototype);
	F.prototype.constructor = F;
	F.prototype.KW_AND = function () {
		return this.getToken(t.KW_AND, 0);
	};
	F.prototype.KW_OR = function () {
		return this.getToken(t.KW_OR, 0);
	};
	F.prototype.KW_NOT = function () {
		return this.getToken(t.KW_NOT, 0);
	};
	F.prototype.KW_LIKE = function () {
		return this.getToken(t.KW_LIKE, 0);
	};
	F.prototype.KW_IF = function () {
		return this.getToken(t.KW_IF, 0);
	};
	F.prototype.KW_CASE = function () {
		return this.getToken(t.KW_CASE, 0);
	};
	F.prototype.KW_WHEN = function () {
		return this.getToken(t.KW_WHEN, 0);
	};
	F.prototype.KW_FLOOR = function () {
		return this.getToken(t.KW_FLOOR, 0);
	};
	F.prototype.KW_TINYINT = function () {
		return this.getToken(t.KW_TINYINT, 0);
	};
	F.prototype.KW_SMALLINT = function () {
		return this.getToken(t.KW_SMALLINT, 0);
	};
	F.prototype.KW_INT = function () {
		return this.getToken(t.KW_INT, 0);
	};
	F.prototype.KW_BIGINT = function () {
		return this.getToken(t.KW_BIGINT, 0);
	};
	F.prototype.KW_FLOAT = function () {
		return this.getToken(t.KW_FLOAT, 0);
	};
	F.prototype.KW_DOUBLE = function () {
		return this.getToken(t.KW_DOUBLE, 0);
	};
	F.prototype.KW_BOOLEAN = function () {
		return this.getToken(t.KW_BOOLEAN, 0);
	};
	F.prototype.KW_STRING = function () {
		return this.getToken(t.KW_STRING, 0);
	};
	F.prototype.KW_BINARY = function () {
		return this.getToken(t.KW_BINARY, 0);
	};
	F.prototype.KW_ARRAY = function () {
		return this.getToken(t.KW_ARRAY, 0);
	};
	F.prototype.KW_MAP = function () {
		return this.getToken(t.KW_MAP, 0);
	};
	F.prototype.KW_STRUCT = function () {
		return this.getToken(t.KW_STRUCT, 0);
	};
	F.prototype.KW_UNIONTYPE = function () {
		return this.getToken(t.KW_UNIONTYPE, 0);
	};
	F.prototype.EQUAL = function () {
		return this.getToken(t.EQUAL, 0);
	};
	F.prototype.EQUAL_NS = function () {
		return this.getToken(t.EQUAL_NS, 0);
	};
	F.prototype.NOTEQUAL = function () {
		return this.getToken(t.NOTEQUAL, 0);
	};
	F.prototype.LESSTHANOREQUALTO = function () {
		return this.getToken(t.LESSTHANOREQUALTO, 0);
	};
	F.prototype.LESSTHAN = function () {
		return this.getToken(t.LESSTHAN, 0);
	};
	F.prototype.GREATERTHANOREQUALTO = function () {
		return this.getToken(t.GREATERTHANOREQUALTO, 0);
	};
	F.prototype.GREATERTHAN = function () {
		return this.getToken(t.GREATERTHAN, 0);
	};
	F.prototype.DIVIDE = function () {
		return this.getToken(t.DIVIDE, 0);
	};
	F.prototype.PLUS = function () {
		return this.getToken(t.PLUS, 0);
	};
	F.prototype.MINUS = function () {
		return this.getToken(t.MINUS, 0);
	};
	F.prototype.STAR = function () {
		return this.getToken(t.STAR, 0);
	};
	F.prototype.MOD = function () {
		return this.getToken(t.MOD, 0);
	};
	F.prototype.DIV = function () {
		return this.getToken(t.DIV, 0);
	};
	F.prototype.AMPERSAND = function () {
		return this.getToken(t.AMPERSAND, 0);
	};
	F.prototype.TILDE = function () {
		return this.getToken(t.TILDE, 0);
	};
	F.prototype.BITWISEOR = function () {
		return this.getToken(t.BITWISEOR, 0);
	};
	F.prototype.BITWISEXOR = function () {
		return this.getToken(t.BITWISEXOR, 0);
	};
	F.prototype.KW_RLIKE = function () {
		return this.getToken(t.KW_RLIKE, 0);
	};
	F.prototype.KW_REGEXP = function () {
		return this.getToken(t.KW_REGEXP, 0);
	};
	F.prototype.KW_IN = function () {
		return this.getToken(t.KW_IN, 0);
	};
	F.prototype.KW_BETWEEN = function () {
		return this.getToken(t.KW_BETWEEN, 0);
	};
	F.prototype.accept = function (u) {
		return u instanceof d ? u.visitSysFuncNames(this) : u.visitChildren(this);
	};
	t.SysFuncNamesContext = F;
	t.prototype.sysFuncNames = function () {
		var u = new F(this, this._ctx, this.state);
		this.enterRule(u, 786, t.RULE_sysFuncNames);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4335),
				(e = this._input.LA(1)),
				((e & -32) == 0 &&
					((1 << e) &
						((1 << t.KW_AND) | (1 << t.KW_OR) | (1 << t.KW_NOT) | (1 << t.KW_LIKE) | (1 << t.KW_IF))) !==
						0) ||
				(((e - 77) & -32) == 0 &&
					((1 << (e - 77)) &
						((1 << (t.KW_BOOLEAN - 77)) |
							(1 << (t.KW_TINYINT - 77)) |
							(1 << (t.KW_SMALLINT - 77)) |
							(1 << (t.KW_INT - 77)) |
							(1 << (t.KW_BIGINT - 77)) |
							(1 << (t.KW_FLOAT - 77)) |
							(1 << (t.KW_DOUBLE - 77)) |
							(1 << (t.KW_STRING - 77)) |
							(1 << (t.KW_ARRAY - 77)) |
							(1 << (t.KW_STRUCT - 77)) |
							(1 << (t.KW_MAP - 77)) |
							(1 << (t.KW_UNIONTYPE - 77)))) !==
						0) ||
				(((e - 136) & -32) == 0 &&
					((1 << (e - 136)) &
						((1 << (t.KW_RLIKE - 136)) |
							(1 << (t.KW_REGEXP - 136)) |
							(1 << (t.KW_CASE - 136)) |
							(1 << (t.KW_WHEN - 136)))) !==
						0) ||
				(((e - 180) & -32) == 0 &&
					((1 << (e - 180)) &
						((1 << (t.KW_IN - 180)) | (1 << (t.KW_BETWEEN - 180)) | (1 << (t.KW_BINARY - 180)))) !==
						0) ||
				e === t.KW_FLOOR ||
				(((e - 354) & -32) == 0 &&
					((1 << (e - 354)) &
						((1 << (t.EQUAL - 354)) |
							(1 << (t.EQUAL_NS - 354)) |
							(1 << (t.NOTEQUAL - 354)) |
							(1 << (t.LESSTHANOREQUALTO - 354)) |
							(1 << (t.LESSTHAN - 354)) |
							(1 << (t.GREATERTHANOREQUALTO - 354)) |
							(1 << (t.GREATERTHAN - 354)) |
							(1 << (t.DIVIDE - 354)) |
							(1 << (t.PLUS - 354)) |
							(1 << (t.MINUS - 354)) |
							(1 << (t.STAR - 354)) |
							(1 << (t.MOD - 354)) |
							(1 << (t.DIV - 354)) |
							(1 << (t.AMPERSAND - 354)) |
							(1 << (t.TILDE - 354)) |
							(1 << (t.BITWISEOR - 354)) |
							(1 << (t.BITWISEXOR - 354)))) !==
						0)
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function y1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_descFuncNames),
			this
		);
	}
	y1.prototype = Object.create(s.ParserRuleContext.prototype);
	y1.prototype.constructor = y1;
	y1.prototype.sysFuncNames = function () {
		return this.getTypedRuleContext(F, 0);
	};
	y1.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	y1.prototype.functionIdentifier = function () {
		return this.getTypedRuleContext(Ar, 0);
	};
	y1.prototype.accept = function (u) {
		return u instanceof d ? u.visitDescFuncNames(this) : u.visitChildren(this);
	};
	t.DescFuncNamesContext = y1;
	t.prototype.descFuncNames = function () {
		var u = new y1(this, this._ctx, this.state);
		this.enterRule(u, 788, t.RULE_descFuncNames);
		try {
			(this.state = 4340), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 502, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 4337), this.sysFuncNames();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 4338), this.match(t.StringLiteral);
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 4339), this.functionIdentifier();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function x(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_identifier),
			this
		);
	}
	x.prototype = Object.create(s.ParserRuleContext.prototype);
	x.prototype.constructor = x;
	x.prototype.Identifier = function () {
		return this.getToken(t.Identifier, 0);
	};
	x.prototype.nonReserved = function () {
		return this.getTypedRuleContext(b, 0);
	};
	x.prototype.accept = function (u) {
		return u instanceof d ? u.visitIdentifier(this) : u.visitChildren(this);
	};
	t.IdentifierContext = x;
	t.prototype.identifier = function () {
		var u = new x(this, this._ctx, this.state);
		this.enterRule(u, 790, t.RULE_identifier);
		try {
			switch (((this.state = 4344), this._errHandler.sync(this), this._input.LA(1))) {
				case t.Identifier:
					this.enterOuterAlt(u, 1), (this.state = 4342), this.match(t.Identifier);
					break;
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
					this.enterOuterAlt(u, 2), (this.state = 4343), this.nonReserved();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ar(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_functionIdentifier),
			this
		);
	}
	Ar.prototype = Object.create(s.ParserRuleContext.prototype);
	Ar.prototype.constructor = Ar;
	Ar.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	Ar.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	Ar.prototype.accept = function (u) {
		return u instanceof d ? u.visitFunctionIdentifier(this) : u.visitChildren(this);
	};
	t.FunctionIdentifierContext = Ar;
	t.prototype.functionIdentifier = function () {
		var u = new Ar(this, this._ctx, this.state);
		this.enterRule(u, 792, t.RULE_functionIdentifier);
		try {
			(this.state = 4351), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 504, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1),
						(this.state = 4346),
						this.identifier(),
						(this.state = 4347),
						this.match(t.DOT),
						(this.state = 4348),
						this.identifier();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 4350), this.identifier();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function xp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_principalIdentifier),
			this
		);
	}
	xp.prototype = Object.create(s.ParserRuleContext.prototype);
	xp.prototype.constructor = xp;
	xp.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	xp.prototype.QuotedIdentifier = function () {
		return this.getToken(t.QuotedIdentifier, 0);
	};
	xp.prototype.accept = function (u) {
		return u instanceof d ? u.visitPrincipalIdentifier(this) : u.visitChildren(this);
	};
	t.PrincipalIdentifierContext = xp;
	t.prototype.principalIdentifier = function () {
		var u = new xp(this, this._ctx, this.state);
		this.enterRule(u, 794, t.RULE_principalIdentifier);
		try {
			switch (((this.state = 4355), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ASC:
				case t.KW_DESC:
				case t.KW_NULLS:
				case t.KW_LAST:
				case t.KW_OVERWRITE:
				case t.KW_PARTITIONS:
				case t.KW_TABLES:
				case t.KW_COLUMNS:
				case t.KW_INDEX:
				case t.KW_INDEXES:
				case t.KW_REBUILD:
				case t.KW_FUNCTIONS:
				case t.KW_SHOW:
				case t.KW_MSCK:
				case t.KW_REPAIR:
				case t.KW_DIRECTORY:
				case t.KW_CLUSTER:
				case t.KW_DISTRIBUTE:
				case t.KW_SORT:
				case t.KW_LOAD:
				case t.KW_EXPORT:
				case t.KW_REPLICATION:
				case t.KW_METADATA:
				case t.KW_DATA:
				case t.KW_INPATH:
				case t.KW_CHANGE:
				case t.KW_FIRST:
				case t.KW_AFTER:
				case t.KW_RENAME:
				case t.KW_COMMENT:
				case t.KW_TINYINT:
				case t.KW_DATETIME:
				case t.KW_ZONE:
				case t.KW_STRING:
				case t.KW_STRUCT:
				case t.KW_UNIONTYPE:
				case t.KW_PARTITIONED:
				case t.KW_CLUSTERED:
				case t.KW_SORTED:
				case t.KW_BUCKETS:
				case t.KW_FORMAT:
				case t.KW_DELIMITED:
				case t.KW_FIELDS:
				case t.KW_TERMINATED:
				case t.KW_ESCAPED:
				case t.KW_COLLECTION:
				case t.KW_ITEMS:
				case t.KW_KEYS:
				case t.KW_KEY_TYPE:
				case t.KW_KILL:
				case t.KW_LINES:
				case t.KW_STORED:
				case t.KW_FILEFORMAT:
				case t.KW_INPUTFORMAT:
				case t.KW_OUTPUTFORMAT:
				case t.KW_INPUTDRIVER:
				case t.KW_OUTPUTDRIVER:
				case t.KW_ENABLE:
				case t.KW_DISABLE:
				case t.KW_LOCATION:
				case t.KW_BUCKET:
				case t.KW_ADD:
				case t.KW_REPLACE:
				case t.KW_TEMPORARY:
				case t.KW_FILE:
				case t.KW_JAR:
				case t.KW_EXPLAIN:
				case t.KW_FORMATTED:
				case t.KW_DEPENDENCY:
				case t.KW_LOGICAL:
				case t.KW_SERDE:
				case t.KW_DEFERRED:
				case t.KW_SERDEPROPERTIES:
				case t.KW_DBPROPERTIES:
				case t.KW_LIMIT:
				case t.KW_OFFSET:
				case t.KW_UNSET:
				case t.KW_TBLPROPERTIES:
				case t.KW_IDXPROPERTIES:
				case t.KW_VALUE_TYPE:
				case t.KW_ELEM_TYPE:
				case t.KW_DEFINED:
				case t.KW_MAPJOIN:
				case t.KW_STREAMTABLE:
				case t.KW_CLUSTERSTATUS:
				case t.KW_UTC:
				case t.KW_UTCTIMESTAMP:
				case t.KW_LONG:
				case t.KW_PLUS:
				case t.KW_VIEW:
				case t.KW_VIEWS:
				case t.KW_DATABASES:
				case t.KW_MATERIALIZED:
				case t.KW_SCHEMA:
				case t.KW_SCHEMAS:
				case t.KW_SSL:
				case t.KW_UNDO:
				case t.KW_LOCK:
				case t.KW_LOCKS:
				case t.KW_UNLOCK:
				case t.KW_SHARED:
				case t.KW_EXCLUSIVE:
				case t.KW_UNSIGNED:
				case t.KW_WHILE:
				case t.KW_READ:
				case t.KW_PURGE:
				case t.KW_ANALYZE:
				case t.KW_BEFORE:
				case t.KW_CONTINUE:
				case t.KW_RECORDREADER:
				case t.KW_RECORDWRITER:
				case t.KW_SEMI:
				case t.KW_TOUCH:
				case t.KW_ARCHIVE:
				case t.KW_UNARCHIVE:
				case t.KW_COMPUTE:
				case t.KW_STATISTICS:
				case t.KW_USE:
				case t.KW_OPTION:
				case t.KW_CONCATENATE:
				case t.KW_SHOW_DATABASE:
				case t.KW_RESTRICT:
				case t.KW_CASCADE:
				case t.KW_SKEWED:
				case t.KW_DIRECTORIES:
				case t.KW_SETS:
				case t.KW_NOSCAN:
				case t.KW_ROLE:
				case t.KW_ROLES:
				case t.KW_URI:
				case t.KW_SERVER:
				case t.KW_ADMIN:
				case t.KW_OWNER:
				case t.KW_PRINCIPALS:
				case t.KW_COMPACT:
				case t.KW_COMPACTIONS:
				case t.KW_TRANSACTIONS:
				case t.KW_REWRITE:
				case t.KW_REOPTIMIZATION:
				case t.KW_RELOAD:
				case t.KW_YEAR:
				case t.KW_QUERY:
				case t.KW_QUARTER:
				case t.KW_MONTH:
				case t.KW_WEEK:
				case t.KW_DAY:
				case t.KW_DOW:
				case t.KW_HOUR:
				case t.KW_MINUTE:
				case t.KW_SECOND:
				case t.KW_TRANSACTION:
				case t.KW_WORK:
				case t.KW_WRITE:
				case t.KW_ISOLATION:
				case t.KW_LEVEL:
				case t.KW_SNAPSHOT:
				case t.KW_AUTOCOMMIT:
				case t.KW_CACHE:
				case t.KW_ENFORCED:
				case t.KW_VALIDATE:
				case t.KW_NOVALIDATE:
				case t.KW_RELY:
				case t.KW_NORELY:
				case t.KW_KEY:
				case t.KW_ABORT:
				case t.KW_MATCHED:
				case t.KW_REPL:
				case t.KW_DUMP:
				case t.KW_STATUS:
				case t.KW_VECTORIZATION:
				case t.KW_SUMMARY:
				case t.KW_OPERATOR:
				case t.KW_EXPRESSION:
				case t.KW_DETAIL:
				case t.KW_WAIT:
				case t.KW_RESOURCE:
				case t.KW_PLAN:
				case t.KW_QUERY_PARALLELISM:
				case t.KW_PLANS:
				case t.KW_ACTIVATE:
				case t.KW_DEFAULT:
				case t.KW_CHECK:
				case t.KW_POOL:
				case t.KW_MOVE:
				case t.KW_DO:
				case t.KW_ALLOC_FRACTION:
				case t.KW_SCHEDULING_POLICY:
				case t.KW_PATH:
				case t.KW_MAPPING:
				case t.KW_WORKLOAD:
				case t.KW_MANAGEMENT:
				case t.KW_ACTIVE:
				case t.KW_UNMANAGED:
				case t.KW_DELTA:
				case t.KW_CSV:
				case t.KW_JSON:
				case t.KW_BLOOMFILTER:
				case t.Identifier:
					this.enterOuterAlt(u, 1), (this.state = 4353), this.identifier();
					break;
				case t.QuotedIdentifier:
					this.enterOuterAlt(u, 2), (this.state = 4354), this.match(t.QuotedIdentifier);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function b(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_nonReserved),
			this
		);
	}
	b.prototype = Object.create(s.ParserRuleContext.prototype);
	b.prototype.constructor = b;
	b.prototype.KW_ABORT = function () {
		return this.getToken(t.KW_ABORT, 0);
	};
	b.prototype.KW_ADD = function () {
		return this.getToken(t.KW_ADD, 0);
	};
	b.prototype.KW_ADMIN = function () {
		return this.getToken(t.KW_ADMIN, 0);
	};
	b.prototype.KW_AFTER = function () {
		return this.getToken(t.KW_AFTER, 0);
	};
	b.prototype.KW_ANALYZE = function () {
		return this.getToken(t.KW_ANALYZE, 0);
	};
	b.prototype.KW_ARCHIVE = function () {
		return this.getToken(t.KW_ARCHIVE, 0);
	};
	b.prototype.KW_ASC = function () {
		return this.getToken(t.KW_ASC, 0);
	};
	b.prototype.KW_BEFORE = function () {
		return this.getToken(t.KW_BEFORE, 0);
	};
	b.prototype.KW_BUCKET = function () {
		return this.getToken(t.KW_BUCKET, 0);
	};
	b.prototype.KW_BUCKETS = function () {
		return this.getToken(t.KW_BUCKETS, 0);
	};
	b.prototype.KW_CASCADE = function () {
		return this.getToken(t.KW_CASCADE, 0);
	};
	b.prototype.KW_CHANGE = function () {
		return this.getToken(t.KW_CHANGE, 0);
	};
	b.prototype.KW_CHECK = function () {
		return this.getToken(t.KW_CHECK, 0);
	};
	b.prototype.KW_CLUSTER = function () {
		return this.getToken(t.KW_CLUSTER, 0);
	};
	b.prototype.KW_CLUSTERED = function () {
		return this.getToken(t.KW_CLUSTERED, 0);
	};
	b.prototype.KW_CLUSTERSTATUS = function () {
		return this.getToken(t.KW_CLUSTERSTATUS, 0);
	};
	b.prototype.KW_COLLECTION = function () {
		return this.getToken(t.KW_COLLECTION, 0);
	};
	b.prototype.KW_COLUMNS = function () {
		return this.getToken(t.KW_COLUMNS, 0);
	};
	b.prototype.KW_COMMENT = function () {
		return this.getToken(t.KW_COMMENT, 0);
	};
	b.prototype.KW_COMPACT = function () {
		return this.getToken(t.KW_COMPACT, 0);
	};
	b.prototype.KW_COMPACTIONS = function () {
		return this.getToken(t.KW_COMPACTIONS, 0);
	};
	b.prototype.KW_COMPUTE = function () {
		return this.getToken(t.KW_COMPUTE, 0);
	};
	b.prototype.KW_CONCATENATE = function () {
		return this.getToken(t.KW_CONCATENATE, 0);
	};
	b.prototype.KW_CONTINUE = function () {
		return this.getToken(t.KW_CONTINUE, 0);
	};
	b.prototype.KW_DATA = function () {
		return this.getToken(t.KW_DATA, 0);
	};
	b.prototype.KW_DAY = function () {
		return this.getToken(t.KW_DAY, 0);
	};
	b.prototype.KW_DATABASES = function () {
		return this.getToken(t.KW_DATABASES, 0);
	};
	b.prototype.KW_DATETIME = function () {
		return this.getToken(t.KW_DATETIME, 0);
	};
	b.prototype.KW_DBPROPERTIES = function () {
		return this.getToken(t.KW_DBPROPERTIES, 0);
	};
	b.prototype.KW_DEFERRED = function () {
		return this.getToken(t.KW_DEFERRED, 0);
	};
	b.prototype.KW_DEFINED = function () {
		return this.getToken(t.KW_DEFINED, 0);
	};
	b.prototype.KW_DELIMITED = function () {
		return this.getToken(t.KW_DELIMITED, 0);
	};
	b.prototype.KW_DEPENDENCY = function () {
		return this.getToken(t.KW_DEPENDENCY, 0);
	};
	b.prototype.KW_DESC = function () {
		return this.getToken(t.KW_DESC, 0);
	};
	b.prototype.KW_DIRECTORIES = function () {
		return this.getToken(t.KW_DIRECTORIES, 0);
	};
	b.prototype.KW_DIRECTORY = function () {
		return this.getToken(t.KW_DIRECTORY, 0);
	};
	b.prototype.KW_DISABLE = function () {
		return this.getToken(t.KW_DISABLE, 0);
	};
	b.prototype.KW_DISTRIBUTE = function () {
		return this.getToken(t.KW_DISTRIBUTE, 0);
	};
	b.prototype.KW_DOW = function () {
		return this.getToken(t.KW_DOW, 0);
	};
	b.prototype.KW_ELEM_TYPE = function () {
		return this.getToken(t.KW_ELEM_TYPE, 0);
	};
	b.prototype.KW_ENABLE = function () {
		return this.getToken(t.KW_ENABLE, 0);
	};
	b.prototype.KW_ENFORCED = function () {
		return this.getToken(t.KW_ENFORCED, 0);
	};
	b.prototype.KW_ESCAPED = function () {
		return this.getToken(t.KW_ESCAPED, 0);
	};
	b.prototype.KW_EXCLUSIVE = function () {
		return this.getToken(t.KW_EXCLUSIVE, 0);
	};
	b.prototype.KW_EXPLAIN = function () {
		return this.getToken(t.KW_EXPLAIN, 0);
	};
	b.prototype.KW_EXPORT = function () {
		return this.getToken(t.KW_EXPORT, 0);
	};
	b.prototype.KW_FIELDS = function () {
		return this.getToken(t.KW_FIELDS, 0);
	};
	b.prototype.KW_FILE = function () {
		return this.getToken(t.KW_FILE, 0);
	};
	b.prototype.KW_FILEFORMAT = function () {
		return this.getToken(t.KW_FILEFORMAT, 0);
	};
	b.prototype.KW_FIRST = function () {
		return this.getToken(t.KW_FIRST, 0);
	};
	b.prototype.KW_FORMAT = function () {
		return this.getToken(t.KW_FORMAT, 0);
	};
	b.prototype.KW_FORMATTED = function () {
		return this.getToken(t.KW_FORMATTED, 0);
	};
	b.prototype.KW_FUNCTIONS = function () {
		return this.getToken(t.KW_FUNCTIONS, 0);
	};
	b.prototype.KW_HOUR = function () {
		return this.getToken(t.KW_HOUR, 0);
	};
	b.prototype.KW_IDXPROPERTIES = function () {
		return this.getToken(t.KW_IDXPROPERTIES, 0);
	};
	b.prototype.KW_INDEX = function () {
		return this.getToken(t.KW_INDEX, 0);
	};
	b.prototype.KW_INDEXES = function () {
		return this.getToken(t.KW_INDEXES, 0);
	};
	b.prototype.KW_INPATH = function () {
		return this.getToken(t.KW_INPATH, 0);
	};
	b.prototype.KW_INPUTDRIVER = function () {
		return this.getToken(t.KW_INPUTDRIVER, 0);
	};
	b.prototype.KW_INPUTFORMAT = function () {
		return this.getToken(t.KW_INPUTFORMAT, 0);
	};
	b.prototype.KW_ITEMS = function () {
		return this.getToken(t.KW_ITEMS, 0);
	};
	b.prototype.KW_JAR = function () {
		return this.getToken(t.KW_JAR, 0);
	};
	b.prototype.KW_KILL = function () {
		return this.getToken(t.KW_KILL, 0);
	};
	b.prototype.KW_KEYS = function () {
		return this.getToken(t.KW_KEYS, 0);
	};
	b.prototype.KW_KEY_TYPE = function () {
		return this.getToken(t.KW_KEY_TYPE, 0);
	};
	b.prototype.KW_LAST = function () {
		return this.getToken(t.KW_LAST, 0);
	};
	b.prototype.KW_LIMIT = function () {
		return this.getToken(t.KW_LIMIT, 0);
	};
	b.prototype.KW_OFFSET = function () {
		return this.getToken(t.KW_OFFSET, 0);
	};
	b.prototype.KW_LINES = function () {
		return this.getToken(t.KW_LINES, 0);
	};
	b.prototype.KW_LOAD = function () {
		return this.getToken(t.KW_LOAD, 0);
	};
	b.prototype.KW_LOCATION = function () {
		return this.getToken(t.KW_LOCATION, 0);
	};
	b.prototype.KW_LOCK = function () {
		return this.getToken(t.KW_LOCK, 0);
	};
	b.prototype.KW_LOCKS = function () {
		return this.getToken(t.KW_LOCKS, 0);
	};
	b.prototype.KW_LOGICAL = function () {
		return this.getToken(t.KW_LOGICAL, 0);
	};
	b.prototype.KW_LONG = function () {
		return this.getToken(t.KW_LONG, 0);
	};
	b.prototype.KW_MAPJOIN = function () {
		return this.getToken(t.KW_MAPJOIN, 0);
	};
	b.prototype.KW_MATERIALIZED = function () {
		return this.getToken(t.KW_MATERIALIZED, 0);
	};
	b.prototype.KW_METADATA = function () {
		return this.getToken(t.KW_METADATA, 0);
	};
	b.prototype.KW_MINUTE = function () {
		return this.getToken(t.KW_MINUTE, 0);
	};
	b.prototype.KW_MONTH = function () {
		return this.getToken(t.KW_MONTH, 0);
	};
	b.prototype.KW_MSCK = function () {
		return this.getToken(t.KW_MSCK, 0);
	};
	b.prototype.KW_NOSCAN = function () {
		return this.getToken(t.KW_NOSCAN, 0);
	};
	b.prototype.KW_NULLS = function () {
		return this.getToken(t.KW_NULLS, 0);
	};
	b.prototype.KW_OPTION = function () {
		return this.getToken(t.KW_OPTION, 0);
	};
	b.prototype.KW_OUTPUTDRIVER = function () {
		return this.getToken(t.KW_OUTPUTDRIVER, 0);
	};
	b.prototype.KW_OUTPUTFORMAT = function () {
		return this.getToken(t.KW_OUTPUTFORMAT, 0);
	};
	b.prototype.KW_OVERWRITE = function () {
		return this.getToken(t.KW_OVERWRITE, 0);
	};
	b.prototype.KW_OWNER = function () {
		return this.getToken(t.KW_OWNER, 0);
	};
	b.prototype.KW_PARTITIONED = function () {
		return this.getToken(t.KW_PARTITIONED, 0);
	};
	b.prototype.KW_PARTITIONS = function () {
		return this.getToken(t.KW_PARTITIONS, 0);
	};
	b.prototype.KW_PLUS = function () {
		return this.getToken(t.KW_PLUS, 0);
	};
	b.prototype.KW_PRINCIPALS = function () {
		return this.getToken(t.KW_PRINCIPALS, 0);
	};
	b.prototype.KW_PURGE = function () {
		return this.getToken(t.KW_PURGE, 0);
	};
	b.prototype.KW_QUERY = function () {
		return this.getToken(t.KW_QUERY, 0);
	};
	b.prototype.KW_QUARTER = function () {
		return this.getToken(t.KW_QUARTER, 0);
	};
	b.prototype.KW_READ = function () {
		return this.getToken(t.KW_READ, 0);
	};
	b.prototype.KW_REBUILD = function () {
		return this.getToken(t.KW_REBUILD, 0);
	};
	b.prototype.KW_RECORDREADER = function () {
		return this.getToken(t.KW_RECORDREADER, 0);
	};
	b.prototype.KW_RECORDWRITER = function () {
		return this.getToken(t.KW_RECORDWRITER, 0);
	};
	b.prototype.KW_RELOAD = function () {
		return this.getToken(t.KW_RELOAD, 0);
	};
	b.prototype.KW_RENAME = function () {
		return this.getToken(t.KW_RENAME, 0);
	};
	b.prototype.KW_REPAIR = function () {
		return this.getToken(t.KW_REPAIR, 0);
	};
	b.prototype.KW_REPLACE = function () {
		return this.getToken(t.KW_REPLACE, 0);
	};
	b.prototype.KW_REPLICATION = function () {
		return this.getToken(t.KW_REPLICATION, 0);
	};
	b.prototype.KW_RESTRICT = function () {
		return this.getToken(t.KW_RESTRICT, 0);
	};
	b.prototype.KW_REWRITE = function () {
		return this.getToken(t.KW_REWRITE, 0);
	};
	b.prototype.KW_ROLE = function () {
		return this.getToken(t.KW_ROLE, 0);
	};
	b.prototype.KW_ROLES = function () {
		return this.getToken(t.KW_ROLES, 0);
	};
	b.prototype.KW_SCHEMA = function () {
		return this.getToken(t.KW_SCHEMA, 0);
	};
	b.prototype.KW_SCHEMAS = function () {
		return this.getToken(t.KW_SCHEMAS, 0);
	};
	b.prototype.KW_SECOND = function () {
		return this.getToken(t.KW_SECOND, 0);
	};
	b.prototype.KW_SEMI = function () {
		return this.getToken(t.KW_SEMI, 0);
	};
	b.prototype.KW_SERDE = function () {
		return this.getToken(t.KW_SERDE, 0);
	};
	b.prototype.KW_SERDEPROPERTIES = function () {
		return this.getToken(t.KW_SERDEPROPERTIES, 0);
	};
	b.prototype.KW_SERVER = function () {
		return this.getToken(t.KW_SERVER, 0);
	};
	b.prototype.KW_SETS = function () {
		return this.getToken(t.KW_SETS, 0);
	};
	b.prototype.KW_SHARED = function () {
		return this.getToken(t.KW_SHARED, 0);
	};
	b.prototype.KW_SHOW = function () {
		return this.getToken(t.KW_SHOW, 0);
	};
	b.prototype.KW_SHOW_DATABASE = function () {
		return this.getToken(t.KW_SHOW_DATABASE, 0);
	};
	b.prototype.KW_SKEWED = function () {
		return this.getToken(t.KW_SKEWED, 0);
	};
	b.prototype.KW_SORT = function () {
		return this.getToken(t.KW_SORT, 0);
	};
	b.prototype.KW_SORTED = function () {
		return this.getToken(t.KW_SORTED, 0);
	};
	b.prototype.KW_SSL = function () {
		return this.getToken(t.KW_SSL, 0);
	};
	b.prototype.KW_STATISTICS = function () {
		return this.getToken(t.KW_STATISTICS, 0);
	};
	b.prototype.KW_STORED = function () {
		return this.getToken(t.KW_STORED, 0);
	};
	b.prototype.KW_STREAMTABLE = function () {
		return this.getToken(t.KW_STREAMTABLE, 0);
	};
	b.prototype.KW_STRING = function () {
		return this.getToken(t.KW_STRING, 0);
	};
	b.prototype.KW_STRUCT = function () {
		return this.getToken(t.KW_STRUCT, 0);
	};
	b.prototype.KW_TABLES = function () {
		return this.getToken(t.KW_TABLES, 0);
	};
	b.prototype.KW_TBLPROPERTIES = function () {
		return this.getToken(t.KW_TBLPROPERTIES, 0);
	};
	b.prototype.KW_TEMPORARY = function () {
		return this.getToken(t.KW_TEMPORARY, 0);
	};
	b.prototype.KW_TERMINATED = function () {
		return this.getToken(t.KW_TERMINATED, 0);
	};
	b.prototype.KW_TINYINT = function () {
		return this.getToken(t.KW_TINYINT, 0);
	};
	b.prototype.KW_TOUCH = function () {
		return this.getToken(t.KW_TOUCH, 0);
	};
	b.prototype.KW_TRANSACTIONS = function () {
		return this.getToken(t.KW_TRANSACTIONS, 0);
	};
	b.prototype.KW_UNARCHIVE = function () {
		return this.getToken(t.KW_UNARCHIVE, 0);
	};
	b.prototype.KW_UNDO = function () {
		return this.getToken(t.KW_UNDO, 0);
	};
	b.prototype.KW_UNIONTYPE = function () {
		return this.getToken(t.KW_UNIONTYPE, 0);
	};
	b.prototype.KW_UNLOCK = function () {
		return this.getToken(t.KW_UNLOCK, 0);
	};
	b.prototype.KW_UNSET = function () {
		return this.getToken(t.KW_UNSET, 0);
	};
	b.prototype.KW_UNSIGNED = function () {
		return this.getToken(t.KW_UNSIGNED, 0);
	};
	b.prototype.KW_URI = function () {
		return this.getToken(t.KW_URI, 0);
	};
	b.prototype.KW_USE = function () {
		return this.getToken(t.KW_USE, 0);
	};
	b.prototype.KW_UTC = function () {
		return this.getToken(t.KW_UTC, 0);
	};
	b.prototype.KW_UTCTIMESTAMP = function () {
		return this.getToken(t.KW_UTCTIMESTAMP, 0);
	};
	b.prototype.KW_VALUE_TYPE = function () {
		return this.getToken(t.KW_VALUE_TYPE, 0);
	};
	b.prototype.KW_VIEW = function () {
		return this.getToken(t.KW_VIEW, 0);
	};
	b.prototype.KW_WEEK = function () {
		return this.getToken(t.KW_WEEK, 0);
	};
	b.prototype.KW_WHILE = function () {
		return this.getToken(t.KW_WHILE, 0);
	};
	b.prototype.KW_YEAR = function () {
		return this.getToken(t.KW_YEAR, 0);
	};
	b.prototype.KW_WORK = function () {
		return this.getToken(t.KW_WORK, 0);
	};
	b.prototype.KW_TRANSACTION = function () {
		return this.getToken(t.KW_TRANSACTION, 0);
	};
	b.prototype.KW_WRITE = function () {
		return this.getToken(t.KW_WRITE, 0);
	};
	b.prototype.KW_ISOLATION = function () {
		return this.getToken(t.KW_ISOLATION, 0);
	};
	b.prototype.KW_LEVEL = function () {
		return this.getToken(t.KW_LEVEL, 0);
	};
	b.prototype.KW_SNAPSHOT = function () {
		return this.getToken(t.KW_SNAPSHOT, 0);
	};
	b.prototype.KW_AUTOCOMMIT = function () {
		return this.getToken(t.KW_AUTOCOMMIT, 0);
	};
	b.prototype.KW_RELY = function () {
		return this.getToken(t.KW_RELY, 0);
	};
	b.prototype.KW_NORELY = function () {
		return this.getToken(t.KW_NORELY, 0);
	};
	b.prototype.KW_VALIDATE = function () {
		return this.getToken(t.KW_VALIDATE, 0);
	};
	b.prototype.KW_NOVALIDATE = function () {
		return this.getToken(t.KW_NOVALIDATE, 0);
	};
	b.prototype.KW_KEY = function () {
		return this.getToken(t.KW_KEY, 0);
	};
	b.prototype.KW_MATCHED = function () {
		return this.getToken(t.KW_MATCHED, 0);
	};
	b.prototype.KW_REPL = function () {
		return this.getToken(t.KW_REPL, 0);
	};
	b.prototype.KW_DUMP = function () {
		return this.getToken(t.KW_DUMP, 0);
	};
	b.prototype.KW_STATUS = function () {
		return this.getToken(t.KW_STATUS, 0);
	};
	b.prototype.KW_CACHE = function () {
		return this.getToken(t.KW_CACHE, 0);
	};
	b.prototype.KW_VIEWS = function () {
		return this.getToken(t.KW_VIEWS, 0);
	};
	b.prototype.KW_VECTORIZATION = function () {
		return this.getToken(t.KW_VECTORIZATION, 0);
	};
	b.prototype.KW_SUMMARY = function () {
		return this.getToken(t.KW_SUMMARY, 0);
	};
	b.prototype.KW_OPERATOR = function () {
		return this.getToken(t.KW_OPERATOR, 0);
	};
	b.prototype.KW_EXPRESSION = function () {
		return this.getToken(t.KW_EXPRESSION, 0);
	};
	b.prototype.KW_DETAIL = function () {
		return this.getToken(t.KW_DETAIL, 0);
	};
	b.prototype.KW_WAIT = function () {
		return this.getToken(t.KW_WAIT, 0);
	};
	b.prototype.KW_ZONE = function () {
		return this.getToken(t.KW_ZONE, 0);
	};
	b.prototype.KW_DEFAULT = function () {
		return this.getToken(t.KW_DEFAULT, 0);
	};
	b.prototype.KW_REOPTIMIZATION = function () {
		return this.getToken(t.KW_REOPTIMIZATION, 0);
	};
	b.prototype.KW_RESOURCE = function () {
		return this.getToken(t.KW_RESOURCE, 0);
	};
	b.prototype.KW_PLAN = function () {
		return this.getToken(t.KW_PLAN, 0);
	};
	b.prototype.KW_PLANS = function () {
		return this.getToken(t.KW_PLANS, 0);
	};
	b.prototype.KW_QUERY_PARALLELISM = function () {
		return this.getToken(t.KW_QUERY_PARALLELISM, 0);
	};
	b.prototype.KW_ACTIVATE = function () {
		return this.getToken(t.KW_ACTIVATE, 0);
	};
	b.prototype.KW_MOVE = function () {
		return this.getToken(t.KW_MOVE, 0);
	};
	b.prototype.KW_DO = function () {
		return this.getToken(t.KW_DO, 0);
	};
	b.prototype.KW_POOL = function () {
		return this.getToken(t.KW_POOL, 0);
	};
	b.prototype.KW_ALLOC_FRACTION = function () {
		return this.getToken(t.KW_ALLOC_FRACTION, 0);
	};
	b.prototype.KW_SCHEDULING_POLICY = function () {
		return this.getToken(t.KW_SCHEDULING_POLICY, 0);
	};
	b.prototype.KW_PATH = function () {
		return this.getToken(t.KW_PATH, 0);
	};
	b.prototype.KW_MAPPING = function () {
		return this.getToken(t.KW_MAPPING, 0);
	};
	b.prototype.KW_WORKLOAD = function () {
		return this.getToken(t.KW_WORKLOAD, 0);
	};
	b.prototype.KW_MANAGEMENT = function () {
		return this.getToken(t.KW_MANAGEMENT, 0);
	};
	b.prototype.KW_ACTIVE = function () {
		return this.getToken(t.KW_ACTIVE, 0);
	};
	b.prototype.KW_UNMANAGED = function () {
		return this.getToken(t.KW_UNMANAGED, 0);
	};
	b.prototype.KW_DELTA = function () {
		return this.getToken(t.KW_DELTA, 0);
	};
	b.prototype.KW_CSV = function () {
		return this.getToken(t.KW_CSV, 0);
	};
	b.prototype.KW_JSON = function () {
		return this.getToken(t.KW_JSON, 0);
	};
	b.prototype.KW_BLOOMFILTER = function () {
		return this.getToken(t.KW_BLOOMFILTER, 0);
	};
	b.prototype.accept = function (u) {
		return u instanceof d ? u.visitNonReserved(this) : u.visitChildren(this);
	};
	t.NonReservedContext = b;
	t.prototype.nonReserved = function () {
		var u = new b(this, this._ctx, this.state);
		this.enterRule(u, 796, t.RULE_nonReserved);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4357),
				(e = this._input.LA(1)),
				((e & -32) == 0 &&
					((1 << e) &
						((1 << t.KW_ASC) |
							(1 << t.KW_DESC) |
							(1 << t.KW_NULLS) |
							(1 << t.KW_LAST) |
							(1 << t.KW_OVERWRITE))) !==
						0) ||
				(((e - 36) & -32) == 0 &&
					((1 << (e - 36)) &
						((1 << (t.KW_PARTITIONS - 36)) |
							(1 << (t.KW_TABLES - 36)) |
							(1 << (t.KW_COLUMNS - 36)) |
							(1 << (t.KW_INDEX - 36)) |
							(1 << (t.KW_INDEXES - 36)) |
							(1 << (t.KW_REBUILD - 36)) |
							(1 << (t.KW_FUNCTIONS - 36)) |
							(1 << (t.KW_SHOW - 36)) |
							(1 << (t.KW_MSCK - 36)) |
							(1 << (t.KW_REPAIR - 36)) |
							(1 << (t.KW_DIRECTORY - 36)) |
							(1 << (t.KW_CLUSTER - 36)) |
							(1 << (t.KW_DISTRIBUTE - 36)) |
							(1 << (t.KW_SORT - 36)) |
							(1 << (t.KW_LOAD - 36)) |
							(1 << (t.KW_EXPORT - 36)) |
							(1 << (t.KW_REPLICATION - 36)) |
							(1 << (t.KW_METADATA - 36)) |
							(1 << (t.KW_DATA - 36)) |
							(1 << (t.KW_INPATH - 36)))) !==
						0) ||
				(((e - 68) & -32) == 0 &&
					((1 << (e - 68)) &
						((1 << (t.KW_CHANGE - 68)) |
							(1 << (t.KW_FIRST - 68)) |
							(1 << (t.KW_AFTER - 68)) |
							(1 << (t.KW_RENAME - 68)) |
							(1 << (t.KW_COMMENT - 68)) |
							(1 << (t.KW_TINYINT - 68)) |
							(1 << (t.KW_DATETIME - 68)) |
							(1 << (t.KW_ZONE - 68)) |
							(1 << (t.KW_STRING - 68)) |
							(1 << (t.KW_STRUCT - 68)) |
							(1 << (t.KW_UNIONTYPE - 68)))) !==
						0) ||
				(((e - 101) & -32) == 0 &&
					((1 << (e - 101)) &
						((1 << (t.KW_PARTITIONED - 101)) |
							(1 << (t.KW_CLUSTERED - 101)) |
							(1 << (t.KW_SORTED - 101)) |
							(1 << (t.KW_BUCKETS - 101)) |
							(1 << (t.KW_FORMAT - 101)) |
							(1 << (t.KW_DELIMITED - 101)) |
							(1 << (t.KW_FIELDS - 101)) |
							(1 << (t.KW_TERMINATED - 101)) |
							(1 << (t.KW_ESCAPED - 101)) |
							(1 << (t.KW_COLLECTION - 101)) |
							(1 << (t.KW_ITEMS - 101)) |
							(1 << (t.KW_KEYS - 101)) |
							(1 << (t.KW_KEY_TYPE - 101)) |
							(1 << (t.KW_KILL - 101)) |
							(1 << (t.KW_LINES - 101)) |
							(1 << (t.KW_STORED - 101)) |
							(1 << (t.KW_FILEFORMAT - 101)) |
							(1 << (t.KW_INPUTFORMAT - 101)) |
							(1 << (t.KW_OUTPUTFORMAT - 101)) |
							(1 << (t.KW_INPUTDRIVER - 101)) |
							(1 << (t.KW_OUTPUTDRIVER - 101)) |
							(1 << (t.KW_ENABLE - 101)) |
							(1 << (t.KW_DISABLE - 101)) |
							(1 << (t.KW_LOCATION - 101)) |
							(1 << (t.KW_BUCKET - 101)))) !==
						0) ||
				(((e - 134) & -32) == 0 &&
					((1 << (e - 134)) &
						((1 << (t.KW_ADD - 134)) |
							(1 << (t.KW_REPLACE - 134)) |
							(1 << (t.KW_TEMPORARY - 134)) |
							(1 << (t.KW_FILE - 134)) |
							(1 << (t.KW_JAR - 134)) |
							(1 << (t.KW_EXPLAIN - 134)) |
							(1 << (t.KW_FORMATTED - 134)) |
							(1 << (t.KW_DEPENDENCY - 134)) |
							(1 << (t.KW_LOGICAL - 134)) |
							(1 << (t.KW_SERDE - 134)) |
							(1 << (t.KW_DEFERRED - 134)) |
							(1 << (t.KW_SERDEPROPERTIES - 134)) |
							(1 << (t.KW_DBPROPERTIES - 134)) |
							(1 << (t.KW_LIMIT - 134)) |
							(1 << (t.KW_OFFSET - 134)) |
							(1 << (t.KW_UNSET - 134)) |
							(1 << (t.KW_TBLPROPERTIES - 134)) |
							(1 << (t.KW_IDXPROPERTIES - 134)) |
							(1 << (t.KW_VALUE_TYPE - 134)) |
							(1 << (t.KW_ELEM_TYPE - 134)) |
							(1 << (t.KW_DEFINED - 134)))) !==
						0) ||
				(((e - 167) & -32) == 0 &&
					((1 << (e - 167)) &
						((1 << (t.KW_MAPJOIN - 167)) |
							(1 << (t.KW_STREAMTABLE - 167)) |
							(1 << (t.KW_CLUSTERSTATUS - 167)) |
							(1 << (t.KW_UTC - 167)) |
							(1 << (t.KW_UTCTIMESTAMP - 167)) |
							(1 << (t.KW_LONG - 167)) |
							(1 << (t.KW_PLUS - 167)) |
							(1 << (t.KW_VIEW - 167)) |
							(1 << (t.KW_VIEWS - 167)) |
							(1 << (t.KW_DATABASES - 167)) |
							(1 << (t.KW_MATERIALIZED - 167)) |
							(1 << (t.KW_SCHEMA - 167)) |
							(1 << (t.KW_SCHEMAS - 167)) |
							(1 << (t.KW_SSL - 167)) |
							(1 << (t.KW_UNDO - 167)) |
							(1 << (t.KW_LOCK - 167)) |
							(1 << (t.KW_LOCKS - 167)) |
							(1 << (t.KW_UNLOCK - 167)) |
							(1 << (t.KW_SHARED - 167)) |
							(1 << (t.KW_EXCLUSIVE - 167)) |
							(1 << (t.KW_UNSIGNED - 167)) |
							(1 << (t.KW_WHILE - 167)) |
							(1 << (t.KW_READ - 167)))) !==
						0) ||
				(((e - 200) & -32) == 0 &&
					((1 << (e - 200)) &
						((1 << (t.KW_PURGE - 200)) |
							(1 << (t.KW_ANALYZE - 200)) |
							(1 << (t.KW_BEFORE - 200)) |
							(1 << (t.KW_CONTINUE - 200)) |
							(1 << (t.KW_RECORDREADER - 200)) |
							(1 << (t.KW_RECORDWRITER - 200)) |
							(1 << (t.KW_SEMI - 200)) |
							(1 << (t.KW_TOUCH - 200)) |
							(1 << (t.KW_ARCHIVE - 200)) |
							(1 << (t.KW_UNARCHIVE - 200)) |
							(1 << (t.KW_COMPUTE - 200)) |
							(1 << (t.KW_STATISTICS - 200)) |
							(1 << (t.KW_USE - 200)) |
							(1 << (t.KW_OPTION - 200)) |
							(1 << (t.KW_CONCATENATE - 200)) |
							(1 << (t.KW_SHOW_DATABASE - 200)) |
							(1 << (t.KW_RESTRICT - 200)) |
							(1 << (t.KW_CASCADE - 200)) |
							(1 << (t.KW_SKEWED - 200)) |
							(1 << (t.KW_DIRECTORIES - 200)))) !==
						0) ||
				(((e - 244) & -32) == 0 &&
					((1 << (e - 244)) &
						((1 << (t.KW_SETS - 244)) |
							(1 << (t.KW_NOSCAN - 244)) |
							(1 << (t.KW_ROLE - 244)) |
							(1 << (t.KW_ROLES - 244)) |
							(1 << (t.KW_URI - 244)) |
							(1 << (t.KW_SERVER - 244)) |
							(1 << (t.KW_ADMIN - 244)) |
							(1 << (t.KW_OWNER - 244)) |
							(1 << (t.KW_PRINCIPALS - 244)) |
							(1 << (t.KW_COMPACT - 244)) |
							(1 << (t.KW_COMPACTIONS - 244)) |
							(1 << (t.KW_TRANSACTIONS - 244)) |
							(1 << (t.KW_REWRITE - 244)) |
							(1 << (t.KW_REOPTIMIZATION - 244)) |
							(1 << (t.KW_RELOAD - 244)) |
							(1 << (t.KW_YEAR - 244)) |
							(1 << (t.KW_QUERY - 244)) |
							(1 << (t.KW_QUARTER - 244)) |
							(1 << (t.KW_MONTH - 244)) |
							(1 << (t.KW_WEEK - 244)) |
							(1 << (t.KW_DAY - 244)) |
							(1 << (t.KW_DOW - 244)) |
							(1 << (t.KW_HOUR - 244)) |
							(1 << (t.KW_MINUTE - 244)) |
							(1 << (t.KW_SECOND - 244)))) !==
						0) ||
				(((e - 277) & -32) == 0 &&
					((1 << (e - 277)) &
						((1 << (t.KW_TRANSACTION - 277)) |
							(1 << (t.KW_WORK - 277)) |
							(1 << (t.KW_WRITE - 277)) |
							(1 << (t.KW_ISOLATION - 277)) |
							(1 << (t.KW_LEVEL - 277)) |
							(1 << (t.KW_SNAPSHOT - 277)) |
							(1 << (t.KW_AUTOCOMMIT - 277)) |
							(1 << (t.KW_CACHE - 277)) |
							(1 << (t.KW_ENFORCED - 277)) |
							(1 << (t.KW_VALIDATE - 277)) |
							(1 << (t.KW_NOVALIDATE - 277)) |
							(1 << (t.KW_RELY - 277)) |
							(1 << (t.KW_NORELY - 277)) |
							(1 << (t.KW_KEY - 277)) |
							(1 << (t.KW_ABORT - 277)) |
							(1 << (t.KW_MATCHED - 277)) |
							(1 << (t.KW_REPL - 277)) |
							(1 << (t.KW_DUMP - 277)) |
							(1 << (t.KW_STATUS - 277)) |
							(1 << (t.KW_VECTORIZATION - 277)) |
							(1 << (t.KW_SUMMARY - 277)))) !==
						0) ||
				(((e - 309) & -32) == 0 &&
					((1 << (e - 309)) &
						((1 << (t.KW_OPERATOR - 309)) |
							(1 << (t.KW_EXPRESSION - 309)) |
							(1 << (t.KW_DETAIL - 309)) |
							(1 << (t.KW_WAIT - 309)) |
							(1 << (t.KW_RESOURCE - 309)) |
							(1 << (t.KW_PLAN - 309)) |
							(1 << (t.KW_QUERY_PARALLELISM - 309)) |
							(1 << (t.KW_PLANS - 309)) |
							(1 << (t.KW_ACTIVATE - 309)) |
							(1 << (t.KW_DEFAULT - 309)) |
							(1 << (t.KW_CHECK - 309)) |
							(1 << (t.KW_POOL - 309)) |
							(1 << (t.KW_MOVE - 309)) |
							(1 << (t.KW_DO - 309)) |
							(1 << (t.KW_ALLOC_FRACTION - 309)) |
							(1 << (t.KW_SCHEDULING_POLICY - 309)) |
							(1 << (t.KW_PATH - 309)) |
							(1 << (t.KW_MAPPING - 309)) |
							(1 << (t.KW_WORKLOAD - 309)) |
							(1 << (t.KW_MANAGEMENT - 309)) |
							(1 << (t.KW_ACTIVE - 309)) |
							(1 << (t.KW_UNMANAGED - 309)) |
							(1 << (t.KW_DELTA - 309)) |
							(1 << (t.KW_CSV - 309)))) !==
						0) ||
				e === t.KW_JSON ||
				e === t.KW_BLOOMFILTER
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function F0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_sql11ReservedKeywordsUsedAsFunctionName),
			this
		);
	}
	F0.prototype = Object.create(s.ParserRuleContext.prototype);
	F0.prototype.constructor = F0;
	F0.prototype.KW_IF = function () {
		return this.getToken(t.KW_IF, 0);
	};
	F0.prototype.KW_ARRAY = function () {
		return this.getToken(t.KW_ARRAY, 0);
	};
	F0.prototype.KW_MAP = function () {
		return this.getToken(t.KW_MAP, 0);
	};
	F0.prototype.KW_BIGINT = function () {
		return this.getToken(t.KW_BIGINT, 0);
	};
	F0.prototype.KW_BINARY = function () {
		return this.getToken(t.KW_BINARY, 0);
	};
	F0.prototype.KW_BOOLEAN = function () {
		return this.getToken(t.KW_BOOLEAN, 0);
	};
	F0.prototype.KW_CURRENT_DATE = function () {
		return this.getToken(t.KW_CURRENT_DATE, 0);
	};
	F0.prototype.KW_CURRENT_TIMESTAMP = function () {
		return this.getToken(t.KW_CURRENT_TIMESTAMP, 0);
	};
	F0.prototype.KW_DATE = function () {
		return this.getToken(t.KW_DATE, 0);
	};
	F0.prototype.KW_DOUBLE = function () {
		return this.getToken(t.KW_DOUBLE, 0);
	};
	F0.prototype.KW_FLOAT = function () {
		return this.getToken(t.KW_FLOAT, 0);
	};
	F0.prototype.KW_GROUPING = function () {
		return this.getToken(t.KW_GROUPING, 0);
	};
	F0.prototype.KW_INT = function () {
		return this.getToken(t.KW_INT, 0);
	};
	F0.prototype.KW_SMALLINT = function () {
		return this.getToken(t.KW_SMALLINT, 0);
	};
	F0.prototype.KW_TIMESTAMP = function () {
		return this.getToken(t.KW_TIMESTAMP, 0);
	};
	F0.prototype.accept = function (u) {
		return u instanceof d ? u.visitSql11ReservedKeywordsUsedAsFunctionName(this) : u.visitChildren(this);
	};
	t.Sql11ReservedKeywordsUsedAsFunctionNameContext = F0;
	t.prototype.sql11ReservedKeywordsUsedAsFunctionName = function () {
		var u = new F0(this, this._ctx, this.state);
		this.enterRule(u, 798, t.RULE_sql11ReservedKeywordsUsedAsFunctionName);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4359),
				(e = this._input.LA(1)),
				e === t.KW_IF ||
				(((e - 77) & -32) == 0 &&
					((1 << (e - 77)) &
						((1 << (t.KW_BOOLEAN - 77)) |
							(1 << (t.KW_SMALLINT - 77)) |
							(1 << (t.KW_INT - 77)) |
							(1 << (t.KW_BIGINT - 77)) |
							(1 << (t.KW_FLOAT - 77)) |
							(1 << (t.KW_DOUBLE - 77)) |
							(1 << (t.KW_DATE - 77)) |
							(1 << (t.KW_TIMESTAMP - 77)) |
							(1 << (t.KW_ARRAY - 77)) |
							(1 << (t.KW_MAP - 77)))) !==
						0) ||
				e === t.KW_BINARY ||
				(((e - 238) & -32) == 0 &&
					((1 << (e - 238)) &
						((1 << (t.KW_CURRENT_DATE - 238)) |
							(1 << (t.KW_CURRENT_TIMESTAMP - 238)) |
							(1 << (t.KW_GROUPING - 238)))) !==
						0)
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function X0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_resourcePlanDdlStatements),
			this
		);
	}
	X0.prototype = Object.create(s.ParserRuleContext.prototype);
	X0.prototype.constructor = X0;
	X0.prototype.createResourcePlanStatement = function () {
		return this.getTypedRuleContext(Qn, 0);
	};
	X0.prototype.alterResourcePlanStatement = function () {
		return this.getTypedRuleContext(nu, 0);
	};
	X0.prototype.dropResourcePlanStatement = function () {
		return this.getTypedRuleContext(ua, 0);
	};
	X0.prototype.globalWmStatement = function () {
		return this.getTypedRuleContext($2, 0);
	};
	X0.prototype.replaceResourcePlanStatement = function () {
		return this.getTypedRuleContext(Wr, 0);
	};
	X0.prototype.createTriggerStatement = function () {
		return this.getTypedRuleContext(Jn, 0);
	};
	X0.prototype.alterTriggerStatement = function () {
		return this.getTypedRuleContext(Cu, 0);
	};
	X0.prototype.dropTriggerStatement = function () {
		return this.getTypedRuleContext(ta, 0);
	};
	X0.prototype.createPoolStatement = function () {
		return this.getTypedRuleContext(Ei, 0);
	};
	X0.prototype.alterPoolStatement = function () {
		return this.getTypedRuleContext(bu, 0);
	};
	X0.prototype.dropPoolStatement = function () {
		return this.getTypedRuleContext($n, 0);
	};
	X0.prototype.createMappingStatement = function () {
		return this.getTypedRuleContext(Q0, 0);
	};
	X0.prototype.alterMappingStatement = function () {
		return this.getTypedRuleContext(q0, 0);
	};
	X0.prototype.dropMappingStatement = function () {
		return this.getTypedRuleContext(be, 0);
	};
	X0.prototype.accept = function (u) {
		return u instanceof d ? u.visitResourcePlanDdlStatements(this) : u.visitChildren(this);
	};
	t.ResourcePlanDdlStatementsContext = X0;
	t.prototype.resourcePlanDdlStatements = function () {
		var u = new X0(this, this._ctx, this.state);
		this.enterRule(u, 800, t.RULE_resourcePlanDdlStatements);
		try {
			(this.state = 4375), this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 506, this._ctx);
			switch (e) {
				case 1:
					this.enterOuterAlt(u, 1), (this.state = 4361), this.createResourcePlanStatement();
					break;
				case 2:
					this.enterOuterAlt(u, 2), (this.state = 4362), this.alterResourcePlanStatement();
					break;
				case 3:
					this.enterOuterAlt(u, 3), (this.state = 4363), this.dropResourcePlanStatement();
					break;
				case 4:
					this.enterOuterAlt(u, 4), (this.state = 4364), this.globalWmStatement();
					break;
				case 5:
					this.enterOuterAlt(u, 5), (this.state = 4365), this.replaceResourcePlanStatement();
					break;
				case 6:
					this.enterOuterAlt(u, 6), (this.state = 4366), this.createTriggerStatement();
					break;
				case 7:
					this.enterOuterAlt(u, 7), (this.state = 4367), this.alterTriggerStatement();
					break;
				case 8:
					this.enterOuterAlt(u, 8), (this.state = 4368), this.dropTriggerStatement();
					break;
				case 9:
					this.enterOuterAlt(u, 9), (this.state = 4369), this.createPoolStatement();
					break;
				case 10:
					this.enterOuterAlt(u, 10), (this.state = 4370), this.alterPoolStatement();
					break;
				case 11:
					this.enterOuterAlt(u, 11), (this.state = 4371), this.dropPoolStatement();
					break;
				case 12:
					this.enterOuterAlt(u, 12), (this.state = 4372), this.createMappingStatement();
					break;
				case 13:
					this.enterOuterAlt(u, 13), (this.state = 4373), this.alterMappingStatement();
					break;
				case 14:
					this.enterOuterAlt(u, 14), (this.state = 4374), this.dropMappingStatement();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function _i(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rpAssign),
			this
		);
	}
	_i.prototype = Object.create(s.ParserRuleContext.prototype);
	_i.prototype.constructor = _i;
	_i.prototype.KW_QUERY_PARALLELISM = function () {
		return this.getToken(t.KW_QUERY_PARALLELISM, 0);
	};
	_i.prototype.EQUAL = function () {
		return this.getToken(t.EQUAL, 0);
	};
	_i.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	_i.prototype.KW_DEFAULT = function () {
		return this.getToken(t.KW_DEFAULT, 0);
	};
	_i.prototype.KW_POOL = function () {
		return this.getToken(t.KW_POOL, 0);
	};
	_i.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	_i.prototype.accept = function (u) {
		return u instanceof d ? u.visitRpAssign(this) : u.visitChildren(this);
	};
	t.RpAssignContext = _i;
	t.prototype.rpAssign = function () {
		var u = new _i(this, this._ctx, this.state);
		this.enterRule(u, 802, t.RULE_rpAssign);
		try {
			switch (((this.state = 4384), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_QUERY_PARALLELISM:
					this.enterOuterAlt(u, 1),
						(this.state = 4377),
						this.match(t.KW_QUERY_PARALLELISM),
						(this.state = 4378),
						this.match(t.EQUAL),
						(this.state = 4379),
						this.match(t.Number);
					break;
				case t.KW_DEFAULT:
					this.enterOuterAlt(u, 2),
						(this.state = 4380),
						this.match(t.KW_DEFAULT),
						(this.state = 4381),
						this.match(t.KW_POOL),
						(this.state = 4382),
						this.match(t.EQUAL),
						(this.state = 4383),
						this.poolPath();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function C1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rpAssignList),
			this
		);
	}
	C1.prototype = Object.create(s.ParserRuleContext.prototype);
	C1.prototype.constructor = C1;
	C1.prototype.rpAssign = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(_i) : this.getTypedRuleContext(_i, u);
	};
	C1.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	C1.prototype.accept = function (u) {
		return u instanceof d ? u.visitRpAssignList(this) : u.visitChildren(this);
	};
	t.RpAssignListContext = C1;
	t.prototype.rpAssignList = function () {
		var u = new C1(this, this._ctx, this.state);
		this.enterRule(u, 804, t.RULE_rpAssignList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 4386,
					this.rpAssign(),
					this.state = 4391,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 4387),
					this.match(t.COMMA),
					(this.state = 4388),
					this.rpAssign(),
					(this.state = 4393),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function z2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rpUnassign),
			this
		);
	}
	z2.prototype = Object.create(s.ParserRuleContext.prototype);
	z2.prototype.constructor = z2;
	z2.prototype.KW_QUERY_PARALLELISM = function () {
		return this.getToken(t.KW_QUERY_PARALLELISM, 0);
	};
	z2.prototype.KW_DEFAULT = function () {
		return this.getToken(t.KW_DEFAULT, 0);
	};
	z2.prototype.KW_POOL = function () {
		return this.getToken(t.KW_POOL, 0);
	};
	z2.prototype.accept = function (u) {
		return u instanceof d ? u.visitRpUnassign(this) : u.visitChildren(this);
	};
	t.RpUnassignContext = z2;
	t.prototype.rpUnassign = function () {
		var u = new z2(this, this._ctx, this.state);
		this.enterRule(u, 806, t.RULE_rpUnassign);
		try {
			switch (((this.state = 4397), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_QUERY_PARALLELISM:
					this.enterOuterAlt(u, 1), (this.state = 4394), this.match(t.KW_QUERY_PARALLELISM);
					break;
				case t.KW_DEFAULT:
					this.enterOuterAlt(u, 2),
						(this.state = 4395),
						this.match(t.KW_DEFAULT),
						(this.state = 4396),
						this.match(t.KW_POOL);
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Op(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_rpUnassignList),
			this
		);
	}
	Op.prototype = Object.create(s.ParserRuleContext.prototype);
	Op.prototype.constructor = Op;
	Op.prototype.rpUnassign = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(z2) : this.getTypedRuleContext(z2, u);
	};
	Op.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	Op.prototype.accept = function (u) {
		return u instanceof d ? u.visitRpUnassignList(this) : u.visitChildren(this);
	};
	t.RpUnassignListContext = Op;
	t.prototype.rpUnassignList = function () {
		var u = new Op(this, this._ctx, this.state);
		this.enterRule(u, 808, t.RULE_rpUnassignList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 4399,
					this.rpUnassign(),
					this.state = 4404,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 4400),
					this.match(t.COMMA),
					(this.state = 4401),
					this.rpUnassign(),
					(this.state = 4406),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Qn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createResourcePlanStatement),
			this
		);
	}
	Qn.prototype = Object.create(s.ParserRuleContext.prototype);
	Qn.prototype.constructor = Qn;
	Qn.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	Qn.prototype.KW_RESOURCE = function () {
		return this.getToken(t.KW_RESOURCE, 0);
	};
	Qn.prototype.KW_PLAN = function () {
		return this.getToken(t.KW_PLAN, 0);
	};
	Qn.prototype.createResourcePlanStatementLikeExisting = function () {
		return this.getTypedRuleContext(Lp, 0);
	};
	Qn.prototype.createNewResourcePlanStatement = function () {
		return this.getTypedRuleContext(b1, 0);
	};
	Qn.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateResourcePlanStatement(this) : u.visitChildren(this);
	};
	t.CreateResourcePlanStatementContext = Qn;
	t.prototype.createResourcePlanStatement = function () {
		var u = new Qn(this, this._ctx, this.state);
		this.enterRule(u, 810, t.RULE_createResourcePlanStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4407),
				this.match(t.KW_CREATE),
				(this.state = 4408),
				this.match(t.KW_RESOURCE),
				(this.state = 4409),
				this.match(t.KW_PLAN),
				(this.state = 4412),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 511, this._ctx);
			switch (e) {
				case 1:
					(this.state = 4410), this.createResourcePlanStatementLikeExisting();
					break;
				case 2:
					(this.state = 4411), this.createNewResourcePlanStatement();
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Lp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createResourcePlanStatementLikeExisting),
			this
		);
	}
	Lp.prototype = Object.create(s.ParserRuleContext.prototype);
	Lp.prototype.constructor = Lp;
	Lp.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	Lp.prototype.KW_LIKE = function () {
		return this.getToken(t.KW_LIKE, 0);
	};
	Lp.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateResourcePlanStatementLikeExisting(this) : u.visitChildren(this);
	};
	t.CreateResourcePlanStatementLikeExistingContext = Lp;
	t.prototype.createResourcePlanStatementLikeExisting = function () {
		var u = new Lp(this, this._ctx, this.state);
		this.enterRule(u, 812, t.RULE_createResourcePlanStatementLikeExisting);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4414),
				this.identifier(),
				(this.state = 4415),
				this.match(t.KW_LIKE),
				(this.state = 4416),
				this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function b1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createNewResourcePlanStatement),
			this
		);
	}
	b1.prototype = Object.create(s.ParserRuleContext.prototype);
	b1.prototype.constructor = b1;
	b1.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	b1.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	b1.prototype.rpAssignList = function () {
		return this.getTypedRuleContext(C1, 0);
	};
	b1.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateNewResourcePlanStatement(this) : u.visitChildren(this);
	};
	t.CreateNewResourcePlanStatementContext = b1;
	t.prototype.createNewResourcePlanStatement = function () {
		var u = new b1(this, this._ctx, this.state);
		this.enterRule(u, 814, t.RULE_createNewResourcePlanStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4418),
				this.identifier(),
				(this.state = 4421),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 4419), this.match(t.KW_WITH), (this.state = 4420), this.rpAssignList());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Sp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_withReplace),
			this
		);
	}
	Sp.prototype = Object.create(s.ParserRuleContext.prototype);
	Sp.prototype.constructor = Sp;
	Sp.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	Sp.prototype.KW_REPLACE = function () {
		return this.getToken(t.KW_REPLACE, 0);
	};
	Sp.prototype.accept = function (u) {
		return u instanceof d ? u.visitWithReplace(this) : u.visitChildren(this);
	};
	t.WithReplaceContext = Sp;
	t.prototype.withReplace = function () {
		var u = new Sp(this, this._ctx, this.state);
		this.enterRule(u, 816, t.RULE_withReplace);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4423),
				this.match(t.KW_WITH),
				(this.state = 4424),
				this.match(t.KW_REPLACE);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ip(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_activate),
			this
		);
	}
	Ip.prototype = Object.create(s.ParserRuleContext.prototype);
	Ip.prototype.constructor = Ip;
	Ip.prototype.KW_ACTIVATE = function () {
		return this.getToken(t.KW_ACTIVATE, 0);
	};
	Ip.prototype.withReplace = function () {
		return this.getTypedRuleContext(Sp, 0);
	};
	Ip.prototype.accept = function (u) {
		return u instanceof d ? u.visitActivate(this) : u.visitChildren(this);
	};
	t.ActivateContext = Ip;
	t.prototype.activate = function () {
		var u = new Ip(this, this._ctx, this.state);
		this.enterRule(u, 818, t.RULE_activate);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4426),
				this.match(t.KW_ACTIVATE),
				(this.state = 4428),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH && ((this.state = 4427), this.withReplace());
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Np(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_enable),
			this
		);
	}
	Np.prototype = Object.create(s.ParserRuleContext.prototype);
	Np.prototype.constructor = Np;
	Np.prototype.KW_ENABLE = function () {
		return this.getToken(t.KW_ENABLE, 0);
	};
	Np.prototype.accept = function (u) {
		return u instanceof d ? u.visitEnable(this) : u.visitChildren(this);
	};
	t.EnableContext = Np;
	t.prototype.enable = function () {
		var u = new Np(this, this._ctx, this.state);
		this.enterRule(u, 820, t.RULE_enable);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4430), this.match(t.KW_ENABLE);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function z3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_disable),
			this
		);
	}
	z3.prototype = Object.create(s.ParserRuleContext.prototype);
	z3.prototype.constructor = z3;
	z3.prototype.KW_DISABLE = function () {
		return this.getToken(t.KW_DISABLE, 0);
	};
	z3.prototype.accept = function (u) {
		return u instanceof d ? u.visitDisable(this) : u.visitChildren(this);
	};
	t.DisableContext = z3;
	t.prototype.disable = function () {
		var u = new z3(this, this._ctx, this.state);
		this.enterRule(u, 822, t.RULE_disable);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4432), this.match(t.KW_DISABLE);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Pp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_unmanaged),
			this
		);
	}
	Pp.prototype = Object.create(s.ParserRuleContext.prototype);
	Pp.prototype.constructor = Pp;
	Pp.prototype.KW_UNMANAGED = function () {
		return this.getToken(t.KW_UNMANAGED, 0);
	};
	Pp.prototype.accept = function (u) {
		return u instanceof d ? u.visitUnmanaged(this) : u.visitChildren(this);
	};
	t.UnmanagedContext = Pp;
	t.prototype.unmanaged = function () {
		var u = new Pp(this, this._ctx, this.state);
		this.enterRule(u, 824, t.RULE_unmanaged);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4434), this.match(t.KW_UNMANAGED);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function nu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterResourcePlanStatement),
			this
		);
	}
	nu.prototype = Object.create(s.ParserRuleContext.prototype);
	nu.prototype.constructor = nu;
	nu.prototype.KW_ALTER = function () {
		return this.getToken(t.KW_ALTER, 0);
	};
	nu.prototype.KW_RESOURCE = function () {
		return this.getToken(t.KW_RESOURCE, 0);
	};
	nu.prototype.KW_PLAN = function () {
		return this.getToken(t.KW_PLAN, 0);
	};
	nu.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	nu.prototype.alterResourcePlanRenameSuffix = function () {
		return this.getTypedRuleContext(A1, 0);
	};
	nu.prototype.KW_VALIDATE = function () {
		return this.getToken(t.KW_VALIDATE, 0);
	};
	nu.prototype.KW_DISABLE = function () {
		return this.getToken(t.KW_DISABLE, 0);
	};
	nu.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	nu.prototype.rpAssignList = function () {
		return this.getTypedRuleContext(C1, 0);
	};
	nu.prototype.KW_UNSET = function () {
		return this.getToken(t.KW_UNSET, 0);
	};
	nu.prototype.rpUnassignList = function () {
		return this.getTypedRuleContext(Op, 0);
	};
	nu.prototype.activate = function () {
		return this.getTypedRuleContext(Ip, 0);
	};
	nu.prototype.enable = function () {
		return this.getTypedRuleContext(Np, 0);
	};
	nu.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterResourcePlanStatement(this) : u.visitChildren(this);
	};
	t.AlterResourcePlanStatementContext = nu;
	t.prototype.alterResourcePlanStatement = function () {
		var u = new nu(this, this._ctx, this.state);
		this.enterRule(u, 826, t.RULE_alterResourcePlanStatement);
		var e = 0;
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 4436),
				this.match(t.KW_ALTER),
				(this.state = 4437),
				this.match(t.KW_RESOURCE),
				(this.state = 4438),
				this.match(t.KW_PLAN),
				(this.state = 4439),
				this.identifier(),
				(this.state = 4457),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_VALIDATE:
					(this.state = 4440), this.match(t.KW_VALIDATE);
					break;
				case t.KW_DISABLE:
					(this.state = 4441), this.match(t.KW_DISABLE);
					break;
				case t.KW_SET:
					(this.state = 4442), this.match(t.KW_SET), (this.state = 4443), this.rpAssignList();
					break;
				case t.KW_UNSET:
					(this.state = 4444), this.match(t.KW_UNSET), (this.state = 4445), this.rpUnassignList();
					break;
				case t.KW_RENAME:
					(this.state = 4446), this.alterResourcePlanRenameSuffix();
					break;
				case t.KW_ENABLE:
				case t.KW_ACTIVATE:
					switch (((this.state = 4455), this._errHandler.sync(this), this._input.LA(1))) {
						case t.KW_ACTIVATE:
							(this.state = 4447),
								this.activate(),
								(this.state = 4449),
								this._errHandler.sync(this),
								(e = this._input.LA(1)),
								e === t.KW_ENABLE && ((this.state = 4448), this.enable());
							break;
						case t.KW_ENABLE:
							(this.state = 4451),
								this.enable(),
								(this.state = 4453),
								this._errHandler.sync(this),
								(e = this._input.LA(1)),
								e === t.KW_ACTIVATE && ((this.state = 4452), this.activate());
							break;
						default:
							throw new s.error.NoViableAltException(this);
					}
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function A1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterResourcePlanRenameSuffix),
			this
		);
	}
	A1.prototype = Object.create(s.ParserRuleContext.prototype);
	A1.prototype.constructor = A1;
	A1.prototype.KW_RENAME = function () {
		return this.getToken(t.KW_RENAME, 0);
	};
	A1.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	A1.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	A1.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterResourcePlanRenameSuffix(this) : u.visitChildren(this);
	};
	t.AlterResourcePlanRenameSuffixContext = A1;
	t.prototype.alterResourcePlanRenameSuffix = function () {
		var u = new A1(this, this._ctx, this.state);
		this.enterRule(u, 828, t.RULE_alterResourcePlanRenameSuffix);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4459),
				this.match(t.KW_RENAME),
				(this.state = 4460),
				this.match(t.KW_TO),
				(this.state = 4461),
				this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $2(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_globalWmStatement),
			this
		);
	}
	$2.prototype = Object.create(s.ParserRuleContext.prototype);
	$2.prototype.constructor = $2;
	$2.prototype.KW_WORKLOAD = function () {
		return this.getToken(t.KW_WORKLOAD, 0);
	};
	$2.prototype.KW_MANAGEMENT = function () {
		return this.getToken(t.KW_MANAGEMENT, 0);
	};
	$2.prototype.enable = function () {
		return this.getTypedRuleContext(Np, 0);
	};
	$2.prototype.disable = function () {
		return this.getTypedRuleContext(z3, 0);
	};
	$2.prototype.accept = function (u) {
		return u instanceof d ? u.visitGlobalWmStatement(this) : u.visitChildren(this);
	};
	t.GlobalWmStatementContext = $2;
	t.prototype.globalWmStatement = function () {
		var u = new $2(this, this._ctx, this.state);
		this.enterRule(u, 830, t.RULE_globalWmStatement);
		try {
			switch ((this.enterOuterAlt(u, 1), (this.state = 4465), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ENABLE:
					(this.state = 4463), this.enable();
					break;
				case t.KW_DISABLE:
					(this.state = 4464), this.disable();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
			(this.state = 4467), this.match(t.KW_WORKLOAD), (this.state = 4468), this.match(t.KW_MANAGEMENT);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Wr(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_replaceResourcePlanStatement),
			this
		);
	}
	Wr.prototype = Object.create(s.ParserRuleContext.prototype);
	Wr.prototype.constructor = Wr;
	Wr.prototype.KW_REPLACE = function () {
		return this.getToken(t.KW_REPLACE, 0);
	};
	Wr.prototype.KW_ACTIVE = function () {
		return this.getToken(t.KW_ACTIVE, 0);
	};
	Wr.prototype.KW_RESOURCE = function () {
		return this.getToken(t.KW_RESOURCE, 0);
	};
	Wr.prototype.KW_PLAN = function () {
		return this.getToken(t.KW_PLAN, 0);
	};
	Wr.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	Wr.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	Wr.prototype.accept = function (u) {
		return u instanceof d ? u.visitReplaceResourcePlanStatement(this) : u.visitChildren(this);
	};
	t.ReplaceResourcePlanStatementContext = Wr;
	t.prototype.replaceResourcePlanStatement = function () {
		var u = new Wr(this, this._ctx, this.state);
		this.enterRule(u, 832, t.RULE_replaceResourcePlanStatement);
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 4470),
				this.match(t.KW_REPLACE),
				(this.state = 4482),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_ACTIVE:
					(this.state = 4471),
						this.match(t.KW_ACTIVE),
						(this.state = 4472),
						this.match(t.KW_RESOURCE),
						(this.state = 4473),
						this.match(t.KW_PLAN),
						(this.state = 4474),
						this.match(t.KW_WITH),
						(this.state = 4475),
						this.identifier();
					break;
				case t.KW_RESOURCE:
					(this.state = 4476),
						this.match(t.KW_RESOURCE),
						(this.state = 4477),
						this.match(t.KW_PLAN),
						(this.state = 4478),
						this.identifier(),
						(this.state = 4479),
						this.match(t.KW_WITH),
						(this.state = 4480),
						this.identifier();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ua(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropResourcePlanStatement),
			this
		);
	}
	ua.prototype = Object.create(s.ParserRuleContext.prototype);
	ua.prototype.constructor = ua;
	ua.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	ua.prototype.KW_RESOURCE = function () {
		return this.getToken(t.KW_RESOURCE, 0);
	};
	ua.prototype.KW_PLAN = function () {
		return this.getToken(t.KW_PLAN, 0);
	};
	ua.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	ua.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropResourcePlanStatement(this) : u.visitChildren(this);
	};
	t.DropResourcePlanStatementContext = ua;
	t.prototype.dropResourcePlanStatement = function () {
		var u = new ua(this, this._ctx, this.state);
		this.enterRule(u, 834, t.RULE_dropResourcePlanStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4484),
				this.match(t.KW_DROP),
				(this.state = 4485),
				this.match(t.KW_RESOURCE),
				(this.state = 4486),
				this.match(t.KW_PLAN),
				(this.state = 4487),
				this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Hu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_poolPath),
			this
		);
	}
	Hu.prototype = Object.create(s.ParserRuleContext.prototype);
	Hu.prototype.constructor = Hu;
	Hu.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	Hu.prototype.DOT = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.DOT) : this.getToken(t.DOT, u);
	};
	Hu.prototype.accept = function (u) {
		return u instanceof d ? u.visitPoolPath(this) : u.visitChildren(this);
	};
	t.PoolPathContext = Hu;
	t.prototype.poolPath = function () {
		var u = new Hu(this, this._ctx, this.state);
		this.enterRule(u, 836, t.RULE_poolPath);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 4489,
					this.identifier(),
					this.state = 4494,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.DOT;

			)
				(this.state = 4490),
					this.match(t.DOT),
					(this.state = 4491),
					this.identifier(),
					(this.state = 4496),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function gp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_triggerExpression),
			this
		);
	}
	gp.prototype = Object.create(s.ParserRuleContext.prototype);
	gp.prototype.constructor = gp;
	gp.prototype.triggerAtomExpression = function () {
		return this.getTypedRuleContext(qn, 0);
	};
	gp.prototype.accept = function (u) {
		return u instanceof d ? u.visitTriggerExpression(this) : u.visitChildren(this);
	};
	t.TriggerExpressionContext = gp;
	t.prototype.triggerExpression = function () {
		var u = new gp(this, this._ctx, this.state);
		this.enterRule(u, 838, t.RULE_triggerExpression);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4497), this.triggerAtomExpression();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $3(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_triggerExpressionStandalone),
			this
		);
	}
	$3.prototype = Object.create(s.ParserRuleContext.prototype);
	$3.prototype.constructor = $3;
	$3.prototype.triggerExpression = function () {
		return this.getTypedRuleContext(gp, 0);
	};
	$3.prototype.EOF = function () {
		return this.getToken(t.EOF, 0);
	};
	$3.prototype.accept = function (u) {
		return u instanceof d ? u.visitTriggerExpressionStandalone(this) : u.visitChildren(this);
	};
	t.TriggerExpressionStandaloneContext = $3;
	t.prototype.triggerExpressionStandalone = function () {
		var u = new $3(this, this._ctx, this.state);
		this.enterRule(u, 840, t.RULE_triggerExpressionStandalone);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4499),
				this.triggerExpression(),
				(this.state = 4500),
				this.match(t.EOF);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function uh(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_triggerOrExpression),
			this
		);
	}
	uh.prototype = Object.create(s.ParserRuleContext.prototype);
	uh.prototype.constructor = uh;
	uh.prototype.triggerAndExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(W1) : this.getTypedRuleContext(W1, u);
	};
	uh.prototype.KW_OR = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_OR) : this.getToken(t.KW_OR, u);
	};
	uh.prototype.accept = function (u) {
		return u instanceof d ? u.visitTriggerOrExpression(this) : u.visitChildren(this);
	};
	t.TriggerOrExpressionContext = uh;
	t.prototype.triggerOrExpression = function () {
		var u = new uh(this, this._ctx, this.state);
		this.enterRule(u, 842, t.RULE_triggerOrExpression);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 4502,
					this.triggerAndExpression(),
					this.state = 4507,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.KW_OR;

			)
				(this.state = 4503),
					this.match(t.KW_OR),
					(this.state = 4504),
					this.triggerAndExpression(),
					(this.state = 4509),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function W1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_triggerAndExpression),
			this
		);
	}
	W1.prototype = Object.create(s.ParserRuleContext.prototype);
	W1.prototype.constructor = W1;
	W1.prototype.triggerAtomExpression = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(qn) : this.getTypedRuleContext(qn, u);
	};
	W1.prototype.KW_AND = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.KW_AND) : this.getToken(t.KW_AND, u);
	};
	W1.prototype.accept = function (u) {
		return u instanceof d ? u.visitTriggerAndExpression(this) : u.visitChildren(this);
	};
	t.TriggerAndExpressionContext = W1;
	t.prototype.triggerAndExpression = function () {
		var u = new W1(this, this._ctx, this.state);
		this.enterRule(u, 844, t.RULE_triggerAndExpression);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 4510,
					this.triggerAtomExpression(),
					this.state = 4515,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.KW_AND;

			)
				(this.state = 4511),
					this.match(t.KW_AND),
					(this.state = 4512),
					this.triggerAtomExpression(),
					(this.state = 4517),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function qn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_triggerAtomExpression),
			this
		);
	}
	qn.prototype = Object.create(s.ParserRuleContext.prototype);
	qn.prototype.constructor = qn;
	qn.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	qn.prototype.comparisionOperator = function () {
		return this.getTypedRuleContext(th, 0);
	};
	qn.prototype.triggerLiteral = function () {
		return this.getTypedRuleContext(Dp, 0);
	};
	qn.prototype.accept = function (u) {
		return u instanceof d ? u.visitTriggerAtomExpression(this) : u.visitChildren(this);
	};
	t.TriggerAtomExpressionContext = qn;
	t.prototype.triggerAtomExpression = function () {
		var u = new qn(this, this._ctx, this.state);
		this.enterRule(u, 846, t.RULE_triggerAtomExpression);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4518),
				this.identifier(),
				(this.state = 4519),
				this.comparisionOperator(),
				(this.state = 4520),
				this.triggerLiteral();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Dp(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_triggerLiteral),
			this
		);
	}
	Dp.prototype = Object.create(s.ParserRuleContext.prototype);
	Dp.prototype.constructor = Dp;
	Dp.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	Dp.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Dp.prototype.accept = function (u) {
		return u instanceof d ? u.visitTriggerLiteral(this) : u.visitChildren(this);
	};
	t.TriggerLiteralContext = Dp;
	t.prototype.triggerLiteral = function () {
		var u = new Dp(this, this._ctx, this.state);
		this.enterRule(u, 848, t.RULE_triggerLiteral);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4522),
				(e = this._input.LA(1)),
				e === t.StringLiteral || e === t.Number
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this);
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function th(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_comparisionOperator),
			this
		);
	}
	th.prototype = Object.create(s.ParserRuleContext.prototype);
	th.prototype.constructor = th;
	th.prototype.GREATERTHAN = function () {
		return this.getToken(t.GREATERTHAN, 0);
	};
	th.prototype.accept = function (u) {
		return u instanceof d ? u.visitComparisionOperator(this) : u.visitChildren(this);
	};
	t.ComparisionOperatorContext = th;
	t.prototype.comparisionOperator = function () {
		var u = new th(this, this._ctx, this.state);
		this.enterRule(u, 850, t.RULE_comparisionOperator);
		try {
			this.enterOuterAlt(u, 1), (this.state = 4524), this.match(t.GREATERTHAN);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Zn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_triggerActionExpression),
			this
		);
	}
	Zn.prototype = Object.create(s.ParserRuleContext.prototype);
	Zn.prototype.constructor = Zn;
	Zn.prototype.KW_KILL = function () {
		return this.getToken(t.KW_KILL, 0);
	};
	Zn.prototype.KW_MOVE = function () {
		return this.getToken(t.KW_MOVE, 0);
	};
	Zn.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	Zn.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	Zn.prototype.accept = function (u) {
		return u instanceof d ? u.visitTriggerActionExpression(this) : u.visitChildren(this);
	};
	t.TriggerActionExpressionContext = Zn;
	t.prototype.triggerActionExpression = function () {
		var u = new Zn(this, this._ctx, this.state);
		this.enterRule(u, 852, t.RULE_triggerActionExpression);
		try {
			switch (((this.state = 4530), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_KILL:
					this.enterOuterAlt(u, 1), (this.state = 4526), this.match(t.KW_KILL);
					break;
				case t.KW_MOVE:
					this.enterOuterAlt(u, 2),
						(this.state = 4527),
						this.match(t.KW_MOVE),
						(this.state = 4528),
						this.match(t.KW_TO),
						(this.state = 4529),
						this.poolPath();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function eh(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_triggerActionExpressionStandalone),
			this
		);
	}
	eh.prototype = Object.create(s.ParserRuleContext.prototype);
	eh.prototype.constructor = eh;
	eh.prototype.triggerActionExpression = function () {
		return this.getTypedRuleContext(Zn, 0);
	};
	eh.prototype.EOF = function () {
		return this.getToken(t.EOF, 0);
	};
	eh.prototype.accept = function (u) {
		return u instanceof d ? u.visitTriggerActionExpressionStandalone(this) : u.visitChildren(this);
	};
	t.TriggerActionExpressionStandaloneContext = eh;
	t.prototype.triggerActionExpressionStandalone = function () {
		var u = new eh(this, this._ctx, this.state);
		this.enterRule(u, 854, t.RULE_triggerActionExpressionStandalone);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4532),
				this.triggerActionExpression(),
				(this.state = 4533),
				this.match(t.EOF);
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Jn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createTriggerStatement),
			this
		);
	}
	Jn.prototype = Object.create(s.ParserRuleContext.prototype);
	Jn.prototype.constructor = Jn;
	Jn.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	Jn.prototype.KW_TRIGGER = function () {
		return this.getToken(t.KW_TRIGGER, 0);
	};
	Jn.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	Jn.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	Jn.prototype.triggerConditionExpression = function () {
		return this.getTypedRuleContext(zn, 0);
	};
	Jn.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateTriggerStatement(this) : u.visitChildren(this);
	};
	t.CreateTriggerStatementContext = Jn;
	t.prototype.createTriggerStatement = function () {
		var u = new Jn(this, this._ctx, this.state);
		this.enterRule(u, 856, t.RULE_createTriggerStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4535),
				this.match(t.KW_CREATE),
				(this.state = 4536),
				this.match(t.KW_TRIGGER),
				(this.state = 4537),
				this.identifier(),
				(this.state = 4538),
				this.match(t.DOT),
				(this.state = 4539),
				this.identifier(),
				(this.state = 4540),
				this.triggerConditionExpression();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Cu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterTriggerStatement),
			this
		);
	}
	Cu.prototype = Object.create(s.ParserRuleContext.prototype);
	Cu.prototype.constructor = Cu;
	Cu.prototype.KW_ALTER = function () {
		return this.getToken(t.KW_ALTER, 0);
	};
	Cu.prototype.KW_TRIGGER = function () {
		return this.getToken(t.KW_TRIGGER, 0);
	};
	Cu.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	Cu.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	Cu.prototype.triggerConditionExpression = function () {
		return this.getTypedRuleContext(zn, 0);
	};
	Cu.prototype.KW_ADD = function () {
		return this.getToken(t.KW_ADD, 0);
	};
	Cu.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	Cu.prototype.KW_POOL = function () {
		return this.getToken(t.KW_POOL, 0);
	};
	Cu.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	Cu.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	Cu.prototype.KW_FROM = function () {
		return this.getToken(t.KW_FROM, 0);
	};
	Cu.prototype.KW_UNMANAGED = function () {
		return this.getToken(t.KW_UNMANAGED, 0);
	};
	Cu.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterTriggerStatement(this) : u.visitChildren(this);
	};
	t.AlterTriggerStatementContext = Cu;
	t.prototype.alterTriggerStatement = function () {
		var u = new Cu(this, this._ctx, this.state);
		this.enterRule(u, 858, t.RULE_alterTriggerStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4542),
				this.match(t.KW_ALTER),
				(this.state = 4543),
				this.match(t.KW_TRIGGER),
				(this.state = 4544),
				this.identifier(),
				(this.state = 4545),
				this.match(t.DOT),
				(this.state = 4546),
				this.identifier(),
				(this.state = 4562),
				this._errHandler.sync(this);
			var e = this._interp.adaptivePredict(this._input, 524, this._ctx);
			switch (e) {
				case 1:
					(this.state = 4547), this.triggerConditionExpression();
					break;
				case 2:
					(this.state = 4548),
						this.match(t.KW_ADD),
						(this.state = 4549),
						this.match(t.KW_TO),
						(this.state = 4550),
						this.match(t.KW_POOL),
						(this.state = 4551),
						this.poolPath();
					break;
				case 3:
					(this.state = 4552),
						this.match(t.KW_DROP),
						(this.state = 4553),
						this.match(t.KW_FROM),
						(this.state = 4554),
						this.match(t.KW_POOL),
						(this.state = 4555),
						this.poolPath();
					break;
				case 4:
					(this.state = 4556),
						this.match(t.KW_ADD),
						(this.state = 4557),
						this.match(t.KW_TO),
						(this.state = 4558),
						this.match(t.KW_UNMANAGED);
					break;
				case 5:
					(this.state = 4559),
						this.match(t.KW_DROP),
						(this.state = 4560),
						this.match(t.KW_FROM),
						(this.state = 4561),
						this.match(t.KW_UNMANAGED);
					break;
			}
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function zn(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_triggerConditionExpression),
			this
		);
	}
	zn.prototype = Object.create(s.ParserRuleContext.prototype);
	zn.prototype.constructor = zn;
	zn.prototype.KW_WHEN = function () {
		return this.getToken(t.KW_WHEN, 0);
	};
	zn.prototype.triggerExpression = function () {
		return this.getTypedRuleContext(gp, 0);
	};
	zn.prototype.KW_DO = function () {
		return this.getToken(t.KW_DO, 0);
	};
	zn.prototype.triggerActionExpression = function () {
		return this.getTypedRuleContext(Zn, 0);
	};
	zn.prototype.accept = function (u) {
		return u instanceof d ? u.visitTriggerConditionExpression(this) : u.visitChildren(this);
	};
	t.TriggerConditionExpressionContext = zn;
	t.prototype.triggerConditionExpression = function () {
		var u = new zn(this, this._ctx, this.state);
		this.enterRule(u, 860, t.RULE_triggerConditionExpression);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4564),
				this.match(t.KW_WHEN),
				(this.state = 4565),
				this.triggerExpression(),
				(this.state = 4566),
				this.match(t.KW_DO),
				(this.state = 4567),
				this.triggerActionExpression();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function ta(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropTriggerStatement),
			this
		);
	}
	ta.prototype = Object.create(s.ParserRuleContext.prototype);
	ta.prototype.constructor = ta;
	ta.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	ta.prototype.KW_TRIGGER = function () {
		return this.getToken(t.KW_TRIGGER, 0);
	};
	ta.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	ta.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	ta.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropTriggerStatement(this) : u.visitChildren(this);
	};
	t.DropTriggerStatementContext = ta;
	t.prototype.dropTriggerStatement = function () {
		var u = new ta(this, this._ctx, this.state);
		this.enterRule(u, 862, t.RULE_dropTriggerStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4569),
				this.match(t.KW_DROP),
				(this.state = 4570),
				this.match(t.KW_TRIGGER),
				(this.state = 4571),
				this.identifier(),
				(this.state = 4572),
				this.match(t.DOT),
				(this.state = 4573),
				this.identifier();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Mt(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_poolAssign),
			this
		);
	}
	Mt.prototype = Object.create(s.ParserRuleContext.prototype);
	Mt.prototype.constructor = Mt;
	Mt.prototype.KW_ALLOC_FRACTION = function () {
		return this.getToken(t.KW_ALLOC_FRACTION, 0);
	};
	Mt.prototype.EQUAL = function () {
		return this.getToken(t.EQUAL, 0);
	};
	Mt.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	Mt.prototype.KW_QUERY_PARALLELISM = function () {
		return this.getToken(t.KW_QUERY_PARALLELISM, 0);
	};
	Mt.prototype.KW_SCHEDULING_POLICY = function () {
		return this.getToken(t.KW_SCHEDULING_POLICY, 0);
	};
	Mt.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Mt.prototype.KW_PATH = function () {
		return this.getToken(t.KW_PATH, 0);
	};
	Mt.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	Mt.prototype.accept = function (u) {
		return u instanceof d ? u.visitPoolAssign(this) : u.visitChildren(this);
	};
	t.PoolAssignContext = Mt;
	t.prototype.poolAssign = function () {
		var u = new Mt(this, this._ctx, this.state);
		this.enterRule(u, 864, t.RULE_poolAssign);
		try {
			switch ((this.enterOuterAlt(u, 1), (this.state = 4587), this._errHandler.sync(this), this._input.LA(1))) {
				case t.KW_ALLOC_FRACTION:
					(this.state = 4575),
						this.match(t.KW_ALLOC_FRACTION),
						(this.state = 4576),
						this.match(t.EQUAL),
						(this.state = 4577),
						this.match(t.Number);
					break;
				case t.KW_QUERY_PARALLELISM:
					(this.state = 4578),
						this.match(t.KW_QUERY_PARALLELISM),
						(this.state = 4579),
						this.match(t.EQUAL),
						(this.state = 4580),
						this.match(t.Number);
					break;
				case t.KW_SCHEDULING_POLICY:
					(this.state = 4581),
						this.match(t.KW_SCHEDULING_POLICY),
						(this.state = 4582),
						this.match(t.EQUAL),
						(this.state = 4583),
						this.match(t.StringLiteral);
					break;
				case t.KW_PATH:
					(this.state = 4584),
						this.match(t.KW_PATH),
						(this.state = 4585),
						this.match(t.EQUAL),
						(this.state = 4586),
						this.poolPath();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function K1(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_poolAssignList),
			this
		);
	}
	K1.prototype = Object.create(s.ParserRuleContext.prototype);
	K1.prototype.constructor = K1;
	K1.prototype.poolAssign = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(Mt) : this.getTypedRuleContext(Mt, u);
	};
	K1.prototype.COMMA = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTokens(t.COMMA) : this.getToken(t.COMMA, u);
	};
	K1.prototype.accept = function (u) {
		return u instanceof d ? u.visitPoolAssignList(this) : u.visitChildren(this);
	};
	t.PoolAssignListContext = K1;
	t.prototype.poolAssignList = function () {
		var u = new K1(this, this._ctx, this.state);
		this.enterRule(u, 866, t.RULE_poolAssignList);
		var e = 0;
		try {
			for (
				this.enterOuterAlt(u, 1),
					this.state = 4589,
					this.poolAssign(),
					this.state = 4594,
					this._errHandler.sync(this),
					e = this._input.LA(1);
				e === t.COMMA;

			)
				(this.state = 4590),
					this.match(t.COMMA),
					(this.state = 4591),
					this.poolAssign(),
					(this.state = 4596),
					this._errHandler.sync(this),
					(e = this._input.LA(1));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Ei(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createPoolStatement),
			this
		);
	}
	Ei.prototype = Object.create(s.ParserRuleContext.prototype);
	Ei.prototype.constructor = Ei;
	Ei.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	Ei.prototype.KW_POOL = function () {
		return this.getToken(t.KW_POOL, 0);
	};
	Ei.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Ei.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	Ei.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	Ei.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	Ei.prototype.poolAssignList = function () {
		return this.getTypedRuleContext(K1, 0);
	};
	Ei.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreatePoolStatement(this) : u.visitChildren(this);
	};
	t.CreatePoolStatementContext = Ei;
	t.prototype.createPoolStatement = function () {
		var u = new Ei(this, this._ctx, this.state);
		this.enterRule(u, 868, t.RULE_createPoolStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4597),
				this.match(t.KW_CREATE),
				(this.state = 4598),
				this.match(t.KW_POOL),
				(this.state = 4599),
				this.identifier(),
				(this.state = 4600),
				this.match(t.DOT),
				(this.state = 4601),
				this.poolPath(),
				(this.state = 4602),
				this.match(t.KW_WITH),
				(this.state = 4603),
				this.poolAssignList();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function bu(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterPoolStatement),
			this
		);
	}
	bu.prototype = Object.create(s.ParserRuleContext.prototype);
	bu.prototype.constructor = bu;
	bu.prototype.KW_ALTER = function () {
		return this.getToken(t.KW_ALTER, 0);
	};
	bu.prototype.KW_POOL = function () {
		return this.getToken(t.KW_POOL, 0);
	};
	bu.prototype.identifier = function (u) {
		return u === void 0 && (u = null), u === null ? this.getTypedRuleContexts(x) : this.getTypedRuleContext(x, u);
	};
	bu.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	bu.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	bu.prototype.KW_SET = function () {
		return this.getToken(t.KW_SET, 0);
	};
	bu.prototype.poolAssignList = function () {
		return this.getTypedRuleContext(K1, 0);
	};
	bu.prototype.KW_UNSET = function () {
		return this.getToken(t.KW_UNSET, 0);
	};
	bu.prototype.KW_SCHEDULING_POLICY = function () {
		return this.getToken(t.KW_SCHEDULING_POLICY, 0);
	};
	bu.prototype.KW_ADD = function () {
		return this.getToken(t.KW_ADD, 0);
	};
	bu.prototype.KW_TRIGGER = function () {
		return this.getToken(t.KW_TRIGGER, 0);
	};
	bu.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	bu.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterPoolStatement(this) : u.visitChildren(this);
	};
	t.AlterPoolStatementContext = bu;
	t.prototype.alterPoolStatement = function () {
		var u = new bu(this, this._ctx, this.state);
		this.enterRule(u, 870, t.RULE_alterPoolStatement);
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 4605),
				this.match(t.KW_ALTER),
				(this.state = 4606),
				this.match(t.KW_POOL),
				(this.state = 4607),
				this.identifier(),
				(this.state = 4608),
				this.match(t.DOT),
				(this.state = 4609),
				this.poolPath(),
				(this.state = 4620),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_SET:
					(this.state = 4610), this.match(t.KW_SET), (this.state = 4611), this.poolAssignList();
					break;
				case t.KW_UNSET:
					(this.state = 4612),
						this.match(t.KW_UNSET),
						(this.state = 4613),
						this.match(t.KW_SCHEDULING_POLICY);
					break;
				case t.KW_ADD:
					(this.state = 4614),
						this.match(t.KW_ADD),
						(this.state = 4615),
						this.match(t.KW_TRIGGER),
						(this.state = 4616),
						this.identifier();
					break;
				case t.KW_DROP:
					(this.state = 4617),
						this.match(t.KW_DROP),
						(this.state = 4618),
						this.match(t.KW_TRIGGER),
						(this.state = 4619),
						this.identifier();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function $n(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropPoolStatement),
			this
		);
	}
	$n.prototype = Object.create(s.ParserRuleContext.prototype);
	$n.prototype.constructor = $n;
	$n.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	$n.prototype.KW_POOL = function () {
		return this.getToken(t.KW_POOL, 0);
	};
	$n.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	$n.prototype.DOT = function () {
		return this.getToken(t.DOT, 0);
	};
	$n.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	$n.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropPoolStatement(this) : u.visitChildren(this);
	};
	t.DropPoolStatementContext = $n;
	t.prototype.dropPoolStatement = function () {
		var u = new $n(this, this._ctx, this.state);
		this.enterRule(u, 872, t.RULE_dropPoolStatement);
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4622),
				this.match(t.KW_DROP),
				(this.state = 4623),
				this.match(t.KW_POOL),
				(this.state = 4624),
				this.identifier(),
				(this.state = 4625),
				this.match(t.DOT),
				(this.state = 4626),
				this.poolPath();
		} catch (e) {
			if (e instanceof s.error.RecognitionException)
				(u.exception = e), this._errHandler.reportError(this, e), this._errHandler.recover(this, e);
			else throw e;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function Q0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_createMappingStatement),
			this
		);
	}
	Q0.prototype = Object.create(s.ParserRuleContext.prototype);
	Q0.prototype.constructor = Q0;
	Q0.prototype.KW_CREATE = function () {
		return this.getToken(t.KW_CREATE, 0);
	};
	Q0.prototype.KW_MAPPING = function () {
		return this.getToken(t.KW_MAPPING, 0);
	};
	Q0.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	Q0.prototype.KW_IN = function () {
		return this.getToken(t.KW_IN, 0);
	};
	Q0.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	Q0.prototype.KW_USER = function () {
		return this.getToken(t.KW_USER, 0);
	};
	Q0.prototype.KW_GROUP = function () {
		return this.getToken(t.KW_GROUP, 0);
	};
	Q0.prototype.KW_APPLICATION = function () {
		return this.getToken(t.KW_APPLICATION, 0);
	};
	Q0.prototype.unmanaged = function () {
		return this.getTypedRuleContext(Pp, 0);
	};
	Q0.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	Q0.prototype.KW_ORDER = function () {
		return this.getToken(t.KW_ORDER, 0);
	};
	Q0.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	Q0.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	Q0.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	Q0.prototype.accept = function (u) {
		return u instanceof d ? u.visitCreateMappingStatement(this) : u.visitChildren(this);
	};
	t.CreateMappingStatementContext = Q0;
	t.prototype.createMappingStatement = function () {
		var u = new Q0(this, this._ctx, this.state);
		this.enterRule(u, 874, t.RULE_createMappingStatement);
		var e = 0;
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 4628),
				this.match(t.KW_CREATE),
				(this.state = 4629),
				(e = this._input.LA(1)),
				e === t.KW_GROUP || e === t.KW_USER || e === t.KW_APPLICATION
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this),
				(this.state = 4630),
				this.match(t.KW_MAPPING),
				(this.state = 4631),
				this.match(t.StringLiteral),
				(this.state = 4632),
				this.match(t.KW_IN),
				(this.state = 4633),
				this.identifier(),
				(this.state = 4637),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_TO:
					(this.state = 4634), this.match(t.KW_TO), (this.state = 4635), this.poolPath();
					break;
				case t.KW_UNMANAGED:
					(this.state = 4636), this.unmanaged();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
			(this.state = 4642),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 4639),
					this.match(t.KW_WITH),
					(this.state = 4640),
					this.match(t.KW_ORDER),
					(this.state = 4641),
					this.match(t.Number));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function q0(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_alterMappingStatement),
			this
		);
	}
	q0.prototype = Object.create(s.ParserRuleContext.prototype);
	q0.prototype.constructor = q0;
	q0.prototype.KW_ALTER = function () {
		return this.getToken(t.KW_ALTER, 0);
	};
	q0.prototype.KW_MAPPING = function () {
		return this.getToken(t.KW_MAPPING, 0);
	};
	q0.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	q0.prototype.KW_IN = function () {
		return this.getToken(t.KW_IN, 0);
	};
	q0.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	q0.prototype.KW_USER = function () {
		return this.getToken(t.KW_USER, 0);
	};
	q0.prototype.KW_GROUP = function () {
		return this.getToken(t.KW_GROUP, 0);
	};
	q0.prototype.KW_APPLICATION = function () {
		return this.getToken(t.KW_APPLICATION, 0);
	};
	q0.prototype.unmanaged = function () {
		return this.getTypedRuleContext(Pp, 0);
	};
	q0.prototype.KW_WITH = function () {
		return this.getToken(t.KW_WITH, 0);
	};
	q0.prototype.KW_ORDER = function () {
		return this.getToken(t.KW_ORDER, 0);
	};
	q0.prototype.Number = function () {
		return this.getToken(t.Number, 0);
	};
	q0.prototype.KW_TO = function () {
		return this.getToken(t.KW_TO, 0);
	};
	q0.prototype.poolPath = function () {
		return this.getTypedRuleContext(Hu, 0);
	};
	q0.prototype.accept = function (u) {
		return u instanceof d ? u.visitAlterMappingStatement(this) : u.visitChildren(this);
	};
	t.AlterMappingStatementContext = q0;
	t.prototype.alterMappingStatement = function () {
		var u = new q0(this, this._ctx, this.state);
		this.enterRule(u, 876, t.RULE_alterMappingStatement);
		var e = 0;
		try {
			switch (
				(this.enterOuterAlt(u, 1),
				(this.state = 4644),
				this.match(t.KW_ALTER),
				(this.state = 4645),
				(e = this._input.LA(1)),
				e === t.KW_GROUP || e === t.KW_USER || e === t.KW_APPLICATION
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this),
				(this.state = 4646),
				this.match(t.KW_MAPPING),
				(this.state = 4647),
				this.match(t.StringLiteral),
				(this.state = 4648),
				this.match(t.KW_IN),
				(this.state = 4649),
				this.identifier(),
				(this.state = 4653),
				this._errHandler.sync(this),
				this._input.LA(1))
			) {
				case t.KW_TO:
					(this.state = 4650), this.match(t.KW_TO), (this.state = 4651), this.poolPath();
					break;
				case t.KW_UNMANAGED:
					(this.state = 4652), this.unmanaged();
					break;
				default:
					throw new s.error.NoViableAltException(this);
			}
			(this.state = 4658),
				this._errHandler.sync(this),
				(e = this._input.LA(1)),
				e === t.KW_WITH &&
					((this.state = 4655),
					this.match(t.KW_WITH),
					(this.state = 4656),
					this.match(t.KW_ORDER),
					(this.state = 4657),
					this.match(t.Number));
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	function be(u, e, i) {
		return (
			e === void 0 && (e = null),
			i == null && (i = -1),
			s.ParserRuleContext.call(this, e, i),
			(this.parser = u),
			(this.ruleIndex = t.RULE_dropMappingStatement),
			this
		);
	}
	be.prototype = Object.create(s.ParserRuleContext.prototype);
	be.prototype.constructor = be;
	be.prototype.KW_DROP = function () {
		return this.getToken(t.KW_DROP, 0);
	};
	be.prototype.KW_MAPPING = function () {
		return this.getToken(t.KW_MAPPING, 0);
	};
	be.prototype.StringLiteral = function () {
		return this.getToken(t.StringLiteral, 0);
	};
	be.prototype.KW_IN = function () {
		return this.getToken(t.KW_IN, 0);
	};
	be.prototype.identifier = function () {
		return this.getTypedRuleContext(x, 0);
	};
	be.prototype.KW_USER = function () {
		return this.getToken(t.KW_USER, 0);
	};
	be.prototype.KW_GROUP = function () {
		return this.getToken(t.KW_GROUP, 0);
	};
	be.prototype.KW_APPLICATION = function () {
		return this.getToken(t.KW_APPLICATION, 0);
	};
	be.prototype.accept = function (u) {
		return u instanceof d ? u.visitDropMappingStatement(this) : u.visitChildren(this);
	};
	t.DropMappingStatementContext = be;
	t.prototype.dropMappingStatement = function () {
		var u = new be(this, this._ctx, this.state);
		this.enterRule(u, 878, t.RULE_dropMappingStatement);
		var e = 0;
		try {
			this.enterOuterAlt(u, 1),
				(this.state = 4660),
				this.match(t.KW_DROP),
				(this.state = 4661),
				(e = this._input.LA(1)),
				e === t.KW_GROUP || e === t.KW_USER || e === t.KW_APPLICATION
					? (this._errHandler.reportMatch(this), this.consume())
					: this._errHandler.recoverInline(this),
				(this.state = 4662),
				this.match(t.KW_MAPPING),
				(this.state = 4663),
				this.match(t.StringLiteral),
				(this.state = 4664),
				this.match(t.KW_IN),
				(this.state = 4665),
				this.identifier();
		} catch (i) {
			if (i instanceof s.error.RecognitionException)
				(u.exception = i), this._errHandler.reportError(this, i), this._errHandler.recover(this, i);
			else throw i;
		} finally {
			this.exitRule();
		}
		return u;
	};
	t.prototype.sempred = function (u, e, i) {
		switch (e) {
			case 379:
				return this.expression_sempred(u, i);
			default:
				throw 'No predicate with index:' + e;
		}
	};
	t.prototype.expression_sempred = function (u, e) {
		switch (e) {
			case 0:
				return this.precpred(this._ctx, 13);
			case 1:
				return this.precpred(this._ctx, 12);
			case 2:
				return this.precpred(this._ctx, 11);
			case 3:
				return this.precpred(this._ctx, 10);
			case 4:
				return this.precpred(this._ctx, 9);
			case 5:
				return this.precpred(this._ctx, 8);
			case 6:
				return this.precpred(this._ctx, 5);
			case 7:
				return this.precpred(this._ctx, 3);
			case 8:
				return this.precpred(this._ctx, 2);
			case 9:
				return this.precpred(this._ctx, 14);
			case 10:
				return this.precpred(this._ctx, 7);
			default:
				throw 'No predicate with index:' + e;
		}
	};
	_6.HiveParser = t;
});
var m6 = Z((KO, R6) => {
	var RE = (u, e, i) => {
			let n = u.findIndex(a => Ul(a.bucketName, e) && Ul(a.collectionName, i));
			return n !== -1 ? n : u.findIndex(a => a.collectionName === i);
		},
		mE = (u, e, i) => u.findIndex(n => Ul(n.bucketName, e) && Ul(n.name, i)),
		E6 = (u, e) => (u[e] ? e : Object.keys(u).find(i => Ul(i, e))),
		yE = (u, e) => {
			let i = { ...u };
			return delete i[E6(u, e)], i;
		},
		Ul = (u, e) => (u || '').toLowerCase() === (e || '').toLowerCase(),
		CE = (u, e) => [...u.slice(0, e), ...u.slice(e + 1)],
		bE = (u, e, i) => [...u.slice(0, e), i, ...u.slice(e + 1)],
		T6 = (u, e) =>
			!p5(u) || !p5(e)
				? e || u
				: Object.keys(e).reduce((i, n) => {
						let a = p5(e[n]) ? T6(i[n] || {}, e[n]) : e[n];
						return { ...i, [n]: a };
				  }, u),
		AE = (u, e) => e.bucketName || u.currentBucket,
		p5 = u => u && typeof u == 'object' && !Array.isArray(u);
	R6.exports = {
		findEntityIndex: RE,
		getCaseInsensitiveKey: E6,
		omitCaseInsensitive: yE,
		isEqualCaseInsensitive: Ul,
		remove: CE,
		set: bE,
		merge: T6,
		getCurrentBucket: AE,
		findViewIndex: mE,
	};
});
var d5 = Z((xO, q6) => {
	var { dependencies: ea } = ca(),
		{
			set: Fu,
			findEntityIndex: x1,
			omitCaseInsensitive: C6,
			isEqualCaseInsensitive: WE,
			remove: zd,
			findViewIndex: h5,
			merge: $d,
		} = m6(),
		b6 = 'createCollection',
		A6 = 'removeCollection',
		W6 = 'renameCollection',
		K6 = 'createBucket',
		x6 = 'removeBucket',
		O6 = 'useBucket',
		L6 = 'addFieldsToCollection',
		S6 = 'addCollectionLevelIndex',
		I6 = 'addCollectionLevelBloomfilterIndex',
		N6 = 'removeCollectionLevelBloomfilterIndex',
		P6 = 'updateField',
		g6 = 'createView',
		D6 = 'removeView',
		U6 = 'removeCollectionLevelIndex',
		v6 = 'addRelationship',
		w6 = 'updateColumn',
		M6 = 'createResourcePlan',
		H6 = 'addToResourcePlan',
		F6 = 'createMapping',
		k6 = 'updateViewLevelData',
		V6 = 'renameView',
		B6 = 'updateResourcePlan',
		KE = 'dropResourcePlan',
		Y6 = 'updateItemInResourcePlan',
		G6 = 'dropResourcePlanItem',
		j6 = 'removeMapping',
		X6 = 'updateCollectionProperties',
		l5 = 'New database',
		xE = (u, e) =>
			u.reduce(
				(i, n) => {
					let a = n && n.type;
					if (!a) return i;
					let o = n.bucketName || i.currentBucket;
					return ea.lodash.keys(y6).includes(a) ? y6[a](i, o, n, e) : i;
				},
				{ entities: [], views: [], currentBucket: l5, buckets: {}, relationships: [], modelProperties: {} },
			),
		OE = (u, e) => {
			let i = xE(u, e),
				n = [],
				a = i.entities.map(o => {
					let c = i.views.filter(h => h.collectionName === o.collectionName);
					return (
						n.includes(o.bucketName) && n.push(o.bucketName),
						{
							objectNames: { collectionName: o.collectionName },
							doc: {
								dbName: o.bucketName,
								collectionName: o.collectionName,
								bucketInfo: i.buckets[o.bucketName] || {},
								entityLevel: o.entityLevelData,
								views: c,
							},
							jsonSchema: o.schema,
						}
					);
				});
			if (Object.keys(i.buckets || {}).length !== n.length) {
				let o = Object.keys(i.buckets).map(c => ({
					doc: { dbName: c, bucketInfo: { additionalData: i.buckets[c] || {} }, emptyBucket: !0 },
				}));
				a = a.concat(o);
			}
			return { result: a, info: i.modelProperties, relationships: i.relationships };
		},
		LE = (u, e, i) => {
			let { entities: n, currentBucket: a } = u,
				o = vE(n, i);
			return o.bucketName
				? a === l5
					? { ...u, entities: [...n, o], bucketName: o.bucketName }
					: { ...u, entities: [...n, o] }
				: { ...u, entities: [...n, { ...o, bucketName: e }] };
		},
		SE = (u, e, i) => {
			let { entities: n } = u,
				a = x1(n, e, i.collectionName);
			return a === -1 ? u : { ...u, entities: zd(n, a) };
		},
		IE = (u, e, i) => {
			let { buckets: n } = u,
				a = i.name;
			return { ...u, currentBucket: a, buckets: { ...n, [a]: i.data || {} } };
		},
		NE = (u, e, i) => {
			let { buckets: n, entities: a } = u,
				o = i.name;
			return { currentBucket: l5, buckets: C6(n, o), entities: a.filter(c => !WE(c.bucketName, o)) };
		},
		PE = (u, e, i) => ({ ...u, currentBucket: i.bucketName }),
		gE = (u, e, i) => {
			let { entities: n } = u,
				a = x1(n, e, i.collectionName);
			if (a === -1) return u;
			let o = n[a];
			return {
				...u,
				entities: [
					...n.slice(0, a),
					{ ...o, schema: { ...o.schema, properties: { ...o.schema.properties, ...i.data } } },
					...n.slice(a + 1),
				],
			};
		},
		DE = (u, e, i) => {
			let { entities: n } = u,
				a = x1(n, e, i.collectionName);
			if (a === -1) return u;
			let o = n[a],
				c = ea.lodash.get(o, 'schema.properties', {})[i.name];
			if (!c) return u;
			let h = { ...c, ...i.data };
			return {
				...u,
				entities: [
					...n.slice(0, a),
					{
						...o,
						schema: { ...o.schema, properties: { ...C6(o.schema.properties, i.name), [i.nameTo]: h } },
					},
					...n.slice(a + 1),
				],
			};
		},
		UE = (u, e, i, n) => {
			let { views: a } = u,
				o = `AS ${n.substring(i.select.start, i.select.stop)}`;
			return {
				...u,
				views: [...a, { ...i, data: { ...i.data, selectStatement: o }, bucketName: i.bucketName || e }],
			};
		},
		vE = (u, e) => {
			if (!e.tableLikeName) return e;
			let i = u.find(n => n.collectionName === e.tableLikeName);
			return i
				? {
						...i,
						collectionName: e.collectionName,
						bucketName: e.bucketName,
						entityLevelData: { ...i.entityLevelData, ...e.entityLevelData },
				  }
				: e;
		},
		wE = (u, e, i) => {
			let { entities: n } = u,
				a = x1(n, e, i.collectionName);
			if (a === -1) return u;
			let o = n[a],
				c = o.entityLevelData || {},
				h = [...(c.SecIndxs || []), { name: i.name, SecIndxKey: i.columns, ...i.data }];
			return { ...u, entities: Fu(n, a, { ...o, entityLevelData: { ...c, SecIndxs: h } }) };
		},
		ME = (u, e) => u.every(i => !i.options || i.options === e),
		HE = (u = [], e) => {
			let i = ea.lodash;
			return (
				(e = e || i.get(i.first(u), 'options', '')),
				ME(u, e)
					? [{ forColumns: u.map(({ name: a }) => a), options: e }]
					: u.map(a => ({ forColumns: [a.name], options: a.options || e }))
			);
		},
		FE = (u, e, i) => {
			let { entities: n } = u,
				a = x1(n, e, i.collectionName);
			if (a === -1) return u;
			let o = n[a],
				c = o.entityLevelData || {},
				h = [...(c.BloomIndxs || []), ...HE(i.columns, i.options)];
			return { ...u, entities: Fu(n, a, { ...o, entityLevelData: { ...c, BloomIndxs: h } }) };
		},
		kE = u => (e, i) =>
			u
				.chain(e || [])
				.map(n => {
					let a = n.forColumns.filter(o => !u.includes(i, o));
					if (!u.isEmpty(a)) return { ...n, forColumns: a };
				})
				.compact()
				.value(),
		VE = (u, e, i) => {
			let n = ea.lodash,
				{ entities: a } = u,
				o = x1(a, e, i.collectionName);
			if (o === -1) return u;
			let c = a[o],
				h = c.entityLevelData || {},
				_ = i.columns.map(W => W.name),
				y = kE(n)(h.BloomIndxs, _);
			return { ...u, entities: Fu(a, o, { ...c, entityLevelData: { ...h, BloomIndxs: y } }) };
		},
		BE = (u, e, i) => {
			let { entities: n } = u,
				a = x1(n, e, i.collectionName);
			if (a === -1) return u;
			let o = n[a],
				c = o.entityLevelData || {},
				h = (c.SecIndxs || []).filter(_ => _.name !== i.indexName);
			return { ...u, entities: Fu(n, a, { ...o, entityLevelData: { ...c, SecIndxs: h } }) };
		},
		YE = (u, e, i) => {
			let { entities: n } = u,
				a = x1(n, e, i.collectionName);
			if (a === -1) return u;
			let o = n[a];
			return {
				...u,
				entities: Fu(n, a, { ...o, schema: { ...o.schema, properties: jE(o.schema.properties, i.data) } }),
			};
		},
		GE = (u, e, i) => {
			let { relationships: n } = u;
			return {
				...u,
				relationships: n.concat({
					childCollection: i.childCollection,
					parentCollection: i.parentCollection,
					childField: i.childField,
					parentField: i.parentField,
					relationshipType: 'Foreign Key',
					childCardinality: '1',
					parentCardinality: '1',
					relationshipName: i.relationshipName,
					childDbName: i.childDbName || e,
					dbName: i.dbName || e,
				}),
			};
		},
		jE = (u, e) => {
			let i = ea.lodash;
			return i.fromPairs(
				i.keys(u).map(n => (e.fields.includes(n) ? [n, { ...u[n], [e.type]: e.value }] : [n, u[n]])),
			);
		},
		XE = (u, e, i) => {
			let { modelProperties: n } = u;
			if (i.like) {
				let a = (n.resourcePlans || []).find(({ name: o }) => o === i.like);
				return a
					? {
							...u,
							modelProperties: {
								...n,
								resourcePlans: [...(n.resourcePlans || []), { ...a, name: i.name }],
							},
					  }
					: u;
			}
			return {
				...u,
				modelProperties: {
					...n,
					resourcePlans: [...(n.resourcePlans || []), { name: i.name, parallelism: i.parallelism }],
				},
			};
		},
		QE = (u, e, i) => {
			let { modelProperties: n } = u,
				a = i.identifier,
				o = n.resourcePlans || [],
				c = vl(o, i.resourceName);
			if (c === -1) return u;
			let h = { ...o[c], [a + 's']: ea.lodash.get(o, `${c}.${a + 's'}`, []).concat(i[a]) };
			return { ...u, modelProperties: { ...n, resourcePlans: Fu(o, c, h) } };
		},
		qE = (u, e, i) => {
			let { modelProperties: n } = u,
				a = n.resourcePlans || [],
				o = vl(a, i.resourceName);
			if (o < 0) return u;
			let c = a[o].pools || [],
				h = ea.lodash.findIndex(c, ({ name: W }) => W === i.poolName);
			if (h < 0) return u;
			let _ = sT(c, h, i.mapping),
				y = Fu(a, o, { ...a[o], pools: Fu(c, h, _) });
			return { ...u, modelProperties: { ...n, resourcePlans: y } };
		},
		ZE = (u, e, i) => {
			let { views: n } = u,
				a = h5(n, e, i.viewName);
			return a === -1 ? u : { ...u, views: zd(n, a) };
		},
		JE = (u, e, i, n) => {
			let { views: a } = u,
				o = h5(a, e, i.viewName);
			if (o === -1) return u;
			let c = a[o],
				h = i.data || {};
			return (
				i.select && (h.selectStatement = `AS ${n.substring(i.select.start, i.select.stop)}`),
				{ ...u, views: Fu(a, o, { ...c, data: $d(c.data, h) }) }
			);
		},
		zE = (u, e, i) => {
			let { views: n } = u,
				a = h5(n, e, i.viewName);
			if (a === -1) return u;
			let o = n[a];
			return { ...u, views: Fu(n, a, { ...o, name: i.newViewName }) };
		},
		$E = (u, e, i) => {
			let { entities: n } = u,
				a = x1(n, e, i.collectionName);
			if (a === -1) return u;
			let o = n[a];
			return { ...u, entities: Fu(n, a, { ...o, name: i.newCollectionName }) };
		},
		uT = (u, e, i) => {
			let { modelProperties: n } = u,
				a = n.resourcePlans || [],
				o = vl(a, i.resourceName);
			if (o === -1) return u;
			let c = { ...i.data, name: i.renameTo || i.resourceName },
				h = $d(a[o], c);
			return { ...u, modelProperties: { ...n, resourcePlans: Fu(a, o, h) } };
		},
		tT = (u, e, i) => {
			let { modelProperties: n } = u,
				a = n.resourcePlans || [],
				o = vl(a, i.resourceName);
			return o === -1 ? u : { ...u, modelProperties: { ...n, resourcePlans: zd(a, o) } };
		},
		eT = (u, e, i) => {
			let { modelProperties: n } = u,
				a = i.identifier,
				o = n.resourcePlans || [],
				{ resourcePlanIndex: c, itemIndex: h } = Q6(o, i, a);
			if (c === -1 || h === -1) return u;
			let _ = Fu(o[c][a + 's'], h, $d(o[c][a + 's'][h], i.data)),
				y = { ...o[c], [a + 's']: _ };
			return { ...u, modelProperties: { ...n, resourcePlans: Fu(o, c, y) } };
		},
		iT = (u, e, i) => {
			let { modelProperties: n } = u,
				a = i.identifier,
				o = n.resourcePlans || [],
				{ resourcePlanIndex: c, itemIndex: h } = Q6(o, i, a);
			if (c === -1 || h === -1) return u;
			let _ = zd(o[c][a + 's'], h),
				y = { ...o[c], [a + 's']: _ };
			return { ...u, modelProperties: { ...n, resourcePlans: Fu(o, c, y) } };
		},
		rT = (u, e, i) => {
			let { modelProperties: n } = u,
				a = n.resourcePlans || [],
				o = vl(a, i.resourceName);
			if (o < 0) return u;
			let c = a[o].pools || [],
				h = ea.lodash.findIndex(c, ({ mappings: W }) => (W || []).find(({ name: O }) => O === i.name));
			if (h < 0) return u;
			let _ = aT(c, h, i.name),
				y = Fu(a, o, { ...a[o], pools: Fu(c, h, _) });
			return { ...u, modelProperties: { ...n, resourcePlans: y } };
		},
		nT = (u, e, i) => {
			let { entities: n } = u,
				a = x1(n, e, i.collectionName);
			if (a === -1) return u;
			let o = n[a];
			return { ...u, entities: Fu(n, a, { ...o, entityLevelData: $d(o.entityLevelData, i.data) }) };
		},
		vl = (u, e) => ea.lodash.findIndex(u, i => i.name === e),
		sT = (u, e, i) => ({ ...u[e], mappings: ea.lodash.get(u[e], 'mappings', []).concat(i) }),
		aT = (u, e, i) => ({ ...u[e], mappings: u[e].mappings.filter(({ name: n }) => n !== i) }),
		Q6 = (u, e, i) => {
			let n = ea.lodash,
				a = vl(u, e.resourceName),
				o = n.get(u, `${a}.${i + 's'}`, []),
				c = n.findIndex(o, ({ name: h }) => h === e[i]);
			return { resourcePlanIndex: a, itemIndex: c };
		},
		y6 = {
			[b6]: LE,
			[A6]: SE,
			[K6]: IE,
			[x6]: NE,
			[O6]: PE,
			[L6]: gE,
			[S6]: wE,
			[I6]: FE,
			[N6]: VE,
			[P6]: DE,
			[g6]: UE,
			[D6]: ZE,
			[U6]: BE,
			[v6]: GE,
			[w6]: YE,
			[M6]: XE,
			[H6]: QE,
			[F6]: qE,
			[k6]: JE,
			[V6]: zE,
			[B6]: uT,
			[KE]: tT,
			[Y6]: eT,
			[G6]: iT,
			[j6]: rT,
			[W6]: $E,
			[X6]: nT,
		};
	q6.exports = {
		convertCommandsToReDocs: OE,
		CREATE_COLLECTION_COMMAND: b6,
		REMOVE_COLLECTION_COMMAND: A6,
		CREATE_BUCKET_COMMAND: K6,
		REMOVE_BUCKET_COMMAND: x6,
		USE_BUCKET_COMMAND: O6,
		ADD_FIELDS_TO_COLLECTION_COMMAND: L6,
		UPDATE_FIELD_COMMAND: P6,
		CREATE_VIEW_COMMAND: g6,
		ADD_COLLECTION_LEVEL_INDEX_COMMAND: S6,
		REMOVE_COLLECTION_LEVEL_INDEX_COMMAND: U6,
		ADD_COLLECTION_LEVEL_BLOOMFILTER_INDEX_COMMAND: I6,
		REMOVE_COLLECTION_LEVEL_BLOOMFILTER_INDEX_COMMAND: N6,
		ADD_RELATIONSHIP_COMMAND: v6,
		UPDATE_ENTITY_COLUMN: w6,
		CREATE_RESOURCE_PLAN: M6,
		ADD_TO_RESOURCE_PLAN: H6,
		CREATE_MAPPING: F6,
		REMOVE_VIEW_COMMAND: D6,
		RENAME_VIEW_COMMAND: V6,
		UPDATE_VIEW_LEVEL_DATA_COMMAND: k6,
		UPDATE_RESOURCE_PLAN: B6,
		UPDATE_ITEM_IN_RESOURCE_PLAN: Y6,
		DROP_RESOURCE_PLAN_ITEM: G6,
		DROP_MAPPING: j6,
		RENAME_COLLECTION_COMMAND: W6,
		UPDATE_ENTITY_LEVEL_DATA_COMMAND: X6,
	};
});
var J6 = Z((OO, Z6) => {
	var oT = u =>
			['numeric', 'text'].indexOf(u.type) !== -1
				? { keyType: u.type, keySubtype: u.mode }
				: { keyType: 'text', keySubtype: 'string' },
		cT = u => {
			let e = i => `map<${i}>`;
			switch (u) {
				case 'text':
					return e('txt');
				case 'numeric':
					return e('num');
				case 'bool':
					return e('bool');
				case 'timestamp':
					return e('ts');
				case 'date':
					return e('date');
				case 'interval':
					return e('intrvl');
				case 'array':
					return e('array');
				case 'map':
					return e('map');
				case 'struct':
					return e('struct');
				case 'union':
					return e('union');
			}
		},
		pT = u => {
			let e = i => `array<${i}>`;
			switch (u) {
				case 'text':
					return e('txt');
				case 'numeric':
					return e('num');
				case 'timestamp':
					return e('ts');
				case 'date':
					return e('date');
				case 'interval':
					return e('intrvl');
				case 'array':
					return e('array');
				case 'map':
					return e('map');
				case 'struct':
					return e('struct');
				case 'union':
					return e('union');
			}
		};
	Z6.exports = { getArraySubtypeByType: pT, getMapSubtype: cT, getMapKeyType: oT };
});
var h8 = Z((LO, p8) => {
	var { HiveParserVisitor: hT } = a5(),
		{ HiveParser: Ht } = c5(),
		{
			CREATE_COLLECTION_COMMAND: lT,
			REMOVE_COLLECTION_COMMAND: dT,
			CREATE_BUCKET_COMMAND: fT,
			REMOVE_BUCKET_COMMAND: _T,
			USE_BUCKET_COMMAND: ET,
			ADD_FIELDS_TO_COLLECTION_COMMAND: TT,
			UPDATE_FIELD_COMMAND: RT,
			CREATE_VIEW_COMMAND: z6,
			ADD_COLLECTION_LEVEL_INDEX_COMMAND: mT,
			REMOVE_COLLECTION_LEVEL_INDEX_COMMAND: $6,
			ADD_COLLECTION_LEVEL_BLOOMFILTER_INDEX_COMMAND: yT,
			REMOVE_COLLECTION_LEVEL_BLOOMFILTER_INDEX_COMMAND: CT,
			UPDATE_ENTITY_LEVEL_DATA_COMMAND: xd,
			UPDATE_VIEW_LEVEL_DATA_COMMAND: bT,
			RENAME_VIEW_COMMAND: AT,
			ADD_RELATIONSHIP_COMMAND: u8,
			UPDATE_ENTITY_COLUMN: WT,
			CREATE_RESOURCE_PLAN: t8,
			CREATE_MAPPING: KT,
			REMOVE_VIEW_COMMAND: e8,
			UPDATE_RESOURCE_PLAN: xT,
			DROP_RESOURCE_PLAN: OT,
			UPDATE_ITEM_IN_RESOURCE_PLAN: i8,
			ADD_TO_RESOURCE_PLAN: r8,
			DROP_RESOURCE_PLAN_ITEM: n8,
			DROP_MAPPING: LT,
			RENAME_COLLECTION_COMMAND: ST,
		} = d5(),
		f5 = J6(),
		{ dependencies: uf } = ca(),
		{ removeParentheses: s8 } = Yl(),
		IT = [
			Ht.RULE_createTableStatement,
			Ht.RULE_dropTableStatement,
			Ht.RULE_createDatabaseStatement,
			Ht.RULE_switchDatabaseStatement,
			Ht.RULE_dropDatabaseStatement,
			Ht.RULE_createViewStatement,
			Ht.RULE_createMaterializedViewStatement,
			Ht.RULE_alterStatement,
			Ht.RULE_dropMaterializedViewStatement,
			Ht.RULE_dropViewStatement,
			Ht.RULE_dropIndexStatement,
			Ht.RULE_resourcePlanDdlStatements,
			Ht.RULE_createIndexStatement,
			Ht.RULE_dropIndexStatement,
			Ht.RULE_createBloomfilterIndexStatement,
			Ht.RULE_dropBloomfilterIndexStatement,
		],
		_5 = class extends hT {
			visitStatement(e) {
				let i = e.execStatement();
				if (i) return this.visit(i);
			}
			visitExecStatement(e) {
				let i = e.ddlStatement();
				if (i) return this.visit(i);
			}
			visitDdlStatement(e) {
				if (IT.includes(e.children[0].ruleIndex)) return super.visitDdlStatement(e)[0];
			}
			visitCreateTableStatement(e) {
				let i = uf.lodash,
					[n, a] = this.visit(e.tableName()),
					o = this.visitWhenExists(e, 'tableUsingDataSource'),
					c = this.visitWhenExists(e, 'tablePartition', []),
					{
						compositeClusteringKey: h,
						numBuckets: _,
						sortedByKey: y,
					} = this.visitWhenExists(e, 'tableBuckets', {}),
					{ skewedby: W, skewedOn: O, skewStoredAsDir: S } = this.visitWhenExists(e, 'tableSkewed', {}),
					w = this.visitWhenExists(e, 'tableRowFormat', {}),
					U = this.visitWhenExists(e, 'tableComment'),
					u0 = this.visitWhenExists(e, 'tableLocation'),
					C0 = this.visitWhenExists(e, 'tablePropertiesPrefixed'),
					i0 = Boolean(e.KW_TEMPORARY()),
					Z0 = Boolean(e.KW_EXTERNAL()),
					Tt = this.visitWhenExists(e, 'tableFileFormat', {}),
					{ database: t0, table: a0 } = n,
					{ properties: au, foreignKeys: ia } = this.visitWhenExists(e, 'columnNameTypeOrConstraintList', {
						properties: {},
						foreignKeys: [],
					}),
					I0 = ia.map(ku => ({ ...ku, childDbName: t0, childCollection: a0 }));
				return [
					{
						type: lT,
						collectionName: a0,
						bucketName: t0,
						schema: c8({ collectionName: a0, type: 'object', properties: { ...NT(c), ...au } }),
						tableLikeName: (a || {}).table,
						entityLevelData: i.pickBy(
							{
								temporaryTable: i0,
								externalTable: Z0,
								description: U,
								compositePartitionKey: c.map(([ku]) => ({ name: ku })),
								compositeClusteringKey: h,
								numBuckets: _,
								sortedByKey: y,
								skewedby: W,
								skewedOn: O,
								skewStoredAsDir: S,
								location: u0,
								tableProperties: C0,
								using: o,
								...Tt,
								...w,
							},
							ku => i.isBoolean(ku) || !i.isEmpty(ku),
						),
					},
					...I0.map(ku => ({ ...ku, type: u8 })),
				];
			}
			visitTableUsingDataSource(e) {
				return e.tableDataSource().getText();
			}
			visitAtomSelectStatement(e) {
				return this.visitWhenExists(e, 'fromClause', {});
			}
			visitSelectStatement(e) {
				return this.visit(e.atomSelectStatement());
			}
			visitFromClause(e) {
				return this.visit(e.fromSource());
			}
			visitFromSource(e) {
				return this.visitWhenExists(e, 'joinSource') || this.visitWhenExists(e, 'uniqueJoinSource');
			}
			visitUniqueJoinSource(e) {
				return this.visit(e.uniqueJoinTableSource());
			}
			visitUniqueJoinTableSource(e) {
				return this.visit(e.tableName());
			}
			visitJoinSource(e) {
				return this.visit(e.atomjoinSource());
			}
			visitAtomjoinSource(e) {
				return this.visitWhenExists(e, 'tableSource') || this.visitWhenExists(e, 'joinSource');
			}
			visitTableSource(e) {
				return this.visit(e.tableName());
			}
			visitTablePartition(e) {
				return this.visit(e.partitionedColumnNameTypeConstraint());
			}
			visitTableComment(e) {
				return su(e);
			}
			visitTableBuckets(e) {
				let i = Boolean(e.Number()),
					n = Boolean(e.columnNameOrderList());
				return {
					compositeClusteringKey: e
						.columnNameList()
						.getText()
						.split(',')
						.map(a => ({ name: a })),
					...(n ? { sortedByKey: this.visit(e.columnNameOrderList()) } : {}),
					...(i ? { numBuckets: Number(e.Number().getText()) } : {}),
				};
			}
			visitColumnNameOrderList(e) {
				return this.visit(e.columnNameOrder());
			}
			visitColumnNameOrder(e) {
				return { name: e.identifier().getText(), type: PT(this.visitWhenExists(e, 'orderSpecification')) };
			}
			visitOrderSpecification(e) {
				return e.getText();
			}
			visitTableSkewed(e) {
				return {
					skewedby: this.visit(e.columnNameList()),
					skewedOn: `(${e.skewedValueElement().getText()})`,
					...(e.storedAsDirs() ? { skewStoredAsDir: !0 } : {}),
				};
			}
			visitTableRowFormat(e) {
				return Boolean(e.rowFormatDelimited())
					? { rowFormat: 'delimited', ...this.visit(e.rowFormatDelimited()) }
					: { rowFormat: 'SerDe', ...this.visit(e.rowFormatSerde()) };
			}
			visitRowFormatDelimited(e) {
				let { fieldsTerminatedBy: i, fieldsescapedBy: n } = this.visitWhenExists(
					e,
					'tableRowFormatFieldIdentifier',
					{},
				);
				return {
					fieldsTerminatedBy: i,
					fieldsescapedBy: n,
					collectionItemsTerminatedBy: this.visitWhenExists(e, 'tableRowFormatCollItemsIdentifier'),
					mapKeysTerminatedBy: this.visitWhenExists(e, 'tableRowFormatMapKeysIdentifier'),
					linesTerminatedBy: this.visitWhenExists(e, 'tableRowFormatLinesIdentifier'),
					nullDefinedAs: this.visitWhenExists(e, 'tableRowNullFormat'),
				};
			}
			visitTableRowFormatFieldIdentifier(e) {
				return {
					fieldsTerminatedBy: su(e),
					fieldsescapedBy: this.visitWhenExists(e, 'tableRowFormatFieldIdentifierEcapedBy'),
				};
			}
			visitTableRowFormatCollItemsIdentifier(e) {
				return su(e);
			}
			visitTableRowFormatMapKeysIdentifier(e) {
				return su(e);
			}
			visitTableRowFormatLinesIdentifier(e) {
				return su(e);
			}
			visitTableRowNullFormat(e) {
				return su(e);
			}
			visitTableRowFormatFieldIdentifierEcapedBy(e) {
				return su(e);
			}
			visitRowFormatSerde(e) {
				return {
					serDeLibrary: su(e),
					serDeProperties: e.KW_SERDEPROPERTIES() ? e.tableProperties().getText() : '',
				};
			}
			visitTableLocation(e) {
				return su(e);
			}
			visitTablePropertiesPrefixed(e) {
				return e.tableProperties().getText();
			}
			visitCreateViewStatement(e) {
				let { database: i, table: n } = this.visit(e.tableName()),
					a = this.visitWhenExists(e, 'tableComment'),
					o = {
						start: e.selectStatementWithCTE().start.start,
						stop: e.selectStatementWithCTE().stop.stop + 1,
					},
					{ table: c } = this.visitWhenExists(e, 'selectStatementWithCTE', {});
				return {
					type: z6,
					name: n,
					bucketName: i,
					collectionName: c,
					jsonSchema: { properties: {} },
					select: o,
					data: { description: a },
				};
			}
			visitCreateMaterializedViewStatement(e) {
				let { database: i, table: n } = this.visit(e.tableName()),
					a = this.visitWhenExists(e, 'tableComment'),
					o = { start: e.selectStatementWithCTE().start.start, stop: e.selectStatementWithCTE().stop.stop },
					{ table: c } = this.visitWhenExists(e, 'selectStatementWithCTE', {});
				return {
					type: z6,
					name: n,
					bucketName: i,
					collectionName: c,
					jsonSchema: { properties: {} },
					select: o,
					data: { description: a, materialized: !0 },
				};
			}
			visitAlterStatement(e) {
				if (e.KW_TABLE()) {
					let { database: n, table: a } = this.visit(e.tableName());
					return {
						childDbName: n,
						childCollection: a,
						bucketName: n,
						collectionName: a,
						...this.visit(e.alterTableStatementSuffix()),
					};
				}
				if (e.KW_VIEW()) {
					let { database: n, table: a } = this.visit(e.tableName());
					return { bucketName: n, viewName: a, ...this.visit(e.alterViewStatementSuffix()) };
				}
			}
			visitAlterTableStatementSuffix(e) {
				let i = e.alterStatementSuffixAddConstraint();
				return i
					? this.visit(i)
					: [
							'alterStatementSuffixRename',
							'alterStatementSuffixProperties',
							'alterStatementSuffixSkewedby',
							'alterTblPartitionStatementSuffix',
					  ]
							.map(n => this.visitWhenExists(e, n))
							.filter(Boolean)[0];
			}
			visitAlterStatementSuffixRename(e) {
				let { database: i, table: n } = this.visit(e.tableName());
				return { type: ST, newCollectionName: n };
			}
			visitAlterStatementSuffixProperties(e) {
				return {};
			}
			visitAlterStatementSuffixSkewedby(e) {
				return {
					type: xd,
					data: {
						...this.visitWhenExists(e, 'tableSkewed', {}),
						...(Boolean(e.KW_NOT() && e.KW_SKEWED()) ? { skewedby: [], skewedOn: '' } : {}),
						...(Boolean(e.storedAsDirs()) ? { skewStoredAsDir: !1 } : {}),
					},
				};
			}
			visitAlterTblPartitionStatementSuffix(e) {
				return [
					'alterStatementSuffixFileFormat',
					'alterStatementSuffixLocation',
					'alterStatementSuffixBucketNum',
					'alterStatementSuffixClusterbySortby',
					'alterStatementSuffixRenameCol',
					'alterStatementSuffixAddCol',
				]
					.map(i => this.visitWhenExists(e, i))
					.filter(Boolean)[0];
			}
			visitAlterStatementSuffixFileFormat(e) {
				return { type: xd, data: { ...this.visit(e.fileFormat()) } };
			}
			visitFileFormat(e) {
				return e.KW_INPUTFORMAT()
					? {
							storedAsTable: 'input/output format',
							inputFormatClassname: wl(e.StringLiteral()[0].getText()),
							outputFormatClassname: wl(e.StringLiteral()[1].getText()),
							serDeLibrary: wl(e.StringLiteral()[2].getText()),
					  }
					: { storedAsTable: o8(e.tableFileFormatStoredAsFormat().getText()) };
			}
			visitAlterStatementSuffixLocation(e) {
				return { type: xd, data: { location: su(e) } };
			}
			visitAlterStatementSuffixBucketNum(e) {
				return { type: xd, data: { numBuckets: e.Number().getText() } };
			}
			visitAlterStatementSuffixClusterbySortby(e) {
				return {
					type: xd,
					data: {
						...(Boolean(e.KW_CLUSTERED()) ? { compositeClusteringKey: [] } : {}),
						...(Boolean(e.KW_SORTED()) ? { sortedByKey: [] } : {}),
						...this.visitWhenExists(e, 'tableBuckets', {}),
					},
				};
			}
			visitAlterStatementSuffixRenameCol(e) {
				let i = this.visitWhenExists(e, 'alterColumnConstraint', {});
				return {
					type: RT,
					name: this.visit(e.identifier()[0]),
					nameTo: this.visit(e.identifier()[1]),
					data: {
						...this.visit(e.colType()),
						...(Boolean(e.KW_COMMENT()) ? { description: su(e) } : {}),
						...i,
					},
				};
			}
			visitAlterColumnConstraint(e) {
				return e.alterForeignKeyConstraint()
					? this.visit(e.alterForeignKeyConstraint())
					: this.visit(e.alterColConstraint());
			}
			visitAlterForeignKeyConstraint(e) {
				return {};
			}
			visitAlterColConstraint(e) {
				return this.visit(e.columnConstraintType());
			}
			visitAlterStatementSuffixAddCol(e) {
				return { type: TT, data: this.visit(e.columnNameTypeList()) };
			}
			visitColumnNameTypeList(e) {
				return this.visit(e.columnNameType()).reduce((n, a) => {
					let { name: o, ...c } = a;
					return { ...n, [o]: c };
				}, {});
			}
			visitColumnNameType(e) {
				return {
					name: this.visit(e.identifier()),
					...this.visit(e.colType()),
					...this(e.KW_COMMENT() ? { description: su(e) } : {}),
				};
			}
			visitAlterViewStatementSuffix(e) {
				if (e.selectStatementWithCTE()) {
					let i = {
						start: e.selectStatementWithCTE().start.start,
						stop: e.selectStatementWithCTE().stop.stop,
					};
					return { type: bT, select: i };
				}
				if (e.alterStatementSuffixRename())
					return { type: AT, newViewName: this.visit(e.alterStatementSuffixRename()) };
			}
			visitAlterStatementSuffixRename(e) {
				return this.visit(e.tableName()).table;
			}
			visitAlterStatementSuffixAddConstraint(e) {
				let i = e.alterForeignKeyWithName();
				if (i) return { type: u8, ...this.visit(i) };
				let n = e.alterConstraintWithName();
				if (n) {
					let { fields: a, type: o } = this.visit(n);
					return { type: WT, data: { type: o === 'primary' ? 'primaryKey' : o, fields: a, value: !0 } };
				}
				return {};
			}
			visitAlterForeignKeyWithName(e) {
				let [i, n] = this.visit(e.columnParenthesesList()),
					{ database: a, table: o } = this.visit(e.tableName());
				return {
					relationshipName: this.visit(e.identifier()),
					parentCollection: o,
					dbName: a,
					childField: i,
					parentField: n,
				};
			}
			visitAlterConstraintWithName(e) {
				return this.visit(e.tableLevelConstraint());
			}
			visitSelectStatementWithCTE(e) {
				return this.visit(e.selectStatement());
			}
			visitColumnNameTypeOrConstraintList(e) {
				return this.visit(e.columnNameTypeOrConstraint()).reduce(
					({ properties: i, foreignKeys: n }, a) => {
						if (!a) return { properties: i, foreignKeys: n };
						if (a.isForeignKey) return { foreignKeys: [...n, a], properties: i };
						if (a.isConstraint) return { foreignKeys: n, properties: i };
						let o = a.foreignKey ? [a.foreignKey] : [];
						return { properties: { ...i, [a.name]: a.type }, foreignKeys: [...n, ...o] };
					},
					{ properties: {}, foreignKeys: [] },
				);
			}
			visitColumnNameTypeOrConstraint(e) {
				let i = e.columnNameTypeConstraint();
				return i ? this.visit(i) : this.visit(e.tableConstraint());
			}
			visitTableConstraint(e) {
				let i = e.createForeignKey();
				return i ? this.visit(i) : this.visit(e.createConstraint());
			}
			visitCreateConstraint(e) {
				let i = e.identifier();
				return {
					constraintName: i ? this.visit(i) : '',
					...this.visit(e.tableLevelConstraint()),
					isConstraint: !0,
				};
			}
			visitTableLevelConstraint(e) {
				let i = e.pkUkConstraint();
				return i ? this.visit(i) : {};
			}
			visitPkUkConstraint(e) {
				return { type: this.visit(e.tableConstraintType()), fields: this.visit(e.columnParenthesesList()) };
			}
			visitTableConstraintType(e) {
				return e.KW_PRIMARY() ? 'primary' : 'unique';
			}
			visitCreateForeignKey(e) {
				let i = e.identifier(),
					{ database: n, table: a } = this.visit(e.tableName()),
					[o, c] = this.visit(e.columnParenthesesList()),
					h = i ? this.visit(i) : '';
				return {
					isForeignKey: !0,
					relationshipName: h,
					parentCollection: a,
					dbName: n,
					childField: o,
					parentField: c,
				};
			}
			visitColumnParenthesesList(e) {
				return this.visit(e.columnNameList());
			}
			visitColumnNameList(e) {
				return this.visit(e.columnName());
			}
			visitColumnName(e) {
				return this.visit(e.identifier());
			}
			visitColumnNameTypeConstraint(e) {
				let i = this.visit(e.identifier()),
					n = this.visit(e.colType()),
					a = e.columnConstraint(),
					o = a && this.visit(a),
					c = e.KW_COMMENT() ? su(e) : '';
				return { name: i, type: { ...n, description: c, ...gT(o) } };
			}
			visitColType(e) {
				return this.visit(e.type_db_col());
			}
			visitType_db_col(e) {
				let i = e.primitiveType(),
					n = e.listType(),
					a = e.structType(),
					o = e.mapType(),
					c = e.unionType();
				if (i) return this.visit(i);
				if (n) return this.visit(n);
				if (a) return this.visit(a);
				if (o) return this.visit(o);
				if (c) return this.visit(c);
			}
			visitListType(e) {
				let i = this.visit(e.type_db_col()),
					a = !i.type || Array.isArray(i.type) ? 'union' : i.type;
				return {
					type: 'array',
					subtype: f5.getArraySubtypeByType(a),
					...(!i.oneOf && { items: i }),
					...(i.oneOf && { oneOf: E5(i.oneOf, 'New column') }),
				};
			}
			visitUnionType(e) {
				let i = this.visit(e.colTypeList()),
					n = o => ['struct', 'map', 'array'].indexOf(o) !== -1;
				return i.some(o => n(o.type)) ? { oneOf: i } : { type: uf.lodash.uniq(i.map(o => o.type)) };
			}
			visitColTypeList(e) {
				return this.visit(e.colType());
			}
			visitStructType(e) {
				return c8({ type: 'struct', properties: this.visit(e.columnNameColonTypeList()) });
			}
			visitColumnNameColonTypeList(e) {
				return this.visit(e.columnNameColonType()).reduce((i, n) => ({ ...i, [n.name]: n.type }), {});
			}
			visitColumnNameColonType(e) {
				return { name: this.visit(e.identifier()), type: this.visit(e.colType()) };
			}
			visitMapType(e) {
				let i = this.visit(e.type_db_col()),
					a = !i.type || Array.isArray(i.type) ? 'union' : i.type,
					o = this.visit(e.primitiveType());
				return {
					type: 'map',
					subtype: f5.getMapSubtype(a),
					properties: i.oneOf ? {} : { 'New column': i },
					...(i.oneOf && { oneOf: E5(i.oneOf, 'New column') }),
					...f5.getMapKeyType(o),
				};
			}
			visitPrimitiveType(e) {
				let i = e.KW_TIMESTAMPLOCALTZ() || e.KW_LOCAL(),
					n = e.KW_DECIMAL(),
					a = e.KW_VARCHAR(),
					o = e.KW_CHAR();
				if (i) return { type: 'timestamp' };
				if (n) {
					let h = { type: 'numeric', mode: 'decimal' },
						_ = e.Number();
					if (!_) return h;
					let { precision: y, scale: W } = this.visit(_).map(O => (isNaN(O) ? Number(O) : ''));
					return { ...h, precision: y, scale: W };
				}
				if (a || o) {
					let h = { type: 'text', mode: o ? 'char' : 'varchar' },
						_ = this.visit(e.Number());
					return Array.isArray(_) && (_ = _[0]), { ...h, maxLength: _ };
				}
				let c = e.getText().toLowerCase();
				switch (c) {
					case 'string':
						return { type: 'text', mode: c };
					case 'int':
					case 'tinyint':
					case 'smallint':
					case 'bigint':
					case 'float':
					case 'double':
					case 'double precision':
						return { type: 'numeric', mode: c };
					case 'boolean':
						return { type: 'bool' };
					case 'interval_day_time':
					case 'interval_year_month':
						return { type: 'interval' };
					case 'binary':
					case 'timestamp':
					case 'date':
					case 'interval':
					default:
						return { type: c };
				}
			}
			visitColumnConstraint(e) {
				return this.visit(e.colConstraint());
			}
			visitColConstraint(e) {
				return this.visit(e.columnConstraintType());
			}
			visitDefaultVal(e) {
				return e.getText();
			}
			visitColumnConstraintType(e) {
				return {
					...(Boolean(e.KW_NOT() && e.KW_NULL()) ? { required: !0 } : {}),
					...(Boolean((e.tableConstraintType() || {}).KW_UNIQUE) ? { unique: !0 } : {}),
					...(Boolean((e.tableConstraintType() || {}).KW_PRIMARY) ? { primaryKey: !0 } : {}),
					...(Boolean(e.KW_DEFAULT()) ? { default: this.visit(e.defaultVal()) } : {}),
					...(Boolean(e.checkConstraint()) ? { check: this.visitWhenExists(e, 'checkConstraint', '') } : {}),
				};
			}
			visitCheckConstraint(e) {
				return e.expression().getText();
			}
			visitNumber(e) {
				let i = e.getText();
				if (!isNaN(i)) return Number(i);
			}
			visitTableName(e) {
				let i = this.visit(e.identifier());
				return i.length === 1 ? { database: '', table: i[0] } : { database: i[0], table: i[1] };
			}
			visitViewName(e) {
				let i = this.visit(e.identifier());
				return i.length === 1 ? { database: '', view: i[0] } : { database: i[0], view: i[1] };
			}
			visitIdentifier(e) {
				return a8(e.getText());
			}
			visitStatementSeparator() {}
			visitTableFileFormat(e) {
				return Boolean(e.tableInputOutputFileFormat())
					? { storedAsTable: 'input/output format', ...this.visit(e.tableInputOutputFileFormat()) }
					: Boolean(e.tableFileFormatStoredBy())
					? { storedAsTable: 'by', ...this.visit(e.tableFileFormatStoredBy()) }
					: Boolean(e.tableFileFormatStoredAs())
					? { storedAsTable: this.visit(e.tableFileFormatStoredAs()) }
					: {};
			}
			visitTableInputOutputFileFormat(e) {
				return {
					inputFormatClassname: this.visit(e.tableInputLiteral()),
					outputFormatClassname: this.visit(e.tableOutputLiteral()),
				};
			}
			visitTableInputLiteral(e) {
				return su(e);
			}
			visitTableOutputLiteral(e) {
				return su(e);
			}
			visitTableFileFormatStoredBy(e) {
				return { serDeLibrary: su(e) };
			}
			visitTableFileFormatStoredAs(e) {
				return o8(e.tableFileFormatStoredAsFormat().getText());
			}
			visitWhenExists(e, i, n = '') {
				return Boolean(e[i]) && e[i]() ? this.visit(e[i]()) : n;
			}
			visitCreateDatabaseStatement(e) {
				let i = this.visit(e.identifier()),
					n = this.visitWhenExists(e, 'databaseComment'),
					a = wl(e?.dbLocation()?.StringLiteral()?.getText() || ''),
					o = s8(e?.dbProperties()?.getText() || '');
				return { type: fT, name: i, data: { description: n, location: a, dbProperties: o } };
			}
			visitDatabaseComment(e) {
				return wl(e.StringLiteral().getText());
			}
			visitSwitchDatabaseStatement(e) {
				return { type: ET, bucketName: this.visit(e.identifier()) };
			}
			dropDatabaseStatement(e) {
				return { type: _T, bucketName: this.visit(e.identifier()) };
			}
			visitCreateIndexStatement(e) {
				let i = uf.lodash,
					{
						name: n,
						database: a,
						table: o,
						columns: c,
						SecIndxHandler: h,
					} = this.visit(e.createIndexMainStatement()),
					_ = Boolean(e.KW_WITH() && e.KW_DEFERRED() && e.KW_REBUILD()),
					y = this.visitWhenExists(e, 'tableProperties'),
					W = e.tableName() ? a8(e.tableName().getText()) : '',
					O = this.visitWhenExists(e, 'tableComment');
				return {
					type: mT,
					bucketName: a,
					collectionName: o,
					name: n,
					columns: c,
					data: i.pickBy(
						{
							SecIndxWithDeferredRebuild: _,
							SecIndxHandler: h,
							SecIndxProperties: y,
							SecIndxTable: W,
							SecIndxComments: O,
						},
						S => i.isBoolean(S) || !i.isEmpty(S),
					),
				};
			}
			visitCreateIndexMainStatement(e) {
				return {
					name: this.visit(e.identifier()),
					...this.visit(e.tableName()),
					columns: this.visit(e.columnParenthesesList()),
					SecIndxHandler: su(e),
				};
			}
			visitColumnParenthesesList(e) {
				return this.visit(e.columnNameList());
			}
			visitTableProperties(e) {
				return e.getText();
			}
			visitDropIndexStatement(e) {
				let { database: i, table: n } = this.visit(e.tableName());
				return { type: $6, indexName: this.visit(e.identifier()), collectionName: n, bucketName: i };
			}
			visitCreateBloomfilterIndexStatement(e) {
				let { collectionName: i, bucketName: n } = this.visit(e.createBloomfilterIndexMainStatement()),
					a = this.visitWhenExists(e, 'bloomfilterColumnParenthesesList'),
					o = this.visitWhenExists(e, 'bloomfilterIndexOptions');
				return { type: yT, bucketName: n, collectionName: i, columns: a, options: o };
			}
			visitCreateBloomfilterIndexMainStatement(e) {
				let { database: i, table: n } = this.visit(e.tableName());
				return { collectionName: n, bucketName: i };
			}
			visitBloomfilterColumnParenthesesList(e) {
				return this.visit(e.bloomfilterColumnNameList());
			}
			visitBloomfilterColumnNameList(e) {
				return this.visit(e.bloomfilterColumnName());
			}
			visitBloomfilterColumnName(e) {
				return {
					name: this.visit(e.identifier()),
					options: this.visitWhenExists(e, 'bloomfilterIndexOptions'),
				};
			}
			visitBloomfilterIndexOptions(e) {
				return s8(e.tableProperties().getText());
			}
			visitDropBloomfilterIndexStatement(e) {
				let { collectionName: i, bucketName: n } = this.visit(e.dropBloomfilterIndexMainStatement()),
					a = this.visitWhenExists(e, 'bloomfilterColumnParenthesesList');
				return { type: CT, bucketName: n, collectionName: i, columns: a };
			}
			visitDropBloomfilterIndexMainStatement(e) {
				let { database: i, table: n } = this.visit(e.tableName());
				return { collectionName: n, bucketName: i };
			}
			visitResourcePlanDdlStatements(e) {
				return [
					'createResourcePlanStatement',
					'createTriggerStatement',
					'createPoolStatement',
					'createMappingStatement',
					'alterResourcePlanStatement',
					'dropResourcePlanStatement',
					'alterTriggerStatement',
					'dropTriggerStatement',
					'alterPoolStatement',
					'dropPoolStatement',
					'dropMappingStatement',
				].map(i => this.visitWhenExists(e, i));
			}
			visitCreateResourcePlanStatement(e) {
				let i = this.visitWhenExists(e, 'createNewResourcePlanStatement');
				return i || this.visitWhenExists(e, 'createResourcePlanStatementLikeExisting', {});
			}
			visitCreateNewResourcePlanStatement(e) {
				return {
					type: t8,
					name: this.visit(e.identifier()),
					parallelism: (this.visitWhenExists(e, 'rpAssignList', {}) || {}).parallelism,
				};
			}
			visitRpAssignList(e) {
				return this.visit(e.rpAssign()).find(({ parallelism: i }) => !uf.lodash.isEmpty(i));
			}
			visitRpAssign(e) {
				return e.Number() ? { parallelism: e.Number().getText() } : {};
			}
			visitCreateResourcePlanStatementLikeExisting(e) {
				return { type: t8, name: this.visit(e.identifier())[0], like: this.visit(e.identifier())[1] };
			}
			visitCreateTriggerStatement(e) {
				return {
					type: r8,
					identifier: 'trigger',
					resourceName: this.visit(e.identifier()[0]),
					trigger: { name: this.visit(e.identifier()[1]), ...this.visit(e.triggerConditionExpression()) },
				};
			}
			visitTriggerActionExpression(e) {
				return e.KW_KILL() ? 'KILL' : `MOVE TO ${this.visit(e.poolPath())}`;
			}
			visitCreatePoolStatement(e) {
				return {
					type: r8,
					identifier: 'pool',
					resourceName: this.visit(e.identifier()),
					pool: { name: this.visit(e.poolPath()), ...this.visit(e.poolAssignList()) },
				};
			}
			visitPoolAssignList(e) {
				return Object.assign({}, ...this.visit(e.poolAssign()));
			}
			visitPoolAssign(e) {
				return e.KW_ALLOC_FRACTION()
					? { allocFraction: e.Number().getText() }
					: e.KW_QUERY_PARALLELISM()
					? { parallelism: e.Number().getText() }
					: e.KW_SCHEDULING_POLICY()
					? { schedulingPolicy: su(e) }
					: {};
			}
			visitCreateMappingStatement(e) {
				return {
					type: KT,
					resourceName: this.visit(e.identifier()),
					poolName: e.KW_TO() ? this.visit(e.poolPath()) : '',
					mapping: { name: su(e), mappingType: DT(e) },
				};
			}
			visitDropIndexStatement(e) {
				let { database: i, table: n } = this.visit(e.tableName());
				return { type: $6, indexName: this.visit(e.identifier()), bucketName: i, collectionName: n };
			}
			visitDropViewStatement(e) {
				let { database: i, view: n } = this.visit(e.viewName());
				return { type: e8, bucketName: i, viewName: n };
			}
			visitDropMaterializedViewStatement(e) {
				let { database: i, view: n } = this.visit(e.viewName());
				return { type: e8, bucketName: i, viewName: n };
			}
			visitAlterResourcePlanStatement(e) {
				return {
					type: xT,
					resourceName: this.visit(e.identifier()),
					renameTo: this.visitWhenExists(e, 'alterResourcePlanRenameSuffix'),
					data: {
						...this.visitWhenExists(e, 'rpAssignList', {}),
						...this.visitWhenExists(e, 'rpUnassignList', {}),
					},
				};
			}
			visitRpUnassignList(e) {
				return this.visit(e.rpUnassign()).includes(!0) ? { parallelism: '' } : {};
			}
			visitRpUnassign(e) {
				return Boolean(e.KW_QUERY_PARALLELISM());
			}
			visitAlterResourcePlanRenameSuffix(e) {
				return this.visit(e.identifier());
			}
			visitDropResourcePlanStatement(e) {
				return { type: OT, resourceName: this.visit(e.identifier()) };
			}
			visitAlterTriggerStatement(e) {
				return {
					type: i8,
					identifier: 'trigger',
					resourceName: this.visit(e.identifier()[0]),
					trigger: this.visit(e.identifier()[1]),
					data: { ...this.visitWhenExists(e, 'triggerConditionExpression', {}) },
				};
			}
			visitTriggerConditionExpression(e) {
				return { condition: e.triggerExpression().getText(), action: this.visit(e.triggerActionExpression()) };
			}
			visitDropTriggerStatement(e) {
				return {
					type: n8,
					identifier: 'trigger',
					resourceName: this.visit(e.identifier()[0]),
					trigger: this.visit(e.identifier()[1]),
				};
			}
			visitAlterPoolStatement(e) {
				return {
					type: i8,
					identifier: 'pool',
					resourceName: this.visit(e.identifier()[0]),
					pool: this.visit(e.poolPath()),
					data: {
						...(e.KW_UNSET() && e.KW_SCHEDULING_POLICY() ? { schedulingPolicy: 'default' } : {}),
						...this.visitWhenExists(e, 'poolAssignList', {}),
					},
				};
			}
			visitDropPoolStatement(e) {
				return {
					type: n8,
					identifier: 'pool',
					resourceName: this.visit(e.identifier()),
					pool: this.visit(e.poolPath()),
				};
			}
			visitPoolPath(e) {
				return this.visit(e.identifier()).join('');
			}
			visitDropMappingStatement(e) {
				return { type: LT, resourceName: this.visit(e.identifier()), name: su(e) };
			}
			visitDropTableStatement(e) {
				let { database: i, table: n } = this.visit(e.tableName());
				return { type: dT, bucketName: i, collectionName: n };
			}
		},
		a8 = u => u.replace(/^(`)(.*)\1$/, '$2'),
		wl = (u = '') => u.replace(/['"]+/g, ''),
		E5 = (u, e) => u.map(i => ({ type: 'object', properties: { [e]: i } })),
		o8 = u => {
			switch (u.toLowerCase()) {
				case 'textfile':
					return 'textfile';
				case 'sequencefile':
					return 'sequencefile';
				case 'orc':
					return 'ORC';
				case 'parquet':
					return 'Parquet';
				case 'avro':
					return 'Avro';
				case 'rcfile':
					return 'RCfile';
				case 'jsonfile':
					return 'JSONfile';
			}
		},
		c8 = u => {
			let { properties: e, choices: i } = Object.keys(u.properties).reduce(
				({ properties: n, choices: a }, o) => {
					let c = u.properties[o];
					return !c.oneOf || c.type
						? { properties: { ...n, [o]: c }, choices: a }
						: { choices: [...a, E5(c.oneOf, o)], properties: n };
				},
				{ properties: {}, choices: [] },
			);
			return i.length === 0
				? u
				: i.length === 1
				? { ...u, properties: e, oneOf: i[0] }
				: { ...u, properties: e, allOf: i.map(n => ({ oneOf: n })) };
		},
		NT = (u = []) => u.reduce((e, [i, n]) => ({ ...e, [i]: n }), {}),
		PT = u => (u === 'DESC' ? 'descending' : 'ascending'),
		su = u => wl(u.StringLiteral().getText()),
		gT = u =>
			Object.values(u || []).reduce(
				(e, i) =>
					i.required
						? { ...e, required: !0 }
						: i.unique
						? { ...e, unique: !0 }
						: i.primaryKey
						? { ...e, primaryKey: !0 }
						: i.default
						? { ...e, default: i.default }
						: i.check
						? { ...e, check: i.check }
						: e,
				{},
			),
		DT = u => {
			if (u.KW_USER()) return 'user';
			if (u.KW_GROUP()) return 'group';
			if (u.KW_APPLICATION()) return 'application';
		};
	p8.exports = _5;
});
var d8 = Z((SO, l8) => {
	var UT = [
		'user',
		'all',
		'alter',
		'and',
		'array',
		'as',
		'authorization',
		'between',
		'bigint',
		'binary',
		'boolean',
		'both',
		'by',
		'case',
		'cast',
		'char',
		'column',
		'conf',
		'create',
		'cross',
		'cube',
		'current',
		'current_date',
		'current_timestamp',
		'cursor',
		'database',
		'date',
		'decimal',
		'delete',
		'describe',
		'distinct',
		'double',
		'drop',
		'else',
		'end',
		'exchange',
		'exists',
		'extended',
		'external',
		'false',
		'fetch',
		'float',
		'following',
		'for',
		'from',
		'full',
		'function',
		'grant',
		'group',
		'grouping',
		'having',
		'if',
		'import',
		'in',
		'inner',
		'insert',
		'int',
		'intersect',
		'interval',
		'into',
		'is',
		'join',
		'lateral',
		'left',
		'less',
		'like',
		'local',
		'macro',
		'map',
		'more',
		'none',
		'not',
		'null',
		'of',
		'on',
		'or',
		'order',
		'out',
		'outer',
		'over',
		'partialscan',
		'partition',
		'percent',
		'preceding',
		'preserve',
		'procedure',
		'range',
		'reads',
		'reduce',
		'revoke',
		'right',
		'rollup',
		'row',
		'rows',
		'select',
		'set',
		'smallint',
		'table',
		'tablesample',
		'then',
		'timestamp',
		'to',
		'transform',
		'trigger',
		'true',
		'truncate',
		'unbounded',
		'union',
		'uniquejoin',
		'update',
		'using',
		'utc_tmestamp',
		'values',
		'varchar',
		'when',
		'where',
		'window',
		'with',
		'commit',
		'only',
		'regexp',
		'rlike',
		'rollback',
		'start',
		'cache',
		'constraint',
		'foreign',
		'primary',
		'references',
		'dayofweek',
		'extract',
		'floor',
		'integer',
		'precision',
		'views',
		'time',
		'numeric',
		'sync',
	];
	l8.exports = UT;
});
var E8 = Z((IO, _8) => {
	var f8 = {},
		vT = u => {
			f8.lodash = u.require('lodash');
		};
	_8.exports = { setDependencies: vT, dependencies: f8 };
});
var C8 = Z((NO, y8) => {
	'use strict';
	var wT = d8(),
		{ dependencies: ef } = E8(),
		MT,
		T8 = ({ lodash: u }) => (MT = u),
		HT = (u, e) => {
			let i = (...o) => o.reduce((c, h) => c + h, u),
				n = (...o) => (o.length ? ((i = i.bind(null, a(...o))), n) : m8(i(), e)),
				a = (o, c) =>
					o && c === ')'
						? `
)`
						: c === ';'
						? c
						: o
						? `
` + R8(c)
						: '';
			return n;
		},
		FT = u => /\`[\s\S]*\`/.test(u),
		kT = (u = '') =>
			/\s/g.test(u) && !FT(u)
				? `\`${u}\``
				: wT.includes(u.toLowerCase())
				? `\`${u}\``
				: isNaN(u)
				? u
				: `\`${u}\``,
		VT = (u = '') => u.replace(/\s/g, '_'),
		BT = u => u.code || u.collectionName || u.name || '',
		YT = (u, e) => (Array.isArray(e) ? e[u] || {} : {}),
		R8 = (u, e = 4) =>
			(u || '')
				.split(
					`
`,
				)
				.map(i => ' '.repeat(e) + i).join(`
`),
		tf = {},
		GT = u => {
			if (tf[u]) return tf[u];
			try {
				return (tf[u] = require(`../../types/${u}.json`)), tf[u];
			} catch {
				return {};
			}
		},
		m8 = (u, e = !0) =>
			e
				? u
				: ((n, a) =>
						n
							.split(
								`
`,
							)
							.map(o => `${a}${o}`).join(`
`))(u, '-- '),
		jT = (u, e) => {
			T8(ef);
			let [i, n] = ef.lodash.partition(u, a => !(e.has(a) || e.has(a.slice(1, -1))));
			return i.length === 0
				? { isAllKeysDeactivated: !0, keysString: n.join(', ') }
				: n.length === 0
				? { isAllKeysDeactivated: !1, keysString: i.join(', ') }
				: { isAllKeysDeactivated: !1, keysString: `${i.join(', ')} /*, ${n.join(', ')} */` };
		},
		XT = u => {
			T8(ef);
			let e = u.split(`
`);
			if (e.length < 4 || !e[e.length - 2].trim().startsWith('--')) return u;
			let i = ef.lodash.findLastIndex(e, n => {
				if (n.trim() !== ');' && !n.trim().startsWith('--')) return !0;
			});
			return i !== -1
				? ((e[i] = `${e[i].slice(0, -1)} -- ,`),
				  e.join(`
`))
				: u;
		},
		QT = u => (u.endsWith('/') ? u.slice(0, -1) : u),
		qT = (u = '') => u.replace(/(')/gi, '\\$1').replace(/\n/gi, '\\n');
	y8.exports = {
		buildStatement: HT,
		getName: BT,
		getTab: YT,
		indentString: R8,
		getTypeDescriptor: GT,
		prepareName: kT,
		replaceSpaceWithUnderscore: VT,
		commentDeactivatedStatements: m8,
		commentDeactivatedInlineKeys: jT,
		removeRedundantTrailingCommaFromStatement: XT,
		getCleanedUrl: QT,
		encodeStringLiteral: qT,
	};
});
var W8 = Z((PO, A8) => {
	var b8 = u => (e, i, n, a) => {
		let o = (i0, Z0) =>
				Object.keys(i0).reduce((Tt, t0) => {
					let a0 = Z0(i0[t0], t0);
					return u.isEmpty(a0) ? Tt : { ...Tt, [t0]: a0 };
				}, {}),
			c = (i0, Z0) =>
				Array.isArray(i0)
					? i0.map((Tt, t0) => Z0(Tt, t0)).filter(Tt => !u.isEmpty(Tt))
					: u.isPlainObject(i0)
					? Z0(i0, 0)
					: i0,
			h = (i0, Z0, Tt) => {
				let t0 = c(Z0, Tt);
				if (!Array.isArray(t0) || ((t0 = t0.filter(au => au.properties)), t0.length > 1)) return t0;
				let a0 = t0[0];
				return u.has(a0, 'properties')
					? (u.has(i0, 'properties') || (i0.properties = {}),
					  Object.keys(a0.properties).forEach(au => {
							u.has(i0, 'properties.' + au) || (i0.properties[au] = a0.properties[au]);
					  }),
					  [])
					: t0;
			},
			_ = (i0, Z0, Tt) =>
				i0.reduce((t0, a0) => {
					if (!t0[a0]) return t0;
					let au = Tt(t0[a0], a0);
					if (u.isEmpty(au)) {
						let ia = Object.assign({}, t0);
						return delete ia[a0], ia;
					}
					return Object.assign({}, t0, { [a0]: au });
				}, Z0);
		if (!u.isPlainObject(e)) return e;
		let y = Object.assign({}, e),
			W = u.partial(b8(u), u, y, n),
			O = ['properties', 'definitions', 'patternProperties'],
			S = ['items', 'not'],
			w = ['oneOf', 'allOf', 'anyOf'],
			U = _(O, y, u.partial(o, u, W)),
			u0 = _(S, U, u.partial(c, u, W)),
			C0 = _(w, u0, u.partial(h, u0, u, W));
		return n(C0, i, a);
	};
	A8.exports = b8;
});
var ZT = A5(),
	us = null,
	T5 = mf(),
	JT = i6(),
	zT = a6(),
	Up = p6(),
	{ getErrorMessage: rf, cleanEntityName: $T, isViewDdl: uR, isTableDdl: tR } = Yl(),
	{ setDependencies: Od, dependencies: K8 } = ca(),
	eR = require('fs'),
	x8 = (ls(), ra(hs)),
	iR = l6(),
	rR = c5(),
	nR = h8(),
	sR = d5(),
	aR = Jd(),
	{ getCleanedUrl: O8 } = C8(),
	oR = W8();
module.exports = {
	disconnect: function (u, e) {
		T5.destroyActiveContext(), e();
	},
	testConnection: async (u, e, i, n) => {
		try {
			Od(n),
				(us = { host: O8(u.host), clusterId: u.clusterId, accessToken: u.accessToken }),
				L8('Test connection RE', u, e);
			let a = await Up.getClusterStateInfo(us, e);
			e.log('info', a, 'Cluster state info'),
				await Up.getFirstDatabaseCollectionName(us, a.spark_version, e),
				a.isRunning ||
					i({ message: `Cluster is unavailable. Cluster status: ${a.state}`, type: 'simpleError' }),
				i();
		} catch (a) {
			e.log('error', { message: a.message, stack: a.stack, error: a }, 'Test connection RE'),
				i({ message: rf(a), stack: a.stack });
		}
	},
	getDbCollectionsNames: async (u, e, i, n) => {
		L8('Retrieving databases and tables information', u, e);
		try {
			Od(n), (us = { host: O8(u.host), clusterId: u.clusterId, accessToken: u.accessToken });
			let a = await Up.getClusterStateInfo(us, e);
			e.log('info', a, 'Cluster state info');
			let o = await Up.getDatabaseCollectionNames(us, a.spark_version, e);
			i(null, o);
		} catch (a) {
			try {
				let o = await Up.getClusterStateInfo(us, e);
				if (!o.isRunning) {
					e.log(
						'error',
						{ message: a.message, stack: a.stack, error: a },
						`Cluster is unavailable. Cluster state: ${o.state}`,
					),
						i({ message: `Cluster is unavailable. Cluster state: ${o.state}`, type: 'simpleError' });
					return;
				}
			} catch (o) {
				e.log('error', { message: o.message, stack: o.stack, error: o }, 'Cluster is unavailable.'),
					i({ message: rf(o), stack: o.stack });
				return;
			}
			e.log('error', { message: a.message, stack: a.stack, error: a }, 'Retrieving databases and tables names'),
				i({ message: rf(a), stack: a.stack });
		}
	},
	getDbCollectionsData: async (u, e, i, n) => {
		e.log('info', u, 'Retrieving schema', u.hiddenKeys);
		let a = o => {
			e.log('info', o, 'Retrieving schema', u.hiddenKeys), e.progress(o);
		};
		try {
			Od(n);
			let o = await Up.getClusterStateInfo(us, e);
			e.log('info', o, 'Cluster state info');
			let c = u.collectionData.collections,
				h = u.collectionData.dataBaseNames;
			a({ message: 'Start getting data from entities', containerName: 'databases', entityName: 'entities' });
			let _ = await Up.getClusterData(us, h, c, e);
			a({ message: 'Start getting entities ddl', containerName: 'databases', entityName: 'entities' });
			let W = (await Promise.all(Up.getEntitiesDDL(us, h, c, o.spark_version, e))).reduce((w, U) => {
				let u0 = Object.keys(U)[0];
				return { ...w, [u0]: U[u0] };
			}, {});
			a({ message: 'Entities ddl retrieved successfully', containerName: 'databases', entityName: 'entities' });
			let O = await h.reduce(async (w, U) => {
					let u0 = _[U],
						C0 = await w,
						i0 = u0.dbTables
							.filter(I0 => tR(W[`${U}.${I0.name}`]))
							.map(async I0 => {
								let ku = W[`${U}.${I0.name}`];
								a({
									message: 'Start processing data from table',
									containerName: U,
									entityName: I0.name,
								});
								let O1 = await JT.getTableData({ ...I0, ddl: ku }, u, e),
									ih = (O1.properties || []).filter(P8 => P8.mode === 'string'),
									N8 = !K8.lodash.isEmpty(ih),
									R5 = [];
								return (
									N8 &&
										(a({
											message: 'Start getting documents from table',
											containerName: 'databases',
											entityName: I0.name,
										}),
										(R5 = await T5.fetchDocuments({
											connectionInfo: us,
											dbName: U,
											tableName: I0.name,
											fields: ih,
											recordSamplingSettings: u.recordSamplingSettings,
										})),
										a({
											message: 'Documents retrieved successfully',
											containerName: 'databases',
											entityName: I0.name,
										})),
									a({
										message: 'Table data processed successfully',
										containerName: U,
										entityName: I0.name,
									}),
									{
										dbName: U,
										collectionName: I0.name,
										entityLevel: O1.propertiesPane,
										documents: R5,
										views: [],
										emptyBucket: !1,
										validation: {
											jsonSchema: { properties: O1.schema, required: O1.requiredColumns },
										},
										bucketInfo: u0.dbProperties,
									}
								);
							}),
						Z0 = h.reduce((I0, ku) => {
							let O1 = (c[ku] || [])
								.map(ih => $T(o.spark_version, ih))
								.filter(ih => uR(W[`${ku}.${ih}`]));
							return { ...I0, [ku]: O1 };
						}, {}),
						Tt = i0?.length !== 0,
						t0 = Z0[U]?.length !== 0,
						a0 = !Tt && !t0;
					if (a0) {
						let I0 = { dbName: U, entityLevel: {}, emptyBucket: a0, bucketInfo: u0.dbProperties };
						return [...C0, I0];
					} else if (!t0) return [...C0, ...i0];
					let au = Z0[U].map(I0 => {
							a({ message: 'Start processing data from view', containerName: U, entityName: I0 });
							let ku = W[`${U}.${I0}`],
								O1 = {};
							try {
								O1 = zT.getViewDataFromDDl(ku);
							} catch {
								return (
									e.log(
										'info',
										u,
										`Error parsing ddl statement: 
${ku}
`,
										u.hiddenKeys,
									),
									I8(I0)
								);
							}
							return (
								a({ message: 'View data processed successfully', containerName: U, entityName: I0 }),
								I8(I0, O1)
							);
						}),
						ia = Promise.resolve({
							dbName: U,
							entityLevel: {},
							views: au,
							emptyBucket: !1,
							bucketInfo: u0.dbProperties,
						});
					return [...C0, ...i0, ia];
				}, Promise.resolve([])),
				S = await Promise.all(O);
			T5.destroyActiveContext(), i(null, S, o);
		} catch (o) {
			let c = await Up.getClusterStateInfo(us, e);
			if (!c.isRunning) {
				e.log(
					'error',
					{ message: o.message, stack: o.stack, error: o },
					`Cluster is unavailable. Cluster state: ${c.state}`,
				),
					i({ message: `Cluster is unavailable. Cluster state: ${c.state}`, type: 'simpleError' });
				return;
			}
			S8(e, o, i);
		}
	},
	reFromFile: async (u, e, i, n) => {
		try {
			Od(n);
			let a = await cR(u.filePath),
				o = new x8.InputStream(a),
				c = new iR.HiveLexer(o),
				h = new x8.CommonTokenStream(c),
				_ = new rR.HiveParser(h);
			_.removeErrorListeners(), _.addErrorListener(new aR());
			let y = _.statements(),
				W = new nR(),
				O = y.accept(W),
				{
					result: S,
					info: w,
					relationships: U,
				} = sR.convertCommandsToReDocs(K8.lodash.flatten(O).filter(Boolean), a);
			i(null, S, w, U, 'multipleSchema');
		} catch (a) {
			S8(e, a, i);
		}
	},
	adaptJsonSchema(u, e, i, n) {
		try {
			Od(n);
			let a = n.require('lodash'),
				o = JSON.parse(u.jsonSchema),
				c = oR(a)(o, {}, (h, _, y) => (h.type === 'array' && !h.subtype ? { ...h, subtype: pR(a, h) } : h));
			i(null, { ...u, jsonSchema: JSON.stringify(c) });
		} catch (a) {
			let o = { message: a.message, stack: a.stack };
			e.log('error', o, 'Remove nulls from JSON Schema'), i(o);
		}
	},
};
var cR = u =>
		new Promise((e, i) => {
			eR.readFile(u, 'utf-8', (n, a) => {
				n ? i(n) : e(a);
			});
		}),
	L8 = (u, e, i) => {
		i.clear(), i.log('info', ZT.getSystemInfo(e), u), i.log('info', e, 'connectionInfo', e.hiddenKeys);
	},
	S8 = (u, e, i) => {
		let n = rf(e);
		u.log('error', { error: e }, 'Reverse Engineering error'), i(n);
	},
	I8 = (u, e = {}) => {
		let i = e.selectStatement || '',
			n = e.code || u;
		return {
			name: u,
			data: { ...e, selectStatement: i },
			ddl: { script: `CREATE VIEW ${n} AS ${i};`.replace(/`/g, '"'), type: 'postgres' },
		};
	},
	pR = (u, e) => {
		let i = a => `array<${a}>`;
		if (!e.items) return;
		if (Array.isArray(e.items) && u.uniq(e.items.map(a => a.type)).length > 1) return i('union');
		let n = Array.isArray(e.items) ? e.items[0] : e.items;
		if (!!n) {
			switch (n.type) {
				case 'string':
				case 'text':
					return i('txt');
				case 'number':
				case 'numeric':
					return i('num');
				case 'interval':
					return i('intrvl');
				case 'object':
				case 'struct':
					return i('struct');
				case 'array':
					return i('array');
				case 'map':
					return i('map');
				case 'union':
					return i('union');
				case 'timestamp':
					return i('ts');
				case 'date':
					return i('date');
			}
			if (n.items) return i('array');
			if (n.properties) return i('struct');
		}
	};
/*! https://mths.be/codepointat v0.2.0 by @mathias */
/*! https://mths.be/fromcodepoint v0.2.1 by @mathias */
